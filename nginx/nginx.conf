user nginx;

worker_processes    auto;

events { worker_connections 3072; }

http {

    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 32 16k;
    gzip_http_version 1.1;
    gzip_min_length 250;
    gzip_types image/jpeg image/bmp image/svg+xml text/plain text/css application/json application/javascript application/x-javascript text/xml application/xml application/xml+rss text/jav$;


    log_format upstream_time '$remote_addr $http_x_forwarded_for - $remote_user [$time_local] '
                             '$ssl_protocol "$request" $status $body_bytes_sent '
                             '"$http_referer" "$http_user_agent"'
                             'rt=$request_time uct="$upstream_connect_time" uht="$upstream_header_time" urt="$upstream_response_time"';
    access_log      /var/log/nginx/access.log upstream_time;

    include         /etc/nginx/proxy.conf;
    #include         /etc/nginx/mime.types;
    limit_req_zone  $binary_remote_addr zone=one:10m rate=5r/s;
    server_tokens   off;

    sendfile on;
    keepalive_timeout   29; # Adjust to the lowest possible value that makes sense for your use case.
    client_body_timeout 10; client_header_timeout 10; send_timeout 10;
    sendfile_max_chunk 512k;
    client_max_body_size 2000M;

    upstream webapi {
        server api:5000;
        keepalive 2;
    }

    server {
        listen 80;
        listen [::]:80;
        return 301 https://$host$request_uri;

    }

    server {
        listen                      80;
        listen                      [::]:80;
        listen                      443 ssl http2;
        listen                      [::]:443 ssl http2;
        server_name                 $hostname;
        ssl_certificate             /etc/nginx/ssl/bundle.crt;
        ssl_certificate_key         /etc/nginx/ssl/bundle.key;
        ssl_protocols               TLSv1.1 TLSv1.2;
      # ssl_protocols               TLSv1.2 TLSv1.3; #Disable weak SSL/TLS protocols
        ssl_prefer_server_ciphers   on;
        ssl_ciphers                 "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";
        #To Harden ssl_ciphers
      # ssl_ciphers                 "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA HIGH !RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS";
        ssl_ecdh_curve              secp384r1;
        ssl_session_cache           shared:SSL:10m;
        ssl_session_tickets         off;
        # ssl_stapling                on; #ensure your cert is capable
        # ssl_stapling_verify         on; #ensure your cert is capable

        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-XSS-Protection "1; mode=block" always; #Enable X-XSS-Protection
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        #add_header Referrer-Policy "strict-origin"; # enable strict origin
        #add_header Content-Security-Policy "default-src 'self'; connect-src *; font-src * 'self' data:; frame-src *; img-src * 'self' blob: data:; media-src *; object-src *; script-src *; style-src *;"; 
        add_header Content-Security-Policy "default-src 'self'; connect-src *; font-src * 'self' data:; frame-src *; img-src * 'self' blob: data:; media-src *; object-src *; script-src * 'unsafe-inline' 'unsafe-eval'; style-src * 'unsafe-inline';"; #remove unsafe inline in production


        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;#HTTP Strict Transport Security
        add_header Set-Cookie "Path=/; HttpOnly; Secure";#to implement HTTPOnly and Secure Cookie in Nginx
        #add_header Permissions-Policy "geolocation=(),midi=(),sync-xhr=(),microphone=(),camera=(),magnetometer=(),gyroscope=(),fullscreen=(self),payment=()";# Enable permission Policy




        location / {
            proxy_pass http://webapi;
            expires -1;
            #limit_req  zone=one burst=10 nodelay;
        }
        #location = /.well-known/pki-validation/fileauth.txt {
        #    alias /var/tmp/.well-known/pki-validation/fileauth.txt;
	    #}
        #location = / {
        #     rewrite ^ https://$host/portal/recruitment break;
        #    #limit_req  zone=one burst=10 nodelay;
        #}

       
       
     
    }
}