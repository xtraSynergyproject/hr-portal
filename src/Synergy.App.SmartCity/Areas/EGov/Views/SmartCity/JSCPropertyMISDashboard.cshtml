@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "MIS Dashboard";
    Layout = null;
}
<style>
    .jsc-chart {
        padding: 10px;
        border-radius: 10px;
        cursor: pointer;
        /*border-style: solid;*/
    }

    .jsc-chart1 {
        padding: 10px;
        border-radius: 10px;
        border-color: darkgrey;
        /* margin: 10px; */
        /* border-width: 2px; */
        border-style: solid;
        box-shadow: 5px 5px darkgrey;
    }
</style>
<div class="contener" style="padding:20px;">
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-12" style="text-align:center;">
            <h4>@ViewData["Title"]</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-6 jsc-chart offset-md-3" onclick="onReportStatus();">
            <div id="chartStatus" class="jsc-chart1" style="padding-top:15%;padding-bottom:15%;"></div>
        </div>
       
        
    </div>
  
</div>

<script>
    $(document).ready(function () {
        debugger;
        
       // pieChart("/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=STATUS_WISE&grvStatusId=&fromDate=" + fd + "&toDate=" + td, "chartStatus", "Status wise", "STATUS_WISE");
        pieChart("/Egov/SmartCity/GetPropertyRegistrationStatusWise", "chartStatus", "Status wise", "STATUS_WISE");
    });

    function pieChart(url, chartId, chartTitle, reportTypeCode) {
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                debugger;
                if (res) {
                    var vals = res.ItemValueSeries;
                    var barvals = res.BarItemValueSeries;
                    var xtitle = res.XaxisTitle;
                    var itcode = res.Code;
                    var barcolors = res.Colors;
                    var chart = "#" + chartId;
                    var options;
                    if (reportTypeCode == "STATUS_WISE") {
                        options = {
                            series: barvals,
                            title: {
                                text: chartTitle
                            },
                            chart: {
                                type: 'pie',
                                height: 350,
                                events: {
                                    dataPointSelection: function (event, chartContext, config) {
  
                                        }
                                }
                            },
                            plotOptions: {
                                bar: {
                                    borderRadius: 4,
                                    horizontal: false,
                                }
                            },
                            dataLabels: {
                                enabled: true
                            },
                            xaxis: {
                                categories: res.ItemValueLabel,
                                show: true,
                                title: {
                                    text: xtitle
                                },
                            },
                            yaxis: {
                                show: true,
                                title: {
                                    text: 'Complaint Counts'
                                },
                                labels: {
                                    formatter: function (val, index) {
                                        return val.toFixed(0);
                                    }
                                }
                            },
                            //labels: res.ItemValueLabel,
                            //colors: res.Colors,//['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                            //dataLabels: {
                            //    formatter: function (val, opts) {
                            //        return opts.w.config.series[opts.seriesIndex]
                            //    },
                            //},
                        };
                    }
                    else
                      {
                        debugger;
                        options = {
                            series: barvals,
                            title: {
                                text: chartTitle
                            },
                            
                            chart: {
                                id: chartId,
                              
                                height: 500,
                                type: 'pie',
                                events: {
                                    dataPointSelection: function (event, chartContext, config) {
   
                                    }
                                }
                            },
                            
                            legend: {
                                position: 'bottom'
                            },
                            labels: res.ItemValueLabel,
                            colors: res.Colors,//['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                            //dataLabels: {
                            //    formatter: function (val, opts) {
                            //        return opts.w.config.series[opts.seriesIndex]
                            //    },
                            //},
                        };


                    }
                    //else {
                    //    options = {
                    //        series: vals,
                    //        title: {
                    //            text: chartTitle
                    //        },
                    //        chart: {
                    //            id: chartId,
                    //            width: 500,
                    //            height: 400,
                    //            type: 'pie',
                    //            events: {
                    //                dataPointSelection: function (event, chartContext, config) {
                                       
                    //                }
                    //            }
                    //        },
                    //        legend: {
                    //            position: 'bottom'
                    //        },
                    //        labels: res.ItemValueLabel,
                    //        theme: {
                    //            palette: 'palette1' // upto palette10
                    //        },                          
                    //        dataLabels: {
                    //            formatter: function (val, opts) {
                    //                return opts.w.config.series[opts.seriesIndex]
                    //            },
                    //        },
                    //    };
                    //}
                    debugger;
                    document.getElementById(chartId).innerHTML = "";
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });
    }

    
</script>