@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Newtonsoft.Json;
@inject IUserContext _userContext;
@model JSCParcelViewModel;

@{
    ViewData["Title"] = "Property Details";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}


<link href="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.2.1/themes/default/style.min.css" type="text/css" rel="stylesheet" />
<script src="https://unpkg.com/leaflet@1.6.0/dist/leaflet.js"></script>
<link href="https://unpkg.com/leaflet@1.6.0/dist/leaflet.css" rel="stylesheet" />
<script src="/geojson/geojsonleafletconfig.js"></script>

<style>

    /* width */
    ::-webkit-scrollbar {
        width: 10px;
    }

    /* Track */
    ::-webkit-scrollbar-track {
        background: #f1f1f1;
    }

    /* Handle */
    ::-webkit-scrollbar-thumb {
        background: #888;
    }

        /* Handle on hover */
        ::-webkit-scrollbar-thumb:hover {
            background: #555;
        }

    .k-listview-content {
        height: unset !important;
        overflow-y: hidden !important;
        padding-top: 10px !important;
    }

    .k-listview {
        border-style: none !important;
        height: unset !important;
    }

    .row {
        margin-right: 0px;
        margin-left: 0px;
    }

    .card {
        float: left;
        position: relative;
        /* width: 450px;
        height: 240px;*/
        margin: 0 10px;
        padding: 0;
    }

    p {
        margin-bottom: 10px !important;
    }

    .dueamount {
        color: #007bff;
        font-size: 14px;
        cursor: pointer;
    }

    .duedate {
        color: #ffc107;
        font-size: 14px;
    }

    .asset-img {
        width: 100px;
        height: 100px;
    }

    .map-Section {
        width: calc(100vw - 18.5rem) !important;
        max-width: calc(100vw - 10.5rem) !important;
    }

    .asset-Section {
        margin-right: calc(100vw - 18.5rem) !important;
    }
    .jumbotron{
        background-color:#fff !important;
    }
    .card-header{
        background:#fff !important;
    }
</style>

<script>

    $(function () {
        debugger;
        //getPaymentList();
        getGarbageList();
        var datalist = [];
        var data = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
        datalist.push(data)
        loadMap(datalist);
    });    

    function onSearchParcel(id) {
        $.ajax({
            type: "GET",
            url: "/EGov/SmartCity/GetParcelDataByPclId?id=" + id,
            success: function (response) {
                loadMap(response);
                //if (isColony) {
                //    loadMap(response);
                //} else {
                //    data2 = response;
                //    multiLayerMap(data1, data2);
                //}
            }
        });
    }

    function onEachFeatureParcel(feature, layer) {
        if (feature) {
            var text = "Type - " + feature.type
                + " <br/>Property Id - " + feature.prop_id
                + " <br/>Residential Status - " + feature.res_stat
                + " <br/>Road Details - " + feature.road_desc
                + " <br/>Road Type - " + feature.road_type
                + " <br/>Owner Details - " + feature.own_dtls
                + " <br/>Owner Name - " + feature.own_name
                + " <br/>Telephone No - " + feature.tel_no
                + " <br/>Aadhar No - " + feature.aadhar;

            layer.bindPopup(text);
        }
    }

    function onEachFeature(feature, layer) {
        if (feature) {
            var text = "Type - " + feature.type
                + " <br/>Property Id - " + feature.prop_id
                + " <br/>Residential Status - " + feature.res_stat
                + " <br/>Road Details - " + feature.road_desc
                + " <br/>Road Type - " + feature.road_type
                + " <br/>Owner Details - " + feature.own_dtls
                + " <br/>Owner Name - " + feature.own_name
                + " <br/>Telephone No - " + feature.tel_no
                + " <br/>Aadhar No - " + feature.aadhar;

            layer.bindPopup(text);
        }
    }

    var element = document.getElementById('map');
    element.style = 'height:650px;';

</script>

<script>
    var garbageColumnDefs = [
        {
            field: "CollectedByUserName",
            headerName: "Collected By Garbage Collector",
            minWidth: 200
        },
        {
            field: "CollectionDateTime",
            headerName: "Collection Date",
            minWidth: 200,
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
            }
        }
    ];

    function getGarbageList() {
        document.getElementById("garbageGrid").innerHTML = "";
        gridConfig(
            "garbageGrid",
            "/EGov/SmartCity/GetGarbageCollectionDetailsByPropertyId?gid=@Model.gid",
            garbageColumnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    var paymentColumnDefs = [
        {
            field: "OwnerName",
            headerName: "Owner Name",
            minWidth: 150,
        },
        {
            field: "PaymentSubject",
            headerName: "Payment Subject",
            minWidth: 150,
        },
        {
            field: "Amount",
            headerName: "Amount",
            minWidth: 150,
        },
        {
            field: "PaymentDate",
            headerName: "Payment Date",
            minWidth: 150,
            cellRenderer: params => {
                if (params.value != null) {
                    //var date = new Date(params.value);
                    //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                    return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
                }

            }
        },
        {
            field: "DueDate",
            headerName: "Due Date",
            minWidth: 150,
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
            }
        },
        {
            field: "ReferenceNo",
            headerName: "Payment Reference No",
            minWidth: 150,
        },
        {
            field: "PaymentModeName",
            headerName: "Payment Mode",
            minWidth: 150,
        },
        {
            field: "PaymentStatusName",
            headerName: "Payment Status",
            minWidth: 150,
            cellRenderer: params => {
                if (params.data.PaymentStatusName == "Success") {
                    return "<span style='color:green'>" + params.value + " </span>";
                }
                else if (params.data.PaymentStatusName == "Error") {
                    return "<span style='color:red'>" + params.value + " </span>";
                }
                else {
                    return "<span style='color:highlight'>" + params.value + " </span>";
                }
            },
        },
        {
            field: "PaymentFromDate",
            headerName: "Payment From Date",
            minWidth: 150,
            cellRenderer: params => {
                if (params.value != null) {
                    //var date = new Date(params.value);
                    //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                    return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
                }
            }
        },
        {
            field: "PaymentToDate",
            headerName: "PaymentTo Date",
            minWidth: 150,
            cellRenderer: params => {
                if (params.value != null) {
                    //var date = new Date(params.value);
                    //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                    return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
                }
            }
        },

    ];

    @*function getPaymentList() {
        document.getElementById("paymentGrid").innerHTML = "";
        gridConfig(
            "paymentGrid",
            "/EGov/SmartCity/GetPaymentDetailsByPropertyId?gid=@Model.gid",
            paymentColumnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }*@

    function OnPayment(id, tableId, amount,assigneeUserId,paymentIds) {

        ShowLoader($('#container'));
        var returnUrl = "/Portal/JammuSmartCityCustomer/MyPayments/";
        $.ajax({
            type: "POST",
            url: "/EGov/SmartCity/OnlinePaymentJSC",
            data: { 'ntsId': id, 'noteTableId': tableId, 'amount': amount, 'ntsType': '@NtsTypeEnum.Task', 'assigneeUserId': assigneeUserId, 'returnUrl': returnUrl, 'paymentIds': paymentIds },
            success: function (res) {

                if (res.success) {
                    if (res.requestURL === null || res.requestURL === '' || res.requestURL === undefined) {
                        HideLoader($('#container'));
                        alert('Payment gateway not found');
                        return false;
                    }
                    else {
                        window.top.location.href = res.requestURL;
                    }

                } else {
                    ShowNotification(res.error, "error");
                    HideLoader($('#container'));
                }
            },
            dataType: "json",
        });
    }

    var gId, gTableId, gAmount, gAssigneeUserId, gpaymentIds;

    function OnPaymentClick(id, tableId, amount, assigneeUserId, paymentIds) {
        gId = id;
        gTableId = tableId;
        gAmount = amount;
        gAssigneeUserId = assigneeUserId;
        gpaymentIds = paymentIds;

        document.getElementById('totalAmount').innerHTML = amount;
        $('#payConfirmModal').modal('show');
    }

    function OnPaymentConfirm() {
        $('#payment-body').html('Please wait while we are redirecting to payment gateway...');
        $('#totAmount').html("");
        OnPayment(gId, gTableId, gAmount, gAssigneeUserId, gpaymentIds);
        return false;
    }

    function OnPay() {
        debugger;

        var allVals = [];
        var allAmount = [];
        var total = 0;
        $("input[class='checkpayment']:checked").each(function () {
            allVals.push($(this).attr("data-id"));
            allAmount.push($(this).attr("data-amount"));
            total = ($(this).attr("data-amount") != 'null')? Number(total) + Number($(this).attr("data-amount")):total;
        });

        if (allVals.length > 0) {

            if (allVals.length > 10) {
                kendo.alert("You can select maximum of 10 items");
            }
            else {

                @*$.ajax({
                url: '/EGOV/SmartCity/UpdateJSCPaymentDetails?paymentsIds=' + allVals.join(",") +'&portalNames=@ViewBag.PortalNames',
                type: 'GET',
                data: {},
                dataType: 'json',
                    success: function (result) {
                        debugger;
                    if (result.success) {
                        OnPaymentClick("", result.data, total, "@usercontext.UserId", allVals.join(", "));
                    } else {
                        ShowNotification("Try after some time.", "error");
                    }
                },
                error: function (ert) {
                    kendo.alert(result.error);
                    }

                });*@

                OnPaymentClick("", "", total, "@_userContext.UserId", allVals.join(","));
            }

        }
        else {
            kendo.alert("Please select atleast one item from the list");
        }

    }
</script>

<script>
    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    $(function () {
        getService();
        getService1();
    });

    var columnDefs = [
        {
            field: "Id", minWidth: 100,
            headerName: "Select",
            cellRenderer: params => {
                return "<input type='checkbox' class='checkpayment' data-id='" + params.value + "' data-amount='" + params.data.Amount + "' />"
            }

            //cellRenderer: params => {
            //    if (params.data.PaymentStatusCode == "ERROR_" || params.data.PaymentStatusCode == "NOT_PAID" || params.data.PaymentStatusCode == null) {
            //        //return "<a style='cursor:pointer;color:blue;' href='javascript:OpenService(\"" + params.data.Id + "\",\"" + params.data.TemplateMasterCode + "\");'>Pay</a>";
            //        return "<button class='btn btn-primary' onclick='OnPaymentClick(\"" + params.data.Id + "\",\"" + params.data.UdfNoteTableId + "\",\"" + params.data.ServiceCost + "\",\"" + params.data.AssignedToUserId + "\");'>Pay </button>";
            //    }
            //    return "";
            //}
        },
        {
            field: "PaymentSubject",minWidth:220,headerName: "Subject",
            cellRenderer: params => {
                return "<a style='cursor:pointer;color:blue;' href='javascript:OpenTask(\"" + params.data.TaskId + "\",\"" + params.data.TemplateCode + "\");'>" + params.value + " </a>";
            }
        },
        { field: "OwnerUserName", minWidth: 150,headerName: "Owner Name" },
        { field: "ServiceNo", headerName: "Service No", minWidth: 150 },
        //{ field: "NoteNo", headerName: "Consumer No", minWidth: 150 },
        {
            field: "DueDate", headerName: "Due Date", minWidth: 150,
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
            }
        },
        { field: "Amount", headerName: "Bill Amount", minWidth: 150 },
        { field: "ReferenceNo", headerName: "Reference No", minWidth: 150 },
        {
            field: "PaymentStatus", headerName: "Payment Status", minWidth: 100,

            cellRenderer: params => {
                if (params.data.PaymentStatusCode == "JSC_SUCCESS") {
                    return "<span style='color:green'>" + params.value + " </span>";
                }
                else if (params.data.PaymentStatusCode == "JSC_ERROR") {
                    return "<span style='color:red'>" + params.value + " </span>";
                }
                else {
                    return "<span style='color:highlight'>" + params.value + " </span>";
                }
            },
        }
    ];

    function getService() {
        document.getElementById("pendingPaymentGrid").innerHTML = "";

        gridConfig(
            "pendingPaymentGrid",
            "/EGov/SmartCity/GetJSCPendingPaymentsList?portalNames=@ViewBag.PortalNames&propertyId=@Model.gid",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs1 = [
        {
            field: "PaymentSubject", minWidth: 220, headerName: "Subject",
            cellRenderer: params => {
                return "<a style='cursor:pointer;color:blue;' href='javascript:OpenTask(\"" + params.data.TaskId + "\",\"" + params.data.TemplateCode + "\");'>" + params.value + " </a>";
            }
        },
        {
            headerName: "Download",
            field: "ServiceNo", minWidth: 120,
            cellRenderer: params => {
                return "<a style='cursor:pointer;color:blue;' href='javascript:onDownloadBillPayment(\"" + params.data.ServiceNo + "\");'><i class='fa fa-download'></i></a> ";
            }
        },
        { field: "OwnerUserName", minWidth: 150,headerName: "Owner Name" },
        { field: "ServiceNo", headerName: "Service No", minWidth: 150 },
        //{ field: "NoteNo", headerName: "Consumer No", minWidth: 150 },
        {
            field: "DueDate", headerName: "Due Date", minWidth: 150,
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
            }
        },
        { field: "Amount", headerName: "Bill Amount", minWidth: 150},
        { field: "ReferenceNo", headerName: "Reference No", minWidth: 150},
        {
            field: "PaymentStatus", headerName: "Payment Status", minWidth: 150,
            cellRenderer: params => {
                if (params.data.PaymentStatusCode == "JSC_SUCCESS") {
                    return "<span style='color:green'>" + params.value + " </span>";
                }
                else if (params.data.PaymentStatusCode == "JSC_ERROR") {
                    return "<span style='color:red'>" + params.value + " </span>";
                }
                else {
                    return "<span style='color:highlight'>" + params.value + " </span>";
                }
            }
        },
    ];


    function getService1() {
        document.getElementById("completedPaymentGrid1").innerHTML = "";

        gridConfig(
            "completedPaymentGrid1",
            "/EGov/SmartCity/GetJSCCompletedPaymentsList?portalNames=@ViewBag.PortalNames",
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    function onDownloadBillPayment(serviceId)
    {
		var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/FastReport?rptName=JSC_BillPaymentReport&lo=@LayoutModeEnum.Popup&rptUrl=egov/query/GetJSCBillPaymentReport?serviceNo='+serviceId;
        win.OpenWindow({ Title: 'Bill Payment Report', Width: 700, Height: 800 });
        return false;
    }

    function OpenTask(taskId, tempCode) {
        debugger;
        var id = taskId;
        var source = '@RequestSourceEnum.View.ToString()';
        var action = '@DataActionEnum.View.ToString()';

        var portalId = '@ViewBag.PortalId'; /*$('#GlobalPortalId').val();*/

        var url = '/Cms/Page?lo=Popup&pageType=Task&cbm=IframePostbackScript&source=' + source + '&dataAction=' + action + '&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title:  "Task", Width: 1200, Height: 600 });
        return false;
    }

</script>

<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="page-inner">
            <div class="jumbotron divDim">
                @*<div class="text-center">
                    <h5>Property Details</h5>
                    <h6>@Model.pcl_id</h6>
                </div>*@                
                <div>
                    <ul class="nav nav-tabs card-header-tabs">
                        <li class="nav-item">
                            <a class="nav-link active show" data-toggle="tab" href="#property">Property Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#payment">Payment Details</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link" data-toggle="tab" href="#garbage">Garbage Collection Details</a>
                        </li>
                    </ul>
                </div>
                <hr />

                <div>
                    <div class="tab-content">

                        <div class="tab-pane fade active show text-center" id="property">
                            <div class="has-sidebar has-sidebar-fluid has-sidebar-expand-lg">
                                <div class="sidebar-backdrop"></div>
                                @*row*@
                                <div class="row">
                                    <div class="p-0 col-3">
                                        <div class="page-section">
                                            <div class="container-fluid py-3">
                                                <h6 class="page-title"> Property Details </h6>
                                                <div class="row">
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Property Id</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.prop_id</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Owner Name</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.own_name</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Owner Details</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.own_dtls</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Mobile</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.tel_no</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Ward No</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.ward_no</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Locality</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.locality</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Aaadhar</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.aadhar</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Pin Code</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.pin_code</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Property Type</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.usg_cat_gf</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Building Type</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.bu_type</label>
                                                    </div>

                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label">Building Age</label>
                                                    </div>
                                                    <div class="col-6 text-left">
                                                        <label class="col-form-label colLabel">@Model.building</label>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="page-sidebar col-9">
                                        <header class="sidebar-header d-xl-none">
                                            @*<nav aria-label="breadcrumb">
                                                <ol class="breadcrumb">
                                                    <li class="breadcrumb-item active">
                                                        <a href="#" onclick="Looper.toggleSidebar()"><i class="breadcrumb-icon fa fa-angle-left mr-2"></i>Back</a>
                                                    </li>
                                                </ol>
                                            </nav>*@
                                        </header>
                                        <div class="sidebar-section">
                                            <br />

                                            <div id="map"></div>
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        </div>

                        <div class="tab-pane fade" id="payment">
                            @*<div id="paymentGrid" style="width: 100%;height:350px" class="ag-theme-alpine"></div>*@

                            <div class="container card-header" style="padding:10px;max-width:100%">
                                <ul class="nav nav-tabs" role="tablist">
                                    <li class="nav-item"><a data-toggle="tab" href="#pending" class="nav-link active" role="tab" aria-controls="pending" aria-selected="true"><i class="fa-regular fa-calendar-circle-exclamation"></i>&nbsp;PENDING PAYMENTS</a></li>
                                    <li class="nav-item"><a data-toggle="tab" href="#completed" class="nav-link" aria-controls="completed" aria-selected="false"><i class="fa-regular fa-calendar-check"></i>&nbsp;PAYMENTS HISTORY</a></li>
                                </ul>
                                <div class="tab-content" style="border: 1px solid silver;">
                                    <div id="pending" class="tab-pane in active" role="tabpanel" aria-labelledby="design-tab">
                                        <div class="row pad-10">
                                            <div class="col-6"><button class="btn btn-primary" onclick="OnPay();" style="background: linear-gradient(#ff5722, #f39900) !important;border-color:#ff7f50 !important;">Pay Now</button></div>
                                            <div class="col-6"></div>

                                        </div>
                                        
                                        <div class="col-12 pad-10">
                                            <div id="pendingPaymentGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                                        </div>
                                    </div>

                                    <div id="completed" class="tab-pane" role="tabpanel" aria-labelledby="design-tab">
                                        <div class="col-12 pad-10">
                                            <div id="completedPaymentGrid1" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                                        </div>
                                    </div>
                                </div>

                                <div class="modal fade" id="payConfirmModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                                    <div class="modal-dialog modal-dialog-centered" role="document">
                                        <div class="modal-content">
                                            <div class="modal-header">
                                                <h6 class="modal-title" id="exampleModalLabel">Ready To Pay?</h6>
                                                <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                                    <span aria-hidden="true">×</span>
                                                </button>
                                            </div>
                                            <div class="modal-body payment-body" id="totAmount"><span style="color:#FF7F50">Total Amount :</span> <span id="totalAmount"></span></div>
                                            <div class="modal-body payment-body" id="payment-body">Are you sure you want to proceed to payment gateway to pay the amount?</div>
                                            <div class="modal-footer">
                                                <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                                                <button class="btn btn-primary" style="background: linear-gradient(#ff5722, #f39900) !important;border-color:#ff7f50 !important" onclick="return OnPaymentConfirm();">Proceed To Pay</button>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="tab-pane fade" id="garbage">
                            <div id="garbageGrid" style="width: 100%;height:350px" class="ag-theme-alpine"></div>
                        </div>


                    </div>
                </div>


            </div>
        </div>
    </div>
</div>