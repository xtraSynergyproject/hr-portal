@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Formula";
    Layout = null;
}

<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="page-inner">

            <h4>Formula</h4>
            <hr />
            <ul class="nav nav-tabs" role="tablist">
                <li class="nav-item"><a data-toggle="tab" href="#resident" onclick="getFormulaList()" class="nav-link active" role="tab" aria-controls="resident" aria-selected="true"><i class="fa-regular fa-calendar-circle-exclamation"></i>&nbsp;Residencial</a></li>
                <li class="nav-item"><a data-toggle="tab" href="#commercial" onclick=" getCommFormulaList()" class="nav-link" aria-controls="commercial" aria-selected="false"><i class="fa-regular fa-calendar-check"></i>&nbsp;Commercial</a></li>
                <li class="nav-item"><a data-toggle="tab" href="#vacant" onclick="getVacantFormulaList()" class="nav-link" aria-controls="vacant" aria-selected="false"><i class="fa-regular fa-calendar-check"></i>&nbsp;Vacant Plot</a></li>
            </ul>
            <div class="tab-content" style="border: 1px solid silver;">
                <div id="resident" class="tab-pane in active" role="tabpanel" aria-labelledby="design-tab">
                    <div class="row">
                        <div class="col-12 pt-2">
                            <button type='button' class='btn btn-primary' onclick='OnCreateR();'><i class='fa fas fa-plus'></i>&nbsp;Create</button>
                            <br /><br />
                            <div id="FormulaGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        </div>
                    </div>
                </div>
                <div id="commercial" class="tab-pane in active" role="tabpanel" aria-labelledby="design-tab">
                    <div class="row">
                        <div class="col-12">
                            <button type='button' class='btn btn-primary' onclick='OnCreateC();'><i class='fa fas fa-plus'></i>&nbsp;Create</button>
                            <br /><br />
                            <div id="FormulaGridComm" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        </div>
                    </div>
                </div>
                <div id="vacant" class="tab-pane in active" role="tabpanel" aria-labelledby="design-tab">
                    <div class="row">
                        <div class="col-12">
                            <button type='button' class='btn btn-primary' onclick='OnCreateV();'><i class='fa fas fa-plus'></i>&nbsp;Create</button>
                            <br /><br />
                            <div id="FormulaGridVacant" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        </div>
                    </div>
                </div>

            </div>

            </div>
        </div>
</div>

<script>

    var columnDefs = [

        {
            headerName: "Actions",
            field: "Id",
            maxWidth: 100,

            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='actions' data-idvalue='" + params.value + "' ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
        @*{
            field: "EffectiveFromDate", headerName: "Effective From Date", minWidth: 50,
            cellRenderer: params => {
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
            }
        },
        {
            field: "EffectiveToDate", headerName: "Effective To Date", minWidth: 50,
            cellRenderer: params => {
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
            }
        },*@
        {
            field: "FormulaDisplay",
            headerName: "Formula",
            minWidth: 600
        }


    ];

    $(function () {

      
        getFormulaList();
        //getCommFormulaList();
        //getVacantFormulaList();

        $.contextMenu({
            selector: '#actions',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEdit(id);
                                        break;

                                    case 'delete':
                                        Delete(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },

                            }
                        };


                }
            }
        });


    });

    function getFormulaList() {
        debugger;
        $("#resident").show();
        $("#commercial").hide();
        $("#vacant").hide();
        document.getElementById("FormulaGrid").innerHTML = "";
        gridConfig(
            "FormulaGrid",
            "/EGov/SmartCity/GetFormulaList?type=JSC_RESIDENTIAL",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
    function getCommFormulaList() {
        debugger;
        $("#commercial").show();
        $("#resident").hide();
        $("#vacant").hide();
        document.getElementById("FormulaGridComm").innerHTML = "";
        gridConfig(
            "FormulaGridComm",
            "/EGov/SmartCity/GetFormulaList?type=JSC_COMMERCIAL",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
    function getVacantFormulaList() {
        debugger;
        $("#vacant").show();
        $("#resident").hide();
        $("#commercial").hide();
        document.getElementById("FormulaGridVacant").innerHTML = "";
        gridConfig(
            "FormulaGridVacant",
            "/EGov/SmartCity/GetFormulaList?type=JSC_VACANT",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script>
    function OnCreateR() {

        var url = "/EGov/SmartCity/JSCFormula?type=JSC_RESIDENTIAL";
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Formula', Width: 1000, Height: 700  });
        return false;

    }
    function OnCreateC() {

        var url = "/EGov/SmartCity/JSCFormula?type=JSC_COMMERCIAL";
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Formula', Width: 1000, Height: 700  });
        return false;

    }
    function OnCreateV() {

        var url = "/EGov/SmartCity/JSCFormula?type=JSC_VACANT";
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Formula', Width: 1000, Height: 700  });
        return false;

    }

    function Delete(id) {
        var flag = confirm('Do you really want to delete the assignment?');

        if (flag) {
            $.ajax({
                url: '@Url.Action("DeleteWardCollector", "EGovernment", new { @area="EGov"})?id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    if (result.success) {
                        getWardCollecterList();
                        ShowNotification("Deleted Successfully","success");
                    } else {
                        getWardCollecterList();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    getWardCollecterList();
                }
            });
            return false;
        }
    }

    function onEdit(id) {
        debugger;
        var win = GetMainWindow();
        var url = "/EGov/SmartCity/JSCFormula?id=" + id;
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Formula', Width: 1000, Height: 700 });
        return false;
    }

    function onAfterAction() {
        getFormulaList();
        getCommFormulaList();
        getVacantFormulaList();
    }

</script>


