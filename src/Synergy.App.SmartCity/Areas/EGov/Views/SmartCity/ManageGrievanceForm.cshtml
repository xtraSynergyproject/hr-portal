@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@inject Synergy.App.Common.IUserContext _userContext;

@{
    ViewData["Title"] = "Lodge Complaint";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}
<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDZbIiEByuJbnQLa8HvG852TWEWAPQjlIM&callback=initMap"></script>

@model JSCComplaintViewModel


<script>
    function level1Doc() {
        debugger;
        var newList = [];
        var doclist = "";
        if ('@Model.PhotoFile' != '0' && '@Model.PhotoFile' != '') {
            doclist = '@Model.PhotoFile';
        }

        if ('@Model.PhotoFileAfterReopen' != '0') {
            doclist = doclist + "|" + '@Model.PhotoFileAfterReopen';
        }
        var docListArr = doclist.split("|");
        if (docListArr.length > 0 && docListArr[0] != "") {
            for (var a = 0; a <= docListArr.length - 1; a++) {
                if (docListArr[a] != "" && docListArr[a] != null) {
                    newList.push({ Name: docListArr[a] });
                }

            }

            var dataSource = newList;
            document.getElementById("level1Doc").innerHTML = "";


            $("#level1Doc").kendoListView({
                dataSource: dataSource,
                template: kendo.template($("#templateDocResolver").html()),
                selectable: '@ListViewSelectionMode.Single',
                //change: OnChange
            });
        }
    }

    $(document).ready(function () {
        var newList = [];
        var doclist = '@Model.DocumentId';
        var docListArr = doclist.split("|");
        if (docListArr.length > 0 && docListArr[0] != "") {

            for (var a = 0; a <= docListArr.length - 1; a++) {
                newList.push({ Name: docListArr[a] });

            }

            var dataSource = newList;
            document.getElementById("documentList").innerHTML = "";


            $("#documentList").kendoListView({
                dataSource: dataSource,
                template: kendo.template($("#templateDoc").html()),
                selectable: '@ListViewSelectionMode.Single',
                //change: OnChange
            });
        }
        if ('@Model.IsEdit' == 'True') {
            if ('@Model.GrvStatusCode' == "GRV_DISPOSED") {
                uploadDocReopen();
            }


        } else {
            //Ward

            $("#Ward").kendoDropDownList({
                dataTextField: "Name",
                dataValueField: "Id",
                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                dataSource: {
                    severFiltering: true,
                    transport: {
                        read: {
                            url: "/EGov/SmartCity/GetWardList",
                        }
                    }
                }
            });


            //Department

            $("#Department").kendoDropDownList({
                dataTextField: "Name",
                dataValueField: "Id",
                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                change: onChangeOfDepartment,
                filter: "contains",
                dataSource: {
                    severFiltering: true,
                    transport: {
                        read: {
                            url: "/EGov/SmartCity/GetJSCDepartmentList",
                        }
                    }
                }
            });
            //uploadDoc();

        }

        //Grv Status

        $("#GrvStatus").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            filter: "contains",
            value: '@Model.GrvStatusId',
            dataSource: {
                severFiltering: true,
                transport: {
                    read: {
                        url: "/cms/query/GetLOVIdNameList?lovType=JSC_GRV_STATUS",
                    }
                }
            }
        });

        if ('@Model.IsComplaintOperator' == 'True' && '@Model.GrvStatusCode' == "GRV_NOT_PERTAINING") {

            $("#Department").kendoDropDownList({
                dataTextField: "Name",
                dataValueField: "Id",
                value: '@Model.DepartmentId',
                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                change: onChangeOfDepartment,
                filter: "contains",
                dataSource: {
                    severFiltering: true,
                    transport: {
                        read: {
                            url: "/EGov/SmartCity/GetJSCDepartmentList",
                        }
                    }
                }
            });
        }
    });




    function onChangeOfDepartment(e) {
        document.getElementById("grvdiv").style.display = "";
        var value = $("#Department").val();
        $("#GrievanceType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            filter: "contains",
            dataSource: {
                severFiltering: true,
                transport: {
                    read: {
                        url: "/EGov/SmartCity/GetGrievanceTypeByDepartment?department=" + value,
                    }
                }
            }
        });
    }

    //upload document
    var files = "";
    var fileList = [];
    function uploadDoc() {
        $("#Documentfile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: true,
            //extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                //alert(data.fileId);
                debugger;
                files = files + data.fileId + "|";
                $("#DocumentId").val(files);

                // var dataSource = [{ Name: "Name" }, { Name: "Nam1e" }];
                fileList.push({ Name: data.fileId });

                var dataSource = fileList;
                document.getElementById("listOfDoc").innerHTML = "";


                $("#listOfDoc").kendoListView({
                    dataSource: dataSource,
                    template: kendo.template($("#templateDoc").html()),
                    selectable: '@ListViewSelectionMode.Single',
                    //change: OnChange
                });

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
                alert("File not supported")
            }
        });
    }

    //On Option Changes

    function onOptionChange(e) {
        debugger;
        $("#Option").val(e.id)
        var value = $("#Option").val();
        if (e.id == "DDN") {
            document.getElementById("DDNDetails").style.display = "";
            document.getElementById("MAPDetails").style.display = "none";
            document.getElementById("ADDRESSDetails").style.display = "none";
        } else if (e.id == "MAP") {
            document.getElementById("DDNDetails").style.display = "none";
            document.getElementById("MAPDetails").style.display = "";
            document.getElementById("ADDRESSDetails").style.display = "none";
            initialize();
        } else if (e.id == "ADDRESS") {
            document.getElementById("DDNDetails").style.display = "none";
            document.getElementById("MAPDetails").style.display = "none";
            document.getElementById("ADDRESSDetails").style.display = "";
        }

    }



    //upload file from resolver

    function uploadDocR() {
        $("#DocumentfileR").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: true,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                debugger;
                files = files + data.fileId + "|";
                $("#PhotoFile").val(files);

                fileList.push({ Name: data.fileId });

                var dataSource = fileList;
                document.getElementById("listOfDoc").innerHTML = "";


                $("#listOfDoc").kendoListView({
                    dataSource: dataSource,
                    template: kendo.template($("#templateDocR").html()),
                    selectable: '@ListViewSelectionMode.Single',
                });

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }

    //upload file from resolver

    function uploadDocReopen() {
        $("#DocumentfileReopen").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: true,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                debugger;
                files = files + data.fileId + "|";
                $("#PhotoFileAfterReopen").val(files);

                fileList.push({ Name: data.fileId });

                var dataSource = fileList;
                document.getElementById("listOfDoc2").innerHTML = "";


                $("#listOfDoc2").kendoListView({
                    dataSource: dataSource,
                    template: kendo.template($("#templateDocReopen").html()),
                    selectable: '@ListViewSelectionMode.Single',
                });

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }



    function postResolverInput() {
        debugger;
        $.ajax({
            url: '/EGov/SmartCity/ManageComplaintResolverInput',
            type: "POST",
            data:
            {
                id: '@Model.ComplaintId',
                status: $("#GrvStatus").val(),
                documentId: $("#PhotoFile").val(),
            },
            dataType: "json",
            success: function (result) {
                HideLoader($('#maindiv'));
                var win = GetMainWindow();
                win.CloseWindow({ MethodName: "RefreshComplaintGrid", Prms: { msg: "Complaint Updated Successfully of Complaint No: <b>" + "@Model.ServiceNo" + "<b>" } });
            }
        });
    }

    function onReopen() {
        debugger;
        if (files != null && files != undefined && files != '0' && files != "") {
            kendo.confirm("Are you sure that you want to proceed?").then(function () {
                ShowLoader($('#maindiv'));
                $.ajax({
                    url: '/EGov/SmartCity/ReopenComplaint?parentId=@Model.ComplaintId&documents=' + files,
                    type: "POST",
                    data:
                    {
                    },
                    dataType: "json",
                    success: function (result) {
                        HideLoader($('#maindiv'));
                        var win = GetMainWindow();
                        win.CloseWindow({ MethodName: "RefreshComplaintGrid", Prms: { msg: "Complaint Reopend Successfully of Complaint No: <b>" + "@Model.ServiceNo" + "<b>" } });
                    }
                });
            }, function () {
                //kendo.alert("You chose to Cancel action.");
            });
        } else {
            myalert("Please attach document for reference");
        }
    }

    function onMarkFlag() {
        ShowLoader($('#maindiv'));
        $.ajax({
            url: '/EGov/SmartCity/ComplaintMarkFlag?id=@Model.ComplaintId',
            type: "POST",
            dataType: "json",
            success: function (result) {
                debugger;
                HideLoader($('#maindiv'));
                var win = GetMainWindow();
                win.CloseWindow({ MethodName: "RefreshComplaintGrid", Prms: { msg: "Complaint Marked Flag Successfully of Complaint No: <b>" + "@Model.ServiceNo" + "<b>" } });
            }
        });
    }

    function validateField() {
        if ($("#Ward").val() == null || $("#Ward").val() == "") {
            myalert("Please select ward");
            return false;
        }

        if ($("#Department").val() == null || $("#Department").val() == "") {
            myalert("Please select Department");
            return false;
        }

        if ($("#GrievanceType").val() == null || $("#GrievanceType").val() == "") {
            myalert("Please select Grievance Type");
            return false;
        }
        if ($("#Name").val() == null || $("#Name").val() == "") {
            kendo.alert("Please enter Name");
            return false;
        }

        if ($("#Details").val() == null || $("#Details").val() == "") {
            myalert("Please enter Details");
            return false;
        }
        debugger;
        if ($("#Option").val() == null || $("#Option").val() == "") {
            myalert("Please select Option");
            return false;
        }

        if ($("#Option").val() == "DDN") {
            if ($("#DDNo").val() == null || $("#DDNo").val() == "") {
                myalert("Please enter DDN");
                return false;
            } else {
                if (isValidDDN == false) {
                    myalert("DDN is Invalid");
                    return false;
                }
            }
        }


        if ($("#Option").val() == "ADDRESS") {
            if ($("#Address").val() == null || $("#Address").val() == "") {
                myalert("Please enter Address");
                return false;
            }
        }


        if ($("#Option").val() == "MAP") {
            if ($("#Map").val() == null || $("#Map").val() == "") {
                myalert("Please select location on Map");
                return false;
            }
        }


        return true;
    }

    function ShowLoader(target) {
        kendo.ui.progress(target, true);
    }
    function HideLoader(target) {
        kendo.ui.progress(target, false);
    }

    function lodgeComplaint() {
        debugger;
        ShowLoader($('#maindiv'));
        var res = validateField();
        if (res == true) {
            $.ajax({
                url: '/EGov/SmartCity/ManageComplaint',
                type: "POST",
                data:
                {
                    Ward: $("#Ward").val(),
                    Department: $("#Department").val(),
                    GrievanceType: $("#GrievanceType").val(),
                    Name: $("#Name").val(),
                    Option: $("#Option").val(),
                    DDN: $("#DDNo").val(),
                    Map: $("#Map").val(),
                    Address: $("#Address").val(),
                    Details: $("#Details").val(),
                    DocumentId: $("#DocumentId").val(),
                    GrvStatus: $("#GrvStatus").val()
                },
                dataType: "json",
                success: function (result) {
                    if (result.IsSuccess) {
                        HideLoader($('#maindiv'));
                        var win = GetMainWindow();
                        win.CloseWindow({ MethodName: "RefreshComplaintGrid", Prms: { msg: "Complaint Registered Successfully with Complaint No: <b>" + result.Item.ServiceNo + "<b>" } });
                    }
                }
            });
        }
    }

    function myalert(content) {
        HideLoader($('#maindiv'));
        $("<div></div>").kendoAlert({
            title: "Missing Details",
            content: content
        }).data("kendoAlert").open();
    }


    function onFileUploadSuccess() {
        if (e.success) {
            files = files + data.fileId + "|";
            $("#DocumentId").val(files);

            fileList.push({ Name: data.fileId });

            var dataSource = fileList;
            document.getElementById("listOfDoc").innerHTML = "";


            $("#listOfDoc").kendoListView({
                dataSource: dataSource,
                template: kendo.template($("#templateDoc").html()),
                selectable: '@ListViewSelectionMode.Single',
            });
        }
        else {

        }
        return true;
    }

    //function initMap() {
    //    // The location of Uluru
    //    const uluru = { lat: -25.344, lng: 131.031 };
    //    // The map, centered at Uluru
    //    const map = new google.maps.Map(document.getElementById("googleMap"), {
    //        zoom: 4,
    //        center: uluru,
    //    });
    //    // The marker, positioned at Uluru
    //    const marker = new google.maps.Marker({
    //        position: uluru,
    //        map: map,
    //    });
    //}

    //window.initMap = initMap;



    function initialize() {
        document.getElementById("googleMap").innerHTML = "";
        var myCenter = new google.maps.LatLng(45.430817, 12.331516);
        var marker = new google.maps.Marker({
            position: myCenter
        });
        var mapProp = {
            center: myCenter,
            zoom: 14,
            draggable: false,
            scrollwheel: false

        };

        var map = new google.maps.Map(document.getElementById("googleMap"), mapProp);
        marker.setMap(map);

        google.maps.event.addListener(marker, 'click', function () {

            infowindow.setContent(contentString);
            infowindow.open(map, marker);

        });
    };

    function deletFile(id) {
        debugger;
        document.getElementById(id).remove();
        filesArr = files.split("|");
        filesArr = filesArr.filter(function (item) {
            return item !== id
        });
        files = filesArr.join("|");

        fileList = fileList.filter(function (item) {
            return item.Name !== id
        });
    }

    function downloadFile(id) {
        window.open('/cms/Document/GetFileMongo?fileId=' + id, '_blank');
        return false;
    }

    function countChars(obj) {
        var maxLength = 4000;
        var strLength = obj.value.length;
        var charRemain = (maxLength - strLength);

        if (charRemain < 0) {
            document.getElementById("charNum").innerHTML = '<span style="color: red;">You have exceeded the limit of ' + maxLength + ' characters</span>';
        } else {
            document.getElementById("charNum").innerHTML = charRemain + ' characters remaining';
        }
    }
    var isValidDDN = false;
    function checkIfDDNExist() {
        $.ajax({
            url: '/EGov/SmartCity/CheckIfDDNExist',
            type: "Get",
            data:
            {
                ddn: $("#DDNo").val()
            },
            dataType: "json",
            success: function (result) {
                debugger;
                console.log(result);
                if (result == undefined) {
                    document.getElementById("showDDNInfo").innerText = "Invalid DDN";
                    document.getElementById("showDDNInfo").style.color = "red";
                    $("#Address").val("");
                    isValidDDN = false;
                } else {
                    var address = "Owner Name:" + result.own_name + ", Locality: " + result.locality +
                        ", Sub Location: " + result.sub_loc + ", " + result.post_off + " " + result.pin_code;
                    document.getElementById("showDDNInfo").innerText = address;
                    document.getElementById("showDDNInfo").style.color = "green";
                    $("#Address").val(address);
                    isValidDDN = true;
                }
            }
        });
    }

    function updateDepartmentByOperator() {
        if ($("#Department").val() == null || $("#Department").val() == "") {
            myalert("Please select Department");
            return false;
        } else if ($("#GrievanceType").val() == null || $("#GrievanceType").val() == "") {
            myalert("Please select Grievance Type");
            return false;
        } else {
            $.ajax({
                url: '/EGov/SmartCity/UpdateDepartmentByOperator',
                type: "POST",
                data:
                {
                    id: '@Model.ComplaintId',
                    departmentId: $("#Department").val(),
                    grievanceTypeId: $("#GrievanceType").val(),
                },
                dataType: "json",
                success: function (result) {
                    HideLoader($('#maindiv'));
                    var win = GetMainWindow();
                    win.CloseWindow({ MethodName: "RefreshComplaintGrid", Prms: { msg: "Complaint Updated Successfully of Complaint No: <b>" + "@Model.ServiceNo" + "<b>" } });
                }
            });
        }
    }

    function markDisposedByOperator() {
        $.ajax({
            url: '/EGov/SmartCity/MarkDisposedByOperator',
            type: "POST",
            data:
            {
                id: '@Model.ComplaintId',
            },
            dataType: "json",
            success: function (result) {
                HideLoader($('#maindiv'));
                var win = GetMainWindow();
                win.CloseWindow({ MethodName: "RefreshComplaintGrid", Prms: { msg: "Complaint Marked Disposed Successfully of Complaint No: <b>" + "@Model.ServiceNo" + "<b>" } });
            }
        });
    }

    function datefun(d) {
        d = new Date(d);
        let h = addZero(d.getHours());
        let m = addZero(d.getMinutes());

        return d.getDate() + "." + (d.getMonth() + 1) + "." + d.getFullYear() + " " + h + ":" + m;
    }

    function showGoogleMap() {
        var lat = '@Model.DDNLat';
        var long = '@Model.DDNLong';
        window.open("http://maps.google.com/maps?q="+long+","+lat, '_blank');
    }

</script>

<style>
    .k-animation-container {
        height: 100% !important
    }

    .k-list-container .k-popup .k-group .k-reset {
        height: 100% !important
    }

    .k-list-scroller {
        height: 100% !important
    }

    #Department-list {
        height: 100% !important
    }



    .bold {
        font-weight: bold;
    }

    #listView {
        padding: 10px 5px;
        margin-bottom: -1px;
        min-height: 510px;
        /* Avoid cutout if font or line is bigger */
        font: inherit;
    }

    .k-listview-content {
        overflow: hidden;
    }

    .product1 {
        float: left;
        position: relative;
        /*  width: 111px;
                                                                                                                                                    height: 170px;*/
        margin: 0 5px;
        padding: 0;
    }

    #documentList {
        border-color: transparent;
        background-color: transparent;
    }

    #level1Doc {
        border-color: transparent;
        background-color: transparent;
    }

    .k-listview {
        border-color: #dee2e600;
    }

    .product {
        float: left;
        position: relative;
        width: 111px;
        height: 170px;
        margin: 0 5px;
        padding: 0;
    }

        .product img {
            width: 110px;
            height: 110px;
        }

    .product1 img {
        width: 50px;
        height: 50px;
    }

    .product h3 {
        margin: 0;
        padding: 3px 5px 0 0;
        max-width: 96px;
        overflow: hidden;
        line-height: 1.1em;
        font-size: .9em;
        font-weight: normal;
        text-transform: uppercase;
        color: #999;
    }

    .product p {
        visibility: hidden;
    }

    .product:hover p {
        visibility: visible;
        position: absolute;
        width: 110px;
        height: 110px;
        top: 0;
        margin: 0;
        padding: 0;
        line-height: 110px;
        vertical-align: middle;
        text-align: center;
        color: #fff;
        background-color: rgba(0,0,0,0.75);
        transition: background .2s linear, color .2s linear;
        -moz-transition: background .2s linear, color .2s linear;
        -webkit-transition: background .2s linear, color .2s linear;
        -o-transition: background .2s linear, color .2s linear;
    }

    .k-listview:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }

    .k-confirm .k-window-titlebar::before {
        content: 'Confirmation';
    }

    .k-confirm .k-window-titlebar .k-dialog-title {
        visibility: collapse;
    }
</style>

<div style="padding: 2%;background-color: white;" id="maindiv">

    @if (Model.IsEdit == true)
    {
        <h5 class="bold">Complaint No: @Model.ServiceNo</h5>
        <br />
        <div class="table-responsive" style="background-color:whitesmoke">
            <table class="table table-striped">
                <tbody>
                    <tr>
                        <td> Ward: <span class="bold"> @Model.Ward </span></td>
                        <td> Department: <span class="bold"> @Model.Department </span> </td>
                        <td> Grievance Type: <span class="bold"> @Model.GrievanceType </span> </td>
                        <td> Name: <span class="bold"> @Model.Name </span> </td>
                        <td> DDN: <span onclick="showGoogleMap()" title="Click to view on Map" class="bold" style="text-decoration:underline;color:blue;cursor:pointer"> @Model.DDN  </span> </td>
                        <td></td>
                    </tr>
                    <tr>
                        <td> Address: </td>
                        <td colspan="5"> <span class="bold">  @Model.Address  @Model.Latitude @Model.Longitude </span> </td>

                    </tr>
                    <tr>
                        <td> Details: </td>
                        <td class="bold" colspan="6"><label> @Model.Details</label></td>
                    </tr>

                    <tr>
                        <td>  Documents Attached  </td>
                        <td class="bold" colspan="3">
                            <div id="documentList"></div>
                            <script type="text/x-kendo-tmpl" id="templateDoc">

                                <div id="#:Name#" class="product1">
                                        <img id="#:Name#_img" class="upload-image-preview" style="background-color:gray;"
                                        src="/cms/Document/GetImageMongo?id=#:Name#">
                                        <br>
                                       <span style="font-size:12px">@Model.FileName<span>   <span style="color:blue" class="fas fa-download" onclick="downloadFile('#:Name#')"></span>
                                </div>
                            </script>
                        </td>
                        <td>
                            Status:  
                            @if (Model.GrvStatusCode == null || Model.GrvStatusCode == "GRV_PENDING")
                            {
                                <span style='background-color:#f7f5bc;padding-left:10px;height: 25px;border-style: outset;'>  Pending</span>
                            }
                            @if (Model.GrvStatusCode == "GRV_IN_PROGRESS")
                            {
                                <span style='background-color:#DFE9F5;padding-left:10px;height: 25px;border-style: outset;'>  @Model.GrvStatus </span>
                            }

                            @if (Model.GrvStatusCode == "GRV_NOT_PERTAINING")
                            {
                                <span style='background-color:#FFCD91;padding-left:10px;height: 25px;border-style: outset;'>  @Model.GrvStatus </span>
                            }

                            @if (Model.GrvStatusCode == "GRV_DISPOSED")
                            {
                                <span style='background-color:#90EE90;padding-left:10px;height: 25px;border-style: outset;'>  @Model.GrvStatus </span>
                            }
                        </td>
                        <td>
                            @if (Model.IsLevelUser)
                            {
                              

                                <span style="padding-left:5px"> Reopen Count : @Model.ReopenCount</span>
                            }

                        </td>
                    </tr>
                    <tr>
                    </tr>
                </tbody>
            </table>
        </div>
        <ul class="" style="margin: 0;padding: 0;">

            @foreach (var item in Model.ReopenDetails)
            {

                <li class="list-group-item">

                    <div class="list-group-item-body">
                        <span title='Reopened' style='color:blue;cursor:pointer;padding-right:3%' class='fas fa-rotate-right'></span>
                        <span>Reopened By <b>@item.ReopenByName (@item.ReopenByJobTitle)</b> on <span id="reopenDateTime">@item.ReopenDateTime</span></span>
                    </div>
                </li>
            }

            @foreach (var item in Model.FlagDetails)
            {
                <li class="list-group-item">
                   
                    <div class="list-group-item-body">
                         @if (item.LevelUserRole.Contains("COMPLAINT_RESOLVER_LEVEL_2")) {
                            <span style="color:dodgerblue;padding-right:2%" class="fas fa-flag-pennant" title=""> 2 </span>
                            }
                            @if (item.LevelUserRole.Contains("COMPLAINT_RESOLVER_LEVEL_3")) {
                            <span style="color:orange;padding-right:2%" class="fas fa-flag-pennant" title=""> 3 </span>
                            }
                            @if (item.LevelUserRole.Contains("COMPLAINT_RESOLVER_LEVEL_4")) {
                            <span style="color:red;padding-right:2%" class="fas fa-flag-pennant" title=""> 4 </span>
                            }
                            
                            <span>Flagged By <b>@item.OwnerUserName (@item.LevelJobTitle)</b> on <span id="">@item.FlagDateTime</span></span>
                    </div>
                </li>
            }
        </ul>


        @Html.HiddenFor(x => x.PhotoFile)
        @Html.HiddenFor(x => x.PhotoFileAfterReopen)

        @if (Model.IsComplaintOperator == true && Model.GrvStatus == "Not Pertaining")
        {

            <div class="row" style="padding:1%;background-color: whitesmoke;margin: 0px;">

                <div class="col">
                    <div class="form-label-group">
                        <div>
                            <span style="color:red">*</span> <label for="Department">Select Department</label>
                        </div>
                        <input required asp-for="Department" id="Department" class="form-control" />
                        <script>


                        </script>
                    </div>
                </div>
                <div class="col" style="display:none;" id="grvdiv">
                    <div class="form-label-group">
                        <div>
                            <span style="color:red">*</span> <label for="GrievanceType">Select Grievance Type</label>
                        </div>
                        <input asp-for="GrievanceType" id="GrievanceType" class="form-control" />
                    </div>
                </div>
                <div class="col" style="padding-top: 29px;text-align: center;"><button class="btn btn-primary" onclick="updateDepartmentByOperator()">Update Department</button></div>
                <div class="col" style="padding-top: 29px;text-align: center;"><button class="btn btn-primary" onclick="markDisposedByOperator()">Mark as Disposed</button></div>
                <div class="col"></div>

            </div>
        }

        @if (Model.IsComplaintResolver == true && Model.GrvStatus != "Disposed")
        {
            <div class="row" style="padding:1%;background-color: whitesmoke;margin: 0px;">

                <div class="col">
                    <div class="form-label-group">
                        <div>
                            <span style="color:red">*</span> <label for="GrvStatus">Select Status</label>
                        </div>
                        <input asp-for="GrvStatus" id="GrvStatus" class="form-control" />
                    </div>
                </div>

                <div class="col" style="margin-top: 5px;padding: inherit;">
                </div>
                <div class="col"></div>
                <div class="col"></div>
                <div class="col"></div>

            </div>
        }

        <div>

            @if ((Model.IsLevelUser == true && Model.IsComplaintResolver == false))
            {
                if (Model.GrvStatus != "Disposed" && !Model.IsFlag)
                {
                    <br />
                    <div style="text-align:center">
                        <button class="btn btn-primary" style="background-color:red" onclick="onMarkFlag()">Mark Flag</button>
                    </div>
                    <br />
                }
                else
                {
                    if (Model.ReopenCount < 3 && Model.GrvStatus == "Disposed")
                    {
                        <div class="row">
                            <div class="col">
                                <div class="form-label-group">
                                    <div>
                                        <span style="color:red">*</span>  <label for="Name">Attach Document</label>
                                    </div>
                                    <div id="DocumentfileReopen" class="dm-uploader">
                                        <h6 class=" text-muted">Drag &amp; drop files here</h6>

                                        <div class="btn btn-primary btn-block ">
                                            <span>Open the file Browser</span>
                                            <input type="file" title='Click to add Files' />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col" style="    margin-top: 30px;">
                                <div id="listOfDoc2"></div>
                                <script type="text/x-kendo-tmpl" id="templateDocReopen">

                                    <div id="#:Name#" class="product1">
                                            <img id="#:Name#_img" class="upload-image-preview" style="background-color:gray;"
                                            src="/cms/Document/GetImageMongo?id=#:Name#">
                                            <br>
                                            <span style="color:red" class="fas fa-trash" onclick="deletFile('#:Name#')"></span>
                                    </div>
                                </script>
                                <div id="level2Doc"></div>
                                <script type="text/x-kendo-tmpl" id="templateDocReopenD">

                                    <div id="#:Name#" class="product1">
                                            <img id="#:Name#_img" class="upload-image-preview" style="background-color:gray;"
                                            src="/cms/Document/GetImageMongo?id=#:Name#">
                                            <br>
                                            <span style="color:blue" class="fas fa-download" onclick="downloadFile('#:Name#')"></span>
                                    </div>
                                </script>
                            </div>
                            <div class="col" style="margin: auto;">
                                <button class="btn btn-primary" onclick="onReopen()">Reopen</button>
                            </div>
                        </div>
                    }
                    else
                    {
                    }
                }
            }

            <div style="background-color:whitesmoke">
                <br />
                @{
                    await Html.RenderPartialAsync("~/Areas/EGov/Views/SmartCity/GrievanceComments.cshtml", new NtsServiceCommentViewModel { NtsServiceId = Model.Id, IsAddCommentEnabled = true, IsLevelUser = Model.IsLevelUser });
                }
            </div>

            <div id="dialog">
            </div>
        </div>
    }
    else
    {


        <div class="">
            <label style="color:red">* Mark fields indicates required fields</label>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-label-group">
                    <div>
                        <span style="color:red">*</span> <label for="Ward">Select Ward</label>
                    </div>
                    <input required asp-for="Ward" id="Ward" class="form-control" />
                </div>
            </div>
            <div class="col">
                <div class="form-label-group">
                    <div>
                        <span style="color:red">*</span> <label for="Department">Select Department</label>
                    </div>
                    <input required asp-for="Department" id="Department" class="form-control" />
                </div>
            </div>
            <div class="col" style="display:none" id="grvdiv">
                <div class="form-label-group">
                    <div>
                        <span style="color:red">*</span> <label for="GrievanceType">Select Grievance Type</label>
                    </div>
                    <input asp-for="GrievanceType" id="GrievanceType" class="form-control" />
                </div>
            </div>
        </div>
        <br />
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <span style="color:red">*</span> <label for="Name">Name </label>
                    <input asp-for="Name" type="text" class="form-control" id="Name" placeholder="Enter Name">
                </div>
            </div>

        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <span style="color:red">*</span> <label for="Details"> Details </label>
                    <textarea asp-for="Details" onkeyup="countChars(this);" class="form-control" id="Details" rows="5" placeholder="Enter Details"></textarea>
                    <p id="charNum">0 characters</p>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label class="d-block"><span style="color:red">*</span> Select Option</label>
                    <div class="custom-control custom-control-inline custom-radio">
                        <input type="radio" class="custom-control-input" name="rdGroup1" id="DDN" onclick="onOptionChange(this)">
                        <label class="custom-control-label" for="DDN">Enter DDN</label>
                    </div>
                    <div class="custom-control custom-control-inline custom-radio">
                        <input type="radio" class="custom-control-input" name="rdGroup1" id="MAP" onclick="onOptionChange(this)">
                        <label class="custom-control-label" for="MAP">Mark on Map</label>
                    </div>
                    <div class="custom-control custom-control-inline custom-radio">
                        <input type="radio" class="custom-control-input" name="rdGroup1" id="ADDRESS" onclick="onOptionChange(this)">
                        <label class="custom-control-label" for="ADDRESS">Enter Address</label>
                    </div>
                </div>

            </div>
            <div class="col">
                <div id="DDNDetails" style="display:none">
                    <div class="form-group">
                        <span style="color:red">*</span> <label for="DDNo">Enter DDN </label>
                        <input type="text" class="form-control" id="DDNo" onkeyup="checkIfDDNExist()" placeholder="Enter DDN">
                        <label id="showDDNInfo" style="font-size: 15px;font-weight: 600;"></label>
                    </div>
                </div>

                <div id="MAPDetails" style="display:none">

                    <div class="form-label-group">
                        <div>
                            <label for="Map">Map Details</label>
                            <div id="googleMap" style="width:100%;height:400px;"></div>

                        </div>
                    </div>
                </div>

                <div id="ADDRESSDetails" style="display:none">
                    <div class="form-group">
                        <span style="color:red">*</span> <label for="Address"> Enter Address  </label>
                        <textarea asp-for="Address" class="form-control" id="Address" rows="2" placeholder="Enter Address"></textarea>
                    </div>
                </div>

            </div>


        </div>
        <br>
        <div class="row">
            <div class="col">
                @{
                    await Html.RenderPartialAsync("~/Areas/Core/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.DocumentId), Value = Model.DocumentId, IsExtMessageVisible = true });
                }
            </div>
            <div class="col"></div>
        </div>

        <br> <br> <br>
        @Html.HiddenFor(x => x.DocumentId)
        @Html.HiddenFor(x => x.Option)
        @*@Html.HiddenFor(x => x.GrvStatus)*@

        <button class="btn btn-primary" type="button" onclick="lodgeComplaint()">Submit</button>
    }
</div>
