@using Kendo.Mvc.UI;
@using Synergy.App.Business;
@using Synergy.App.Common;


@inject IFileBusiness _fileBusiness
@inject IUserContext _userContext;
@model Synergy.App.ViewModel.FileViewModel;
@{
    if (ViewBag.Layout == "dms")
    {
        Layout = null;
    }
    else
    {
        Layout = "~/Views/Shared/_PopupLayout.cshtml";
    }


}
<div>
    <style>
        #drop {
            border: 2px dashed #bbb;
            -moz-border-radius: 5px;
            -webkit-border-radius: 5px;
            border-radius: 5px;
            padding: 25px;
            text-align: center;
            font: 20pt bold,"Vollkorn";
            color: #bbb
        }

        #b64data {
            width: 100%;
        }

        a {
            text-decoration: none
        }
    </style>
    <link rel="stylesheet" href="~/css/excel/xspreadsheet.css" />
    @*<script src="https://unpkg.com/canvas-datagrid/dist/canvas-datagrid.js"></script>*@
    <script src="~/js/excel/shim.min.js"></script>
    <script src="~/js/excel/xlsx.full.min.js"></script>
    <script src="~/js/excel/xspreadsheet.js"></script>



    @*<div id="gridctr"></div>

        <script>
            var grid = canvasDatagrid({
                parentNode: document.getElementById('gridctr'),
                data: []
            });

            grid.style.height = '100%';
            grid.style.width = '100%';
            





            var wb = XLS.read("js/excel/UploadedDocument.xls");

            wb.SheetNames.forEach(function (sheetName) {
                // Here is your object
                var XL_row_object = XLSX.utils.sheet_to_row_object_array(wb.Sheets[sheetName]);
                var json_object = JSON.stringify(XL_row_object);
                console.log(json_object);

            })


            var ws = wb.Sheets[wb.SheetNames[0]];
            var data = XLSX.utils.sheet_to_json(ws, { header: 1 });
            
            grid.data = data;

        </script>*@















    <input type="button" class="btn btn-primary" id="btnDownload" value="Download" onclick="OnDownload('@Model.Id')" disabled="disabled" />
   
    @*<p><input type="submit" value="Export to XLSX!" id="xport" onclick="export_xlsx();" disabled="true"></p>*@
    <div id="htmlout" style="height:600px;width:100%"></div>
    <br />

    <script>
        /*jshint browser:true */
        /* eslint-env browser */
        /* eslint no-use-before-define:0 */
        /*global Uint8Array, Uint16Array, ArrayBuffer */
        /*global XLSX */
        var XPORT = document.getElementById('btnDownload');
        var HTMLOUT = document.getElementById('htmlout');
        var xspr = x_spreadsheet(HTMLOUT);
        var cDg;
        function stox(wb) {
            var out = [];
            wb.SheetNames.forEach(function (name) {
                var o = { name: name, rows: {} };
                var ws = wb.Sheets[name];
                var aoa = XLSX.utils.sheet_to_json(ws, { raw: false, header: 1 });
                aoa.forEach(function (r, i) {
                    var cells = {};
                    r.forEach(function (c, j) { cells[j] = ({ text: c }); });
                    o.rows[i] = { cells: cells };
                })
                out.push(o);
            });
            return out;
        }
        function xtos(sdata) {
            var out = XLSX.utils.book_new();
            sdata.forEach(function (xws) {
                var aoa = [[]];
                var rowobj = xws.rows;
                for (var ri = 0; ri < rowobj.len; ++ri) {
                    var row = rowobj[ri];
                    if (!row) continue;
                    aoa[ri] = [];
                    Object.keys(row.cells).forEach(function (k) {
                        var idx = +k;
                        if (isNaN(idx)) return;
                        aoa[ri][idx] = row.cells[k].text;
                    });
                }
                var ws = XLSX.utils.aoa_to_sheet(aoa);
                XLSX.utils.book_append_sheet(out, ws, xws.name);
            });
            return out;
        }
        var process_wb = (function () {
           

            return function process_wb(wb) {
                /* get data */
                var data = stox(wb);

                /* update x-spreadsheet */
                xspr.loadData(data);
                XPORT.disabled = false;

                if (typeof console !== 'undefined') console.log("output", new Date());
            };
        })();

        var do_file = (function () {
            return function do_file(files) {
                
                var f = files[0];
                var reader = new FileReader();
                reader.onload = function (e) {
                    if (typeof console !== 'undefined') console.log("onload", new Date());
                    var data = e.target.result;
                    data = new Uint8Array(data);
                    process_wb(XLSX.read(data, { type: 'array' }));

                };
                reader.readAsArrayBuffer(f);

            };
        })();

        var do_file1 = (function () {
            return function do_file(files) {
                var data = files;
                //data = new Uint8Array(data);


                process_wb(XLSX.read(data.replace(/_/g, "/").replace(/-/g, "+"), { type: 'base64' }));
            };
        })();

        //(function () {
        //    var drop = document.getElementById('drop');
        //    if (!drop.addEventListener) return;

        //    function handleDrop(e) {
        //        e.stopPropagation();
        //        e.preventDefault();
        //        do_file(e.dataTransfer.files);
        //    }

        //    function handleDragover(e) {
        //        e.stopPropagation();
        //        e.preventDefault();
        //        e.dataTransfer.dropEffect = 'copy';
        //    }

        //    drop.addEventListener('dragenter', handleDragover, false);
        //    drop.addEventListener('dragover', handleDragover, false);
        //    drop.addEventListener('drop', handleDrop, false);
        //})();

        //(function () {
        //    var xlf = document.getElementById('b64data');
        //    if (!xlf.addEventListener) return;
        //    function handleFile(e) {  do_file1(xlf.value); }
        //    xlf.addEventListener('change', handleFile, false);
        //})();
        function export_xlsx1() {
            var new_wb = xtos(xspr.getData());

            /* write file and trigger a download */
            XLSX.writeFile(new_wb, 'sheetjs.xlsx', {});
        }
        var export_xlsx = (function () {
            function prep(arr) {
                var out = [];
                for (var i = 0; i < arr.length; ++i) {
                    if (!arr[i]) continue;
                    if (Array.isArray(arr[i])) { out[i] = arr[i]; continue };
                    var o = new Array();
                    Object.keys(arr[i]).forEach(function (k) { o[+k] = arr[i][k] });
                    out[i] = o;
                }
                return out;
            }

            return function export_xlsx() {
                if (!cDg) return;
                /* convert canvas-datagrid data to worksheet */
                var new_ws = XLSX.utils.aoa_to_sheet(prep(cDg.data));

                /* build workbook */
                var new_wb = XLSX.utils.book_new();
                XLSX.utils.book_append_sheet(new_wb, new_ws, 'SheetJS');

                /* write file and trigger a download */
                XLSX.writeFile(new_wb, 'sheetjs.xlsx', { bookSST: true });
            };
        })();
        $(document).ready(function myfunction() {
            ShowLoader($('#wrapper'));
            $.ajax({
                url: '@Url.Action("GetFileBase64", "Cms")?mongoId=@Model.MongoFileId',
                                        type: 'GET',
                                        success: function (result) {
                                            if (result != null) {
                                                do_file1(result);
                                                HideLoader($('#wrapper'));
                                            }
                                            else {
                                                kendo.alert(result.errors);
                                                HideLoader($('#wrapper'));
                                            }
                                        },
                                        error: function (ert) {
                                            HideLoader($('#wrapper'));

                                        }
                                    });
        });
        function OnDownload(docId) {
            url = '/cms/Document/GetFileMongo?fileId=' + docId;
            window.open(url, '_blank');
            return false;
        }
    </script>
</div>
                                                                                  










