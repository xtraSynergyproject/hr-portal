@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Form";
    //Layout = null;
    //Layout = "/Views/Shared/_PopupLayout.cshtml";
}
@inject Synergy.App.Common.IUserContext _userContext
@model FormTemplateViewModel

<style>
    .form-label-group {
        position: relative;
        margin-bottom: 0px;
    }

    .cms-manageportal-footer {
        /*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }

    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }

    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }

    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }
    /*    k-colorpicker {
        width: 100px;
    }

    .k-colorpicker .k-selected-color {
            width: 100px;
    }*/
</style>

<script>

    function formType() {
        var data = $("#formTypeValue").data("kendoDropDownList").value();
        
        jsonObj = JSON.parse(JSON.stringify(builder.instance.schema, null, 4));
        console.log(data);
        if (data == "1") {
            //form
            jsonObj.display = "form";
        } else if (data == "2") {
            //Wizard
            jsonObj.display = "wizard";
        }

        builder = new Formio.FormBuilder(document.getElementById("builder"), jsonObj, {
            builder: {
                custom: {
                    title: 'Chart',
                    weight: 10,
                    components: {
                        chartjs: {
                            title: 'Chart',
                            key: 'chartJS',
                            icon: 'terminal',
                            schema: {
                                label: 'Chart JS',
                                type: 'htmlelement',
                                key: 'chartJs',
                                input: true
                            }
                        },
                    }
                },

            }
        }, { noDefaultSubmitButton: true });
    }

</script>



<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">
    <form asp-controller="Template" asp-action="ManageForm" class="form-horizontal"
          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div id="validation-summary-manageform" class="text-danger" asp-validation-summary="All"></div>

        <div class="row no-gutters pad-10">
            <div class="col-2">
                <input asp-for="EnableIndexPage" type="checkbox" class="k-checkbox" style="margin-right:5px;" />
                <label>Enable Index page</label>
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-2">
                <input asp-for="EnableSaveButton" type="checkbox" class="k-checkbox" style="margin-right:5px;" />
                <label>Enable Save Button</label>
            </div>
            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="SaveButtonText" type="text" placeholder="Save Button Text" class="form-control" />
                    <label for="SaveButtonText">Save Button Text</label>
                </div>

            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="SaveButtonCss" type="text" placeholder="Save Button Css" class="form-control" />
                    <label for="SaveButtonCss">Save Button Css</label>
                </div>

            </div>
            @*<div class="col-3" style="margin-right:5px;">
                    <input asp-for="SaveButtonText" type="text" placeholder="Save Button Text" class="form-control" />
                </div>
                <div class="col-3">
                    <input asp-for="SaveButtonCss" type="text" placeholder="Save Button Css" class="form-control" />
                </div>*@
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-2">
                <input asp-for="EnableBackButton" type="checkbox" class="k-checkbox" style="margin-right:5px;" />
                <label>Enable Back Button</label>
            </div>
            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="BackButtonText" type="text" placeholder="Back Button Text" class="form-control" />
                    <label for="BackButtonText">Back Button Text</label>
                </div>

            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="BackButtonCss" type="text" placeholder="Back Button Css" class="form-control" />
                    <label for="BackButtonCss">Back Button Css</label>
                </div>

            </div>
            @*<div class="col-3" style="margin-right:5px;">
                    <input asp-for="BackButtonText" type="text" placeholder="Back Button Text" class="form-control" />
                </div>
                <div class="col-3">
                    <input asp-for="BackButtonCss" type="text" placeholder="Back Button Css" class="form-control" />
                </div>*@
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-2">
                <label for="EditReturnType">Edit Return Type</label>
            </div>
            <div class="col-9">
                @*@(Html.Kendo().DropDownListFor(x => x.EditReturnType)
                                   .DataSource(source =>
                                   {
                                       source.Read(read =>
                                       {
                                           read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "EditReturnTypeEnum" });
                                       });
                                   })
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .Value(Model.EditReturnType.ToString())
                                  .HtmlAttributes(new { @class = "hr-x-large" })
               )*@

                <input asp-for="EditReturnType" id="EditReturnType" class="hr-x-large" />
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-2">
                <label for="CreateReturnType">Create Return Type</label>
            </div>
            <div class="col-9">
                @*@(Html.Kendo().DropDownListFor(x => x.CreateReturnType)
                                   .DataSource(source =>
                                   {
                                       source.Read(read =>
                                       {
                                           read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "CreateReturnTypeEnum" });
                                       });
                                   })
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .Value(Model.CreateReturnType.ToString())
                                  .HtmlAttributes(new { @class = "hr-x-large" })
               )*@

                <input asp-for="CreateReturnType" id="CreateReturnType" class="hr-x-large" />

            </div>
        </div>
        <div class="row">
            <div class="pad-15 no-gutters" style="width: 100%;">
                <div class="pad-b-15 card col-12 page">
                    <div class="card-header page-header bg-info">
                        <span id="page-name" class="page-title content-editable" data-placeholder="Page Name" style="padding-left:3px" contenteditable="true">

                        </span>
                        <span class="cms-settings-box" onclick="OpenPageSettings(this)">
                            @*<i class="cursor-p fa fa-cog" title="Settings"></i>*@
                        </span>

                    </div>
                    <div class="card-body" id="component-container">


                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.DataAction)
                        @Html.HiddenFor(x => x.TemplateId)
                        @Html.HiddenFor(x => x.Json)
                        @Html.HiddenFor(x => x.IndexPageTemplateId)

                        @*@(Html.Kendo().DropDownList()
                              .Name("formTypeValue")
                              .DataTextField("Text")
                              .DataValueField("Value")
                              .Events(e => e.Change("formType"))
                              .BindTo(new List<SelectListItem>() {
                                  new SelectListItem() {
                                      Text = "Form",
                                      Value = "1"
                                  },
                                  new SelectListItem() {
                                      Text = "Wizard",
                                      Value = "2"
                                  },
                              })
                              .Value("1")
                              .HtmlAttributes(new { style = "width: 100%" })
                        )*@

                        <input id="formTypeValue" style="width:100%" />
                        <br />
                        <br />
                        <div id="builder"></div>
                    </div>
                </div>

            </div>
        </div>
        <div class="cms-footer">
            <div class="col-sm-12" style="text-align:right;">
                <button type="submit" class="btn btn-success" onclick="SaveData()">Save</button>
                @if (ViewBag.LayoutMode == LayoutModeEnum.Popup.ToString())
                {
                    <input type="button" class="btn btn-light" value="Close" onclick="return OnClose('@Model.TemplateId');" />
                }
            </div>
        </div>

    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {

        $("#EditReturnType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.EditReturnType.ToString()',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=EditReturnTypeEnum",
                    }
                }
            }
        });

        $("#CreateReturnType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.CreateReturnType.ToString()',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=CreateReturnTypeEnum",
                    }
                }
            }
        });

        $("#formTypeValue").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: "1",
            change: formType,
            dataSource: [
                { Name: "Form", Id: "1" },
                { Name: "Wizard", Id: "2" }
            ],
        });


        if ('@ViewBag.Success' == "True") {
            //alert("1");
            closeNavPortal();
            var tree = window.parent.$("#contentTreeView").data("kendoTreeView");
            tree.dataSource.read();
            //alert("2");
        }

         $.ajax({
                 type: "GET",
              url: "/Cms/Template/GetTemplateJson?templateId=@Model.TemplateId",
            success: function (response) {
                if (response != "" && response != null) {
                    var obj = JSON.parse(response);

                    builder = new Formio.FormBuilder(document.getElementById("builder"), obj, {
                        builder: {
                            custom: {
                                title: 'Chart',
                                weight: 10,
                                components: {
                                    chartjs: {
                                        title: 'Chart',
                                        key: 'chartJS',
                                        icon: 'terminal',
                                        schema: {
                                            label: 'Chart JS',
                                            type: 'htmlelement',
                                            key: 'chartJs',
                                            input: true
                                        }
                                    },
                                }
                            },

                        }
                    },
 { noDefaultSubmitButton: true });
                }

                else {
                    var obj = {
                        "synergyTableMapId": '@ViewBag.SynergyTableMapId'
                    }
                    builder = new Formio.FormBuilder(document.getElementById("builder"), obj, {
                        builder: {
                            custom: {
                                title: 'Chart',
                                weight: 10,
                                components: {
                                    chartjs: {
                                        title: 'Chart',
                                        key: 'chartJS',
                                        icon: 'terminal',
                                        schema: {
                                            label: 'Chart JS',
                                            type: 'htmlelement',
                                            key: 'chartJs',
                                            input: true
                                        }
                                    },
                                }
                            },

                        }
                    }
                        , { noDefaultSubmitButton: true });

                }

            },
            error: function (response) {
                alert("error");
            },
         });

        if ($('#EnableIndexPage').is(':checked')) {
            $('#liformindex').show();
        } else {
            $('#liformindex').hide();
        }

        $('#EnableIndexPage').on('change', function () {
            if (this.checked) {
                //alert("checked : Enable Index Page");
                $('#liformindex').show();
            } else {
                //alert("not checked : hide Index Page");
                $('#liformindex').hide();
            }
        });
    });
    function SaveData() {
        $("#Json").val(JSON.stringify(builder.instance.schema, null, 4));
        return true;
    }

    var onAjaxSuccess = function (res) {

        if (res.success) {

            ShowNotification("Saved Successfully", "success");
            var TemplateId = res.templateId;
            LoadPartailView('@Url.Action("ManageForm", "Template", new { @area = "Cms" })?templateId='+ TemplateId  + '&lo=@(ViewBag.LayoutMode??"")&cbm=@(ViewBag.CallbackMethod??"")', $('#detailPage'));
        }
        else {
            showError(res.error);
        }
    };
    var showError = function (error) {

        //#validation-summary-manageform
        $("#validation-summary-manageform").html(error);
        $("#validation-summary-manageform").css("display", "block")
    }

</script>
