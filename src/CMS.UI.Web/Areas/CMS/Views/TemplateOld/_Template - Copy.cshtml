@{
    ViewData["Title"] = "Settings";
    Layout = null;
}
@using CMS.UI.ViewModel;
@using CMS.Common;
@model SynergyTemplateViewModel;

<style>
    label {
        display: inline-block;
        margin-bottom: -1.5rem;
        color: grey;
        float: right;
    }

    .float-container {
        border: solid 1px #ccc;
        position: relative;
    }

        .float-container input {
            border: none;
            outline: 0;
        }

    label {
        position: absolute;
    }

    .upload {
    }

    .upload-div .k-button {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
        min-height: 80px !important;
        background-image: url('../../../../images/logo.png') !important;
        background-repeat: no-repeat !important;
        background-position: left !important;
        position: relative !important;
        padding: 0px !important;
    }

        .upload-div .k-button span, .upload-div .k-upload-files, .upload-div .k-upload-status {
            display: none !important;
        }

    .upload-div .k-dropzone {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
    }
    /* .upload-div {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
        background-image: url('../../../../images/logo.png') !important;
        background-repeat: no-repeat;
        background-position: center;
        position: relative;
    }*/

    .card-header {
        padding: 2px !important;
    }

    .k-listview {
        border: none !important;
    }

    .sidenav {
        height: 100%; /* 100% Full-height */
        width: 0; /* 0 width - change this with JavaScript */
        position: fixed; /* Stay in place */
        z-index: 100; /* Stay on top */
        top: 0; /* Stay at the top */
        right: 0;
        background-color: #fff; /* Black*/
        border-left: 1px solid silver;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 30px; /* Place content 60px from the top */
        transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    }



        /* Position and style the close button (top right corner) */
        .sidenav .closebtn {
            position: absolute;
            top: 0;
            right: 15px;
            font-size: 30px;
            font-weight: bold;
            margin-left: 20px;
            color: gray;
            border: none;
            text-decoration: none;
        }

            .sidenav .closebtn:hover {
                color: red;
            }

    /* Style page content - use this if you want to push the page content to the right when you open the side navigation */
    #component-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #editor-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #overlay {
        position: fixed;
        background: rgba(0,0,0,.5);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
        width: 100%;
        height: 100%;
        z-index: 99;
        right: 100%;
        top: 0;
        /*  transition: right .5s ease;*/
    }

    .overlay {
        right: 0 !important;
        /* transition: right .5s ease !important;*/
    }

    .cms-panel-header-name {
        font-size: 16px;
        font-weight: 700;
        padding: 0 10px;
        width: 80%;
    }
    /*Style for switch checkbox*/
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }

    /*Editor Type Style  */
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }

    .product {
        /*float: left;*/
        /*position: relative;*/
        /*width: 111px;*/
        height: 170px;
        margin: 0 0px;
        /*padding: 0;*/
    }

        .product img {
            width: 110px;
            height: 110px;
        }

        .product .div-icon {
            width: 110px;
            height: 110px;
            background-color: #f8f8f8;
        }

            .product .div-icon svg {
                position: relative;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
            }

        .product h3 {
            margin: 0;
            padding: 3px 5px 0 0;
            max-width: 96px;
            overflow: hidden;
            line-height: 1.1em;
            font-size: .9em;
            font-weight: normal;
            text-transform: uppercase;
            color: #999;
        }

        .product p {
            visibility: hidden;
        }

        .product:hover p {
            cursor: pointer;
            visibility: visible;
            position: absolute;
            width: 110px;
            height: 110px;
            top: 0;
            margin: 0;
            padding: 0;
            line-height: 110px;
            vertical-align: middle;
            text-align: center;
            color: #fff;
            background-color: rgba(0,0,0,0.75);
            transition: background .2s linear, color .2s linear;
            -moz-transition: background .2s linear, color .2s linear;
            -webkit-transition: background .2s linear, color .2s linear;
            -o-transition: background .2s linear, color .2s linear;
        }
    /*Editor Type Style Close */

    /* Add control start */
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }
    .style-control {
        margin-right: 5px;
        margin-left: 10px;
        text-align: center;
        padding-left: 0px;
        padding-right: 0px;
    }

        .style-control span {
            font-size: smaller;
        }
    /* Add control close */
</style>
<script>
    var groupId = 1;
    var cellId = 1;
    var componentId = 1;

    function ToggleNewGroup() {
        $('#new-row-container').toggle('400');
    }
    function DiscardDeleteGroup(e) {
        $(e).parent().hide('slide', { direction: 'right' }, 500);
    }
    function ConfirmDeleteGroup(e) {
        console.log(e);
        var contentId = e.parentNode.parentNode.parentNode.parentNode.id;
        var type = e.parentNode.parentNode.parentNode.parentNode.getAttribute('data-page-content-type');
        //$(e).parent().hide('slide', { direction: 'right' }, 500);
        $.ajax({
            type: "GET",
            url: "/Cms/Content/DeleteContent?id=" + contentId + "&type=" + type,
            dataType: "json",
            success: function (response) {
                $("#" + contentId).remove();
            },
        });
    }
    function DeleteGroup(e) {
        var n = $(e).next();
        if (n.is(':hidden')) {
            n.show('slide', { direction: 'right' }, 500);
        } else {
            n.hide('slide', { direction: 'right' }, 500);
        }
    }
    function OpenSettings(e) {
        //
        //var evt = e;
        //var evt = e.target.id;
        //console.log(evt);
        var sid = e.parentNode.parentNode.id;
        var stype = document.getElementById(sid).getAttribute('data-page-content-type');
        //alert('open settings');
        //alert("source Id : "+sid +", Type : "+stype);
        //openNavStyle(sid, stype);
        //editNavStyle(sid, stype);
        editNavStyle1(sid, stype);
    }
    function OpenPageSettings(e) {
        //var evt = e;
        //console.log(evt);
        var sid = e.parentNode.parentNode.id;
        var stype = document.getElementById(sid).getAttribute('data-page-content-type');
        //alert("source Id : "+sid +", Type : "+stype);
        //OpenManageSettings(sid, stype);
        editNavStyle(sid, stype);
    }
    function SetPageSettings(id) {
        //alert(id);
        var pagename = $('#PageName').val();
        var pagetitle = $('#PageTitle').val();
        var pagemenuname = $('#PageMenuName').val();
        var pagehideinmenu = $('#PageHideInMenu').val();
        var pageisrootpage = $('#PageIsRootPage').val();

        document.getElementById(id).setAttribute("data-name", pagename);
        document.getElementById(id).setAttribute("data-title", pagetitle);
        document.getElementById(id).setAttribute("data-menu-name", pagemenuname);
        document.getElementById(id).setAttribute("data-hide-menu", pagehideinmenu);
        document.getElementById(id).setAttribute("data-is-root", pageisrootpage);

        //alert(pagename);
        //alert(pagetitle);
        //alert(pagemenuname);
        //alert(pagehideinmenu);
        //alert(pageisrootpage);
    }
    function openNav() {
       document.getElementById("side-components").style.width = "350px";
        //  $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }
    function openNavEditor() {
        document.getElementById("mySidenavEditor").style.width = "600px";
        $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }
    function openEditor() {
        alert("Hello Editor... ");
    }
    function OnSelectEditor(id) {
        alert("Under Development... ");
    }
    function OnChangeCustomValidation(e) {

        var validation = this.dataItem(e.item);
        if (validation.Id == "Email") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('[a-zA-Z0-9_.+-]+@@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Number") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('^[0-9]*$');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Url") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('https?://[a-zA-Z0-9-.]+.[a-zA-Z]{2,}');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Custom") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('');
            $('#txtCustomValidation').val('');
        } else {
            $('#txtRegularExpresssion').val('');
            $('#txtCustomValidation').val('');
            $('#txtRegularExpresssion').hide();
            $('#txtCustomValidation').hide();

        }
    }
    /* Set the width of the side navigation to 0 */
    function closeNav(sideNav) {
        document.getElementById(sideNav).style.width = "0";
        // $("#overlay").removeClass("overlay");
    }

    function closeNavEditor() {
        document.getElementById("mySidenavEditor").style.width = "0";
        $("#overlay").removeClass("overlay");
        //$('body').removeClass('fadeMe');
    }

    $(document).ready(function () {
        InitializeContePlaceHolder();

        $('#txtMandatoryCustomValidation').hide();
        $('#txtRegularExpresssion').hide();
        $('#txtCustomValidation').hide();

        $('#chkFieldMandatory').on('change', function () {
            // From the other examples
            if (this.checked) {
                //alert("checked");
                $('#txtMandatoryCustomValidation').show();
            } else {
                //alert("not checked");
                $('#txtMandatoryCustomValidation').hide();
            }
        });
    });
    function AddNewGroup(type) {
        var gseq = groupId++;
        var gid = GenerateGuid();
        var groupRef = document.getElementById(type).firstElementChild;
        var grp = groupRef.cloneNode(true);
        var gn = $(grp).find('#group-name');
        gn.html(type + ' ' + (gseq));
        gn.attr("id", 'grp-name-' + gid);
        grp.setAttribute("id", gid);
        var seq = groupRef.getAttribute('data-sequence');
        seq = eval(seq) + 1;
        groupRef.setAttribute("data-sequence", seq);
        grp.setAttribute("data-sequence", seq);
        document.getElementById("groups").appendChild(grp);
        $('.column', $('#' + gid)).each(function () {
            $(this).attr("id", GenerateGuid());
            $(this).attr("data-parent-id", gid);
        });
    }
    function AddComponent(type, target) {
        switch (type) {
            case "NTS_TextBox":
                //alert("NTS_TextBox");
                AddNTSTextBox(type, target);
                break;
            case "NTS_Attachment":
                alert("NTS_Attachment");
                break;
            case "NTS_CheckBox":
                alert("NTS_CheckBox");
                break;
            case "NTS_DatePicker":
                alert("NTS_DatePicker");
                break;
            case "NTS_DateTimePicker":
                alert("NTS_DateTimePicker");
                break;
            case "NTS_Display":
                alert("NTS_Display");
                break;
            case "NTS_DropDownList":
                alert("NTS_DropDownList");
                break;
            case "NTS_GeoLocation":
                alert("NTS_GeoLocation");
                break;
            case "NTS_Grid":
                alert("NTS_Grid");
                break;
            case "NTS_HiddenField":
                alert("NTS_HiddenField");
                break;
            case "NTS_HijiriDatePicker":
                alert("NTS_HijiriDatePicker");
                break;
            case "NTS_HyperLink":
                alert("NTS_HyperLink");
                break;
            case "NTS_IconButton":
                alert("NTS_IconButton");
                break;
            case "NTS_IntegerTextBox":
                alert("NTS_IntegerTextBox");
                break;
            case "NTS_NumericTextBox":
                alert("NTS_NumericTextBox");
                break;
            case "NTS_RichTextBox":
                alert("NTS_RichTextBox");
                break;
            case "NTS_TextArea":
                alert("NTS_TextArea");
                break;
            default:
        }
    }
    function AddNTSTextBox(type, target) {
        
        var t = $(target);
        //console.log(t);
        var cellId = GenerateGuid();
        var cellRef = document.getElementById('dummy-' + type).firstElementChild;
        var cell = cellRef.cloneNode(true);
        var cn = $(cell).find('#comp-name');
        cn.html('TextBox' + (componentId++));
        var compname = cn[0].innerText;
        cn.attr("id", 'comp-name-' + (cellId));

        var seq = cellRef.getAttribute('data-sequence');
        seq = eval(seq) + 1;
        var templateId = cellRef.getAttribute('data-template-id');
        //alert(tempId);
        cell.setAttribute("data-template-id", templateId);
        cellRef.setAttribute("data-sequence", seq);
        cell.setAttribute("data-sequence", seq);
        cell.setAttribute("data-parent-id", target.parentElement.id);
        cell.setAttribute("id", cellId);

        // no need this auto ID use NTS generate id
        //var compId = GenerateGuid();
        //var compId = GetTemplateFieldId(compname, tempId, type);
        //alert(compId);
        //cn.attr("id", 'comp-name-' + (compId));
        //cell.setAttribute("id", compId);

        //var control = $(cell).find('#component');
        //control.attr("id", compId);
        //control.attr("data-component-type", "NTS_TextBox");
        //control.attr("data-parent-id", cellId);
        //t.before(cell);
        $.ajax({
            type: "POST",
            url: "/Cms/Template/CreateTemplateField",
            data: { name: compname, templateId: templateId, ntstype: type },
            dataType: "json",
            success: function (response) {
                
                if (response.success == true) {
                    //return response.Id;
                    //alert(response.Id);
                    var compId = response.Id;
                    cn.attr("id", 'comp-name-' + (compId));
                    cell.setAttribute("id", compId);

                    var control = $(cell).find('#component');
                    control.attr("id", compId);
                    control.attr("data-component-type", "NTS_TextBox");
                    control.attr("data-parent-id", cellId);
                    t.before(cell);
                }
                //else {
                //    return "0";
                //    //$(".text-danger").removeClass("validation-summary-valid");
                //    //$(".text-danger").addClass("validation-summary-errors");
                //    //var msg = ExtractError(response.errors);
                //    //$(".text-danger").html(msg);
                //}
            },
            error: function (response) {
                alert("error");
            },
        });
    }

    function GetTemplateFieldId(compname,templateId,fieldtype) {
        $.ajax({
            type: "POST",
            url: "/Cms/Template/CreateTemplateField",
            data: { name: compname, templateId: templateId, ntstype: fieldtype},
            dataType: "json",
            success: function (response) {
                
                if (response.success == true) {
                    //return response.Id;
                    alert(response.Id);

                }
                else
                {
                    //return "0";
                    //$(".text-danger").removeClass("validation-summary-valid");
                    //$(".text-danger").addClass("validation-summary-errors");
                    //var msg = ExtractError(response.errors);
                    //$(".text-danger").html(msg);
                }
            },
            error: function (response) {
            alert("error");
            },
        });
    }

    function AddRichText(type, target) {
        var t = $(target);
        var cellId = GenerateGuid();
        var cellRef = document.getElementById('dummy-' + type).firstElementChild;
        var cell = cellRef.cloneNode(true);
        var cn = $(cell).find('#comp-name');
        cn.html('Rich Text Box ' + (componentId++));
        cn.attr("id", 'comp-name-' + (cellId));

        var seq = cellRef.getAttribute('data-sequence');
        seq = eval(seq) + 1;
        cellRef.setAttribute("data-sequence", seq);
        cell.setAttribute("data-sequence", seq);
        cell.setAttribute("data-parent-id", target.parentElement.id);
        cell.setAttribute("id", cellId);

        var compId = GenerateGuid();
        var control = $(cell).find('#component');
        control.attr("id", compId);
        control.attr("data-component-type", "RichText");
        control.attr("data-parent-id", cellId);
        t.before(cell);
        CreateRichTextBox($('#' + compId));
    }
    function CreateRichTextBox(id) {
        id.kendoEditor({
            stylesheets: [
                "../content/shared/styles/editor.css",
            ],
            tools: [
                "bold",
                "italic",
                "underline",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "insertUnorderedList",
                "createLink",
                "unlink",
                "insertImage",
                "tableWizard",
                "createTable",
                "addRowAbove",
                "addRowBelow",
                "addColumnLeft",
                "addColumnRight",
                "deleteRow",
                "deleteColumn",
                "mergeCellsHorizontally",
                "mergeCellsVertically",
                "splitCellHorizontally",
                "splitCellVertically",
                //"formatting",
                //{
                //    name: "fontName",
                //    items: [
                //        { text: "Andale Mono", value: "Andale Mono" },
                //        { text: "Arial", value: "Arial" },
                //        { text: "Arial Black", value: "Arial Black" },
                //        { text: "Book Antiqua", value: "Book Antiqua" },
                //        { text: "Comic Sans MS", value: "Comic Sans MS" },
                //        { text: "Courier New", value: "Courier New" },
                //        { text: "Georgia", value: "Georgia" },
                //        { text: "Helvetica", value: "Helvetica" },
                //        { text: "Impact", value: "Impact" },
                //        { text: "Symbol", value: "Symbol" },
                //        { text: "Tahoma", value: "Tahoma" },
                //        { text: "Terminal", value: "Terminal" },
                //        { text: "Times New Roman", value: "Times New Roman" },
                //        { text: "Trebuchet MS", value: "Trebuchet MS" },
                //        { text: "Verdana", value: "Verdana" },
                //    ]
                //},
                "fontSize",
                "foreColor",
                "backColor",
            ]
        });
    }
    function CreateRichTextBox(id) {
        id.kendoEditor({
            stylesheets: [
                "../content/shared/styles/editor.css",
            ],
            tools: [
                "bold",
                "italic",
                "underline",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "insertUnorderedList",
                "createLink",
                "unlink",
                "insertImage",
                "tableWizard",
                "createTable",
                "addRowAbove",
                "addRowBelow",
                "addColumnLeft",
                "addColumnRight",
                "deleteRow",
                "deleteColumn",
                "mergeCellsHorizontally",
                "mergeCellsVertically",
                "splitCellHorizontally",
                "splitCellVertically",
                //"formatting",
                //{
                //    name: "fontName",
                //    items: [
                //        { text: "Andale Mono", value: "Andale Mono" },
                //        { text: "Arial", value: "Arial" },
                //        { text: "Arial Black", value: "Arial Black" },
                //        { text: "Book Antiqua", value: "Book Antiqua" },
                //        { text: "Comic Sans MS", value: "Comic Sans MS" },
                //        { text: "Courier New", value: "Courier New" },
                //        { text: "Georgia", value: "Georgia" },
                //        { text: "Helvetica", value: "Helvetica" },
                //        { text: "Impact", value: "Impact" },
                //        { text: "Symbol", value: "Symbol" },
                //        { text: "Tahoma", value: "Tahoma" },
                //        { text: "Terminal", value: "Terminal" },
                //        { text: "Times New Roman", value: "Times New Roman" },
                //        { text: "Trebuchet MS", value: "Trebuchet MS" },
                //        { text: "Verdana", value: "Verdana" },
                //    ]
                //},
                "fontSize",
                "foreColor",
                "backColor",
            ]
        });
    }
    // $('.splitter-container').SplitterBar();
    var splitter = $('.splitter-container').height(200).split({
        orientation: 'vertical',
        limit: 10,
        position: '20%', // if there is no percentage it interpret it as pixels
        onDrag: function (event) {
            console.log(splitter.position());
        }
    });
    function ReloadTab() {


        
    }
    function SetTabControls(index, select) {
        var tabStrip = $("#tabstrip").data("kendoTabStrip");
        if (select) {
            tabStrip.select(index);
        }
    }
    function onTabSelect1(e) {
        SetTabControls($(e.item).index(), false);
    }
    function OnSelect(e) {
        e.preventDefault();


    }
    function OpenIframeModal(url, title) {
        
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: title, Width: 700, Height: 350 });
        return false;
    }

    function componentDrag(ev) {
        //alert(ev.target.data('type'));
        ev.dataTransfer.setData("text", ev.target.id);
    }
    function componentDrop(ev, el) {
        ev.preventDefault();
        var type = ev.dataTransfer.getData("text");
        AddComponent(type, el);
        //ev.target.appendChild(document.getElementById(data));
    }
    function componentDragOver(ev) {
        ev.preventDefault();
    }
    //function RemovespecailChar()
    //{
    //    var txt = $("#pagetitle").val();
    //    txt = txt.replace(/[^A-Z0-9]/ig, "");
    //    $("#generatelbl").html(txt);
    //}
    $("#pagetitle").on('input', function () {
        if ('@Model.DataAction' == '@DataActionEnum.Create')
        {
            var txt = $("#pagetitle").val();
            txt = txt.replace(/[^A-Z0-9]/ig, "");
            $("#generatelbl").html(txt);
        }
    });
</script>


<div class="row pad-20 no-gutters">
    @*<div class="col-sm-1">
        <button type="button" class="btn" style="width:65%;height:100%" onclick="openNavForIcon()">
            @if (Model.DataAction == DataActionEnum.Edit && Model.IconCss != "")
            {
                <i class="@Model.IconCss" style="font-size:27px;color:@Model.IconColor" id="pageicon"></i>
            }
            else
            {
                <i class="fal fa-file" style="font-size:27px" id="pageicon"></i>
            }

        </button>
    </div>*@
    <div class="float-container col-sm-8" style="margin-left:-21px;">
        <label id="generatelbl" class="float-right" for="pagetitle" style="position:unset;">@Model.Name</label>
        
    </div>
    <div class=" container col-sm-3">
        <ul class="list-inline">
            <li style="float: left;margin: 8px 10px;"><a href="#">Design</a></li>
            <li style="float: left;margin: 8px 10px;"><a href="#">Settings</a></li>
            <li style="float: left;margin: 8px 10px;"><a href="javascript:void(0)" onclick="Permission()">Permissions</a></li>
        </ul>

    </div>
</div>
<div class="text-danger" asp-validation-summary="All"></div>
<div class="row pad-20 no-gutters">
    <div class="col-sm-12 pad-b-15">
        <div class="float-right">
            @*<input type="button" class="btn btn-info" value="Compositions" />*@
            @*<input type="button" class="btn btn-info" value="Reorder" />*@
        </div>
        @*<div class="upload-div">
                @(Html.Kendo().Upload()
                    .Name("files")
                    .HtmlAttributes(new {@class="upload" })
                    .Async(a => a
                        .Save("Chunk_Upload_Save", "Upload")
                        .Remove("Chunk_Upload_Remove", "Upload")
                        .AutoUpload(true)
                    )

                )
            </div>*@
    </div>

    <div class="pad-b-15 card col-12 page" data-mode="@Model.DataAction" id="@Model.TemplateId" data-page-content-type="Template" data-portal-id="@Model.TemplateId"
         data-name="@Model.Name">
        <div class="card-header page-header bg-info">
            <span id="page-name" class="page-title content-editable" data-placeholder="Template Name" style="padding-left:3px" contenteditable="true">
                @Model.Name
            </span>
            <span class="cms-settings-box" onclick="OpenPageSettings(this)">
                <i class="cursor-p fa fa-cog" title="Settings"></i>
            </span>

        </div>
        <div class="card-body" id="component-container">
            <div id="groups" class="groups">
                @if (Model.Groups != null)
                {
                    foreach (var group in Model.Groups)
                    {
                        <div class="cms-group card group" id="@group.Id" data-mode="@group.DataAction.ToString()" data-type="@group.PageRowType.ToString()" data-page-content-type="Group" data-sequence="@group.SequenceOrder" data-parent-id="@group.ParentId" data-page-id="@group.TemplateId">
                            <div class="group-header card-header bg-secondary">
                                <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
                                    @group.Name
                                </span>
                                <span class="cms-delete-box">
                                    <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                                    <span class="cms-delete-confirm-box">
                                        <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                                        <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                                    </span>

                                </span>

                            </div>
                            <div class="card-body">
                                <div class="row no-gutters cms-components">
                                    @foreach (var col in Model.Columns.Where(x => x.ParentId == group.Id))
                                    {
                                        <div class="row no-gutters column" id="@col.Id" data-mode="@col.DataAction.ToString()" data-page-content-type="Column" data-sequence="@col.SequenceOrder" data-page-id="@col.TemplateId" data-parent-id="@col.ParentId">
                                            @foreach (var cell in Model.Cells.Where(x => x.ParentId == col.Id))
                                            {
                                                <div class="cms-component card col-12 cell" id="@cell.Id" data-mode="@cell.DataAction.ToString()" data-page-content-type="Cell" data-sequence="@cell.SequenceOrder" data-page-id="@cell.TemplateId" data-parent-id="@cell.ParentId">
                                                    <div class="component-header bg-light card-header">
                                                        <span id="comp-name" class="component-title content-editable" data-placeholder="Component Name" style="padding-left:3px" contenteditable="true">
                                                            @cell.Name
                                                        </span>
                                                        <span class="cms-settings-box" onclick="OpenSettings(this)">
                                                            <i class="cursor-p fa fa-cog" title="Settings"></i>
                                                        </span>
                                                        <span class="cms-delete-box">
                                                            <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete Component"></i>
                                                            <span class="cms-delete-confirm-box">
                                                                <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                                                                <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                                                            </span>
                                                        </span>
                                                    </div>
                                                    <div class="card-body component" id="component-container">
                                                        @foreach (var comp in Model.Components.Where(x => x.ParentId == cell.Id))
                                                        {
                                                            switch (comp.ComponentType.Value)
                                                            {
                                                                case ComponentTypeEnum.RichText:
                                                                    @(Html.Kendo().Editor()
                                                                          .Name(comp.Id)
                                                                          .HtmlAttributes(new {rows = "5", style = "width:100%; height:100%", data_page_content_type = "Component",data_mode=comp.DataAction.ToString(),data_page_id=comp.TemplateId,data_sequence=comp.SequenceOrder,data_component_type= comp.ComponentType})
                                                                          .StyleSheets(css => css
                                                                            .Add(Url.Content("~/lib/kendo/editor/editorStyles.css"))
                                                                          )
                                                                          .Tools(tools => tools
                                                                                .Clear()
                                                                                .Bold().Italic().Underline().Strikethrough()
                                                                                .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                                                                                .InsertUnorderedList().InsertOrderedList()
                                                                                .Outdent().Indent()
                                                                                .CreateLink().Unlink()
                                                                                .InsertImage()
                                                                                .InsertFile()
                                                                                .SubScript()
                                                                                .SuperScript()
                                                                                .TableEditing()
                                                                                .ViewHtml()
                                                                                .Formatting()
                                                                                .CleanFormatting()
                                                                                .FormatPainter()
                                                                                .FontName()
                                                                                .FontSize()
                                                                                .ForeColor().BackColor()

                                                                            )
                                                                          //.Value(comp.Content)
                                                                          )

                                                                    break;
                                                                case ComponentTypeEnum.Image:
                                                                    break;
                                                                case ComponentTypeEnum.Form:
                                                                    break;
                                                                case ComponentTypeEnum.Heading:
                                                                    break;
                                                                case ComponentTypeEnum.Action:
                                                                    break;
                                                                default:
                                                                    break;
                                                            }
                                                        }

                                                    </div>
                                                </div>
                                            }
                                        </div>
                                    }

                                </div>
                            </div>
                        </div>
                    }
                }
            </div>

            <div class="card cms-new-group">
                <div class="row">
                    <div class="col-12 pad-t-b-10" style="text-align:center;color:gray;justify-content:center;">
                        <i class="fa fal fa-2x fa-plus-circle" style="cursor:pointer;" onclick="ToggleNewGroup();"></i>
                    </div>
                    <div class="col-12 row pad-15" id="new-row-container" style="display:none;margin-left:0px;margin-right:0px;">
                        <div class="col-3 row no-gutters">
                            <div class="col-12 row no-gutters new-row-item" onclick="AddNewGroup('FullWidth')">
                                <div class="col-12 new-row-cell">&nbsp;</div>
                            </div>
                            <div class="col-12">Full Width</div>
                        </div>
                        <div class="col-3 row no-gutters">
                            <div class="col-12 row no-gutters new-row-item" onclick="AddNewGroup('Article')">
                                <div class="col-3 new-row-cell">&nbsp;</div>
                                <div class="col-9 new-row-cell">&nbsp;</div>
                            </div>
                            <div class="col-12">Article</div>
                        </div>
                        <div class="col-3 row no-gutters">
                            <div class="col-12 row no-gutters new-row-item" onclick="AddNewGroup('TwoColumns')">
                                <div class="col-6 new-row-cell">&nbsp;</div>
                                <div class="col-6 new-row-cell">&nbsp;</div>
                            </div>
                            <div class="col-12">Two Columns</div>
                        </div>
                        <div class="col-3 row no-gutters">
                            <div class="col-12 row no-gutters new-row-item" onclick="AddNewGroup('ThreeColumns')">
                                <div class="col-4 new-row-cell">&nbsp;</div>
                                <div class="col-4 new-row-cell">&nbsp;</div>
                                <div class="col-4 new-row-cell">&nbsp;</div>
                            </div>
                            <div class="col-12">Three Columns</div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

<div id="FullWidth" style="display:none;">
    <div class="cms-group card group" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-type="FullWidth" data-page-content-type="Group" data-sequence="0" data-template-id="@Model.TemplateId" data-parent-id="@Model.Id" data-page-id="@Model.Id">
        <div class="group-header card-header bg-secondary">
            <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
            </span>
            <span class="cms-delete-box">
                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                <span class="cms-delete-confirm-box">
                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                </span>

            </span>

        </div>
        <div class="card-body">
            <div class="row no-gutters cms-components">
                <div class="col-12 row no-gutters column" data-css-class="col-12" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="Article" style="display:none;">
    <div class="cms-group card group" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-type="Article" data-page-content-type="Group" data-sequence="0" data-parent-id="@Model.Id" data-page-id="@Model.Id">
        <div class="group-header card-header bg-secondary">
            <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
            </span>
            <span class="cms-delete-box">
                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                <span class="cms-delete-confirm-box">
                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                </span>

            </span>

        </div>
        <div class="card-body">
            <div class="row no-gutters cms-components">
                <div class="col-3 row no-gutters column" data-css-class="col-3" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
                <div class="col-9 row no-gutters column" data-css-class="col-9" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="TwoColumns" style="display:none;">
    <div class="cms-group card group" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-type="TwoColumns" data-page-content-type="Group" data-sequence="0" data-parent-id="@Model.Id" data-page-id="@Model.Id">
        <div class="group-header card-header bg-secondary">
            <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
            </span>
            <span class="cms-delete-box">
                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                <span class="cms-delete-confirm-box">
                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                </span>

            </span>

        </div>
        <div class="card-body">
            <div class="row no-gutters cms-components">
                <div class="col-6 row no-gutters column" data-css-class="col-6" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
                <div class="col-6 row no-gutters column" data-css-class="col-6" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ThreeColumns" style="display:none;">
    <div class="cms-group card group" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-type="ThreeColumns" data-page-content-type="Group" data-sequence="0" data-parent-id="@Model.Id" data-page-id="@Model.Id">
        <div class="group-header card-header bg-secondary">
            <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
            </span>
            <span class="cms-delete-box">
                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                <span class="cms-delete-confirm-box">
                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                </span>
            </span>

        </div>
        <div class="card-body">
            <div class="row no-gutters cms-components">
                <div class="col-4 row no-gutters column" data-css-class="col-4" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
                <div class="col-4 row no-gutters column" data-css-class="col-4" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
                <div class="col-4 row no-gutters column" data-css-class="col-4" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="dummy-component" style="display:none;">
    <div id="dummy-NTS_TextBox">
        <div class="cms-component card col-12 cell" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-template-id="@Model.TemplateId" data-page-id="@Model.Id" data-page-content-type="Cell">
            <div class="component-header bg-light card-header">
                <span id="comp-name" class="component-title content-editable" data-placeholder="Component Name" style="padding-left:3px" contenteditable="true">
                </span>
                <span class="cms-settings-box" onclick="OpenSettings(this)">
                    <i class="cursor-p fa fa-cog" title="Settings"></i>
                </span>
                <span class="cms-delete-box">
                    <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete Component"></i>
                    <span class="cms-delete-confirm-box">
                        <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                        <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                    </span>
                </span>

            </div>
            <div class="card-body component" id="component-container">
                <div class="col-sm-3" style="display:inline-block !important;">
                    <div class="col-12">Name</div>
                    <div class="col-12">Description</div>
                </div>
                <div class="col-sm-8 card bg-light cms-new-property" style="display:inline-block !important;" @*onclick="openNav()"*@>
                    <div class="col-12"><i class="fa fal fa-edit fa-2x"></i>&nbsp; TextBox</div>
                </div>
                @*<span style="width:30px;">
                    <i class="cms-delete-yes fa fa-check" title="Confirm delete"></i><br />
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDelete()" title="Discard delete"></i>
                </span>*@
                @*<textarea id="component" rows="5" style="width:100%; height:100%" aria-label="editor" data-page-content-type="Component" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-sequence="1"></textarea>*@
            </div>
        </div>
    </div>
    <div id="dummy-RichText">
        <div class="cms-component card col-12 cell" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-page-content-type="Cell">
            <div class="component-header bg-light card-header">
                <span id="comp-name" class="component-title content-editable" data-placeholder="Component Name" style="padding-left:3px" contenteditable="true">
                </span>
                <span class="cms-settings-box" onclick="OpenSettings(this)">
                    <i class="cursor-p fa fa-cog" title="Settings"></i>
                </span>
                <span class="cms-delete-box">
                    <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete Component"></i>
                    <span class="cms-delete-confirm-box">
                        <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                        <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                    </span>
                </span>

            </div>
            <div class="card-body component" id="component-container">
                <textarea id="component" rows="5" style="width:100%; height:100%" aria-label="editor" data-page-content-type="Component" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-sequence="1"></textarea>
            </div>
        </div>
    </div>
    <div id="dummy-Image">
        <div class="cms-component card col-12 cell" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-page-content-type="Cell">
            <div class="component-header bg-light card-header">
                <span id="comp-name" class="component-title content-editable" data-placeholder="Component Name" style="padding-left:3px" contenteditable="true">
                </span>
                <span class="cms-settings-box" onclick="OpenSettings(this)">
                    <i class="cursor-p fa fa-cog" title="Settings"></i>
                </span>
                <span class="cms-delete-box">
                    <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete Component"></i>
                    <span class="cms-delete-confirm-box">
                        <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                        <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                    </span>
                </span>

            </div>
            <div class="card-body component" id="component-container">
                <textarea id="component" rows="5" style="width:100%; height:100%" aria-label="editor" data-page-content-type="Component" data-mode="@CMS.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-sequence="1"></textarea>
            </div>
        </div>
    </div>
    <div id="dummy-Heading">
        <h3> <input type="tel" /></h3>
    </div>
    <div id="dummy-Action">
        <a href="#">Action</a>
    </div>
</div>
<div id="component-div">
    <div id="side-components" class="sidenav">
        <h1 class="cms-panel-header-name">Add Control</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav('side-components')" title="Close">&times;</a>
        <hr />
        <div class="row pad-20 slidenav-flow">
            @*<div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="RichText">
            <i class="fa fas fa-edit"></i>&nbsp;Rich Text Editor
        </div>
        <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="Image">
            <i class="fa fas fa-image"></i>&nbsp;Image
        </div>
        <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="Form">
            <i class="fa fas fa-file-alt"></i>&nbsp;Form
        </div>
        <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="Heading">
            <i class="fa fas fa-heading"></i>&nbsp;Heading
        </div>
        <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="RichText">
            <i class="fa fas fa-link"></i>&nbsp;Action
        </div>*@

            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_TextBox">
                <i class="fa fal fa-edit fa-2x"></i><br />
                <span>TextBox</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_TextArea">
                <i class="fa fal fa-window-maximize fa-2x"></i><br />
                <span>Text Area</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_RichTextBox">
                <i class="fa fal fa-money-check-edit fa-2x"></i><br />
                <span>Rich TextBox</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_CheckBox">
                <i class="fa fal fa-check-square fa-2x"></i><br />
                <span>CheckBox</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_IntegerTextBox">
                <i class="fa fal fa-edit fa-2x"></i><br />
                <span>Integer TextBox</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_Attachment">
                <i class="fa fal fa-paperclip fa-2x"></i><br />
                <span>Attchment</span>
            </div>

            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_DatePicker">
                <i class="fa fal fa-calendar-alt fa-2x"></i><br />
                <span>Date Picker</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_NumericTextBox">
                <i class="fa fal fa-edit fa-2x"></i><br />
                <span>Numeric TextBox</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_DateTimePicker">
                <i class="fa fal fa-clock fa-2x"></i><br />
                <span>Date Time Picker</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_Display">
                <i class="fa fal fa-tag fa-2x"></i><br />
                <span>Label</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_DropDownList">
                <i class="fa fal fa-indent fa-2x"></i><br />
                <span>Drop Down List</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_GeoLocation">
                <i class="fa fal fa-location fa-2x"></i><br />
                <span>Geo Location</span>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_Grid">
                <i class="fa fal fa-th fa-2x"></i><br />
                <span>Grid</span>
            </div>

            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_HyperLink">
                <i class="fa fal fa-link fa-2x"></i><br />
                <span>Hyper Link</span>
            </div>
            @*<div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_HiddenField">
            <i class="fa fal fa-th fa-2x"></i><br />
            <span>Hidden Field</span>
        </div>
        <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_HijiriDatePicker">
            <i class="fa fal fa-th fa-2x"></i><br />
            <span>Hijiri Date Picker</span>
        </div>
        <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_IconButton">
            <i class="fa fal fa-eye fa-2x"></i><br />
            <span>Icon Button</span>
        </div>*@

        </div>
        <hr />
        <div class="cms-slidebar-footer">
            <input type="button" class="btn btn-link" value="Close" onclick="closeNav('side-components')" />
            @*<input type="button" class="btn btn-primary" value="Save" />*@
        </div>
    </div>

</div>
<div id="page-icon-div">
    <div id="mySidenavPageIcon" class="sidenav">
        <h1 class="cms-panel-header-name">Portal</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNavIcon()" title="Close">&times;</a>
        <hr />
        <div id="page-icon" class="row pad-20 slidenav-flow">

        </div>
    </div>
</div>
<div class="cms-footer">
    <input type="button" class="btn btn-primary" value="Save" onclick="OnSave()" />
</div>
@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.DataAction)
<script>
    function OnSave() {
        var Jsondata = [];
        if ($("#pagetitle").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Page Title is required");
            return;
        }
        else
        {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }
          // // Page data
        var page = {};
        page.Title = $("#pagetitle").val(); //document.getElementById('page-name').innerText;//$("#page-name")[0].innerText;
        page.Name = $("#generatelbl").html();
        page.Id = '@Model.Id';
       
        page.PortalId = document.getElementById('page-name').parentNode.parentNode.getAttribute('data-portal-id');
        page.DataAction = '@Model.DataAction';
        page.PageContentType = "Page";
        page.IconColor = $("#IconColor").val();
        page.IconCss = $("#IconCss").val();
        page.MenuName = document.getElementById('page-name').parentNode.parentNode.getAttribute('data-menu-name');
        page.HideInMenu = document.getElementById('page-name').parentNode.parentNode.getAttribute('data-hide-menu');
        page.IsRootPage = document.getElementById('page-name').parentNode.parentNode.getAttribute('data-is-root');
        page.Groups = [];
        page.Columns = [];
        page.Cells = [];
        page.Components = [];
        Jsondata.push(page);
        var pageContents = document.getElementById('groups');
        if (pageContents != undefined) {
            var childelements = pageContents.children;
              // // Group data
            if (childelements.length > 0) {
                for (var i = 0; i < childelements.length; i++) {
                    var obj = {};
                    var id = childelements[i].id;
                    obj.Id = id;
                    obj.Title = childelements[i].children[0].children[0].innerText;// $("#grp-name-" + id).html();
                    obj.SequenceOrder = childelements[i].getAttribute("data-sequence");
                    obj.ParentId = childelements[i].getAttribute('data-parent-id');
                    obj.DataAction = childelements[i].getAttribute("data-mode");
                    obj.PageContentType = childelements[i].getAttribute("data-page-content-type");
                    obj.PageRowType = childelements[i].getAttribute("data-type");
                    obj.PageId = childelements[i].getAttribute("data-page-id");
                    obj.CssClass = childelements[i].getAttribute("data-css-class");
                    Jsondata[0].Groups.push(obj);
                      // // Column data
                    var columns = childelements[i].getElementsByClassName('cms-components')[0].children;
                    for (var j = 0; j < columns.length; j++) {
                        var groupname = columns[j].getAttribute('data-page-content-type');
                        var col = {};
                        col.PageContentType = groupname;
                        col.ParentId = columns[j].getAttribute('data-parent-id');
                        col.PageId = columns[j].getAttribute('data-page-id');
                        col.SequenceOrder = columns[j].getAttribute('data-sequence');
                        col.DataAction = columns[j].getAttribute('data-mode');
                        col.Id = columns[j].getAttribute('id');
                        col.CssClass = columns[j].getAttribute("data-css-class");
                        Jsondata[0].Columns.push(col);

                        var components = columns[j].children;
                        // // Cell data
                        for (var k = 0; k < components.length; k++) {
                            if (components[k].getAttribute("id") != null && components[k].getAttribute("id") != "" && components[k].getAttribute("id") != undefined)
                            {
                                var cell = {};
                                cell.PageContentType = components[k].getAttribute("data-page-content-type");
                                cell.Id = components[k].getAttribute("id");
                                cell.PageId = components[k].getAttribute('data-page-id');
                                cell.ParentId = columns[j].getAttribute('id');
                                var mode = components[k].getAttribute('data-mode');
                                cell.CssClass = components[k].getAttribute("data-css-class");
                                cell.DataAction = mode;
                                cell.SequenceOrder = components[k].getAttribute('data-sequence');
                                cell.Title = components[k].children[0].innerText;
                                Jsondata[0].Cells.push(cell);
                                // Components data
                                var obj1 = {};
                                //obj1.Title = components[k].children[0].innerText;
                                var textarea = components[k].children[1].getElementsByTagName('textarea');
                                obj1.DataAction = textarea[0].getAttribute('data-mode');
                                obj1.Id = textarea[0].id;
                                obj1.PageContentType = textarea[0].getAttribute("data-page-content-type");
                                obj1.ComponentType = textarea[0].getAttribute('data-component-type');
                                obj1.PageId = textarea[0].getAttribute('data-page-id');
                                obj1.CssClass = textarea[0].getAttribute("data-css-class");
                                obj1.SequenceOrder = textarea[0].getAttribute('data-sequence');
                                if (obj1.ComponentType == "RichText") {
                                    var editor = $("#" + obj1.Id).data("kendoEditor");
                                    console.log(editor.value());
                                    obj1.Content = editor.value();
                                }
                                obj1.ParentId = cell.Id;
                                Jsondata[0].Components.push(obj1);
                            }
                        }
                    }
                    console.log(JSON.stringify(Jsondata));
                }
            }
        }
        ShowLoader($("#page-content"));
        $.ajax({
                        type: "POST",
                        url: "/Cms/Content/ManagePage",
                        data: { data: JSON.stringify(Jsondata[0])},
                        dataType: "json",
                        success: function (response)
                        {
                            if (response.success == true) {
                                LoadPartailView('@Url.Action("EditPage", "Content", new { @area="Cms"})?pageId=' + response.result.Id, $('#page-content'));
                            }
                            else
                            {
                                $(".text-danger").removeClass("validation-summary-valid");
                                $(".text-danger").addClass("validation-summary-errors");
                                var msg = ExtractError(response.errors);
                                $(".text-danger").html(msg);
                                HideLoader($("#page-content"));
                            }
                            // HideLoader(document.getElementsByTagName("body"));
                        },
                        error: function (response) {
                            alert("error");
                            HideLoader($("#page-content"));
                        },
                    });
        return false;
    }
    function openNavForIcon() {
         document.getElementById("mySidenavPageIcon").style.width = "450px";
         LoadPartailView('@Url.Action("SelectPageIcon", "Content", new { @area="Cms"})', $('#page-icon'));
        $("#overlay").addClass("overlay");

    }
    function closeNavIcon() {
        document.getElementById("mySidenavPageIcon").style.width = "0";
        $("#overlay").removeClass("overlay");
    }
    function OnIconPropertySubmit(iconname,iconcolor) {
        $("#IconCss").val(iconname);
        $("#IconColor").val(iconcolor);
        $("#pageicon").removeAttr("class");
        $("#pageicon").addClass(iconname);
        $("#pageicon").css("color", iconcolor);
        document.getElementById("mySidenavPageIcon").style.width = "0";
        $("#overlay").removeClass("overlay");
    }
   
    function ExtractError(err, exludeLi) {
        var msg = "";
        $.each(err, function (key, value) {

            $.each(value, function (key1, value1) {
                $.each(value1, function (key2, value2) {
                    if (exludeLi) {
                        msg += value2 + "\n";
                    }
                    else {
                        msg += "<li>" + value2 + "</li>";
                    }

                });

            });
        });
        return msg;
    }
</script>





