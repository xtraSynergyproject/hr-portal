@using CMS.Common
@inject CMS.Common.IUserContext _userContext

@{
    ViewData["Title"] = "Create User";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
@model CMS.UI.ViewModel.EditorTypeViewModel


<style>
    .avatar-myProfile {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }
</style>

<script>
     $(document).ready(function () {



         $("#EditorCategory").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.EditorCategoryData',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=EditorCategoryEnum",
                    }
                }
            }
         });

         $("#ControlType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.ControlTypeData',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=ControlTypeEnum",
                    }
                }
            }
         });


    });
</script>

<form asp-controller="Configuration" asp-action="ManageEditorType" method="post" class="form-horizontal">
    <div class="text-danger" asp-validation-summary="All"></div>
    <div class="row" style="margin-left:10px !important;width: 280px !important;">
        <div class="col-12">
            <div class="form-label-group">
                <input type="text" asp-for="Name" class="form-control" placeholder="Name" autocomplete="off" required="required" />
                <label for="name">Name</label>
            </div>
            <div class="form-label-group">
                @*@(Html.Kendo().DropDownListFor(model => model.EditorCategory)
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetEnumIdNameList", "Home", new {@area="", enumType = "EditorCategoryEnum" });
            });
        })
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
        .DataTextField("Name")
        .DataValueField("Id")
        .Value(Model.EditorCategoryData)
        .Height(100)
        //.Filter(FilterType.Contains)
        .HtmlAttributes(new { @class = "form-control",  @style = "padding-top: 20px !important; height: auto !important;" }))*@
                <input asp-for="EditorCategory" id="EditorCategory" class="form-control" style="padding-top: 20px !important; height: auto !important;" />
                <label for="editorcategory" style="margin-top: -20px !important;">Editor Category</label>
            </div>
            <div class="form-label-group">
                @*@(Html.Kendo().DropDownListFor(model => model.ControlType)
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetEnumIdNameList", "Home", new {@area="", enumType = "ControlTypeEnum" });
            });
        })
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
        .DataTextField("Name")
        .DataValueField("Id")
        .Value(Model.ControlTypeData)
        .Height(100)
        //.Filter(FilterType.Contains)
        .HtmlAttributes(new { @class = "form-control",  @style = "padding-top: 20px !important; height: auto !important;" }))*@
                <input asp-for="ControlType" id="ControlType" class="form-control" style="padding-top: 20px !important; height: auto !important;" />

                <label for="controltype" style="margin-top: -20px !important;">Control Type</label>
            </div>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-light" onclick="CloseIframeModal(true);">Close</button>
        </div>
    </div>
    @Html.HiddenFor(x=>x.Id)
    @Html.HiddenFor(x=>x.DataAction)
    <br /><br />
    </form>