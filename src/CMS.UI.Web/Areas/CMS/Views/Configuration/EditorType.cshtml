@using CMS.UI.ViewModel;
@using CMS.Common;

@{
    ViewData["Title"] = "Editor Type";
    Layout = "/Areas/Cms/Views/Shared/_LayoutConfig.cshtml";
}
@inject CMS.Common.IUserContext _userContext
@model List<CMS.UI.ViewModel.EditorTypeViewModel>
<style>
    #lvEditorType {
        padding: 10px 5px;
        margin-bottom: -1px;
        min-height: 510px;
        /* Avoid cutout if font or line is bigger */
        font: inherit;
    }

    .product {
        /*float: left;*/
        /*position: relative;*/
        /*width: 111px;*/
        height: 170px;
        margin: 0 5px;
        /*padding: 0;*/
    }

        .product img {
            width: 110px;
            height: 110px;
        }
        .product .div-icon {
            width: 110px;
            height: 110px;
            background-color: #f8f8f8;
        }
            .product .div-icon svg {
                position: relative;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
            }
        .product h3 {
            margin: 0;
            padding: 3px 5px 0 0;
            max-width: 96px;
            overflow: hidden;
            line-height: 1.1em;
            font-size: .9em;
            font-weight: normal;
            text-transform: uppercase;
            color: #999;
        }

        .product p {
            visibility: hidden;
        }

        .product:hover p {
            cursor: pointer;
            visibility: visible;
            position: absolute;
            width: 110px;
            height: 110px;
            top: 0;
            margin: 0;
            padding: 0;
            line-height: 110px;
            vertical-align: middle;
            text-align: center;
            color: #fff;
            background-color: rgba(0,0,0,0.75);
            transition: background .2s linear, color .2s linear;
            -moz-transition: background .2s linear, color .2s linear;
            -webkit-transition: background .2s linear, color .2s linear;
            -o-transition: background .2s linear, color .2s linear;
        }

    .k-listview:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
</style>

<div class="row" style="margin: 15px !important;">
    <div class="col-12" style="margin: 15px !important;">
        <button type="button" class="k-button k-button-icontext k-add-button" onclick="OpenEditType()"><i class="k-icon k-i-add" aria-hidden="true"></i>Add new record</button>
    </div>
    @*<div class="col-12">
            @(Html.Kendo().ListView<EditorTypeViewModel>()
        .Name("lvEditorType")
        .TagName("div")
        .ClientTemplateId("template")
        .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("ReadEditorTypeData", "Configuration"))
                //.Group(g => g.Add(f => f.EditorCategory.ToString()))
                .PageSize(5)
            )
            .Pageable(pageable => pageable
               .Refresh(true)
               .ButtonCount(5)
               .PageSizes(new[] { 5, 10, 15,20 })
            )
        )
        </div>*@
    <div class="row col-12">

        @if (Model.Where(x => x.EditorCategory == EditorCategoryEnum.Common).Count() > 0)
        {
            <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>Common</h4></div>
        }
        @foreach (var item in Model.Where(x => x.EditorCategory == EditorCategoryEnum.Common))
        {
            <div class="col-1 product">
                @*<img src="/images/profile.jpg" alt="@item.Name image" />*@
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                <h3>@item.Name</h3>
                <h3>@item.ControlType</h3>
                <p onclick="OnEdit('@item.Id')">@item.Name</p>

            </div>
        }
    </div>
    <div class="row col-12">
        @if (Model.Where(x => x.EditorCategory == EditorCategoryEnum.List).Count() > 0)
        {
            <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>List</h4></div>
        }
        @foreach (var item in Model.Where(x => x.EditorCategory == EditorCategoryEnum.List))
        {
            <div class="col-1 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                <h3>@item.Name</h3>
                <h3>@item.ControlType</h3>
                <p onclick="OnEdit('@item.Id')">@item.Name</p>
            </div>
        }
    </div>
    <div class="row col-12">
        @if (Model.Where(x => x.EditorCategory == EditorCategoryEnum.Pickers).Count() > 0)
        {
            <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>Pickers</h4></div>
        }
        @foreach (var item in Model.Where(x => x.EditorCategory == EditorCategoryEnum.Pickers))
        {
            <div class="col-1 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                <h3>@item.Name</h3>
                <h3>@item.ControlType</h3>
                <p onclick="OnEdit('@item.Id')">@item.Name</p>
            </div>
        }
    </div>
    <div class="row col-12">
        @if (Model.Where(x => x.EditorCategory == EditorCategoryEnum.Media).Count() > 0)
        {
            <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>Media</h4></div>
        }
        @foreach (var item in Model.Where(x => x.EditorCategory == EditorCategoryEnum.Media))
        {
            <div class="col-1 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                <h3>@item.Name</h3>
                <h3>@item.ControlType</h3>
                <p onclick="OnEdit('@item.Id')">@item.Name</p>
            </div>
        }
    </div>
    <div class="row col-12">
        @if (Model.Where(x => x.EditorCategory == EditorCategoryEnum.People).Count() > 0)
        {
            <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>People</h4></div>
        }
        @foreach (var item in Model.Where(x => x.EditorCategory == EditorCategoryEnum.People))
        {
            <div class="col-1 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                <h3>@item.Name</h3>
                <h3>@item.ControlType</h3>
                <p onclick="OnEdit('@item.Id')">@item.Name</p>
            </div>
        }
    </div>

    <div class="row col-12">
        @if (Model.Where(x => x.EditorCategory == EditorCategoryEnum.RichContent).Count() > 0)
        {
            <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>RichContent</h4></div>
        }
        @foreach (var item in Model.Where(x => x.EditorCategory == EditorCategoryEnum.RichContent))
        {
            <div class="col-1 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                <h3>@item.Name</h3>
                <h3>@item.ControlType</h3>
                <p onclick="OnEdit('@item.Id')">@item.Name</p>
            </div>
        }
    </div>
</div>

<script type="text/x-kendo-tmpl" id="template">

<div>
    <div class="product">
        @*<img src="@Url.Content("~/shared/web/foods/")#:ProductID#.jpg" alt="#:ProductName# image" />*@
          <img src="/images/profile.jpg" alt="#:Name# image" />
        <h3>#:Name#</h3>
        <h3>#:EditorCategory#</h3>
    
    <p>#:Name#</p>
    </div>
</div>
</script>

<script type="text/javascript">
    function OpenEditType() {
        OpenIframeModal('/cms/configuration/CreateEditorType', 'Create Editor Type', 350, 700);
        
    }

    function OnEdit(id) {
        OpenIframeModal('/cms/configuration/EditEditorType?id='+id, 'Create Editor Type', 350, 700);
    }
</script>