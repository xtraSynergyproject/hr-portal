@{
    ViewData["Title"] = "Settings";
    Layout = null;
}
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model PageViewModel;
 
<style>
    .k-switch-label-off, .k-switch-label-on {
        display: block;
    }

   /* .nav-tabs > li {
        float: left;
        margin-bottom: -1px;
    }

    .nav > li {
        position: relative;
        display: block;
    }
        .nav > li > a {
            position: relative;
            display: block;
            padding: 10px 15px;
        }
    .nav-tabs > li > a {
        margin-right: 2px;
        line-height: 1.42857143;
        border: 1px solid transparent;
        border-radius: 4px 4px 0 0;
    }
    a {
        color: #337ab7;
        text-decoration: none;
    }
    a {
        background-color: transparent;
    }*/
    label {
        display: inline-block;
        margin-bottom: -1.5rem;
        color: grey;
        float: right;
    }

    .float-container {
        border: solid 1px #ccc;
        position: relative;
    }

        .float-container input {
            border: none;
            outline: 0;
        }

    label {
        position: absolute;
    }

    .upload {
    }

    .upload-div .k-button {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
        min-height: 80px !important;
        background-image: url('../../../../images/logo.png') !important;
        background-repeat: no-repeat !important;
        background-position: left !important;
        position: relative !important;
        padding: 0px !important;
    }

        .upload-div .k-button span, .upload-div .k-upload-files, .upload-div .k-upload-status {
            display: none !important;
        }

    .upload-div .k-dropzone {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
    }
    /* .upload-div {
            border: none !important;
            background-color: transparent !important;
            width: 100% !important;
            height: 100% !important;
            background-image: url('../../../../images/logo.png') !important;
            background-repeat: no-repeat;
            background-position: center;
            position: relative;
        }*/

    .card-header {
        padding: 2px !important;
    }

    .k-listview {
        border: none !important;
    }

    .sidenav {
        height: 100%; /* 100% Full-height */
        width: 0; /* 0 width - change this with JavaScript */
        position: fixed; /* Stay in place */
        z-index: 100; /* Stay on top */
        top: 0; /* Stay at the top */
        left: 0;
        background-color: #fff; /* Black*/
        border-right: 1px solid silver;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 30px; /* Place content 60px from the top */
        transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    }



        /* Position and style the close button (top right corner) */
        .sidenav .closebtn {
            position: absolute;
            top: 0;
            right: 15px;
            font-size: 30px;
            font-weight: bold;
            margin-left: 20px;
            color: gray;
            border: none;
            text-decoration: none;
        }

            .sidenav .closebtn:hover {
                color: red;
            }

    /* Style page content - use this if you want to push the page content to the right when you open the side navigation */
    #component-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #editor-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #overlay {
        position: fixed;
        background: rgba(0,0,0,.5);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
        width: 100%;
        height: 100%;
        z-index: 99;
        right: 100%;
        top: 0;
        /*  transition: right .5s ease;*/
    }

    .overlay {
        right: 0 !important;
        /* transition: right .5s ease !important;*/
    }

    .cms-panel-header-name {
        font-size: 16px;
        font-weight: 700;
        padding: 0 10px;
        width: 80%;
    }
    /*Style for switch checkbox*/
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }

    /*Editor Type Style  */
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }

    .product {
        /*float: left;*/
        /*position: relative;*/
        /*width: 111px;*/
        height: 170px;
        margin: 0 0px;
        /*padding: 0;*/
    }

        .product img {
            width: 110px;
            height: 110px;
        }

        .product .div-icon {
            width: 110px;
            height: 110px;
            background-color: #f8f8f8;
        }

            .product .div-icon svg {
                position: relative;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
            }

        .product h3 {
            margin: 0;
            padding: 3px 5px 0 0;
            max-width: 96px;
            overflow: hidden;
            line-height: 1.1em;
            font-size: .9em;
            font-weight: normal;
            text-transform: uppercase;
            color: #999;
        }

        .product p {
            visibility: hidden;
        }

        .product:hover p {
            cursor: pointer;
            visibility: visible;
            position: absolute;
            width: 110px;
            height: 110px;
            top: 0;
            margin: 0;
            padding: 0;
            line-height: 110px;
            vertical-align: middle;
            text-align: center;
            color: #fff;
            background-color: rgba(0,0,0,0.75);
            transition: background .2s linear, color .2s linear;
            -moz-transition: background .2s linear, color .2s linear;
            -webkit-transition: background .2s linear, color .2s linear;
            -o-transition: background .2s linear, color .2s linear;
        }
    /*Editor Type Style Close */
</style>
<script>
    var groupId = 1;
    var cellId = 1;
    var componentId = 1;

    function ToggleNewGroup() {
        $('#new-row-container').toggle('400');
    }
    function DiscardDeleteGroup(e) {
        $(e).parent().hide('slide', { direction: 'right' }, 500);
    }
    function ConfirmDeleteGroup(e) {
        console.log(e);
        var contentId = e.parentNode.parentNode.parentNode.parentNode.id;
        var type = e.parentNode.parentNode.parentNode.parentNode.getAttribute('data-page-content-type');
        //$(e).parent().hide('slide', { direction: 'right' }, 500);
        $.ajax({
            type: "GET",
            url: "/Cms/Content/DeleteContent?id=" + contentId + "&type=" + type,
            dataType: "json",
            success: function (response) {
                $("#" + contentId).remove();
            },
        });
    }
    function DeleteGroup(e) {
        var n = $(e).next();
        if (n.is(':hidden')) {
            n.show('slide', { direction: 'right' }, 500);
        } else {
            n.hide('slide', { direction: 'right' }, 500);
        }
    }
    function OpenSettings(e) {
        //
        //var evt = e;
        //var evt = e.target.id;
        //console.log(evt);
        var sid = e.parentNode.parentNode.id;
        var stype = document.getElementById(sid).getAttribute('data-page-content-type');
        var pid = document.getElementById(sid).getAttribute('data-page-id');
        //alert('open settings');
        //alert("source Id : " + sid + ", Type : " + stype + ", page Id : " + pid);
        //openNavStyle(sid, stype);
        editNavStyle(sid, stype,pid);
    }
    function OpenPageSettings(e) {
        //var evt = e;
        //console.log(evt);
        var sid = e.parentNode.parentNode.id;
        var stype = document.getElementById(sid).getAttribute('data-page-content-type');
        var pid = document.getElementById(sid).getAttribute('id');
        //alert("source Id : " + sid + ", Type : " + stype + ", page Id : " + pid);
        //OpenManageSettings(sid, stype);
        editNavStyle(sid, stype,pid);
    }
    function SetPageSettings(id) {
        //alert(id);
        var pagename = $('#PageName').val();
        var pagetitle = $('#PageTitle').val();
        var pagemenuname = $('#PageMenuName').val();
        var pagehideinmenu = $('#PageHideInMenu').val();
        var pageisrootpage = $('#PageIsRootPage').val();

        document.getElementById(id).setAttribute("data-name", pagename);
        document.getElementById(id).setAttribute("data-title", pagetitle);
        document.getElementById(id).setAttribute("data-menu-name", pagemenuname);
        document.getElementById(id).setAttribute("data-hide-menu", pagehideinmenu);
        document.getElementById(id).setAttribute("data-is-root", pageisrootpage);

        //alert(pagename);
        //alert(pagetitle);
        //alert(pagemenuname);
        //alert(pagehideinmenu);
        //alert(pageisrootpage);
    }
    function openNav() {
        document.getElementById("side-components").style.width = "350px";
        //  $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }
    function openNavEditor() {
        document.getElementById("mySidenavEditor").style.width = "600px";
        $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }
    function openEditor() {
        alert("Hello Editor... ");
    }
    function OnSelectEditor(id) {
        alert("Under Development... ");
    }
    function OnChangeCustomValidation(e) {

        var validation = this.dataItem(e.item);
        if (validation.Id == "Email") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('[a-zA-Z0-9_.+-]+@@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Number") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('^[0-9]*$');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Url") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('https?://[a-zA-Z0-9-.]+.[a-zA-Z]{2,}');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Custom") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('');
            $('#txtCustomValidation').val('');
        } else {
            $('#txtRegularExpresssion').val('');
            $('#txtCustomValidation').val('');
            $('#txtRegularExpresssion').hide();
            $('#txtCustomValidation').hide();

        }
    }
    /* Set the width of the side navigation to 0 */
    function closeNav(sideNav) {
        document.getElementById(sideNav).style.width = "0";
        // $("#overlay").removeClass("overlay");
    }

    function closeNavEditor() {
        document.getElementById("mySidenavEditor").style.width = "0";
        $("#overlay").removeClass("overlay");
        //$('body').removeClass('fadeMe');
    }
    var builder;
    $(document).ready(function () {
         $.ajax({
            type: "GET",
             url: "/Cms/Content/GetPageJsonForm?pageId=@Model.Id",
            success: function (response) {

                if (response != "" && response != null) {
                    var obj = JSON.parse(response);
                    builder = new Formio.FormBuilder(document.getElementById("builder"), obj);
                }
                else {
                    builder = new Formio.FormBuilder(document.getElementById("builder"), {
                        "display": "form",
                        "components": []
                    });
                }

            },
            error: function (response) {
                alert("error");
            },
        });
        InitializeContePlaceHolder();

        $('#txtMandatoryCustomValidation').hide();
        $('#txtRegularExpresssion').hide();
        $('#txtCustomValidation').hide();

        $('#chkFieldMandatory').on('change', function () {
            // From the other examples
            if (this.checked) {
                //alert("checked");
                $('#txtMandatoryCustomValidation').show();
            } else {
                //alert("not checked");
                $('#txtMandatoryCustomValidation').hide();
            }
        });
    });
    function AddNewGroup(type) {
        var gseq = groupId++;
        var gid = GenerateGuid();
        var groupRef = document.getElementById(type).firstElementChild;
        var grp = groupRef.cloneNode(true);
        var gn = $(grp).find('#group-name');
        gn.html(type + ' ' + (gseq));
        gn.attr("id", 'grp-name-' + gid);
        grp.setAttribute("id", gid);
        var seq = groupRef.getAttribute('data-sequence');
        seq = eval(seq) + 1;
        groupRef.setAttribute("data-sequence", seq);
        grp.setAttribute("data-sequence", seq);
        document.getElementById("groups").appendChild(grp);
        $('.column', $('#' + gid)).each(function () {
            $(this).attr("id", GenerateGuid());
            $(this).attr("data-parent-id", gid);
        });
    }
    function AddComponent(type, target) {
        switch (type) {
            case "RichText":
                AddRichText(type, target);
                break;
            default:
        }
    }
    function AddRichText(type, target) {
        var t = $(target);
        var cellId = GenerateGuid();
        var cellRef = document.getElementById('dummy-' + type).firstElementChild;
        var cell = cellRef.cloneNode(true);
        var cn = $(cell).find('#comp-name');
        cn.html('Rich Text Box ' + (componentId++));
        cn.attr("id", 'comp-name-' + (cellId));

        var seq = cellRef.getAttribute('data-sequence');
        seq = eval(seq) + 1;
        cellRef.setAttribute("data-sequence", seq);
        cell.setAttribute("data-sequence", seq);
        cell.setAttribute("data-parent-id", target.parentElement.id);
        cell.setAttribute("id", cellId);

        var compId = GenerateGuid();
        var control = $(cell).find('#component');
        control.attr("id", compId);
        control.attr("data-component-type", "RichText");
        control.attr("data-parent-id", cellId);
        t.before(cell);
        CreateRichTextBox($('#' + compId));
    }
    function CreateRichTextBox(id) {
        id.kendoEditor({
            stylesheets: [
                "../content/shared/styles/editor.css",
            ],
            tools: [
                "bold",
                "italic",
                "underline",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "insertUnorderedList",
                "createLink",
                "unlink",
                "insertImage",
                "tableWizard",
                "createTable",
                "addRowAbove",
                "addRowBelow",
                "addColumnLeft",
                "addColumnRight",
                "deleteRow",
                "deleteColumn",
                "mergeCellsHorizontally",
                "mergeCellsVertically",
                "splitCellHorizontally",
                "splitCellVertically",
                //"formatting",
                //{
                //    name: "fontName",
                //    items: [
                //        { text: "Andale Mono", value: "Andale Mono" },
                //        { text: "Arial", value: "Arial" },
                //        { text: "Arial Black", value: "Arial Black" },
                //        { text: "Book Antiqua", value: "Book Antiqua" },
                //        { text: "Comic Sans MS", value: "Comic Sans MS" },
                //        { text: "Courier New", value: "Courier New" },
                //        { text: "Georgia", value: "Georgia" },
                //        { text: "Helvetica", value: "Helvetica" },
                //        { text: "Impact", value: "Impact" },
                //        { text: "Symbol", value: "Symbol" },
                //        { text: "Tahoma", value: "Tahoma" },
                //        { text: "Terminal", value: "Terminal" },
                //        { text: "Times New Roman", value: "Times New Roman" },
                //        { text: "Trebuchet MS", value: "Trebuchet MS" },
                //        { text: "Verdana", value: "Verdana" },
                //    ]
                //},
                "fontSize",
                "foreColor",
                "backColor",
            ]
        });
    }
    // $('.splitter-container').SplitterBar();
    var splitter = $('.splitter-container').height(200).split({
        orientation: 'vertical',
        limit: 10,
        position: '20%', // if there is no percentage it interpret it as pixels
        onDrag: function (event) {
            console.log(splitter.position());
        }
    });
    function ReloadTab() {
         
    }
    function SetTabControls(index, select) {
        var tabStrip = $("#tabstrip").data("kendoTabStrip");
        if (select) {
            tabStrip.select(index);
        }
    }
    function onTabSelect1(e) {
        SetTabControls($(e.item).index(), false);
    }
    function OnSelect(e) {
        e.preventDefault();


    }
    function OpenIframeModal(url, title) {
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: title, Width: 700, Height: 350 });
        return false;
    }

    function componentDrag(ev) {
        //alert(ev.target.data('type'));
        ev.dataTransfer.setData("text", ev.target.id);
    }
    function componentDrop(ev, el) {
        ev.preventDefault();
        var type = ev.dataTransfer.getData("text");
        AddComponent(type, el);
        //ev.target.appendChild(document.getElementById(data));
    }
    function componentDragOver(ev) {
        ev.preventDefault();
    }
    //function RemovespecailChar()
    //{
    //    var txt = $("#pagetitle").val();
    //    txt = txt.replace(/[^A-Z0-9]/ig, "");
    //    $("#generatelbl").html(txt);
    //}
    $("#pagetitle").on('input', function () {
        @*if ('@Model.DataAction' == '@DataActionEnum.Create')
        {*@
            var txt = $("#pagetitle").val();
            txt = txt.replace(/[^A-Z0-9]/ig, "");
            $("#generatelbl").html(txt);
        //}
    });
</script>

@*<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">*@
<div class="row card-header pad-20 no-gutters">
    <div class="col-sm-1">
        <button type="button" class="btn" style="width: 68%; height: 94%; border: 1px solid transparent; border-color: #dee2e6; background-color: #fff;" onclick="openNavForIcon()">
            @if (Model.DataAction == DataActionEnum.Edit && Model.IconCss != "")
            {
                <i class="@Model.IconCss" style="font-size:35px;color:@Model.IconColor" id="pageicon" data-type="@Model.IconCss"></i>
            }
            else
            {
                <i class="fal fa-file" style="font-size:35px" id="pageicon" data-type="fal fa-file"></i>
            }

        </button>
    </div>
    <div class="float-container col-sm-7" style="margin-left:-21px;">
        <input type="text" class="form-control" id="pagetitle" value="@Model.Title" />
        <label id="generatelbl" class="float-right" for="pagetitle" style="position:unset;padding-right:5px;padding-top:3px;font-size:small;">@Model.Name</label>
    </div>
    <div class="container col-sm-4">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item"><a data-toggle="tab" href="#design" class="nav-link active" role="tab" aria-controls="design" aria-selected="true"><i class="fas fa-pencil-paintbrush" style="margin-left:15px;"></i><br/>Design</a></li>
            <li class="nav-item"><a data-toggle="tab" href="#settings" class="nav-link" aria-controls="settings" aria-selected="false"><i class="fas fa-cog" style="margin-left:18px;"></i><br />Settings</a></li>
            <li class="nav-item"><a data-toggle="tab" href="#pageCss" class="nav-link" aria-controls="pageCss" aria-selected="false"><i class="fab fa-css3" style="margin-left:3px;"></i><br />Css</a></li>
            <li class="nav-item"><a data-toggle="tab" href="#permissions" class="nav-link" aria-controls="permissions" aria-selected="false"><i class="fas fa-key" style="margin-left:32px;"></i><br />Permissions</a></li>
        </ul>

    </div>
</div>
<div class="text-danger" asp-validation-summary="All"></div>
<div class="tab-content">
    @**@
    <div id="design" class="tab-pane  in active" role="tabpanel" aria-labelledby="design-tab">
        <div class="pad-15 no-gutters">
            <div class="pad-b-15 card col-12 page" data-mode="@Model.DataAction" id="@Model.Id" data-parent-id="@Model.ParentId" data-page-content-type="Page" data-portal-id="@Model.PortalId"
                 data-sequence="@Model.SequenceOrder" data-menu-name="@Model.MenuName" data-hide-menu="@Model.HideInMenu" data-is-root="@Model.IsRootPage" data-name="@Model.Name">
                <div class="card-header page-header bg-info">
                    <span id="page-name" class="page-title content-editable" data-placeholder="Page Name" style="padding-left:3px" contenteditable="true">
                        @Model.Title
                    </span>
                    <span class="cms-settings-box" onclick="OpenPageSettings(this)">
                        <i class="cursor-p fa fa-cog" title="Settings"></i>
                    </span>

                </div>
                <div class="card-body" id="component-container">
                    <div id="builder"></div>
                </div>
            </div>
        
                @*<div class="pad-b-15 card col-12 page" data-mode="@Model.DataAction" id="@Model.Id" data-parent-id="@Model.ParentId" data-page-content-type="Page" data-portal-id="@Model.PortalId"
             data-sequence="@Model.SequenceOrder" data-menu-name="@Model.MenuName" data-hide-menu="@Model.HideInMenu" data-is-root="@Model.IsRootPage" data-name="@Model.Name">
            <div class="card-header page-header bg-info">
                <span id="page-name" class="page-title content-editable" data-placeholder="Page Name" style="padding-left:3px" contenteditable="true">
                    @Model.Title
                </span>
                <span class="cms-settings-box" onclick="OpenPageSettings(this)">
                    <i class="cursor-p fa fa-cog" title="Settings"></i>
                </span>

            </div>
            <div class="card-body" id="component-container">
                <div id="groups" class="groups">
                    @if (Model.Groups != null)
                    {
                        foreach (var group in Model.Groups)
                        {
                            <div class="cms-group card group" id="@group.Id" data-mode="@group.DataAction.ToString()" data-type="@group.PageRowType.ToString()" data-page-content-type="Group" data-sequence="@group.SequenceOrder" data-parent-id="@group.ParentId" data-page-id="@group.PageId">
                                <div class="group-header card-header bg-secondary">
                                    <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
                                        @group.Title
                                    </span>
                                    <span class="cms-delete-box">
                                        <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                                        <span class="cms-delete-confirm-box">
                                            <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                                            <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                                        </span>

                                    </span>

                                </div>
                                <div class="card-body">
                                    <div class="row no-gutters cms-components">
                                        @foreach (var col in Model.Columns.Where(x => x.ParentId == group.Id))
                                        {
                                            <div class="@col.CssClass row no-gutters column" data-css-class="@col.CssClass" id="@col.Id" data-mode="@col.DataAction.ToString()" data-page-content-type="Column" data-sequence="@col.SequenceOrder" data-page-id="@col.PageId" data-parent-id="@col.ParentId">
                                                @foreach (var cell in Model.Cells.Where(x => x.ParentId == col.Id))
                                                {
                                                    <div class="cms-component card col-12 cell" id="@cell.Id" data-mode="@cell.DataAction.ToString()" data-page-content-type="Cell" data-sequence="@cell.SequenceOrder" data-page-id="@cell.PageId" data-parent-id="@cell.ParentId">
                                                        <div class="component-header bg-light card-header">
                                                            <span id="comp-name" class="component-title content-editable" data-placeholder="Component Name" style="padding-left:3px" contenteditable="true">
                                                                @cell.Title
                                                            </span>
                                                            <span class="cms-settings-box" onclick="OpenSettings(this)">
                                                                <i class="cursor-p fa fa-cog" title="Settings"></i>
                                                            </span>
                                                            <span class="cms-delete-box">
                                                                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete Component"></i>
                                                                <span class="cms-delete-confirm-box">
                                                                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                                                                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                                                                </span>
                                                            </span>
                                                        </div>
                                                        <div class="card-body component" id="component-container">
                                                            @foreach (var comp in Model.Components.Where(x => x.ParentId == cell.Id))
                                                            {
                                                                switch (comp.ComponentType.Value)
                                                                {
                                                                    case ComponentTypeEnum.RichText:
                                                                        @(Html.Kendo().Editor()
                                                                      .Name(comp.Id)
                                                                      .HtmlAttributes(new {rows = "5", style = "width:100%; height:100%", data_page_content_type = "Component",data_mode=comp.DataAction.ToString(),data_page_id=comp.PageId,data_sequence=comp.SequenceOrder,data_component_type= comp.ComponentType})
                                                                      .StyleSheets(css => css
                                                                        .Add(Url.Content("~/lib/kendo/editor/editorStyles.css"))
                                                                      )
                                                                      .Tools(tools => tools
                                                                            .Clear()
                                                                            .Bold().Italic().Underline().Strikethrough()
                                                                            .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                                                                            .InsertUnorderedList().InsertOrderedList()
                                                                            .Outdent().Indent()
                                                                            .CreateLink().Unlink()
                                                                            .InsertImage()
                                                                            .InsertFile()
                                                                            .SubScript()
                                                                            .SuperScript()
                                                                            .TableEditing()
                                                                            .ViewHtml()
                                                                            .Formatting()
                                                                            .CleanFormatting()
                                                                            .FormatPainter()
                                                                            .FontName()
                                                                            .FontSize()
                                                                            .ForeColor().BackColor()

                                                                        ).Value(comp.Content)
                                                                      )

                                                                        break;
                                                                    case ComponentTypeEnum.Image:
                                                                        break;
                                                                    case ComponentTypeEnum.Form:
                                                                        break;
                                                                    case ComponentTypeEnum.Heading:
                                                                        break;
                                                                    case ComponentTypeEnum.Action:
                                                                        break;
                                                                    default:
                                                                        break;
                                                                }
                                                            }

                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }

                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>

                <div class="card cms-new-group">
                    <div class="row">
                        <div class="col-12 pad-t-b-10" style="text-align:center;color:gray;justify-content:center;">
                            <i class="fa fal fa-2x fa-plus-circle" style="cursor:pointer;" onclick="ToggleNewGroup();"></i>
                        </div>
                        <div class="col-12 row pad-15" id="new-row-container" style="display:none;margin-left:0px;margin-right:0px;">
                            <div class="col-3 row no-gutters">
                                <div class="col-12 row no-gutters new-row-item" onclick="AddNewGroup('FullWidth')">
                                    <div class="col-12 new-row-cell">&nbsp;</div>
                                </div>
                                <div class="col-12">Full Width</div>
                            </div>
                            <div class="col-3 row no-gutters">
                                <div class="col-12 row no-gutters new-row-item" onclick="AddNewGroup('Article')">
                                    <div class="col-3 new-row-cell">&nbsp;</div>
                                    <div class="col-9 new-row-cell">&nbsp;</div>
                                </div>
                                <div class="col-12">Article</div>
                            </div>
                            <div class="col-3 row no-gutters">
                                <div class="col-12 row no-gutters new-row-item" onclick="AddNewGroup('TwoColumns')">
                                    <div class="col-6 new-row-cell">&nbsp;</div>
                                    <div class="col-6 new-row-cell">&nbsp;</div>
                                </div>
                                <div class="col-12">Two Columns</div>
                            </div>
                            <div class="col-3 row no-gutters">
                                <div class="col-12 row no-gutters new-row-item" onclick="AddNewGroup('ThreeColumns')">
                                    <div class="col-4 new-row-cell">&nbsp;</div>
                                    <div class="col-4 new-row-cell">&nbsp;</div>
                                    <div class="col-4 new-row-cell">&nbsp;</div>
                                </div>
                                <div class="col-12">Three Columns</div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>*@
            </div>
    </div>
    <div id="settings" class="tab-pane " role="tabpanel" aria-labelledby="settings-tab">
        <form asp-controller="Content" class="form-horizontal">
            <div class="row" style="padding:10px;">
                <div class="form-group row col-12 pad-15">
                    <div class="col-3 pad-15">
                        <label for="MenuName">Menu Name</label>
                    </div>
                    <div class="col-9 pad-15">
                        <input asp-for="MenuName" type="text" class="form-control" placeholder="Enter Menu Name" autocomplete="off" />
                    </div>
                </div>
                <div class="form-group row col-12 pad-15">
                    <div class="col-3 pad-15">
                        <label for="MenuName">Sequence Order</label>
                    </div>
                    <div class="col-9 pad-15">
                        <input asp-for="SequenceOrder" type="number" class="form-control" placeholder="Enter Sequence Order" autocomplete="off" />
                    </div>
                </div>
                <div class="form-group row col-12 pad-15">
                    <div class="col-3 pad-15">
                        <label for="HideInMenu">Allow as Hidden</label>
                    </div>
                    <div class="col-9 pad-15">

                        @(Html.Kendo().SwitchFor(x=>x.HideInMenu)

                .Messages(c => c.Checked("YES").Unchecked("NO"))
    )
                    </div>
                </div>
                <div class="form-group row col-12 pad-15">
                    <div class="col-3 pad-15">
                        <label for="IsRootPage">Allow as Root</label>
                    </div>
                    <div class="col-9 pad-15">

                        @(Html.Kendo().SwitchFor(x=>x.IsRootPage)

        .Messages(c => c.Checked("YES").Unchecked("NO"))
    )
                    </div>
                </div>
                <div class="form-group row col-12 pad-15">
                    <div class="col-3 pad-15">
                        <label for="IsRootPage">Page Active</label>
                    </div>
                    <div class="col-9 pad-15">

                        @(Html.Kendo().SwitchFor(x=>x.PageStatus)

        .Messages(c => c.Checked("YES").Unchecked("NO"))
    )
                    </div>
                </div>
                @*<div class="col-12 pad-15"> </div>*@
            </div>
        </form>
    </div>
    <div id="pageCss" class="tab-pane " role="tabpanel" aria-labelledby="pageCss-tab">
        <form asp-controller="Content" class="form-horizontal">
            <div class="row" style="padding:10px;">
                <div class="form-group row col-12 pad-15">
                    <div class="col-3 pad-15">
                        <label for="Css">Page Css</label>
                    </div>
                    <div class="col-9 pad-15">
                        <textarea asp-for="Css" id="pageCss" class="form-control"></textarea>
                    </div>
                </div>
            </div>
        </form>
    </div>
    <div id="permissions" class="tab-pane " role="tabpanel" aria-labelledby="permissions-tab">

        <div>
            <div class="left pad-l-t-15">
                @*<h5>Content</h5>*@
                <div class="row">
                    <div class="col-sm-6">
                        @*@(Html.Kendo().TreeView().Checkboxes(checkboxes => checkboxes
                .Name("checkedFiles")
                .CheckChildren(true)
                .Template("<span class='k-checkbox-wrapper'><input class='k-checkbox' name='checkedFiles#=item.id#' type='checkbox' value='true' #= item.Checked ? 'checked' : '' #  aria-label='#=item.text#' /></span>")
            )
             //.Events(events => events
             //   .Check("onCheck")
           // )
        .Name("treeview")
        //.Events(e=>e.Select("OnSelect"))
        .DataTextField("Name")
        .TemplateId("ct-tv-template")
        .DataSource(dataSource => dataSource
            .Read(read => read
                .Action("ReadPermissionData", "PagePermission",new { @area="Cms",portalId=Model.PortalId})
            )
        )
    )*@
                    </div>
                    <div class="col-sm-6">
                        @*@(Html.Kendo().TreeView().Checkboxes(checkboxes => checkboxes
                .Name("checkedFiles1")
                .CheckChildren(true)
                .Template("<span class='k-checkbox-wrapper'><input class='k-checkbox' name='checkedFiles1#=item.id#' type='checkbox' value='true' #= item.Checked ? 'checked' : '' #  aria-label='#=item.text#' /></span>")
            )

        .Name("treeviewgroup")
        //.Events(e=>e.Select("OnSelect"))
        .DataTextField("Name")
        .TemplateId("ct-tv-template")
        .DataSource(dataSource => dataSource
            .Read(read => read
                .Action("ReadGroupPermissionData", "PagePermission",new { @area="Cms",portalId=Model.PortalId})
            )
        )
    )*@
                    </div>
                </div><br />

                <script id="ct-tv-template" type="text/kendo-ui-template">
                    <span style="width:100%">   #: item.Name #</span>
                    <span data-id="#:item.id#" data-parent-id="#:item.ParentId#" class="tree-menu"><i class="fa fa-ellipsis-h"></i></span>

                </script>
                <div class="row">
                    <input type="button" class="btn btn-primary" value="Save" onclick="OnSavePermision()" />
                </div>
            </div>

        </div>


    </div>
</div>




<div id="FullWidth" style="display:none;">
    <div class="cms-group card group" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-type="FullWidth" data-page-content-type="Group" data-sequence="0" data-parent-id="@Model.Id" data-page-id="@Model.Id">
        <div class="group-header card-header bg-secondary">
            <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
            </span>
            <span class="cms-delete-box">
                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                <span class="cms-delete-confirm-box">
                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                </span>

            </span>

        </div>
        <div class="card-body">
            <div class="row no-gutters cms-components">
                <div class="col-12 row no-gutters column" data-css-class="col-12" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="Article" style="display:none;">
    <div class="cms-group card group" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-type="Article" data-page-content-type="Group" data-sequence="0" data-parent-id="@Model.Id" data-page-id="@Model.Id">
        <div class="group-header card-header bg-secondary">
            <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
            </span>
            <span class="cms-delete-box">
                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                <span class="cms-delete-confirm-box">
                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                </span>

            </span>

        </div>
        <div class="card-body">
            <div class="row no-gutters cms-components">
                <div class="col-3 row no-gutters column" data-css-class="col-3" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
                <div class="col-9 row no-gutters column" data-css-class="col-9" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div id="TwoColumns" style="display:none;">
    <div class="cms-group card group" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-type="TwoColumns" data-page-content-type="Group" data-sequence="0" data-parent-id="@Model.Id" data-page-id="@Model.Id">
        <div class="group-header card-header bg-secondary">
            <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
            </span>
            <span class="cms-delete-box">
                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                <span class="cms-delete-confirm-box">
                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                </span>

            </span>

        </div>
        <div class="card-body">
            <div class="row no-gutters cms-components">
                <div class="col-6 row no-gutters column" data-css-class="col-6" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
                <div class="col-6 row no-gutters column" data-css-class="col-6" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="ThreeColumns" style="display:none;">
    <div class="cms-group card group" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-type="ThreeColumns" data-page-content-type="Group" data-sequence="0" data-parent-id="@Model.Id" data-page-id="@Model.Id">
        <div class="group-header card-header bg-secondary">
            <span id="group-name" class="content-editable" data-placeholder="Group Name" style="padding-left:3px" contenteditable="true">
            </span>
            <span class="cms-delete-box">
                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                <span class="cms-delete-confirm-box">
                    <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                </span>
            </span>

        </div>
        <div class="card-body">
            <div class="row no-gutters cms-components">
                <div class="col-4 row no-gutters column" data-css-class="col-4" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
                <div class="col-4 row no-gutters column" data-css-class="col-4" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
                <div class="col-4 row no-gutters column" data-css-class="col-4" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-content-type="Column" data-sequence="1" data-page-id="@Model.Id">
                    <div class="col-12 card bg-light cms-new-property" onclick="openNav()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                        <i class="drag-text">Click here to drag and drop component</i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div id="dummy-component" style="display:none;">
    <div id="dummy-RichText">
        <div class="cms-component card col-12 cell" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-page-content-type="Cell">
            <div class="component-header bg-light card-header">
                <span id="comp-name" class="component-title content-editable" data-placeholder="Component Name" style="padding-left:3px" contenteditable="true">
                </span>
                <span class="cms-settings-box" onclick="OpenSettings(this)">
                    <i class="cursor-p fa fa-cog" title="Settings"></i>
                </span>
                <span class="cms-delete-box">
                    <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete Component"></i>
                    <span class="cms-delete-confirm-box">
                        <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                        <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                    </span>
                </span>

            </div>
            <div class="card-body component" id="component-container">
                <textarea id="component" rows="5" style="width:100%; height:100%" aria-label="editor" data-page-content-type="Component" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-sequence="1"></textarea>
            </div>
        </div>
    </div>
    <div id="dummy-Image">
        <div class="cms-component card col-12 cell" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-page-content-type="Cell">
            <div class="component-header bg-light card-header">
                <span id="comp-name" class="component-title content-editable" data-placeholder="Component Name" style="padding-left:3px" contenteditable="true">
                </span>
                <span class="cms-settings-box" onclick="OpenSettings(this)">
                    <i class="cursor-p fa fa-cog" title="Settings"></i>
                </span>
                <span class="cms-delete-box">
                    <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete Component"></i>
                    <span class="cms-delete-confirm-box">
                        <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                        <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                    </span>
                </span>

            </div>
            <div class="card-body component" id="component-container">
                <textarea id="component" rows="5" style="width:100%; height:100%" aria-label="editor" data-page-content-type="Component" data-mode="@Synergy.App.Common.DataActionEnum.Create.ToString()" data-page-id="@Model.Id" data-sequence="1"></textarea>
            </div>
        </div>
    </div>
    <div id="dummy-Heading">
        <h3> <input type="tel" /></h3>
    </div>
    <div id="dummy-Action">
        <a href="#">Action</a>
    </div>
</div>
<div id="component-div">
    <div id="side-components" class="sidenav">
        <h1 class="cms-panel-header-name">Add Components</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav('side-components')" title="Close">&times;</a>
        <hr />
        <div class="row pad-20">
            <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="RichText">
                <i class="fa fas fa-edit"></i>&nbsp;Rich Text Editor
            </div>
            <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="Image">
                <i class="fa fas fa-image"></i>&nbsp;Image
            </div>
            <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="Form">
                <i class="fa fas fa-file-alt"></i>&nbsp;Form
            </div>
            <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="Heading">
                <i class="fa fas fa-heading"></i>&nbsp;Heading
            </div>
            <div class="col-12 pad-15 page-component" draggable="true" ondragstart="componentDrag(event)" id="RichText">
                <i class="fa fas fa-link"></i>&nbsp;Action
            </div>

        </div>
        <hr />
        <div class="cms-slidebar-footer">
            <input type="button" class="btn btn-link" value="Close" onclick="closeNav('side-components')" />
            @*<input type="button" class="btn btn-primary" value="Save" />*@
        </div>
    </div>

</div>
<div id="page-icon-div">
    <div id="mySidenavPageIcon" class="sidenav">
        <h1 class="cms-panel-header-name">Page Icon</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNavIcon()" title="Close">&times;</a>
        <hr />
        <div id="page-icon" class="row pad-20 slidenav-flow">

        </div>
    </div>
</div>
<div class="cms-footer">
    <input type="button" class="btn btn-link" value="Save and Preview" onclick="OnSave('Preview')" />
    <input type="button" class="btn btn-success" value="Save and Publish" onclick="OnSave('Publish')" />
    <input type="button" class="btn btn-primary" value="Save" onclick="OnSave()" />
</div>
@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.DataAction)
@Html.HiddenFor(x => x.IconColor)
@Html.HiddenFor(x => x.IconCss)
@Html.HiddenFor(x => x.Level)
<script>
    function OnSave(Statetype) {
        var IsHidden = $("#HideInMenu").data("kendoSwitch");
        var IsRootPage = $("#IsRootPage").data("kendoSwitch");
        var PageStatus = $("#PageStatus").data("kendoSwitch");
        var Status = "Inactive";
        if (PageStatus.check())
        {
            Status = "Active";
        }
        //
        //return;
        var Jsondata = [];
        if ($("#pagetitle").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Page Title is required");
            return;
        }
        else
        {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }
          // // Page data
        var page = {};
        page.Title = $("#pagetitle").val(); //document.getElementById('page-name').innerText;//$("#page-name")[0].innerText;
        page.Name = $("#generatelbl").html();
        page.Id = '@Model.Id';
        page.Css = $("#PageCss").val();
        page.ParentId = '@Model.ParentId';
        page.PortalId = document.getElementById('page-name').parentNode.parentNode.getAttribute('data-portal-id');
        page.DataAction = '@Model.DataAction';
        page.PageContentType = "Page";
        page.IconColor = $("#IconColor").val();
        page.SequenceOrder = $("#SequenceOrder").val();
        page.IconCss = $("#IconCss").val();
        page.MenuName = $("#MenuName").val();//document.getElementById('page-name').parentNode.parentNode.getAttribute('data-menu-name');
        page.HideInMenu = IsHidden.check();//document.getElementById('page-name').parentNode.parentNode.getAttribute('data-hide-menu');
        page.IsRootPage = IsRootPage.check();//document.getElementById('page-name').parentNode.parentNode.getAttribute('data-is-root');
        page.PageStatus = Status;
        page.Groups = [];
        page.Columns = [];
        page.Cells = [];
        page.Components = [];
        page.JsonForm = JSON.stringify(builder.instance.schema, null, 4);
        Jsondata.push(page);
        //var pageContents = document.getElementById('groups');
        //if (pageContents != undefined) {
        //    var childelements = pageContents.children;
        //      // // Group data
        //    if (childelements.length > 0) {
        //        for (var i = 0; i < childelements.length; i++) {
        //            var obj = {};
        //            var id = childelements[i].id;
        //            obj.Id = id;
        //            obj.Title = childelements[i].children[0].children[0].innerText;// $("#grp-name-" + id).html();
        //            obj.SequenceOrder = childelements[i].getAttribute("data-sequence");
        //            obj.ParentId = childelements[i].getAttribute('data-parent-id');
        //            obj.DataAction = childelements[i].getAttribute("data-mode");
        //            obj.PageContentType = childelements[i].getAttribute("data-page-content-type");
        //            obj.PageRowType = childelements[i].getAttribute("data-type");
        //            obj.PageId = childelements[i].getAttribute("data-page-id");
        //            obj.CssClass = childelements[i].getAttribute("data-css-class");
        //            Jsondata[0].Groups.push(obj);
        //              // // Column data
        //            var columns = childelements[i].getElementsByClassName('cms-components')[0].children;
        //            for (var j = 0; j < columns.length; j++) {
        //                var groupname = columns[j].getAttribute('data-page-content-type');
        //                var col = {};
        //                col.PageContentType = groupname;
        //                col.ParentId = columns[j].getAttribute('data-parent-id');
        //                col.PageId = columns[j].getAttribute('data-page-id');
        //                col.SequenceOrder = columns[j].getAttribute('data-sequence');
        //                col.DataAction = columns[j].getAttribute('data-mode');
        //                col.Id = columns[j].getAttribute('id');
        //                col.CssClass = columns[j].getAttribute("data-css-class");
        //                Jsondata[0].Columns.push(col);

        //                var components = columns[j].children;
        //                // // Cell data
        //                for (var k = 0; k < components.length; k++) {
        //                    if (components[k].getAttribute("id") != null && components[k].getAttribute("id") != "" && components[k].getAttribute("id") != undefined)
        //                    {
        //                        var cell = {};
        //                        cell.PageContentType = components[k].getAttribute("data-page-content-type");
        //                        cell.Id = components[k].getAttribute("id");
        //                        cell.PageId = components[k].getAttribute('data-page-id');
        //                        cell.ParentId = columns[j].getAttribute('id');
        //                        var mode = components[k].getAttribute('data-mode');
        //                        cell.CssClass = components[k].getAttribute("data-css-class");
        //                        cell.DataAction = mode;
        //                        cell.SequenceOrder = components[k].getAttribute('data-sequence');
        //                        cell.Title = components[k].children[0].innerText;
        //                        Jsondata[0].Cells.push(cell);
        //                        // Components data
        //                        var obj1 = {};
        //                        //obj1.Title = components[k].children[0].innerText;
        //                        var textarea = components[k].children[1].getElementsByTagName('textarea');
        //                        obj1.DataAction = textarea[0].getAttribute('data-mode');
        //                        obj1.Id = textarea[0].id;
        //                        obj1.PageContentType = textarea[0].getAttribute("data-page-content-type");
        //                        obj1.ComponentType = textarea[0].getAttribute('data-component-type');
        //                        obj1.PageId = textarea[0].getAttribute('data-page-id');
        //                        obj1.CssClass = textarea[0].getAttribute("data-css-class");
        //                        obj1.SequenceOrder = textarea[0].getAttribute('data-sequence');
        //                        if (obj1.ComponentType == "RichText") {
        //                            var editor = $("#" + obj1.Id).data("kendoEditor");
        //                            console.log(editor.value());
        //                            obj1.Content = editor.value();
        //                        }
        //                        obj1.ParentId = cell.Id;
        //                        Jsondata[0].Components.push(obj1);
        //                    }
        //                }
        //            }
        //            console.log(JSON.stringify(Jsondata));
        //        }
        //    }
        //}
        if (IsRootPage.check()) {
            kendo.confirm("You choose to mark this page as root, other root page will then be removed as root page.Please Confirm?").then(function () {
                SaveData(Jsondata, Statetype);
            }, function () {

            });
        }
        else
        {
            SaveData(Jsondata, Statetype);
        }
        @*ShowLoader($("#page-content"));
        $.ajax({
                        type: "POST",
                        url: "/Cms/Content/ManagePage",
                        data: { data: JSON.stringify(Jsondata[0])},
                        dataType: "json",
                        success: function (response)
                        {
                            if (response.success == true) {
                                LoadPartailView('@Url.Action("EditPage", "Content", new { @area="Cms"})?pageId=' + response.result.Id, $('#page-content'));
                            }
                            else
                            {
                                $(".text-danger").removeClass("validation-summary-valid");
                                $(".text-danger").addClass("validation-summary-errors");
                                var msg = ExtractError(response.errors);
                                $(".text-danger").html(msg);
                                HideLoader($("#page-content"));
                            }
                            // HideLoader(document.getElementsByTagName("body"));
                        },
                        error: function (response) {
                            alert("error");
                            HideLoader($("#page-content"));
                        },
                    });*@
        return false;
    }
    function SaveData(Jsondata, Statetype)
    {
        alert(Statetype);
        ShowLoader($("#page-content"));
        $.ajax({
                        type: "POST",
                        url: "/Cms/Content/ManagePage",
            data: {
                data: JSON.stringify(Jsondata[0]),
                state: Statetype
            },
                        dataType: "json",
                        success: function (response)
                        {
                            if (response.success == true) {
                                if (Statetype == "Preview") {
                                    // redirect to preview page
                                    HideLoader($("#page-content"));
                                     LoadPartailView('@Url.Action("EditPage", "Content", new { @area="Cms"})?pageId=' + response.result.Id, $('#page-content'));
                                    window.open("/Cms/" + response.result.Portal.Name + "/" + response.result.Name , '_blank');
                                }
                                else if (Statetype == "Publish") {
                                    // Show published message as well
                                    LoadPartailView('@Url.Action("EditPage", "Content", new { @area="Cms"})?pageId=' + response.result.Id, $('#page-content'));
                                }
                                else
                                {
                                    LoadPartailView('@Url.Action("EditPage", "Content", new { @area="Cms"})?pageId=' + response.result.Id, $('#page-content'));
                                }
                            }
                            else
                            {
                                $(".text-danger").removeClass("validation-summary-valid");
                                $(".text-danger").addClass("validation-summary-errors");
                                var msg = ExtractError(response.errors);
                                $(".text-danger").html(msg);
                                HideLoader($("#page-content"));
                            }
                            // HideLoader(document.getElementsByTagName("body"));
                        },
                        error: function (response) {
                            alert("error");
                            HideLoader($("#page-content"));
                        },
                    });
    }

    function openNavForIcon() {
        document.getElementById("mySidenavPageIcon").style.width = "450px";
        LoadPartailView('@Url.Action("SelectPageIcon", "Content", new { @area="Cms"})?iconCss=' + $("#pageicon").attr("data-type") + "&iconColor=" + $("#pageicon").css("color"), $('#page-icon'));
        $("#overlay").addClass("overlay");

    }
    function closeNavIcon() {
        document.getElementById("mySidenavPageIcon").style.width = "0";
        $("#overlay").removeClass("overlay");
    }
    function OnIconPropertySubmit(iconname,iconcolor) {
        $("#IconCss").val(iconname);
        $("#IconColor").val(iconcolor);
        $("#pageicon").attr("data-type", iconname);
        $("#pageicon").removeAttr("class");
        $("#pageicon").addClass(iconname);
        $("#pageicon").css("color", iconcolor);
        document.getElementById("mySidenavPageIcon").style.width = "0";
        $("#overlay").removeClass("overlay");
    }
    function Permission() {
       
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("PagePermission", "PagePermission", new { @area="Cms"})?portalId=@Model.PortalId&pageId=@Model.Id';
        win.OpenWindow({ Title: 'Permission', Width: 450, Height: 1200 });
        return false;

    }
     // function that gathers IDs of checked nodes
    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }

            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }



    // show checked node IDs on datasource change
    function onCheck() {
        var checkedNodes = [],
            treeView = $("#treeview").data("kendoTreeView"),
            message;

        checkedNodeIds(treeView.dataSource.view(), checkedNodes);

        if (checkedNodes.length > 0) {
            message = "IDs of checked nodes: " + checkedNodes.join(",");
        } else {
            message = "No nodes checked.";
        }
        $("#result").html(message);
    }
   function OnSavePermision() {

       var checkedNodes = [],
           checkedNodes1 = [],
           treeView = $("#treeview").data("kendoTreeView"),
           treeviewgroup = $("#treeviewgroup").data("kendoTreeView"),
           message, message1;

       checkedNodeIds(treeView.dataSource.view(), checkedNodes);
       if (checkedNodes.length > 0) {
           message = checkedNodes.join(",");
       }

       checkedNodeIds(treeviewgroup.dataSource.view(), checkedNodes1);
       if (checkedNodes1.length > 0) {
           message1 = checkedNodes1.join(",");
       }


        $.ajax({
            type: "POST",
            url: "/Cms/PagePermission/ManagePagePermission",
            data: { data: message, groupdata: message1,pageId:'@Model.Id',portalId:'@Model.PortalId'},
            dataType: "json",
            success: function (response)
            {

                alert(response);
            },
            error: function (response) {

                alert("error");
            },
        });

        return false;
    }
    function ExtractError(err, exludeLi) {
        var msg = "";
        $.each(err, function (key, value) {

            $.each(value, function (key1, value1) {
                $.each(value1, function (key2, value2) {
                    if (exludeLi) {
                        msg += value2 + "\n";
                    }
                    else {
                        msg += "<li>" + value2 + "</li>";
                    }

                });

            });
        });
        return msg;
    }
</script>





