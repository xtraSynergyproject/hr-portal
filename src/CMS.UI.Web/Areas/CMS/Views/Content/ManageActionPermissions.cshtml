@using Kendo.Mvc.UI;
@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Portal";
    //Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
    //Layout = "/Views/Shared/_PopupLayout.cshtml";
    Layout = null;
}

@model UserPermissionViewModel

<style>
    .cms-manageportal-footer {
/*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }
    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }
    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }
/*    k-colorpicker {
        width: 100px;
    }

    .k-colorpicker .k-selected-color {
            width: 100px;
    }*/
</style>
<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">
    
    <div>
        <div @*class="left pad-l-t-15"*@>
            <div class="row">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item"><a data-toggle="tab" href="#user" class="nav-link active" role="tab" aria-controls="user" aria-selected="true"><i class="fas fa-user" style="margin-left:15px;"></i><br />User Permission</a></li>
                    <li class="nav-item"><a data-toggle="tab" href="#userrole" class="nav-link" aria-controls="userrole" aria-selected="false"><i class="fas fa-users" style="margin-left:18px;"></i><br />User Role Permission</a></li>
                </ul>
            </div>
            <div class="row">
                <div class="tab-content">                    
                    <div id="user" class="tab-pane  in active" role="tabpanel" aria-labelledby="user-tab">
                       
                        <script>


                            $("#kgrdUserPermission").jsGrid({
        width: "100%",
        height: "600px",

        inserting: false,
        editing: true,
        sorting: true,
        paging: true,
        autoload: true,
        pageSize: 14,
        pageButtonCount: 5,
        deleteConfirm: "Do you really want to delete client?",

        //data: clients,
        controller: {
            loadData: function (filter) {
                return $.ajax({
                    type: "GET",
                    url: "/cms/Content/ReadUserPermissionData?pageId=@Model.PageId&pageType=@Model.PageType&portalId=@Model.PortalId",
                    data: filter,
                    dataType: "json"
                });
            },

            updateItem: function (item) {
                
                return $.ajax({
                    type: "POST",
                    url: "/cms/Content/UpdateUserPermissionData",
                    data: item,
                    success: function (result) {
                        var grid = $("#kgrdUserPermission").data("JSGrid")
                        grid.render();
                       // alert("Success", "updated successfully");
                    },
                });
            },

        },
        //onItemEditing: function (e) {
        //    if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {
        //        //  
        //        e.grid.updateItem();
        //    }
        //                        },
                               
        fields: [
            { name: "UserName", type: "text", width: 60, editing: false},
            @for (var j=0;j< Model.Columns.Count();j++)
            {
                var a = j + 1;
                                @:{ name: 'Check' +@a, title: '@Model.Columns[j]' ,type:"checkbox"},
                            }
            { type: "control", deleteButton: false     },

        ]
                            });
                          
                            function SaveUserPermissionData(e) {                              
                                var entityGrid = $("#kgrdUserPermission").data("JSGrid");
                                entityGrid.updateItem();
                                $.ajax({
                                    type: "POST",
                                    url: "/cms/Content/UpdateUserPermissionData",
                                    data: item,
                                    dataType: "json",
                                    success: function (result) {
                                        alert("Success", "updated successfully");
                                    },
                                    error: function (err) {
                                        alert(err, "Error updating");
                                    }
                                });
                              
                               
                            }
                        </script>
                       
                        <div id="kgrdUserPermission"></div>
                        @*@(Html.Kendo().Grid<UserPermissionViewModel>()
                            .Name("kgrdUserPermission")
                            .Columns(columns =>
                            {
                                columns.Bound(p => p.UserName).Width(180);
                                var i = 1;
                                foreach (var j in Model.Columns)
                                {

                                    columns.Bound("Check" + i).Title(j).ClientTemplate(@"#if (Check"+i+") {# <input name='name#=UserId#' type='checkbox' checked='checked'/> #} else {# <input name='name#=UserId#' type='checkbox'/> #}#").Filterable(false).Width(200);

                                    i++;
                                }


                                //columns.Command(command => command.Destroy()).Width(150);
                            })
                                    .ToolBar(toolBar =>
                                    {
                                        //toolBar.Create();
                                        toolBar.Save();
                                    })
                                    .Editable(editable => editable.Mode(GridEditMode.InCell))
                                     .Filterable(f => f.Extra(false)
        .Operators(o => o.ForString(s => s.Clear()
        .Contains("Contains")
        .IsEqualTo("Is equal to")
        )))
                                    .Pageable()
                                    .Sortable()
                                    .Scrollable()
                                    .HtmlAttributes(new { style = "height:550px;" })
                                    .DataSource(dataSource => dataSource
                                        .Ajax()
                                        .Batch(true)
                                        .PageSize(20)
                                        .ServerOperation(false)
                                        //.Events(events => events.Error("OnError"))
                                        .Model(model =>
                                        {
                                            model.Id(p => p.UserId);
                                            model.Field(p => p.PageId);
                                            model.Field(p => p.PageType);
                                            model.Field(p => p.UserName).Editable(false);
                                        })
                                       .Read(read => read.Action("ReadUserPermissionData1", "Content", new { pageId = Model.PageId,pageType=Model.PageType,portalId=Model.PortalId }))
                                                    .Update("UpdateUserPermissionData", "Content")
                                                    .Create(create => create.Action("CreateUserpermissionData", "Content"))
                                                    .Destroy(destroy => destroy.Action("DeleteUserpermissionData", "Content"))
                                    )
                            )*@

                    </div>
                    <div id="userrole" class="tab-pane " role="tabpanel" aria-labelledby="userRole-tab">
                        <script>


                            $("#kgrdUserRolePermission").jsGrid({
        width: "100%",
        height: "500px",

        inserting: false,
        editing: true,
        sorting: true,
        paging: true,
        autoload: true,
        pageSize: 10,
        pageButtonCount: 5,
        deleteConfirm: "Do you really want to delete client?",

        //data: clients,
        controller: {
            loadData: function (filter) {
                return $.ajax({
                    type: "GET",
                    url: "/cms/Content/ReadUserRolePermissionData?pageId=@Model.PageId&pageType=@Model.PageType&portalId=@Model.PortalId",
                    data: filter,
                    dataType: "json"
                });
            },

            updateItem: function (item) {
                return $.ajax({
                    type: "POST",
                    url: "/cms/Content/UpdateUserRolePermissionData",
                    data: item,
                    success: function (result) {
                        var grid = $("#kgrdUserRolePermission").data("JSGrid")
                        grid.render();
                       // alert("Success", "updated successfully");
                    },
                });
            },

        },
        //onItemEditing: function (e) {
        //    if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {
        //        //  
        //        e.grid.updateItem();
        //    }
        //                        },

        fields: [
            { name: "UserRoleName", type: "text", width: 60, editing: false},
            @for (var j=0;j< Model.UserRoleColumns.Count();j++)
            {
                var a = j + 1;
                                @:{ name: 'Check' +@a, title: '@Model.UserRoleColumns[j]' ,type:"checkbox"},
                            }
            { type: "control", deleteButton: false     },

        ]
                            });

                          
                        </script>

                        <div id="kgrdUserRolePermission"></div>
                        @*@(Html.Kendo().Grid<UserRolePermissionViewModel>()
                .Name("kgrdUserRolePermission")
                .Columns(columns =>
                {
                    columns.Bound(p => p.UserRoleName).Width(180);
                    var i = 1;
                    foreach (var j in Model.UserRoleColumns)
                    {

                        columns.Bound("Check" + i).Title(j).ClientTemplate(@"#if (Check" + i + ") {# <input name='name#=UserRoleId#' type='checkbox' checked='checked'/> #} else {# <input name='name#=UserRoleId#' type='checkbox'/> #}#").Filterable(false).Width(200);


                        i++;
                    }

                    //columns.Command(command => command.Destroy()).Width(150);
                })
                .ToolBar(toolBar =>
                {
                    // toolBar.Create();
                    toolBar.Save();
                })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                  .Filterable(f => f.Extra(false)
            .Operators(o => o.ForString(s => s.Clear()
            .Contains("Contains")
            .IsEqualTo("Is equal to")
            )))
                .Pageable()
                .Sortable()
                .Scrollable()
                .HtmlAttributes(new { style = "height:550px;" })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Batch(true)
                    .PageSize(20)
                    .ServerOperation(false)
                    //.Events(events => events.Error("OnError"))
                    .Model(model =>
                    {
                        model.Id(p => p.Id);
                        model.Field(p => p.PageId);
                        model.Field(p => p.PageType);
                        model.Field(p => p.UserRoleName).Editable(false);
                    })
                   .Read(read => read.Action("ReadUserRolePermissionData", "Content", new { pageId = Model.PageId, pageType = Model.PageType, portalId = Model.PortalId }))
                                .Update("UpdateUserRolePermissionData", "Content")
                                .Create(create => create.Action("CreateUserRolepermissionData", "Content"))
                                .Destroy(destroy => destroy.Action("DeleteUserRolepermissionData", "Content"))
                )
        )*@
                    </div>                   
                </div>
            </div>
        </div>
        </div>
</div>

<script type="text/javascript">
    $(function () {
        $('#kgrdUserPermission').on('click', ':checkbox', function () {
            var checked = $(this).is(':checked');
            var grid = $('#kgrdUserPermission').data().kendoGrid;
            var dataItem = grid.dataItem($(this).closest('tr'));
           // alert($(this).val());
            //$(this).val(true);
            //dataItem.set($(this)., $(this).val());
            //dataItem.set('ApprovalStatus', $(this).val());
        })
    })
   
     function OnSavePermision() {

       var checkedNodes = [],
           checkedNodes1 = [],
           treeView = $("#treeview").data("kendoTreeView"),
           treeviewgroup = $("#treeviewgroup").data("kendoTreeView"),
           message, message1;

       checkedNodeIds(treeView.dataSource.view(), checkedNodes);
       if (checkedNodes.length > 0) {
           message = checkedNodes.join(",");
       }

       checkedNodeIds(treeviewgroup.dataSource.view(), checkedNodes1);
       if (checkedNodes1.length > 0) {
           message1 = checkedNodes1.join(",");
       }


        $.ajax({
            type: "POST",
            url: "/Cms/PagePermission/ManagePagePermission",
            data: { data: message, groupdata: message1,pageId:'@Model.Id',portalId:'@Model.Id'},
            dataType: "json",
            success: function (response)
            {
                
                alert(response);
            },
            error: function (response) {
                
                alert("error");
            },
        });

        return false;
    }
</script>