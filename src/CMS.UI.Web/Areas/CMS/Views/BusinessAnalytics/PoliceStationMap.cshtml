@{
    ViewData["Title"] = "Police Station Map";
    Layout = null;
}

@using Syncfusion.EJ2
@using Syncfusion.EJ2.Maps
@using Kendo.Mvc.UI;
@using Synergy.App.Common;
<div class="row" style="background: #359efa;color: white;">
    <div class="col-1 pull-left">
        <button class="btn-primary" type="button" onclick="Onback()">
            <i class="fa fa-arrow-left" title="Back"></i>
        </button>
    </div>
    <div class="col-11">
        <div style="text-align:center">@ViewBag.StateName >> @ViewBag.DistrictName</div>
    </div>
</div>

<div class="row pad-10">
    <div class="col-md-6">
        <div class="control-section">
            <div class="control_wrapper">
                @Html.EJS().Maps("map1").Height("600").Load("mapsLoad").TitleSettings(title => title.Text(ViewBag.DistrictName)).ZoomSettings(new Syncfusion.EJ2.Maps.MapsZoomSettings
           {
              MaxZoom = 20,
              ZoomFactor = 16,
               Enable = true,
               ShouldZoomInitially = true,
               MouseWheelZoom = false
           }).LegendSettings(new MapsLegendSettings { Visible = true, Type = LegendType.Markers, Height = "50", ValuePath = "name" }).Layers(new List<Syncfusion.EJ2.Maps.MapsLayer> {
                        new Syncfusion.EJ2.Maps.MapsLayer
                        {
                            LayerType = Syncfusion.EJ2.Maps.ShapeLayerType.OSM,
                            MarkerClusterSettings =   new MapsMarkerClusterSettings { AllowClustering= true,AllowClusterExpand=true, Height=40, Width=40, Shape =MarkerType.Circle },
                              MarkerSettings  = new List<Syncfusion.EJ2.Maps.MapsMarker>
                                {
                                    new Syncfusion.EJ2.Maps.MapsMarker
                                    {
                                        Visible = true,
                                        Template = "#template",
                                        DataSource = ViewBag.District,
                                        Opacity=1,
                                        Shape=MarkerType.Circle,
                                        LegendText = "name",
                                        TooltipSettings = new MapsTooltipSettings {
                                            Template = "#template",
                                            Visible = true,
                                            ValuePath= "name",
                                        },
                                        Height= 20,
                                        Width= 20,
                                        AnimationDuration= 0,
                                    }
                        }
                } }).Render()
            </div>
            <div id="template" style="display: none;">
                <div>
                    <div style="margin-left:8px;height:45px;width:120px;margin-top:-23px;">
                        <span style="color:red;font-size:32px" class="fad fa-map-marker-alt"> </span>
                        <label style="color:white;margin-left:15px;font-weight:normal; font-size:10px;background-color:black">\{\{\:name\}\} &nbsp;(\{\{\:count\}\})</label>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        @(Html.EJS().AccumulationChart("TrackChart").Series(series =>
                                                        {
                                                            series.DataLabel(dl => dl.Visible(true).Name("text").Position(Syncfusion.EJ2.Charts.AccumulationLabelPosition.Outside).Font(ft => ft.FontWeight("600")))
                                                                  .XName("Name")
                                                                  .YName("Count")
                                                                  .Name("Tracks")
                                                                  .Type(Syncfusion.EJ2.Charts.AccumulationType.Pie)
                                                                  .Radius("90%")
                                                                  .StartAngle(0)
                                                                  .EndAngle(360)
                                                                  .InnerRadius("0%")
                                                                  //.Palettes(new[] { "#ff6358", "#7CDDDD", "#fdce3e", "#5ec232", "#FF7300", "#007ED6" })
                                                                  .Explode(true)
                                                                  .ExplodeOffset("5%")
                                                                  .ExplodeIndex(1)
                                                                  .DataSource(ViewBag.dataSource).Add();

                                                        })
.EnableSmartLabels(true)
.EnableAnimation(false)
.Title("Track")
.Tooltip(tp => tp.Enable(true).Format("${point.x} : <b>${point.y}</b>"))
.LegendSettings(leg => leg.Visible(true)
.ToggleVisibility(false)
.Position(Syncfusion.EJ2.Charts.LegendPosition.Bottom)
.Height("20%")
.Width("44%")).PointClick("onTrackSeriesClick")
.Height("600")
.Render()
                            )
    </div>
</div>
        <script>
            var maps; function mapsLoad(args) {
                var theme = 'Material';
                args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1));
                maps = args.maps;
            }
            function tooltipRender(args) {
                if (!args.options.data) {
                    args.cancel = true;
                }
            }

            function onMarkerClick(id) {
            }
            function Onback(e) {
                var portalId = $('#GlobalPortalId').val();
                var url = '/Cms/Page?pageName=LocationDashobard&portalId=' + portalId;
                LoadCmsPartialView(url, 'Custom');
            }
            function onTrackSeriesClick(e) {
                var text = e.point.x;
                text = text.replaceAll(" ", "%20");
                var portalId = $('#GlobalPortalId').val();
                var customurl = encodeURIComponent('track=' + text + '&ruturnPageName=PoliceStationMap');
                var url = '/Cms/Page?pageName=SocialMediaDashboard&portalId=' + portalId + '&customUrl=' + customurl;
                LoadCmsPartialView(url, 'Custom');

            }
        </script>

        <style>
                #map1 {
                    display: block
                }

                /* .markerbox {
                background-color: yellow;
                font-size: 18px;
                border-radius: 46px;
                width: auto;
                padding-left: 20px;
                padding-right: 20px;
                text-align: center;
                position: absolute;
                transform: rotate(-45deg);
                left: 50%;
                top: 50%;
                margin: -10px 0 0 -15px;
            }*/

                /*  #map1 {
                    height: 1000px;
                    width: 1000px;
                }*/
        </style>

        @*<style>
                #container {
                    cursor: pointer;
                    display: block;
                }

                .marker-event {
                    pointer-events: auto !important;
                }

                .pin {
                    width: 40px;
                    height: 40px;
                    border-radius: 50% 50% 50% 0;
                    background: #CA091A;
                    position: absolute;
                    transform: rotate(-45deg);
                    left: 50%;
                    top: 50%;
                    margin: -10px 0 0 -15px;
                }

                .pin-label {
                    width: 30px;
                    height: 25px;
                    font-size: 15px;
                    font-weight: bold;
                    margin: 8px 0 0 5px;
                    background: #fff;
                    text-align: center;
                    padding-top: 2px;
                    position: absolute;
                    border-radius: 50%;
                    transform: rotate( 45deg );
                }

                .bounce {
                    animation-name: bounce;
                    animation-fill-mode: both;
                    animation-duration: 1s;
                }

                .pulse {
                    border-radius: 50%;
                    height: 30px;
                    width: 30px;
                    position: absolute;
                    left: 50%;
                    top: 50%;
                    margin: 30px 0px 0px 0px;
                    transform: rotateX( 55deg );
                    z-index: -2;
                }

                    .pulse:after {
                        content: "";
                        border-radius: 50%;
                        height: 40px;
                        width: 40px;
                        position: absolute;
                        margin: -13px 0 0 -13px;
                        animation: pulsate 1s ease-out;
                        animation-iteration-count: infinite;
                        opacity: 0;
                        box-shadow: 0 0 1px 2px #00cae9;
                        animation-delay: 1.1s;
                    }

                @@keyframes pulsate {
                    0% {
                        transform: scale(0.1, 0.1);
                        opacity: 0;
                    }

                    50% {
                        opacity: 1;
                    }

                    100% {
                        transform: scale(1.2, 1.2);
                        opacity: 0;
                    }
                }

                @@keyframes bounce {
                    0% {
                        opacity: 0;
                        transform: translateY(-2000px) rotate(-45deg);
                    }

                    60% {
                        opacity: 1;
                        transform: translateY(30px) rotate(-45deg);
                    }

                    80% {
                        transform: translateY(-10px) rotate(-45deg);
                    }

                    100% {
                        transform: translateY(0) rotate(-45deg);
                    }
                }

                .menu .menu-options .menu-option {
                    word-break: break-all;
                    padding: 0;
                    font-weight: 500;
                    z-index: 1;
                    font-size: 14px;
                    padding: 10px 40px 10px 20px;
                    cursor: pointer;
                    border-bottom: solid;
                    border-color: lightgrey;
                }

                .center {
                    text-align: center;
                }

                .menu {
                    width: 120px;
                    z-index: 2;
                    box-shadow: 0 4px 5px 3px rgba(0, 0, 0, 0.2);
                    position: fixed;
                    display: none;
                    transition: 0.2s display ease-in;
                    cursor: pointer;
                }

                    .menu .menu-options {
                        list-style: none;
                        padding: 10px 0;
                        z-index: 1;
                        margin: unset;
                        cursor: pointer;
                    }

                        .menu .menu-options .menu-option {
                            cursor: pointer;
                            font-weight: 500;
                            z-index: 1;
                            font-size: 14px;
                            padding: 10px 40px 10px 20px;
                            cursor: pointer;
                            border-bottom: solid;
                            border-color: lightgrey;
                        }

                            .menu .menu-options .menu-option:hover {
                                background: white;
                                //rgba(0, 0, 0, 0.2);
                                color: black;
                                cursor: pointer;
                            }

                button {
                    background: grey;
                    border: none;
                }

                    button .next {
                        color: green;
                    }

                    button[disabled=false]:hover .next {
                        color: red;
                        animation: move 0.5s;
                        animation-iteration-count: 2;
                    }

                @@keyframes move {
                    from {
                        transform: translate(0%);
                    }

                    50% {
                        transform: translate(-40%);
                    }

                    to {
                        transform: transform(0%);
                    }
                }
            </style>*@

        @Html.EJS().ScriptManager()
