@using Syncfusion.EJ2
@using Syncfusion.EJ2.Navigations
@using Synergy.App.Common
@using Synergy.App.ViewModel
@using Synergy.App.Business
@using Newtonsoft.Json;
@{
    ViewData["Title"] = "TemplateCategory";
    //Layout = "/Views/Shared/_PopupLayout.cshtml";
    Layout = ViewBag.Layout;
}

@model TemplateCategoryViewModel
<style>
    .required {
        color: red;
    }

    .style-myfaviconimage {
        height: 100px;
        width: 100px;
    }
</style>

<script type="text/javascript">

    $("#Code").on('input', function () {

        var txt = $("#Code").val();
        txt = txt.replace(/[^A-Z0-9_]/ig, "");
        $("#Code").val(txt);

    });
    $(document).ready(function () {

        if ('@ViewBag.Mode' == "Popup") {
            var win = GetMainWindow();
            win.CloseWindow({ MethodName: '@Model.PopupCallbackMethod'});
            return false;
        }
        if ('@ViewBag.Success' == "True") {
            closeNavCategory();
        }

      CatId = '@Model.Id';
        Type = '@Model.TemplateType';
        portalId = '@Model.PortalId';

        serviceRoot = "/cms/TemplateCategory/GetCategoryList?CatId=" + CatId + "&Type=" + Type + "&portalId=" + portalId;

        homogeneous = new kendo.data.HierarchicalDataSource({
            transport: {
                read: {
                    url: serviceRoot,
                    dataType: "json"
                }
            },
            schema: {
                model: {
                    id: "id",
                    hasChildren: "hasChildren"
                }
            }
        });

         $("#ModuleId").kendoDropDownList({
        dataTextField: "Name",
            dataValueField: "Id",
            //filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ModuleId',
            dataSource:
            {
            transport:
                {
                read:
                    {
                        url: "/Cms/Module/GetModuleList?portalId=@Model.PortalId",
                    }
                }
            }
         });

        $("#TemplateType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.TemplateType.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=TemplateTypeEnum",
                    }
                }
            }
        });

      $("#ParentId").kendoDropDownTree({
            placeholder: "Select ...",
            dataSource: homogeneous,
            height: "150px",
            dataTextField: "Name",
            dataValueField: "id",
            value: "@Model.ParentId",
            filter: "@FilterType.Contains",
            placeholder: "Select Parent",
            select: onSelectFolder,
        });


        $("#TemplateCategoryType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.TemplateCategoryType.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=TemplateCategoryTypeEnum",
                    }
                }
            }
        });
           $("#Portal").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/TemplateCategory/GetPortalList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Portal...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.AllowedPortalIds)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });
       // uploadFile()

    });

    function uploadFile() {
        $("#iconFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-myfaviconimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#IconFileId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }


    function onSelectFolder(e) {

        var dropdowntree = $("#ParentId").data("kendoDropDownTree");
        var treeviewSelect = function (e) {
            if (e.sender.dataItem(e.node).type == 'workspace') {
                e.preventDefault()
            }
        };

        dropdowntree.treeview.bind("select", treeviewSelect);
    }


    function closeTemplateCategory() {
        //alert("ds");

            var win = GetMainWindow();
            win.CloseWindow({ MethodName: '@Model.PopupCallbackMethod'});
            return false;
    }

    var onAjaxSuccess = function (res) {
        if (res.success) {

            var win = GetMainWindow();
            if ('@Model.PopupCallbackMethod' != '') {
                win.CloseWindow({ MethodName: '@Model.PopupCallbackMethod'});
            }
            win.ShowNotification("@SharedResource["SavedSuccessfully"]", "success");
            HideLoader($('#myForm'));
            closeNavCategory();
            $('#documentTypeTreeView').jstree("refresh");
         }
        else {
             $(".text-danger").removeClass("validation-summary-valid");
             $(".text-danger").addClass("validation-summary-errors");
             $(".text-danger").html(res.error);
            HideLoader($('#myForm'));
            return false;
        }
    };

    function OnSave(evt) {

        if ($('#Name').val() != "" && $('#Code').val() != "" && $('#TemplateType').val() != "" && $('#TemplateCategoryType').val() !="") {
            $(".text-danger").addClass("validation-summary-valid");
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").html("");
            ShowLoader($('#myForm'));
        }
        else if ($('#TemplateCategoryType').val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Select Template Category");
            evt.preventDefault();
            return false;
        }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
            $(".text-danger").html("");
            evt.preventDefault();
            return false;
        }
    }

    function onFileUploadSuccessFavIcon(e) {
        if (e.response.success) {

            $(".style-myfaviconimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#IconFileId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onFavIconDel() {

        $(".style-myfaviconimage").attr("src", "/images/200.png");
        $("#IconFileId").val('');
        //var faviconupload = $("#files3").data("kendoUpload");
        //faviconupload.clearFile(function (file) { return true; });
        $("#iconFile").dmUploader("reset");

    }

</script>

<div class="row" style="margin-left:15px;">

    <form asp-controller="TemplateCategory" asp-action="Manage" method="post" class="form-horizontal"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax="true" data-ajax-method="POST"
          id="myForm">
        <div class="text-danger" asp-validation-summary="All" style="font-size:14px;"></div>
        <div class="row" style="padding:10px;">

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" title="Special character and space not allowed in name." required="required" autocomplete="off" style="width:80%" />
                    <label for="Name">Name <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Code" type="text" class="form-control" placeholder="Enter Code" required="required" autocomplete="off" style="width:80%" />
                    <label for="Code">Code <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Description" type="text" class="form-control" placeholder="Enter Description" autocomplete="off" style="width:80%" />
                    <label for="Description">Description</label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="SequenceOrder" type="number" class="form-control" placeholder="Sequence Order" autocomplete="off" style="width:80%" />
                    <label for="SequenceOrder">Sequence Order</label>
                </div>
            </div>

            <div class="col-12">Parent Category @*<span class="required">*</span>*@</div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().DropDownListFor(model=>model.ParentId)
                .DataTextField("Name")
                .DataValueField("Id")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetCategoryList", "TemplateCategory", new { @area = "Cms", CatId=Model.Id, Type=Model.TemplateType });
                    });
                })
                .Filter(FilterType.Contains)
                .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                .HtmlAttributes(new { @class = "form-control" , @style = "width:80%"/*, @readonly = "readonly"*/ })
                )*@


                    @*@(Html.Kendo().DropDownTreeFor(x=>x.ParentId)
                   .DataTextField("Name")
                   .DataValueField("id")
                       .HtmlAttributes(new { style = "width: 80%" })
                            .Filter(FilterType.Contains)
                            .Placeholder("Select Pare")
                            .Events(x => x.Select("onSelectFolder"))
                            .Value(Model.ParentId)
                            .DataSource(dataSource => dataSource
                                .Read(read => read
                                    .Action("GetCategoryList", "TemplateCategory", new { @area = "Cms", CatId = Model.Id, Type = Model.TemplateType,portalId=Model.PortalId })
                                )
                            )
                )*@

                    <input asp-for="ParentId" id="ParentId" style="width: 80%" />

                    <!-- Template -->
                    <script id="dropdowntree-template" type="text/kendo-ui-template">
                        #: item.Name #
                    </script>

                    <!-- Template -->
                    <script id="dropdowntree-value-template" type="text/kendo-ui-template">
                        <span> #: data.Name # </span>
                    </script>
                </div>
            </div>

            <div class="col-12">Template Type <span class="required">*</span></div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().DropDownListFor(model=>model.TemplateType)
                .DataTextField("Name")
                .DataValueField("Id")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "TemplateTypeEnum" });
                    });
                })
                .Value(Model.TemplateType.ToString())
                .HtmlAttributes(new { @class = "form-control" , @style = "width:80%", @readonly = "readonly" })
                )*@

                    <input asp-for="TemplateType" id="TemplateType" class="form-control" style="width:80%" readonly="readonly" />
                </div>
            </div>

            <div class="col-12">Template Category <span class="required">*</span></div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().DropDownListFor(model=>model.TemplateCategoryType)
                .DataTextField("Name")
                .DataValueField("Id")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "TemplateCategoryTypeEnum" });
                    });
                })
                .Value(Model.TemplateCategoryType.ToString())
                .HtmlAttributes(new { @class = "form-control" , @style = "width:80%"/*, @readonly = "readonly"*/ })
                )*@

                    <input asp-for="TemplateCategoryType" id="TemplateCategoryType" class="form-control" style="width:80%" />
                </div>
            </div>

            <div class="col-12">Module @*<span class="required">*</span>*@</div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().DropDownListFor(x=>x.ModuleId)
                            .DataTextField("Name")
                            .DataValueField("Id")
                            //.Events(e => e.Change("change"))
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetModuleList", "Module", new { @area = "Cms", portalId = Model.PortalId });
                                });
                            })
                            //.Value(Model.ModuleId)
                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                            .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                )*@

                    <input asp-for="ModuleId" id="ModuleId" class="form-control" style="width:80%" />
                </div>
            </div>
            <div class="col-12 pad-10">
                <label for="Portals">Allowed Portals</label>
                <br />
          
         
                <select asp-for="AllowedPortalIds" id="Portal" style="width:80%"></select>
            </div>

            <div class="col-12">Icon</div>
            <div class="col-12 pad-15" style="min-height:130px;">
                @*<div class="style-image">
                @if (Model.IconFileId != null)
                {
                    <img class="style-myfaviconimage" src="/cms/Document/GetImageMongo?id=@Model.IconFileId" onerror='OnPhotoError(this);' />
                }
                else
                {
                    <img class="style-myfaviconimage" style="background-color:gray;" src="/images/200.png" />
                }

            </div>*@
                <div @*class="style-upload"*@>
                    @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @Area="Cms"})
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccessFavIcon")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                        //.MaxFileSize(2097152)
                        )
                        .HtmlAttributes(new { @class = "hr-large", @id = "files3" })
                )*@

                    @*<div class="row">
                <div class="col">
                    <div id="iconFile" class="dm-uploader">
                        <h6 class=" text-muted">Drag &amp; drop files here</h6>

                        <div class="btn btn-primary btn-block ">
                            <span>Open the file Browser</span>
                            <input type="file" title='Click to add Files' />
                        </div>
                    </div>

                </div>*@
                    @*if multiple use this*@

                    @*<div class="col">
                    <div class="card h-100">
                        <div class="card-header">
                            File List
                        </div>
                        <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                            <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                        </ul>
                    </div>
                </div>*@
                    @*if multiple use this*@
                    @*</div>
                <button type="button" class="btn btn-light" title="Delete Icon" onclick="onFavIconDel();"><i class='fa fas fa-trash'></i></button>*@

                    @{
                        await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.IconFileId), Value = Model.IconFileId });
                    }
                </div>

            </div>

            <div @*class="cms-slidebar-footer"*@ style="float:right">
                @if (Model.LayoutMode == Synergy.App.Common.LayoutModeEnum.Popup)
                {
                    <input type="button" class="btn btn-light" value="Close" onclick="closeTemplateCategory()" />
                }
                else
                {
                    <input type="button" class="btn btn-light" value="Close" onclick="closeNavCategory()" />
                }
                <input type="submit" class="btn btn-primary" value="Save" onclick="OnSave(event)" />
            </div>

        </div>

        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.LayoutMode)
        @Html.HiddenFor(x => x.PopupCallbackMethod)
        @Html.HiddenFor(x => x.PortalId)
        @Html.HiddenFor(x => x.IconFileId)
    </form>
</div>

