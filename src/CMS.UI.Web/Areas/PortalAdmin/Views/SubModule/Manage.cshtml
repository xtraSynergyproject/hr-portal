@using Syncfusion.EJ2
@using Syncfusion.EJ2.Navigations

@using Synergy.App.ViewModel
@using Synergy.App.Business
@using Synergy.App.Common;
@using Kendo.Mvc.UI;
@{
    ViewData["Title"] = "SubModule";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model SubModuleViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
</style>

<div class="row" style="margin-left:15px;">

    <form asp-controller="SubModule" asp-action="Manage" method="post" class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" title="Special character and space not allowed in name." required="required" autocomplete="off" style="width:80%" />
                    <label for="Name">Name <span class="required">*</span></label>
                </div>
            </div>
            @*<div class="col-12 pad-15">
             @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", placeholder = "Name", style = "width:80%", required = "required" })
            </div>*@
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ShortName" type="text" class="form-control" placeholder="Enter Short Name" title="Special character and space not allowed in name." autocomplete="off" style="width:80%" />
                    <label for="ShortName">Short Name </label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="SequenceOrder" type="number" class="form-control" placeholder="Enter Sequence Order" autocomplete="off" style="width:80%" />
                    <label for="SequenceOrder">Enter Sequence Order</label>
                </div>
            </div>

            @*<div class="col-12 pad-15">
                @Html.TextBoxFor(model => model.ShortName, htmlAttributes: new { @class = "form-control", placeholder = "Short Name", style = "width:80%", required = "required" })
            </div>*@

            <div class="col-12">Module <span class="required">*</span></div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(model=>model.ModuleId)

        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetModuleList", "Module");
            });
        })
        .OptionLabel("Select module")
        .DataTextField("Name")
        .DataValueField("Id")
        .Value(Model.ModuleId)
        .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
        //.Events(ev => ev.DataBound("setRequiredAttr"))
        )*@
                @*@(Html.Kendo().DropDownListFor(x=>x.ModuleId)
              .DataTextField("Name")
                        .DataValueField("Id")
           // .Events(e => e.Change("change"))
           .DataSource(source =>
           {
               source.Read(read =>
               {
                   read.Action("GetModuleList", "Module", new { @area = "PortalAdmin" });
               });
           })
           .Value(Model.ModuleId)
           .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
              .HtmlAttributes(new { @class = "form-control", style = "width: 80%" })
        )*@
                <input asp-for="ModuleId" id="ModuleId" class="form-control" style="width:80%" />
            </div>

            <div class="col-12">Status </div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(x=>x.Status)
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
        source.Read(read =>
        {
            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "StatusEnum" });
        });
        })
        .Value(Model.Status.ToString())
        .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
        )*@

                <input asp-for="Status" id="Status" class="form-control" style="width:80%" />
            </div>


            <div class="cms-slidebar-footer">
                <button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">Close</button>
                <input type="submit" class="btn btn-primary" value="Save" id="submitBtn" onclick="OnSave(event);" />
            </div>

        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.LegalEntityId)
        @Html.HiddenFor(x => x.PortalId)
    </form>
</div>


<script type="text/javascript">

    $(document).ready(function () {
        if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();
            window.parent.getDataSubModule();
        }

         $("#ModuleId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.ModuleId',
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/Module/GetModuleList",
                    }
                }
            }
        });


        $("#Status").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.Status.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StatusEnum",
                    }
                }
            }
        });

    });

    function OnSave(evt) {

        if ($("#ModuleId").val() == "") {
          //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Module is required");
            evt.preventDefault();
            return false;

        }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }
    }

    function closeNavMemberGroup() {
      
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

</script>