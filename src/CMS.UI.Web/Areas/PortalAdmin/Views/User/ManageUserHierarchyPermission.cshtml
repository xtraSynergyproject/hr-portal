@inject IStringLocalizer<CMS.UI.Web.Areas.PortalAdmin.Controllers.UserController> Resource
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Kendo.Mvc.UI;
@{
    ViewData["Title"] = "Manage User Hierarchy Permission";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model UserHierarchyPermissionViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
</style>
<script>

</script>

<div class="row" style="margin-left:15px;">
    <form asp-controller="User" asp-action="ManageUserHierarchyPermission" method="post" class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">

            <div class="col-12">@Resource["HierarchyName"] <span class="required">*</span></div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(x=>x.HierarchyId)
         .DataTextField("Name")
         .DataValueField("Id")
         .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
         .DataSource(source =>
         {
             source.Read(read =>
             {
                 read.Action("GetHierarchyIdNameList", "User", new { @area = "PortalAdmin"});
             });
         })
        // .Value(Model.CompanyId)
         .HtmlAttributes(new { @class = "form-control", @style = "width:80%"})
         )*@

                <input asp-for="HierarchyId" id="HierarchyId" class="form-control" style="width: 80%;" />
            </div>
            <div class="col-12">@Resource["HierarchyPermissionType"] <span class="required">*</span></div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(x=>x.HierarchyPermission)
         .DataTextField("Name")
         .DataValueField("Id")
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
         .DataSource(source =>
         {
             source.Read(read =>
             {
                 read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "HierarchyPermissionEnum" });
             });
         })
         .Value(Model.HierarchyPermission.ToString())
         // .Value(Model.NtsType.ToString())
         .HtmlAttributes(new { @class = "form-control", @style = "width:80%"})
         //.Events(e=>
         //    { e.Change("onChange"); })
         )*@

                <input asp-for="HierarchyPermission" id="HierarchyPermission" class="form-control" style="width: 80%;" />
            </div>






            <div class="col-12 pad-10"></div>
            <br /><br />
            <div class="cms-slidebar-footer">
                <button type="button" class="btn btn-light" onclick="closeNavNote();">@SharedResource["Close"]</button>
                <input type="submit" class="btn btn-primary" value="@SharedResource["Save"]" @*id="submitBtn"*@ onclick="OnSave(event);" />
            </div>
        </div>

        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.UserId)
        @Html.HiddenFor(x => x.PortalId)
        @Html.HiddenFor(x => x.LegalEntityId)
    </form>
</div>


<script type="text/javascript">



    $(document).ready(function () {

        if ('@ViewBag.Success' == "True") {
            closeNavNote();
            window.parent.getDataUserHierarchy();
        }

         $("#HierarchyId").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataTextField: "Name",
            dataValueField: "Id",
			value: "@Model.HierarchyId",
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/User/GetHierarchyIdNameList",
                    }
                }
            }
        });

        $("#HierarchyPermission").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataTextField: "Name",
            dataValueField: "Id",
			value: "@Model.HierarchyPermission",
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=HierarchyPermissionEnum",
                    }
                }
            }
        });

    });

    function closeNavNote() {
       
        var win = GetMainWindow();
        win.CloseWindow({ MethodName: 'CallBack' });
        return false;
    }


    function OnSave(evt) {

        if ($("#HierarchyId").val() == "") {
            //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Hierarchy Name is required");
            evt.preventDefault();
            return false;
        }
        else if ($("#HierarchyPermission").val() == "") {
                //
                $(".text-danger").removeClass("validation-summary-valid");
                $(".text-danger").addClass("validation-summary-errors");
                $(".text-danger").html("Hierarchy Permission is required");
                evt.preventDefault();
                return false;
            }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }

    }
</script>