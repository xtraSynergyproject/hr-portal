@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@model Tuple<string, string, string, string>
@{
    //Layout = null;
    Layout = null;// "/Views/Shared/_PopupLayout.cshtml";
}

@(Html.Kendo().DropDownList().Name(Model.Item2).Value(Model.Item1)
                                    .OptionLabel("select")
                                    .Filter(FilterType.Contains)
                                    .DataTextField("Name")
                                    .DataValueField("Id")
                                    .Height(400)
                                    .TemplateId("drp-user-template")
                                    //.ValueTemplateId("drp-user-value-template")
                                    .HtmlAttributes(new { @class =$"drp-user {Model.Item4}"  })
                                    .DataSource(source =>
                                    {

                                        source.Read(read =>
                                        {
                                            read.Action("ReadUserData", "User", new { @area = "Cms" });
                                        });
                                        //source.Custom()
                                        //     .ServerFiltering(true)
                                        //    .ServerPaging(true)
                                        //    .PageSize(100)
                                        //    .Type("aspnetmvc-ajax")
                                        //    .Transport(transport =>
                                        //    {
                                        //        transport.Read("ReadUserData", "User", new { @area = "Cms" });
                                        //    })
                                        //    .Schema(schema =>
                                        //    {
                                        //        schema.Data("Data")
                                        //        .Total("Total");
                                        //    });
                                    })
                                     .Events(events => events.Filtering(
                        @<text>
                            function(e) {
                               var filterValue = e.filter != undefined ? e.filter.value : "";
                                    e.preventDefault();

                                  this.dataSource.filter({
                                    logic: "or",
                                    filters: [
                                      {
                                        field: "Name",
                                        operator: "contains",
                                        value: filterValue
                                      },
                                      {
                                        field: "Email",
                                        operator: "contains",
                                        value: filterValue
                                      }
                                    ]
                                  });
                            }
                            </text>
                            ))
                                    )


