<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccessLogText" xml:space="preserve">
    <value>Access Log Text</value>
  </data>
  <data name="Actual" xml:space="preserve">
    <value>Actual</value>
  </data>
  <data name="Actual(SignIn-SignOut)" xml:space="preserve">
    <value>Actual(Sign In - Sign Out)</value>
  </data>
  <data name="ActualHours" xml:space="preserve">
    <value>Actual Hours</value>
  </data>
  <data name="ActualText" xml:space="preserve">
    <value>ActualText</value>
  </data>
  <data name="Actualtimeintimeout" xml:space="preserve">
    <value>Actual &lt;br/&gt;(Time In - Time Out)</value>
  </data>
  <data name="Approved" xml:space="preserve">
    <value>Approved</value>
  </data>
  <data name="AttDate" xml:space="preserve">
    <value>Att Date</value>
  </data>
  <data name="Attendance" xml:space="preserve">
    <value>Attendance</value>
  </data>
  <data name="AttendanceStatus" xml:space="preserve">
    <value>Attendance Status</value>
  </data>
  <data name="Calculated" xml:space="preserve">
    <value>Calculated</value>
  </data>
  <data name="Comment" xml:space="preserve">
    <value>Comment</value>
  </data>
  <data name="CreateRoster" xml:space="preserve">
    <value>Create Roster</value>
  </data>
  <data name="Date" xml:space="preserve">
    <value>Date</value>
  </data>
  <data name="DeductionHours" xml:space="preserve">
    <value>DeductionHours</value>
  </data>
  <data name="Department" xml:space="preserve">
    <value>Department</value>
  </data>
  <data name="EmployeeComment" xml:space="preserve">
    <value>Employee Comment</value>
  </data>
  <data name="EmployeeComments" xml:space="preserve">
    <value>Employee Comments</value>
  </data>
  <data name="EmployeeName" xml:space="preserve">
    <value>Employee Name</value>
  </data>
  <data name="EmployeeNo" xml:space="preserve">
    <value>Employee No</value>
  </data>
  <data name="EmployeeStatus" xml:space="preserve">
    <value>Employee Status</value>
  </data>
  <data name="ExportToExcel" xml:space="preserve">
    <value>Export To Excel</value>
  </data>
  <data name="Fromdate" xml:space="preserve">
    <value>From Date</value>
  </data>
  <data name="JobName" xml:space="preserve">
    <value>Job Name</value>
  </data>
  <data name="JobTitle" xml:space="preserve">
    <value>Job Title</value>
  </data>
  <data name="Month" xml:space="preserve">
    <value>Month</value>
  </data>
  <data name="OrganizationName" xml:space="preserve">
    <value>Organization Name</value>
  </data>
  <data name="OTHours" xml:space="preserve">
    <value>OTHours</value>
  </data>
  <data name="Override" xml:space="preserve">
    <value>Override</value>
  </data>
  <data name="OverrideAttendance" xml:space="preserve">
    <value>Override Attendance</value>
  </data>
  <data name="OverrideComment" xml:space="preserve">
    <value>Override Comments</value>
  </data>
  <data name="OverrideComments" xml:space="preserve">
    <value>Override Comments</value>
  </data>
  <data name="OverrideDeductionHoursText" xml:space="preserve">
    <value>OverrideDeductionHoursText</value>
  </data>
  <data name="OverrideOTHoursText" xml:space="preserve">
    <value>Override OT Hours Text</value>
  </data>
  <data name="OverrideOTService" xml:space="preserve">
    <value>Override OT Service</value>
  </data>
  <data name="OverTimeHours" xml:space="preserve">
    <value>Over Time Hours</value>
  </data>
  <data name="PayrollGroup" xml:space="preserve">
    <value>Payroll Group</value>
  </data>
  <data name="PeriodFrom" xml:space="preserve">
    <value>Period From</value>
  </data>
  <data name="Permitted" xml:space="preserve">
    <value>Permitted</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="PostedForPayroll" xml:space="preserve">
    <value>PostedForPayroll</value>
  </data>
  <data name="Roster" xml:space="preserve">
    <value>Roster</value>
  </data>
  <data name="Roster(SignIn-SignOut)" xml:space="preserve">
    <value>Roster(Sign In - Sign Out)</value>
  </data>
  <data name="RosterHours" xml:space="preserve">
    <value>Roster Hours</value>
  </data>
  <data name="RosterText" xml:space="preserve">
    <value>Roster Text</value>
  </data>
  <data name="s" xml:space="preserve">
    <value />
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SearchMonth" xml:space="preserve">
    <value>Search Month</value>
  </data>
  <data name="ShortTimeHours" xml:space="preserve">
    <value>Short Time Hours</value>
  </data>
  <data name="SubmitForPayroll" xml:space="preserve">
    <value>Submit For Payroll</value>
  </data>
  <data name="System" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="SystemAttendance" xml:space="preserve">
    <value>System Attendance</value>
  </data>
  <data name="SystemDeductionHoursText" xml:space="preserve">
    <value>System Deduction Hours Text</value>
  </data>
  <data name="SystemOTHoursText" xml:space="preserve">
    <value>System OT Hours Text</value>
  </data>
  <data name="Timeintimeout" xml:space="preserve">
    <value>Roster &lt;br/&gt;(Time In - Time Out)</value>
  </data>
  <data name="TimePermissionRequest" xml:space="preserve">
    <value>Time Permission Request</value>
  </data>
  <data name="To" xml:space="preserve">
    <value>To</value>
  </data>
  <data name="Todate" xml:space="preserve">
    <value>To Date</value>
  </data>
  <data name="TotalAbsent" xml:space="preserve">
    <value>Total Absent</value>
  </data>
  <data name="TotalDED" xml:space="preserve">
    <value>Total DED</value>
  </data>
  <data name="TotalOT" xml:space="preserve">
    <value>Total OT</value>
  </data>
  <data name="TotalPresent" xml:space="preserve">
    <value>Total Present</value>
  </data>
  <data name="UpdateAttendance" xml:space="preserve">
    <value>Update Attendance</value>
  </data>
  <data name="Year" xml:space="preserve">
    <value>Year</value>
  </data>
</root>