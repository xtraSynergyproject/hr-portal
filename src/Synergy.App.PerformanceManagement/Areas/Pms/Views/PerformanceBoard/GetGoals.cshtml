@inject IStringLocalizer<CMS.UI.Web.Areas.Pms.Controllers.PerformanceBoardController> Resource
@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common


@model GoalViewModel
@{
    ViewBag.Title = "Goals";
    Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    // Layout = null;
}

<style>
    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .date {
        margin-left: 1%;
        margin-right: 1%
    }

    .k-listview {
        border: none !important;
    }



    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    #banner {
        width: 100%;
        height: 140px;
        /* height: 160px;*/
        left: 389px;
        top: 157px;
        background: #2D9FCA;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 6px;
        font-family: roboto;
    }
</style>


<script type="text/javascript">

    $(document).ready(function () {
        HideLoader($("#global-overlay"));
    });

    function SelectCells() {

        var grid = $("#kgrdGetGoals").data("JSGrid");
        var sum = 0;
        var listitem = [];
        var strList = "";
        var leftweightage = 0;
       // var rows = grid.tbody.children();
        for (var j = 0; j < grid.data.length; j++) {
            var row = grid.data[j];
            //var rows = grid.data[j];
           // var row = $(rows[j]);
            //var data = grid.data(row);
            var data = row;
            if (data.Weightage !=null) {
                sum = sum + parseInt(data.Weightage);

                strList = strList + data.Id + ":" + data.Weightage + ",";
                var ids = data.Id;
                var weightage = data.Weightage;

                var item = {
                    Value: weightage, Name: ids
                };
                listitem.push(item);

            } else {
                leftweightage = 1;
                kendo.alert("@Resource["Please Add Weightage For All Goals"]");
                break;
            }
        }

        @*if (sum == 100 && leftweightage == 0) {

          //  $.each(listitem, function () {
          //      alert(this.Name);
          //  });
            $.ajax({
                type: "POST",
               url: "/Pms/PerformanceBoard/updategoals",
                //url:@Url.Action("updategoals", "PerformanceBoard", new { Area = "Pms" })
                data: { GoalList: strList },
                traditional: true,
                dataType: "json",

                success: function (response) {
                    kendo.confirm("@SharedResource["Saved Successfully"]").then(function () {
                        Closepopup();
                    }, function () {
                        Closepopup();
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
        }
        else
        {
            if (leftweightage == 0) {
                kendo.alert("@Resource["Sum Of Goal Should Be 100"]");
            }
        }*@

        $.ajax({
                type: "POST",
                url: "/Pms/PerformanceBoard/updategoals",
                //url:@Url.Action("updategoals", "PerformanceBoard", new { Area = "Pms" })
                data: { GoalList: strList },
                traditional: true,
                dataType: "json",

                success: function (response) {
                    kendo.confirm("@SharedResource["Saved Successfully"]").then(function () {
                        Closepopup();
                    }, function () {
                        Closepopup();
                    });
                },
                failure: function (response) {
                    alert(response.responseText);
                },
                error: function (response) {
                    alert(response.responseText);
                }
            });
    }

    function Closepopup()
    {
        var win = GetMainWindow();
        win.CloseWindow({ MethodName: "OnAfterServiceCreate"});
        return false;
    }
    function OnAfterServiceCreate(service) {

        $("#BusinessTripGridView").data("kendoGrid").dataSource.read();
    }

</script>

<script>
    $(document).ready(function () {
        $("#kgrdGetGoals").jsGrid({
            width: "100%",
            height: "400px",

            inserting: false,
            editing: true,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 14,
            pageButtonCount: 5,
            deleteConfirm: "Are you sure you want to detelet this?",

            //data: clients,
            controller: {
                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        url: "@Url.Action("ReadGoals", "PerformanceBoard", new { @area = "Pms", PerformanceId = Model.Id})",
                        data: filter,
                        dataType: "json"
                    });
                },
                deleteItem: function (item) {
                    $.ajax({
                        type: "POST",
                        url: "/Pms/PerformanceBoard/DeleteGoalCompetency?",
                        data: { serviceId: item.Id, code: "PMS_GOAL" },
                        success: function (result) {
                            var grid = $("#kgrdGetCompentency").data("JSGrid")
                            grid.render();

                        },
                    });
                },
                updateItem: function (item) {
                    //return $.ajax({
                    //    type: "POST",
                    //    url: "/Pms/PerformanceBoard/updategoals",
                    //    data: item,
                    //    success: function (result) {
                    //        var grid = $("#kgrdGetGoals").data("JSGrid")
                    //        grid.render();

                    //    },
                    //});
                    //var grid = $("#kgrdGetGoals").data("JSGrid");
                    //grid.updateItem();

                },

            },

            fields: [
                { name: "GoalName", title:"Goal Name", type: "text", width: 60, editing: false },
                { name: "IsGoalCompleted", title: "Is Goal Completed", type: "checkbox", width: 60, editing: false },
                { name: "Weightage", title: "Weightage", type: "text", width: 60 },
                {
                    name: "StartDate", title: "Start Date", type: "text", width: 60, editing: false,
                    itemTemplate: function (value, item)
                    {
                        var d = new Date(value);
                        return d.getDate() + "." + (d.getMonth()+1) + "." + + d.getFullYear();
                        //return moment(value).format('dd/MM/yyyy')
                    }
                },
                {
                    name: "EndDate", title: "End Date", type: "text", width: 60, editing: false,
                    itemTemplate: function (value, item)
                    {
                        var d = new Date(value);
                        return d.getDate() + "." + (d.getMonth()+1) + "." + + d.getFullYear();
                        //return moment(value).format('dd/MM/yyyy')
                    }
                },
                { type: "control" }
            ]
        });
    });
</script>


@*<div id="banner" role="group" style="width:100%;color:#FFFFFF;background: #17a2b8;padding-left: 5px;">
           <div class="row" style="padding-top:10px;">

               <div class=" col-md-9">
                   <div style="font-size:.8em;padding-top:0px;">
                       select Employee

                       <div class="project-dropdown" id="dropdown" title="Task Template">

                           @(Html.Kendo().DropDownList()
                     .Name("ddlTemplate")

                           .DataTextField("EmployeeName")
                           .DataValueField("UserId")
                           .Filter(FilterType.Contains)
                           .OptionLabel("Select Employee")
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetAllEmployee", "BusinessTrip", new { @area = "Cms"});
                               });
                           })
                           .Events(x => x.Change("OnEmployeechange"))
                           .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
                           )

                       </div>
                   </div>
               </div>
           </div>

        <div class="btn banner-item banner-item-date col-sm-2">&nbsp;</div>
    </div>*@


<div class="row">
    <div class="col-12">

        <div class="">
            <div class="panel-heading"></div>
            <div class="panel-body">
                <div id="kgrdGetGoals"></div>
                @*@(Html.Kendo().Grid<GoalViewModel>()
                                .Name("BusinessTripGridView")
                                .Groupable(false)

                                .Columns(columns =>
                                {

                                    //columns.Select().Width(75).HtmlAttributes(new { @class = "checkbox-align" }).HeaderHtmlAttributes(new { @class = "checkbox-align" });
                                    columns.Bound(p => p.GoalName).Title("" + Resource["Goals"] + "").Width(250);
                                    columns.Bound(p => p.Weightage).Title("" + Resource["Weightage"] + "").Width(250);


                                })
                                .ToolBar(toolbar =>
                                {
                                    //toolbar.Excel();
                                    //toolbar.Pdf();
                                    toolbar.Search();
                                })
    //.Pdf(pdf=>pdf.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
    //.Excel(excel=>excel.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
    .ColumnMenu(col=>col.Filterable(false))
    .Height(700)
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Navigatable()
    .Resizable(r=>r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Groupable(g=>g.ShowFooter(false))


    .Filterable()
    .Scrollable()
    //.Events(events => events.DataBound("Databounds"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .AutoSync(true)
        .ServerOperation(false)
           //.Events(events => events.Error("error_handler"))

           .Model(m =>
           {
               m.Id(model => model.Id);
               m.Field(p => p.GoalName).Editable(false);



           })

        //.Model(model =>
        //{
        //    model.Id(p => p.Id);
        //})

        //.Group(group=>group.Add("Category.CategoryName", typeof(string), ListSortDirection.Descending))
        //.Create("DetailProducts_Create", "Grid")
        .Read("ReadGoals", "PerformanceBoard", new { @area = "Pms", PerformanceId = Model.Id, stageId=Model.PerformanceStage, userId = Model.PerformanceUser})
    //.Update("DetailProducts_Update", "Grid")
    //.Destroy("DetailProducts_Destroy", "Grid")
    )
)*@
            </div>
        </div>
        <div>
            <button class="btn btn-primary" style="float:right;" onclick="SelectCells()" title="@Resource["ResetFilter"]">@SharedResource["Save"]</button>
        </div>
        
    </div>
</div>




