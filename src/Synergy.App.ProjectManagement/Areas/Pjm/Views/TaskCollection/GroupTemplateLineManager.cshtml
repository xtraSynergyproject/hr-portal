@inject IStringLocalizer<CMS.UI.Web.Areas.PJM.Controllers.TaskCollectionController> Resource
@using Synergy.App.DataModel
@using Synergy.App.WebUtility
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common
@model ProjectDashboardChartViewModel;

@{
    ViewBag.Title = "Task Collection View";
    Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    //Layout = null;
}

<style>
    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }
    .date {
        margin-left: 1%;
        margin-right: 1%
    }
    .k-listview {
        border: none !important;
    }
    .project-property {
        width: 100px;
        padding: 3px;
    }
    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }
    .panel-heading:hover {
        background-color: #f1f1f1;
    }
    .panel-success {
        border-color: #d6e9c6;
    }
    .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
    }
    .panel-info {
        border-color: #bce8f1;
    }
   .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
    }
    .panel-warning {
        border-color: #fbeed5;
    }
    .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
    }
    .panel-primary {
        border-color: #428bca;
    }
    .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
    }
    .panel-filter {
        border-color: #428bca;
    }
        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }
    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }
    #banner {
        width: 100%;
        height: 140px;
        /* height: 160px;*/
        left: 389px;
        top: 157px;
        background: #2D9FCA;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 6px;
        font-family: roboto;
    }
</style>

<script>

    var selectedstatus;
    var selectedAssignName;

    $(document).ready(function () {

        $("#mdlTaskStatus").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            autoBind: true,
            autoClose: false,
            change: onChangeTaskStatus,
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_TASK_STATUS" })",
                    }
                }
            }
        });

        $("#mdlTaskAssigned").kendoMultiSelect({
            dataTextField: "Type",
            dataValueField: "AssigneeId",
            autoBind: true,
            autoClose: false,
            change: onChangeTaskStatus,
            dataSource: {
                transport: {
                    read: {
                        dataType: "json",
                        url: "/PJM/TaskCollection/mdlAssignuserGroup",
                        data: filtertaskownerlist,
                    }
                }
            }
        });

         $("#FromDate").kendoDatePicker({
            value:'@DateTime.Today.AddDays(-1)'
        });
        $("#ToDate").kendoDatePicker({
            value:'@DateTime.Today'
        });

        GetGTLMData();

        $("#ddlLOV").val("f9de3fa5-1777-4e7a-b3f1-a0d81bb92fef");
        ///$("#mdlTaskStatus").val("f9de3fa5-1777-4e7a-b3f1-a0d81bb92fef");
        //$("#mdlTaskStatus").data("kendoMultiSelect").value(["f9de3fa5-1777-4e7a-b3f1-a0d81bb92fef"]);

        selectedstatus = [];
        selectedAssignName = [];

         $("#ddlTemplate").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            change: OnTemplateChange,
            dataSource:
            {
                transport:
                {
                    read:
                    {
                        url: "/Cms/NtsGroup/GetGroupListByType?type=@NtsTypeEnum.Task",
                    }
                }
            }
          });

           $("#ddlLOV").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            change: OnddlovChange,
               optionLabel:"Select ...",
            dataSource:
            {
                transport:
                {
                    read:
                    {
                        url: "/Cms/LOV/GetLOVIdNameList?lovType=LOV_TASK_STATUS",
                    }
                }
            }
           });
        HideLoader($("#global-overlay"));

    });

    var columnDefs = [
         {
            field: "TemplateName",
            headerName:"@Resource["TemplateName"]"
        },
        {
            field: "TaskNo",
            headerName:"@Resource["TaskNo."]"
         },
        {
            field: "TaskSubject",
            headerName:"@Resource["TaskSubject"]"
        },
        {
            field: "AssignName",
            headerName:"@Resource["TaskAssign"]"
        },
        {
            field: "Priority",
            headerName:"@SharedResource["Priority"]"
        },
        {
            field: "Status",
            headerName:"@SharedResource["Status"]"
        },
        {
            field: "StartDate",
            headerName: "@SharedResource["StartDate"]",
            cellRenderer: params => {
                var date = new Date(params.value);
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [day, month, year].join('.');
            }
        },
        {
            field: "DueDate",
            headerName: "@SharedResource["DueDate"]",
            cellRenderer: params => {
                var date = new Date(params.value);
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [day, month, year].join('.');
            }
        },
    ];

    function GetGTLMData(urlnew) {
        var url = "";
        if (urlnew != "" && urlnew != null) {
            url = urlnew;
        } else {
            url = "/PJM/TaskCollection/GetGridDetailsGroup?TemplateID=" + '@Model.Id';
        }
        document.getElementById("kgGTLM").innerHTML = "";
        gridConfig(
            "kgGTLM",
            url,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    function GetDescription(id) {
        $.ajax({
            url: "/PJM/TaskCollection/GetTemplateDet",
            data: { ID: id },
            type: "GET",

            success: function (result) {
                $("#divDescription").html(result);
                //alert(result);
            }
        });
    }

    function GotoTask() {
        //alert("GotoTask");
        @*window.location.href = "/pmt/pmthome/tasks?projectId=@Model.Id";*@
    }

    function OnProjectChange(id) {
        //alert("OnProjectChange");
        //window.location.href = "/pmt/projectdashboard?projectId=" + id;
    }

    function AddTask() {
        //alert("AddTask");

    }

    function onSearch() {
        //var search = {
        //    TemplateID: $("#ddlTemplate").data("kendoDropDownList").value(),
        //    filterStatus: $("#mdlTaskStatus").data("kendoMultiSelect").value(),
        //    filterAssignuser: $("#mdlTaskAssigned").data("kendoMultiSelect").value(),
        //};
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        var TemplateID = $("#ddlTemplate").data("kendoDropDownList").value();
        var filterStatus = $("#mdlTaskStatus").data("kendoMultiSelect").value();
        var filterAssignuser = $("#mdlTaskAssigned").data("kendoMultiSelect").value();

        var newurl = "/PJM/TaskCollection/GetGridDetailsGroup?TemplateID=" + TemplateID + "&filterStatus=" + filterStatus + "&filterAssignuser=" + filterAssignuser;
        GetGTLMData(newurl);
        HideLoader($("#global-overlay"));
    }

    function onDatewiseSearch() {

        var dates = {
            TemplateID: $("#ddlTemplate").data("kendoDropDownList").value(),
            fromDate: kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
            toDate: kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
        };

        $("#chartDateWiseSearch").data("kendoChart").dataSource.read(dates);
    }

    function GetStatuswiseAssignee(statustemplateid) {

        var dates = {
            TemplateID: $("#ddlTemplate").data("kendoDropDownList").value(),
            StatusTemplateID: statustemplateid,
            StatusLOV: $("#ddlLOV").val(),
        };
        $("#chartTaskByType").data("kendoChart").dataSource.read(dates);
    }

    function OnddlovChange(e) {
        var Groupid = $("#ddlTemplate").val();
        var dataItem = e.sender.dataItem();
        var StatusId = dataItem.Id;
        var Name = dataItem.Name;

        $("#mdlTaskStatus").data("kendoMultiSelect").value([StatusId]);
        $("#divstatus").empty();
        $("#divassignee").empty();

        $("#divstatus").append("Task Status [" + Name + "]");
        $("#divassignee").append("Task  " + Name + " by Assignee");

        var Status = {
            TemplateID: Groupid,
            StatusLOV: StatusId,
        };

        var User = {
            TemplateID: Groupid,
            StatusLOV: StatusId,
            StatusTemplateID: null,
        };
        $("#chartTaskByStatus").data("kendoChart").dataSource.read(Status);
        $("#chartTaskByType").data("kendoChart").dataSource.read(User);
        onSearch();

    }

    function onFilterReset() {
        var newvalue = new Array();
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        multiselectTaskStatus.value(newvalue);
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        multiselectTaskAssigned.value(newvalue);
        var id = $("#TemplateId").val();
        //var search = {
        //    templateId: id,
        //};
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        GetGTLMData();
        HideLoader($("#global-overlay"));
    }
    function OnTemplateChange(e) {
        var dataItem = e.sender.dataItem();
        var id = dataItem.Id;

        var ststus = $('#ddlLOV').val();

        var Status = {
            TemplateID: id,
            StatusLOV: ststus,
        };
        var User = {
            TemplateID: id,
            StatusLOV: ststus,
            StatusTemplateID: null,
        };
        $("#chartTaskByStatus").data("kendoChart").dataSource.read(Status);
        $("#chartTaskByType").data("kendoChart").dataSource.read(User);
        onSearch();
        //$('#chartTaskByStatus').data('kendoChart').dataSource.read({ "TemplateID": id });
        //$('#chartTaskByType').data('kendoChart').dataSource.read({ "TemplateID": id });
        //
        //$("#ddlLOV").val("f9de3fa5-1777-4e7a-b3f1-a0d81bb92fef");
        //$("#mdlTaskStatus").data("kendoMultiSelect").value(["f9de3fa5-1777-4e7a-b3f1-a0d81bb92fef"]);
        //$("#divstatus").empty();
        //$("#divassignee").empty();
        //
        //$("#divstatus").append("Task Status [InProgress]");
        //
        //$("#divassignee").append("Task InProgress by Assignee");
        onDatewiseSearch();
        //GetDescription(id);
       // selectedstatus = $("#mdlTaskAssigned").data("kendoMultiSelect").value();
        //$('#kgdProjectGridView').data('kendoGrid').dataSource.read({ "TemplateID": id, "filterStatus": selectedstatus });
        var search = filtertaskownerlist(id);

        $('#mdlTaskAssigned').data('kendoMultiSelect').dataSource.read(search);

        onSearch();
        //alert(id)
    }

    function filtertaskownerlist(id) {

        var seeach = { "TemplateID": id };
        return seeach;
    }


    function filter(id) {

        selectedstatus = $("#mdlTaskAssigned").data("kendoMultiSelect").value();
        var data = { "TemplateID": id, filterStatus: selectedstatus, filterAssignuser: selectedstatus };
        return data;
    }

    //function onTaskSeriesClick(e) {

    //    //alert("onTaskSeriesClick");
    //    //console.log(e.dataItem);
    //    var selectvalue = e.dataItem.Id;
    //    var multiselect = $("#mdlTaskStatus").data("kendoMultiSelect");
    //    var mdlvalue = multiselect.value();
    //    var newvalue = new Array();
    //    newvalue = mdlvalue;
    //    var addflag = true;
    //    if (newvalue.length > 0) {
    //        var i = 0;
    //        for (i = 0; i < newvalue.length;i++) {
    //            if (newvalue[i] == selectvalue) {
    //                addflag = false;
    //            }
    //        }
    //        if (addflag) {
    //            newvalue.push(selectvalue);
    //        }
    //    } else {
    //        newvalue.push(selectvalue);
    //    }
    //    multiselect.value(newvalue);

    //    var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
    //    var assignedvalue = multiselectTaskAssigned.value();
    //    var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
    //    var stagevalue = multiselectTaskStages.value();

    //    var search = {
    //        statusIds: newvalue,
    //        projectIds: stagevalue,
    //        recieverids: assignedvalue,
    //    };
    //    $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);

    //    //var g = $("#kgdProjectGridView").data("kendoGrid");
    //    //console.log(g);
    //    //g.dataSource.group({ field: "NtsStatus" });
    //   //alert("\n category : " + e.category + "\n value : " + e.dataItem.Code);
    //    //window.lModelcation.href = "/pmt/pmthome/tasks?taskStatus=" + e.dataItem.Code;
    //}

    //function onTaskAssignedSeriesClick(e) {

    //    //alert("onTaskSeriesClick");
    //    //console.log(e.dataItem);
    //    var selectvalue = e.dataItem.Id;
    //    var multiselect = $("#mdlTaskAssigned").data("kendoMultiSelect");
    //    var mdlvalue = multiselect.value();
    //    var newvalue = new Array();
    //    newvalue = mdlvalue;
    //    var addflag = true;
    //    if (newvalue.length > 0) {
    //        var i = 0;
    //        for (i = 0; i < newvalue.length; i++) {
    //            if (newvalue[i] == selectvalue) {
    //                addflag = false;
    //            }
    //        }
    //        if (addflag) {
    //            newvalue.push(selectvalue);
    //        }
    //    } else {
    //        newvalue.push(selectvalue);
    //    }
    //    multiselect.value(newvalue);

    //    var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
    //    var statusvalue = multiselectTaskStatus.value();
    //    var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
    //    var stagevalue = multiselectTaskStages.value();

    //    var search = {
    //        statusIds: statusvalue,
    //        projectIds: stagevalue,
    //        recieverids: newvalue,
    //    };
    //    $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);

    //    //var g = $("#kgdProjectGridView").data("kendoGrid");
    //    //console.log(g);
    //    //g.dataSource.group({ field: "UserName" });
    //}

    function onTaskStagesSeriesClick(e) {
        //alert("onTaskSeriesClick");
        //console.log(e.dataItem);
        var selectvalue = e.dataItem.Id;

        GetStatuswiseAssignee(selectvalue);
        //alert(selectvalue);

        //var multiselect = $("#mdlTaskStages").data("kendoMultiSelect");
        //var mdlvalue = multiselect.value();
        //var newvalue = new Array();
        //newvalue = mdlvalue;
        //var addflag = true;
        //if (newvalue.length > 0) {
        //    var i = 0;
        //    for (i = 0; i < newvalue.length; i++) {
        //        if (newvalue[i] == selectvalue) {
        //            addflag = false;
        //        }
        //    }
        //    if (addflag) {
        //        newvalue.push(selectvalue);
        //    }
        //} else {
        //    newvalue.push(selectvalue);
        //}
        //multiselect.value(newvalue);
        //var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        //var statusvalue = multiselectTaskStatus.value();
        //var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        //var assignedvalue = multiselectTaskAssigned.value();
        //
        //var search = {
        //    projectId: '@Model.Id',
        //    projectIds: newvalue,
        //    statusIds: statusvalue,
        //    recieverids: assignedvalue,
        //};
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        //

    }
    function onChangeTaskStatus() {

        onSearch();
        //var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        //var statusvalue = multiselectTaskStatus.value();
        //var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        //var assignedvalue = multiselectTaskAssigned.value();
        //alert(statusvalue);
        @*var search = {
            projectId: '@Model.Id',
            projectIds: stagevalue,
            statusIds: statusvalue,
            recieverids: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);*@

    }
    @*function onChangeTaskAssigned() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var search = {
            projectId: '@Model.Id',
            projectIds: stagevalue,
            statusIds: statusvalue,
            recieverids: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);

    }*@
    @*function onChangeTaskStages() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var search = {
            projectId: '@Model.Id',
            projectIds: stagevalue,
            statusIds: statusvalue,
            recieverids: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);

    }*@
    //function OnDataBound(arg) {

    //    document.getElementById('projectFiles').style.border = 'none';
    //    var data = $("#projectFiles").data("kendoListView").dataSource.data();
    //    var data1 = $("#ProjectTask12").data("kendoListView").dataSource.data();
    //    if (data.length == 0) {
    //        $('#no-data-file').show();
    //    } else {
    //        $('#no-data-file').hide();
    //    }
    //    if (data1.length == 0) {
    //        $('#no-data-notifi').show();
    //    } else {
    //        $('#no-data-notifi').hide();
    //    }
    //}

    function OnTaskAssChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-taskchart').show();

        } else {
            $('#no-data-taskchart').hide();
        }
    }

    function OnTaskStatusChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-chart').show();

        } else {
            $('#no-data-chart').hide();
        }
    }

    //function OnTaskTimeChartDataBound(e) {
    //    var view = e.sender.dataSource.view();
    //    if (view.length === 0) {
    //        $('#no-data-timechart').show();

    //    } else {
    //        $('#no-data-timechart').hide();
    //    }
    //}

    function OnProjectStageChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-stagechart').show();

        } else {
            $('#no-data-stagechart').hide();
        }
    }

    @*function onFilterReset() {
        var newvalue = new Array();
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        multiselectTaskStatus.value(newvalue);
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        multiselectTaskAssigned.value(newvalue);
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        multiselectTaskStages.value(newvalue);
        var search = {
            projectId: '@Model.Id',
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);

    }*@

    //function OnSelect(type) {
    //
    //    if (type == 'AssignedToMe') {
    //        $('#assignedtome').show();
    //        $('#reqbyme').hide();
    //        $('#teamtask').hide();
    //    }
    //    else if (type == 'RequestedByMe') {
    //        $('#assignedtome').hide();
    //        $('#reqbyme').show();
    //        $('#teamtask').hide();
    //    }
    //    else {
    //        $('#assignedtome').hide();
    //        $('#reqbyme').hide();
    //        $('#teamtask').show();
    //    }
    //}
</script>


<div class="row hr-pad-top-10">
    <div class="col-md-12">
        <h4>
            @Resource["TaskCollectionGroup-LineManager"]
        </h4>
    </div>
</div>

<div id="banner" role="group" style="width:100%;color:#FFFFFF;background: #17a2b8;padding-left: 5px;">
    <div class="row" style="padding-top:10px;">

        <div class=" col-md-9">
            <div style="font-size:.8em;padding-top:0px;">
                @Resource["TaskGroup"]

                <div class="project-dropdown" id="dropdown" title="@Resource["TaskTemplate"]">

                    @*@(Html.Kendo().DropDownList()
        .Name("ddlTemplate")

              .DataTextField("Name")
              .DataValueField("Id")
              .Filter(FilterType.Contains)
              .DataSource(source =>
              {
                  source.Read(read =>
                  {
                      read.Action("GetGroupListByType", "NtsGroup", new { @area = "Cms",@type=NtsTypeEnum.Task});
                  });
              })
              .Events(x => x.Change("OnTemplateChange"))
              .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
              )*@
                    <input id="ddlTemplate" class="form-control" style="width:80%" />

                    
                </div>
            </div>
        </div>
    </div>
    <div class="row" style="padding-top:20px">

        @* <div style="display:inline-flex;padding-left:140px">*@
        <div class=" col-md-3">
            <div title="Description" style="font-size:.8em">
                @SharedResource["Description"]
                @*<div style="padding-top:5px;font-size:18px" id="divDescription">@Model.Description</div>*@
</div >
</div >

</div >
            @* <div class="btn banner-item banner-item-date col-sm-2">&nbsp;</div>*@
</div >


<div id = "appWrapper" class="hr-pad-top-15">

            @*<div class="row no-gutter btn-group btn-group-sm" role="group" style="width:100%;margin:5px;">
        <button type="button" onclick="OnSelect('AssignedToMe');" class="btn btn-success col-sm-2" id="RequestedByMe">Assigned To Me&nbsp;</button>
        <button type="button" onclick="OnSelect('RequestedByMe');" class="btn btn-success col-sm-2" id="RequestedByMe">Requested By Me&nbsp;</button>
        <button type="button" onclick="OnSelect('TeamTask');" class="btn btn-success col-sm-2" id="TeamTask">Team Task&nbsp;</button>
    </div>*@

<div class="row">
<div class="col-sm-4">
    <div class=" d-flex justify-content-center">
        @SharedResource["Status"]:

        <div class="project-dropdown" id="dropdown" style="width:65%" title="Task Template">
            <input id="ddlLOV" class="form-control" style="width:80%" />

            @*@(Html.Kendo().DropDownList()
         .Name("ddlLOV")
        .DataTextField("Name")
        .DataValueField("Id")
          .OptionLabel("Select ...")
        .Filter(FilterType.Contains)

        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_TASK_STATUS" });
            });
        })
        .Events(x => x.Change("OnddlovChange"))
        .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
        )*@

        </div>
        </div>
        </div>
        <div class="col-sm-4"></div>
        <div class="col-sm-4">
            <div class=" d-flex justify-content-center">
                @SharedResource["From"]
                @*@(Html.Kendo().DatePicker()
         .Name("FromDate")
         .Value(DateTime.Today.AddMonths(-1))
         .HtmlAttributes(new { @class = "date" })
        )*@
                <input id="FromDate" class="date"  />
                @SharedResource["To"] < br />
                @*@(Html.Kendo().DatePicker()
         .Name("ToDate")
         .Value(DateTime.Today)
         .HtmlAttributes(new { @class = "date" })
        )*@
            <input id="ToDate" class="date"  />
                < br />
                < button class= "btn btn-filter-reset" onclick = "onDatewiseSearch()" title = "@SharedResource["ResetFilter"]" >< i class= "fa fa - search" ></ i ></ button >
            </div>
            @*<div style="text-align:center;">


    </div>*@
</div >
</div >
            @*<div style="text-align:right">

        <div class="">
            From Date:
            @(Html.Kendo().DatePicker()
                 .Name("FromDate").HtmlAttributes(new {@class="date" })
            )
            To Date:
            @(Html.Kendo().DatePicker()
                 .Name("ToDate").HtmlAttributes(new { @class = "date" })
            )
            <button class="btn btn-filter-reset" onclick="onDatewiseSearch()" title="Reset Filter">Search</button>
        </div>




    </div>*@
                <div class="row" id="assignedtome">
                    <div class="col-sm-4">

                        <div class="panel panel-success">
                            <div class="panel-heading" id="divstatus">@Resource["TaskStatus[InProgress]"]</div>
                            <div class="panel-body">
                                @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                                            .Name("chartTaskByStatus")
                                            .Legend(legend => legend
                                                .Position(ChartLegendPosition.Bottom)
                                            )
                                                .DataSource(ds => ds
                                                .Read(read => read.Action("GetChartByStatusGroup", "TaskCollection", new { @area = "PJM", TemplateID=Model.Id}))
                                                )
                                            .SeriesColors(new string[] { "#ff9800", "#fad84a", "#4caf50", "#03a9f4" })
                                            .Series(series =>
                                            {
                                                series.Donut(model => model.Value, model => model.Type)
                                                .Labels(labels => labels
                                                    .Visible(true)
                                                    .Position(ChartPieLabelsPosition.Center)
                                                    // .Template("#= category # - #= kendo.format(' {0:n0}', value) # ")
                                                    .Background("transparent")

                                                );

                                            }).HtmlAttributes(new { @style = "height:300px;" })
                                            .Tooltip(tooltip => tooltip
                                                .Visible(true)
                                            .Template("#= category # - #= kendo.format('{0:P}', percentage) #")
                                            ).Events(e => e
                              .SeriesClick("onTaskStagesSeriesClick")
                              .DataBound("OnTaskStatusChartDataBound"))

                        )*@
                                <div id="no-data-chart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>@SharedResource["NoDataFound"]</span></div>

                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="panel panel-info">
                            <div class="panel-heading" id="divassignee">@Resource["TaskInProgressbyAssignee"]</div>
                            <div class="panel-body">
                                @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                              .Name("chartTaskByType")
                              .Legend(legend => legend
                              .Position(ChartLegendPosition.Bottom)
                              )
                              .DataSource(ds => ds
                              .Read(read => read.Action("GetChartByAssigneduserGroup", "TaskCollection", new { @area = "PJM", projectId = Model.Id }))

                              )
                              .SeriesColors(new string[] { "#03a9f4", "#ff9800", "#fad84a", "#4caf50" })
                              .Series(series =>
                              {
                                  series.Pie(model => model.Value, model => model.Type)
                                  .Labels(labels => labels
                                  .Visible(true)
                                  .Position(ChartPieLabelsPosition.Center)
                                  .Background("transparent"));
                              }).HtmlAttributes(new { @style = "height:300px;" })
                               .Tooltip(tooltip => tooltip
                               .Visible(true)
                               .Template("#= category # - #= kendo.format('{0:P}', percentage) #"))
                               .Events(e => e
                             //  .SeriesClick("onTaskAssignedSeriesClick")
                               .DataBound("OnTaskAssChartDataBound"))
                        )*@
                                <div id="no-data-taskchart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>@SharedResource["NoDataFound"]</span></div>


                            </div>
                        </div>
                    </div>
                    <div class="col-sm-4">
                        <div class="panel panel-warning">
                            <div class="panel-heading">@Resource["TaskSLA"]</div>



                            <div class="panel-body">
                                @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                                .Name("chartDateWiseSearch")
                                .Legend(legend => legend
                                .Position(ChartLegendPosition.Bottom)
                                )

                                .DataSource(ds => ds
                                .Read(read => read.Action("GetDatewiseTaskGroup", "TaskCollection", new { @area = "PJM"}))
                                )
                                .Series(series =>
                                {

                                    series.Pie(model => model.ActualSLA, model => model.Type)
                                   .Labels(labels => labels
                                   .Visible(true)
                                   .Position(ChartPieLabelsPosition.Center)
                                   .Background("transparent")

                                   ).Name("Actual SLA");
                                }).HtmlAttributes(new { @style = "height:300px;" })
                                .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Template("#= category # - #= kendo.format('{0:P}', percentage) #"))
                        .Events(e => e
                        //.SeriesClick("onTaskStagesSeriesClick")
                        .DataBound("OnProjectStageChartDataBound")
                        )
                        )*@
                                <div id="no-data-stagechart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>@SharedResource["NoDataFound"]"</span></div>

                            </div>
                        </div>
                    </div>
                </div>


                <div class="row">
                    <div class="col-12">
                        <div class="panel panel-filter">
                            <div class="panel-heading">@SharedResource["Filter"]</div>
                            <div class="panel-body">
                                <div class="row" style="padding:5px;">
                                    <div class="col-4">
                                        @Resource["TaskStatus"]
                                        @*@(Html.Kendo().MultiSelect().Name("mdlTaskStatus")
                              .DataSource(source =>
                              {
                                  source.Read(read =>
                                  {
                                      read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_TASK_STATUS" });
                                  });
                              })
                              .AutoClose(false)
                              .Placeholder(@Resource["FilterTaskStatus"])
                              .DataTextField("Name")
                              .DataValueField("Id")
                              .Value(new[] { "f9de3fa5-1777-4e7a-b3f1-a0d81bb92fef" })
                              .Events(e => e.Change("onChangeTaskStatus"))
                              .HtmlAttributes(new { @class = "hr-x-large search-control" })
             )*@
                                        <select id="mdlTaskStatus" data-placeholder="@Resource["FilterTaskStatus"]" class="hr-x-large search-control"></select>

                                    </div>
                                    <div class="col-4">
                                        @Resource["TaskAssigned"]
                                        @*@(Html.Kendo().MultiSelect().Name("mdlTaskAssigned")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("mdlAssignuserGroup", "TaskCollection", new { area = "PJM"}).Data("filtertaskownerlist");
                                 });
                             })
                             .AutoClose(false)
                             .Placeholder(Resource["FilterTaskAssigned"])
                             .DataTextField("Type")
                             .DataValueField("AssigneeId")
                             .Events(e => e.Change("onChangeTaskStatus"))
                             .HtmlAttributes(new { @class = "hr-x-large search-control" })
            )*@
                                        <select id="mdlTaskAssigned" data-placeholder="@Resource["FilterTaskAssigned"]" class="hr-x-large search-control"></select>


                                    </div>
                                    <div class="col-4" style="text-align:center;">
                                        <br />
                                        <button class="btn btn-filter-reset" onclick="onFilterReset()" title="@SharedResource["ResetFilter"]">@SharedResource["Reset"]</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="panel panel-primary">
                            <div class="panel-heading">@Resource["TaskDetails"]</div>
                            <div class="panel-body">
                                <div id="kgGTLM" style="width:100%;height:550px" class="ag-theme-alpine"></div>

                                @*@(Html.Kendo().Grid<NtsTaskChartList>()
                                .Name("kgGTLM")
                                .Columns(columns =>
                                {
                                    columns.Bound(p => p.TemplateName).Title(@Resource["TemplateName"]).Width(250);
                                    columns.Bound(p => p.TaskNo).Title(@Resource["TaskNo."]).Width(250);
                                    columns.Bound(p => p.TaskSubject).Title(@Resource["TaskSubject"]).Width(300);
                                    columns.Bound(p => p.AssignName).Title(@Resource["TaskAssign"]).Width(250);
                                    columns.Bound(p => p.Priority).Title(@SharedResource["Priority"]).Width(200);
                                    columns.Bound(p => p.Status).Title(@SharedResource["Status"]).Width(200);
                                    columns.Bound(p => p.StartDate).Title(@SharedResource["StartDate"]).Format("{0:dd MMM yyyy}").Width(150);
                                    columns.Bound(p => p.DueDate).Title(@SharedResource["DueDate"]).Format("{0:dd MMM yyyy}").Width(150);
                                })
                                .ToolBar(toolbar =>
                                {
                                    //toolbar.Excel();
                                    //toolbar.Pdf();
                                    toolbar.Search().Text(@SharedResource["Search"]);
                                })
    //.Pdf(pdf=>pdf.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
    //.Excel(excel=>excel.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
    .ColumnMenu(col=>col.Filterable(false))
    .Height(700)
    .Editable()
    .Pageable()
    .Sortable()
    .Navigatable()
    .Resizable(r=>r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Groupable(g=>g.ShowFooter(false))
    .Filterable()
    .Scrollable()
    //.Events(events => events.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .AutoSync(true)
        .ServerOperation(false)
        //.Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.Id);

        })
        //.Group(group=>group.Add("Category.CategoryName", typeof(string), ListSortDirection.Descending))
        //.Create("DetailProducts_Create", "Grid")
        .Read("GetGridDetailsGroup", "TaskCollection", new { @area = "PJM", TemplateID=Model.Id})
    //.Update("DetailProducts_Update", "Grid")
    //.Destroy("DetailProducts_Destroy", "Grid")
    )
)*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
