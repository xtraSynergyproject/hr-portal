@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.LeaveController> Resource
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model ManpowerLeaveSummaryViewModel
@{
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}



<script type="text/javascript">
    $(document).ready(function () {
        //getDataLeaveSummary();
        $("#StartDate").kendoDatePicker({ value: "@Model.StartDate" });
        $("#EndDate").kendoDatePicker({ value: "@Model.EndDate" });


        $("#PersonId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CHR/HRDirect/GetPersonList",
                    }
                }
            }
        });

        $(".k-grid .k-grid-btnAdd span").addClass("k-icon k-add");
        $("#btnSearch").click(function () {

            var personId = $("#PersonId").val();
            var startDate = $("#StartDate").val();
            var endDate = $("#EndDate").val();
            if (startDate != "" && endDate == "") {
                $(".hr-v-summary").removeClass("validation-summary-valid");
                $(".hr-v-summary").addClass("validation-summary-errors");
                $(".hr-v-summary ul").html("@Resource["Enddateisempty"]");
            } else if (new Date(startDate) > new Date(endDate)) {
                $(".hr-v-summary").removeClass("validation-summary-valid");
                $(".hr-v-summary").addClass("validation-summary-errors");
                $(".hr-v-summary ul").html("@Resource["Enddateshouldbegreaterthanstartdate"]");
            } else {
               // var url = "/Chr/Leave/EmployeeLeaveSummary?personId=" + personId + "&startDate=" + startDate + "&endDate=" + endDate;
               // window.location.href = url;
                var search = FilterGrid();
                getDataLeaveSummary(search);
                //$("#kgrdLeaveSummary").data("kendoGrid").dataSource.read(search);
            }
        })

    });
    //function FilterGrid() {
    //    var search = {
    //        personId: $("#PersonId").val()
    //    };
    //    return search;
    //}

    function OnSubmit() {
        var category = $("#ElementCategory").data("kendoDropDownList").value();
        //var search = FilterGrid();
        //$("#kgrdLeaveSummary").data("kendoGrid").dataSource.read({ elementCategory: category, search: search });
        //return false;
        var search = getDataLeaveSummary();
        window.parent.getDataLeaveSummary(search);
    }
    function OnPrint(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = "/nts/service/DownloadServiceRequest?serviceId=" + dataItem.ServiceId;
        return false;
    }
    function FilterGrid()
    {
        var search=
        {
            PersonId : $("#PersonId").val(),
            StartDate : $("#StartDate").val(),
            EndDate : $("#EndDate").val(),
        }
        return search;
    }
</script>
<div class="appWrapper">
    <div class="formHeader">
        <h4>
            @*@ViewBag.Title*@
            @Resource["EmployeeLeaveSummaryReport"]
        </h4>
    </div>
    <div class="row no-gutter hr-pad-top-15">
        <div class="form-group col-xs-12 col-lg-4">
            <div class="col-lg-12 label-div">
                @SharedResource["Person"]
            </div>
            <div class="col-lg-12">
                @*@(Html.Kendo().DropDownListFor(model => model.PersonId)
                    .DataSource(source =>
                    {
                       source.Read(read =>
                       {
                          read.Action("GetPersonList", "HRDirect", new { area = "CHR" });
                       });
                    })
                    .OptionLabel(ApplicationConstant.PlaceHolder_AllOption)
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .Filter(FilterType.Contains)
                    .HtmlAttributes(new { @class = "hr-xx-large" })
                    )*@

                <input asp-for="PersonId" id="PersonId" class="hr-xx-large" />
            </div>
        </div>

        <div class="form-group col-xs-12 col-lg-3">
            <div class="col-lg-12 label-div">
                @SharedResource["StartDate"]
            </div>
            <div class="col-lg-9">
                @*@Html.Kendo().DatePickerFor(m => m.StartDate).HtmlAttributes(new { @class = "form-control" })*@
                <input id="StartDate" class="form-control"/>
            </div>
        </div>
        <div class="form-group col-xs-12 col-lg-3">
            <div class="col-lg-12 label-div">
                @SharedResource["EndDate"]
            </div>
            <div class="col-lg-9">
                @*@Html.Kendo().DatePickerFor(m => m.EndDate).HtmlAttributes(new { @class = "form-control" })*@
                <input id="EndDate" class="form-control" />
            </div>
        </div>

        <div class="form-group col-xs-12 col-lg-2">
            <div class="col-lg-12 label-div">
                &nbsp;
            </div>
            <div class="col-lg-12">
                @*@Html.Kendo().Button().Name("btnSearch").Content(@SharedResource["Search"]).HtmlAttributes(new { @class = "k-primary" })*@
                <button type="button" class="btn btn-primary" id="btnSearch">@SharedResource["Search"]</button>
            </div>
        </div>
    </div>
    <Script>
  var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [

        { field: "PersonFullName", headerName: "@Resource["EmployeeName"]" },
        { field: "PersonNo", headerName: "@Resource["EmployeeNo"]" },
        { field: "SponsorshipNo", headerName: "@Resource["IqamahNo"]" },
        {
            field: "PayrollStartDate",  headerName: "@Resource["PayrollStartDate"]",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
         {
             field: "PayrollEndDate",  headerName: "@Resource["PayrollEndDate"]",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        { field: "TotalEarning", headerName: "@Resource["TotalEarning"]" },
        { field: "TotalDeduction", headerName: "@Resource["TotalDeduction"]" },
        { field: "NetAmount", headerName: "@Resource["NetAmount"]" }




            ];


            $(function () {

                getDataLeaveSummary();


            });
        
        function getDataLeaveSummary(search) {
            document.getElementById("kgrdLeaveSummary").innerHTML = "";
           //  var search = {
              //  PersonId: $("#PersonId").val(),
              //  StartDate: $("#StartDate").val(),
              //   EndDate: $("#EndDate").val(),
      //  };
        //return search;
       
        gridConfig(
            "kgrdLeaveSummary",
            "@Url.Action("EmployeeLeaveSummaryData", "Leave", new { area = "CHR"})?PersonId=" + search.PersonId + "&StartDate=" + search.StartDate+"&EndDate="+search.EndDate,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
            }
    </Script>
    <div class="col-12">

        <div id="kgrdLeaveSummary" style="width:100%;height:550px" class="ag-theme-alpine"></div>
    </div>
    @*<div class="hr-pad-top-10">
            @(Html.Kendo().Grid<ManpowerLeaveSummaryViewModel>
                ().Name("kgrdLeaveSummary")
                //.Width(100)
                .Columns(col =>
                {
                    //col.Command(c => c.Custom("Print").Text("Print").SendDataKeys(true).Click("OnPrint")).Width(100);
                    col.Bound(c => c.PersonName).Title(@Resource["EmployeeName"]).Width(150);
                    col.Bound(c => c.PersonNo).Title(@Resource["EmployeeNo"]).Width(100);
                    col.Bound(c => c.SponsorshipNo).Title(Resource["IqamahNo"]).Width(100);
                    col.Bound(c => c.OrganizationName).Title(@Resource["OrganizationName"]).Width(100);
                    col.Bound(c => c.JobName).Title(@Resource["JobName"]).Width(100);
                    col.Bound(c => c.DateOfJoin).Title(@Resource["DateofJoin"]).Format("{0:dd MMM yyyy}").Width(100);
                    col.Bound(c => c.TotalWorkingDays).Title(@Resource["TotalWorkingDays"]).Width(100);
                    //col.Bound(c => c.TotalWorkingHours).Title(@Resource["TotalWorkingHours"]).Width(100);
                    col.Bound(c => c.EmployeeWorkingDays).Title(@Resource["EmployeeWorkingDays"]).Width(100);
                    //col.Bound(c => c.EmployeeWorkingHours).Title(@Resource["EmployeeWorkingHours"]).Width(100);
                    col.Bound(c => c.AnnualLeaveDays).Title(@Resource["AnnualLeaveDays"]).Width(100);
                    col.Bound(c => c.SickLeaveDays).Title(@Resource["SickLeaveDays"]).Width(100);
                    col.Bound(c => c.UnpaidLeaveDays).Title(@Resource["UnpaidLeaveDays"]).Width(100);
                   // col.Bound(c => c.OtherLeaveDays).Title(@Resource["OtherLeaveDays"]).Width(100);
                    col.Bound(c => c.TotalLeaveDays).Title(@Resource["TotalLeaveDays"]).Width(100);
                })
            .ToolBar(toolbar =>
            {
                toolbar.Excel();
            })
            .Excel(e => e.FileName("UserLeaveSummaryReport.xlsx").AllPages(true))
            .Scrollable(x => x.Enabled(true))
            .Resizable(x=>x.Columns(true))
            .Sortable(srt => srt.Enabled(true))
            .Selectable(select => select.Enabled(false))
            .Filterable(f => f.Extra(false)
            .Operators(o => o.ForString(s => s.Clear()
            .Contains("Contains")
            .IsEqualTo("Is equal to")
            )))
            .Groupable(g => g.ShowFooter(false))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .AutoBind(true)
            .DataSource(
            dataSource => dataSource
            .Ajax()
            .PageSize(10)
            //.Events(events => events.Error("OnError"))
            .Read(read => read.Action("EmployeeLeaveSummaryData", "Leave", new { /*PersonId = Model.PersonId, StartDate = Model.StartDate, EndDate = Model.EndDate,*/area="CHR" }).Data("FilterGrid"))
            // .Update(update => update.Action("Update", "ManpowerReport"))
            // .Destroy(destroy => destroy.Action("Delete", "ManpowerReport"))
            .Model(model => model.Id(p => p.PersonId))
            )
            //.Editable(
            // editable => editable.Mode(GridEditMode.PopUp)
            //  .DisplayDeleteConfirmation(ERP.Translation.Message.DeleteConfirm2)
            // )
            )

        </div>*@
</div>

 
