@inject IStringLocalizer<CMS.UI.Web.Areas.Pay.Controllers.SalaryInfoController> Resource
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model SalaryInfoViewModel
@{    
    Layout = null;
}

<style>
    .labeldiv {
        font-weight: 600;
        color: black;
    }
</style>

<script type="text/javascript">
    var id = '@Model.NoteId';
    var Noteid='@Model.NoteId'

    $(document).ready(function () {

        '@Model.TakeAttendanceFromTAA' == 'True' ? $('#TAA').prop('checked', true) : $('#TAA').prop('checked', false);
        '@Model.IsEmployeeEligibleForOvertime' == 'True' ? $('#ForOvertime').prop('checked', true) : $('#ForOvertime').prop('checked', false);
        '@Model.IsEmployeeEligibleForEndOfService' == 'True' ? $('#ForEndOfService').prop('checked', true) : $('#ForEndOfService').prop('checked', false);
        '@Model.IsEmployeeEligibleForFlightTicketsForSelf' == 'True' ? $('#ForFlightTicketsForSelf').prop('checked', true) : $('#ForFlightTicketsForSelf').prop('checked', false);
        '@Model.IsEmployeeEligibleForFlightTicketsForDependants' == 'True' ? $('#ForFlightTicketsForDependants').prop('checked', true) : $('#ForFlightTicketsForDependants').prop('checked', false);
        '@Model.DisableFlightTicketProcessingInPayroll' == 'True' ? $('#ProcessingInPayroll').prop('checked', true) : $('#ProcessingInPayroll').prop('checked', false);
        '@Model.IsValidateDependentDocumentForBenefit' == 'True' ? $('#DependentDocumentForBenefit').prop('checked', true) : $('#DependentDocumentForBenefit').prop('checked', false);
        '@Model.IsEligibleForSalaryTransferLetter' == 'True' ? $('#ForSalaryTransferLetter').prop('checked', true) : $('#ForSalaryTransferLetter').prop('checked', false);

         if ('@Model.Id' !=null && '@Model.Id'!='' ) {
            $("#salaryinfoelement").show();            
         }
         else {
            $("#salaryinfoelement").hide();
         }
    });


    function ShowErrors(err) {
        $(".hr-v-summary").removeClass("validation-summary-valid");
        $(".hr-v-summary").addClass("validation-summary-errors");
        var msg = ExtractError(err);
        $(".hr-v-summary ul").html(msg);
    }

    //function Close(dorefresh, mode) {
    //    var win = GetMainWindow();
    //    win.CloseWindow();
    //    return false;

    //    if (dorefresh) {

    //        if (mode == "Create") {
    //            $("#kgrdSalaryElementInfo").data("kendoTreeList").dataSource.read();
    //        }
    //        else if (mode == "Correct") {
    //            $("#kgrdSalaryElementInfo").data("kendoTreeList").dataSource.read();
    //        }
    //         else if (mode == "Update") {
    //            $("#kgrdSalaryElementInfo").data("kendoTreeList").dataSource.read();
    //        }
    //    }
    //}

    //function OnAfterNoteCreate() {
    //    window.parent.getSalaryInfoElement();
    //}

    function EditPayroll(salinfoid, perid) {
        var url = '/pay/SalaryInfo/Create?salaryInfoId=' + salinfoid + '&personId=' + perid;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Edit Salary Info', Width: 1200, Height: 650 });
        return false;
    }

</script>

<div id="salaryinfo">
    <div class="row">                 

            <div id="appWrapper5">
                @if(Model.UserRoleCodes.IsNotNull() && Model.UserRoleCodes.Contains("HR"))
                {
                <div class="col-xs-12 col-sm-12 col-lg-12">
                    <button class="btn btn-primary" style="float:right" onclick="EditPayroll('@Model.Id','@Model.PersonId');">Edit</button>
                </div>
                }
                    
            <div class="row no-gutter hr-pad-top-15">
                @*<div class="form-group col-xs-12 col-sm-6">
            <div class="col labeldiv">
                @Resource["Person"]
            </div>
            <div class="col-lg-9">
                @Html.DisplayFor(x => x.PersonName)
            </div>
        </div>*@
                <div class="form-group col-xs-12 col-sm-6">
                    <div class="col labeldiv">
                        @Resource["Pay Group"]
                        @*@Html.LabelFor(m => m.PayGroupId, new { @class = "control-label" })*@
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="PayGroupId" id="PayGroupId" class="form-control" />*@
                        @Html.DisplayFor(x => x.PayGroupName)
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6">
                    <div class="col labeldiv">
                        @Resource["Pay Calendar"]
                        @*@Html.LabelFor(m => m.PayCalendarId, new { @class = "control-label" })*@
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="PayCalendarId" id="PayCalendarId" class="form-control" />*@
                        @Html.DisplayFor(x => x.PayrollCalendarName)
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    @*<div class="col-lg-9 labeldiv">
                @Resource["TakeAttendanceFromTAA"]
            </div>*@
                    <div class="col">
                        @*<input type="checkbox" id="TAA" name="TAA" disabled />*@
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="TAA" name="TAA" disabled>
                            <label class="custom-control-label" for="TAA">@Resource["Take Attendance From TAA"]</label>
                        </div>
                        @*<label for="TAA"> @Resource["TakeAttendanceFromTAA"]</label>*@
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    @*<div class="col-lg-9 labeldiv">
                @Resource["IsEmployeeEligibleForOvertime"]
            </div>*@
                    <div class="col">
                        @*<input type="checkbox" id="ForOvertime" name="ForOvertime" disabled />*@
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="ForOvertime" name="ForOvertime" disabled>
                            <label class="custom-control-label" for="ForOvertime">@Resource["Is Employee Eligible For Overtime"]</label>
                        </div>
                        @*<label for="ForOvertime"> @Resource["IsEmployeeEligibleForOvertime"]</label>*@
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    @*<div class="col-lg-9 labeldiv">
                @Resource["IsEmployeeEligibleForEndOfService"]
            </div>*@
                    <div class="col">
                        @*<input type="checkbox" id="ForEndOfService" name="ForEndOfService" disabled />*@
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="ForEndOfService" name="ForEndOfService" disabled>
                            <label class="custom-control-label" for="ForEndOfService">@Resource["Is Employee Eligible For End Of Service"]</label>
                        </div>
                        @*<label for="ForEndOfService"> @Resource["IsEmployeeEligibleForEndOfService"]</label>*@
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    @*<div class="col-lg-9 labeldiv">
                @Resource["IsEmployeeEligibleForFlightTicketsForSelf"]
            </div>*@
                    <div class="col">
                        @*<input type="checkbox" id="ForFlightTicketsForSelf" name="ForFlightTicketsForSelf" disabled />*@
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="ForFlightTicketsForSelf" name="ForFlightTicketsForSelf" disabled>
                            <label class="custom-control-label" for="ForFlightTicketsForSelf">@Resource["Is Employee Eligible For Flight Tickets For Self"]</label>
                        </div>
                        @*<label for="ForFlightTicketsForSelf"> @Resource["IsEmployeeEligibleForFlightTicketsForSelf"]</label>*@
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    <div class="col">
                        @*<input type="checkbox" id="ForFlightTicketsForDependants" name="ForFlightTicketsForDependants" disabled />*@
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="ForFlightTicketsForDependants" name="ForFlightTicketsForDependants" disabled>
                            <label class="custom-control-label" for="ForFlightTicketsForDependants">@Resource["Is Employee Eligible For Flight Tickets For Dependants"]</label>
                        </div>
                        @*<label for="ForFlightTicketsForDependants"> @Resource["IsEmployeeEligibleForFlightTicketsForDependants"]</label>*@
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    @*<div class="col-lg-9 labeldiv">
                @Resource["DisableFlightTicketProcessingInPayroll"]
            </div>*@
                    <div class="col">
                        @*<input type="checkbox" id="ProcessingInPayroll" name="ProcessingInPayroll" disabled />*@
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="ProcessingInPayroll" name="ProcessingInPayroll" disabled>
                            <label class="custom-control-label" for="ProcessingInPayroll">@Resource["Disable Flight Ticket Processing In Payroll"]</label>
                        </div>
                        @*<label for="ProcessingInPayroll"> @Resource["DisableFlightTicketProcessingInPayroll"]</label>*@
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    @*<div class="col-lg-9 labeldiv">
                @Resource["IsValidateDependentDocumentForBenefit"]
            </div>*@
                    <div class="col">
                        @*<input type="checkbox" id="DependentDocumentForBenefit" name="DependentDocumentForBenefit" disabled />*@
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="DependentDocumentForBenefit" name="DependentDocumentForBenefit" disabled>
                            <label class="custom-control-label" for="DependentDocumentForBenefit">@Resource["Is Validate Dependent Document For Benefit"]</label>
                        </div>
                        @*<label for="DependentDocumentForBenefit"> @Resource["IsValidateDependentDocumentForBenefit"]</label>*@
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    @*<div class="col-lg-9 labeldiv">
                @Resource["IsEligibleForSalaryTransferLetter"]
            </div>*@
                    <div class="col">
                        @*<input type="checkbox" id="ForSalaryTransferLetter" name="ForSalaryTransferLetter" disabled />*@
                        <div class="custom-control custom-switch">
                            <input type="checkbox" class="custom-control-input" id="ForSalaryTransferLetter" name="ForSalaryTransferLetter" disabled>
                            <label class="custom-control-label" for="ForSalaryTransferLetter">@Resource["Is Eligible For Salary Transfer Letter"]</label>
                        </div>
                        @*<label for="ForSalaryTransferLetter"> @Resource["IsEligibleForSalaryTransferLetter"]</label>*@
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    <div class="col labeldiv">
                        @Resource["Flight Ticket Frequency"]
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="FlightTicketFrequency" id="FlightTicketFrequency" class="form-control" />*@
                        @Html.DisplayFor(x => x.FlightTicketFrequency)
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    <div class="col-lg-3 labeldiv">
                        @Resource["Over time Payment Type"]
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="OvertimePaymentType" id="OvertimePaymentType" class="form-control" />*@
                        @Html.DisplayFor(x => x.OvertimePaymentType)
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    <div class="col-lg-3 labeldiv">
                        @Resource["Payment Mode"]
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="PaymentMode" id="PaymentMode" class="form-control" />*@
                        @Html.DisplayFor(x => x.PaymentMode)
                    </div>
                </div>

                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    <div class="col-lg-3 labeldiv">
                        @Resource["Bank Branch"]
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="BankBranchId" id="BankBranchId" class="form-control" />*@
                        @Html.DisplayFor(x => x.PayrollBankBranchName)
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    <div class="col-lg-3 labeldiv">
                        @Resource["Bank Account Number"]
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="BankAccountNumber" type="text" class="form-control" />*@
                        @Html.DisplayFor(x => x.BankAccountNumber)
                    </div>
                </div>
                <div class="form-group col-xs-12 col-sm-6" style="padding-top:5px;padding-bottom:5px;">
                    <div class="col-lg-9 labeldiv">
                        @Resource["Bank Iban Number"]
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="BankIBanNumber" type="text" class="form-control" />*@
                        @Html.DisplayFor(x => x.BankIBanNumber)
                    </div>
                </div>
                <div class="form-group  col-sm-12 col-lg-6" style="padding-top:5px;padding-bottom:5px;">
                    <div class="col-lg-9 labeldiv">
                        @Resource["Unpaid Leaves Not In System"]
                    </div>
                    <div class="col-lg-9">
                        @*<input asp-for="UnpaidLeavesNotInSystem" type="text" class="form-control" />*@
                        @Html.DisplayFor(x => x.UnpaidLeavesNotInSystem)
                    </div>
                </div>

            </div>

                @*@if (Model.Id.IsNotNullAndNotEmpty())
        {
            <div class="row" id="total" style="display:none">
                <div class="col-md-1">
                    @Resource["TotalSalary"]
                </div>
                <div class="col-md-1">
                    @Html.Kendo().NumericTextBoxFor(m => m.TotalSalary).HtmlAttributes(new { @class = "form-control " })
                </div>
                <div class="col-md-2">
                    <a class="k-button k-button-icontext" href="#" id="btnCalc" onclick="return Calculate();">
                        @Resource["CalculateSalaryElement"]
                    </a>
                </div>
            </div>
        <br />
        }*@
            </div>
            <br />
    </div>
    <hr />

    <div class="row" id="salaryinfoelement">
        <div class="col-md-12" style="font-size:18px;font-weight:bold;">@Resource["Salary Info Element"]</div>
        <div class="col-12">
            @*<button type='button' class='btn btn-primary' onclick='OnCreateSalaryElementInfo();'><i class='fa fas fa-plus'></i>&nbsp;Create</button>*@
            <br />
            <div id="myGridSalaryInfoElement" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>        
    </div>
</div>
<Script>
  var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        //{
        //    headerName: "Actions",
        //    field: "Id",
        //    cellRenderer: params => {
        //        return "<div class='btn-group grid-menu' id='tree-menuSalaryInfoElement' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid= '" + params.data.NoteId + "' ><i class='fas fa-ellipsis-v'></i></div>"
        //    }
        //},
        { field: "ElementName"},
        { field: "Amount" },
        {
            field: "EffectiveStartDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },       
        {
            field: "EffectiveEndDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        }

        ];

            $(function () {

                getSalaryInfoElement();
                $.contextMenu({
                    selector: '#tree-menuSalaryInfoElement',
                    trigger: 'left',
                    build: function ($trigger, e) {

                        
                        var id = $trigger.data('idvalue');
                        var NoteInfoId = $trigger.data('noteid');

                        //var portalName = $trigger.data('portal-name');

                        switch (0) {
                            case 0:
                                return {
                                    callback: function (key, options) {
                                        switch (key) {
                                            case 'edit':
                                                onEditElementSalaryInfo(NoteInfoId);
                                                break;

                                            case 'delete':
                                                OnDelete(NoteInfoId);
                                                break;

                                            default:
                                        }
                                    },
                                    items: {
                                        "edit": { name: "Edit", icon: "fas fa-edit" },
                                        "delete": { name: "Delete", icon: "fas fa-trash" },


                                    }
                                };


                        }
                    }
                });


            });

    function getSalaryInfoElement() {
        document.getElementById("myGridSalaryInfoElement").innerHTML = "";
        //var templateId = $("#TemplateId").val();
        //var projectNo = $("#ProjectNo").val();
        //var noteNo = $("#NoteNo").val();
        //var docDescription = $("#DocumentName").val();
        gridConfig(
            "myGridSalaryInfoElement",
            "@Url.Action("ReadSalaryElementInfoData", "SalaryInfo", new { Area = "Pay", ParentNoteId = Model.NoteId })",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
            }
</Script>