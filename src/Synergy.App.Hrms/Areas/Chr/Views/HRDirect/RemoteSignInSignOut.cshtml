@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.HRDirectController> Resource
@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common


@model RemoteSignInSignOutViewModel
@{
    ViewBag.Title = @Resource["RemoteSignInSignOut"];
    //  Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}
<script>
    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        {
            field: "ServiceNo",
            cellRenderer: params => {
                
               return "<a style='cursor:pointer;color:blue;' href='javascript:OnEdit(\"" + params.data.ServiceId + "\");'>" + params.value + " </a>";
                //"<a target = '_self' class='hover' style='cursor:pointer' onclick=\"OnEdit('#=ServiceId#')\" >#=ServiceNo#</a>"

            }
        },
         { field: "ServiceOwner",},
        {
                 field: "signinTime",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },

             {
                 field: "signOutTime",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        { field: "Status", },

            ];


            $(function () {

            getDataRemoteSOSI();


            });

    function getDataRemoteSOSI() {
        document.getElementById("myGridRemoteSOSI").innerHTML = "";
        //var templateId = $("#TemplateId").val();
        //var projectNo = $("#ProjectNo").val();
        //var noteNo = $("#NoteNo").val();
        //var docDescription = $("#DocumentName").val();
        gridConfig(
            "myGridRemoteSOSI",
            "@Url.Action("GetRemoteSignInSingOutGridData", "HRDirect", new { @area = "CHR", Id=Model.Id, UserId=Model.UserId})",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<div class="col-12">
    <button type='button' class='btn btn-primary' onclick='OnService();'><i class='fa fas fa-plus'></i>&nbsp;Create</button>
    <br /><br />
    <div id="myGridRemoteSOSI" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
    </div>

    <style>

        .k-grid a:hover {
            text-decoration: underline !important;
        }

        .hover:hover {
            text-decoration: underline;
        }

        .panel-heading {
            font-size: 1.3em;
            cursor: pointer;
            padding-top: 7px !important;
            padding-bottom: 7px !important;
        }

        .date {
            margin-left: 1%;
            margin-right: 1%
        }

        .k-listview {
            border: none !important;
        }



        .project-property {
            width: 100px;
            padding: 3px;
        }

        .panel {
            margin-top: 10px;
            border-color: #ddd;
            margin-bottom: 20px;
            background-color: #fff;
            border: 1px solid transparent;
            border-radius: 4px;
            -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
            box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        }

        .panel-heading:hover {
            background-color: #f1f1f1;
        }

        .panel-success {
            border-color: #d6e9c6;
        }

            .panel-success > .panel-heading {
                color: #468847;
                background-color: #dff0d8;
                border-color: #d6e9c6;
            }

        .panel-info {
            border-color: #bce8f1;
        }

            .panel-info > .panel-heading {
                color: #3a87ad;
                background-color: #d9edf7;
                border-color: #bce8f1;
            }

        .panel-warning {
            border-color: #fbeed5;
        }

            .panel-warning > .panel-heading {
                color: #c09853;
                background-color: #fcf8e3;
                border-color: #fbeed5;
            }

        .panel-primary {
            border-color: #428bca;
        }

            .panel-primary > .panel-heading {
                color: #fff;
                background-color: #428bca;
                border-color: #428bca;
            }

        .panel-filter {
            border-color: #428bca;
        }

            .panel-filter > .panel-heading {
                color: #1a3750;
                background-color: #428bca;
                border-color: #428bca;
            }

        .btn-filter-reset {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

        #banner {
            width: 100%;
            height: 140px;
            /* height: 160px;*/
            left: 389px;
            top: 157px;
            background: #2D9FCA;
            border: 1px solid #FFFFFF;
            box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
            border-radius: 6px;
            font-family: roboto;
        }
    </style>


    <script>



    function OnService() {


          var Empid = '@Model.Id';
        var userid = '@Model.UserId';
        if (Empid.length > 0 && userid.length == 0) {

            kendo.alert("@Resource["PleaseCreateUserforthisPerson"]");
        } else {

            var portalId = $('#GlobalPortalId').val();
            // var portalId= '8edc86b3-9934-46e3-95de-d76c816404b4';



            var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=Create&dataAction=Create&templateCodes=REMOTE_SIGN_INSIGN_OUT&portalId=' + portalId /*+ '&prms=' + prms*/;


             if (userid.length > 0) {

                var prms = encodeURIComponent('ownerUserId=' + '@Model.UserId');
                 url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=Create&dataAction=Create&templateCodes=REMOTE_SIGN_INSIGN_OUT&portalId=' + portalId + '&prms=' + prms;
            }
            //LoadCmsPartialView(url, 'Service', true, 1000, 600, 'Create Project');
            //return false;
            var win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Title: '@Html.Raw(Resource["RemoteSignIn/Out"])', Width: 1200, Height: 600 });
            return false;
        }
    }
    function OnEdit(ServiceId) {
        //e.preventDefault();
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        var portalId = $('#GlobalPortalId').val();

        var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=View&dataAction=View&templateCodes=REMOTE_SIGN_INSIGN_OUT&portalId=' + portalId + '&recordId=' + ServiceId;

        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(Resource["RemoteSignIn/Out"])', Width: 1200, Height: 600 });
        return false;
    }




    function OnAfterServiceCreate(service) {

        window.parent.getDataRemoteSOSI();
    }

    //function OnEmployeechange(e) {
    //    var dataItem = e.sender.dataItem();
    //    var id = dataItem.UserId;




    //    var Status = {
    //        Id: id,
    //    };
    //    $("#RemoteSignInSignOutGridView").data("kendoGrid").dataSource.read(Status);





    //}
    </script>





    @*<div id="banner" role="group" style="width:100%;color:#FFFFFF;background: #17a2b8;padding-left: 5px;">
               <div class="row" style="padding-top:10px;">

                   <div class=" col-md-9">
                       <div style="font-size:.8em;padding-top:0px;">
                           select Employee

                           <div class="project-dropdown" id="dropdown" title="Task Template">

                               @(Html.Kendo().DropDownList()
                         .Name("ddlTemplate")

                               .DataTextField("EmployeeName")
                               .DataValueField("UserId")
                               .Filter(FilterType.Contains)
                               .OptionLabel("Select Employee")
                               .DataSource(source =>
                               {
                                   source.Read(read =>
                                   {
                                       read.Action("GetAllEmployee", "Misconduct", new { @area = "Cms"});
                                   });
                               })
                               .Events(x => x.Change("OnEmployeechange"))
                               .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
                               )

                           </div>
                       </div>
                   </div>
               </div>

            <div class="btn banner-item banner-item-date col-sm-2">&nbsp;</div>
        </div>*@


    @*<div class="row">
        <div class="col-12">
            <button class="btn btn-filter-reset" onclick="OnService()" title="@SharedResource["Create"]">@SharedResource["Create"]</button>
            <div class="panel panel-primary">
                <div class="panel-heading"></div>
                <div class="panel-body">
                    @(Html.Kendo().Grid<RemoteSignInSignOutViewModel>()
                                .Name("RemoteSignInSignOutGridView")
                                .Columns(columns =>
                                {
                                    //columns.Select().Width(75).HtmlAttributes(new { @class = "checkbox-align" }).HeaderHtmlAttributes(new { @class = "checkbox-align" });
                                    columns.Bound(p => p.ServiceNo).Title(@SharedResource["ServiceNo"]).Width(170).ClientTemplate("<a target = '_self' class='hover' style='cursor:pointer' onclick=\"OnEdit('#=ServiceId#')\" >#=ServiceNo#</a>");
                                    columns.Bound(p => p.ServiceOwner).Title(@Resource["ServiceOwner"]).Width(170);
                                    columns.Bound(p => p.signinTime).Title(@Resource["SignInTime"]).Width(170).Format(ApplicationConstant.DateAndTime.DefaultDateTimeFormat);
                                    columns.Bound(p => p.signOutTime).Title(@Resource["SignOutTime"]).Width(170).Format(ApplicationConstant.DateAndTime.DefaultDateTimeFormat);
                                    columns.Bound(p => p.Status).Title(@SharedResource["Status"]).Width(170);

                                })
                                .ToolBar(toolbar =>
                                {
                                    //toolbar.Excel();
                                    //toolbar.Pdf();
                                    toolbar.Search().Text(@SharedResource["Search"]);
                                })
    //.Pdf(pdf=>pdf.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
    //.Excel(excel=>excel.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
    .ColumnMenu(col=>col.Filterable(false))
    .Height(700)
    .Editable()
    .Pageable()
    .Sortable()
    .Navigatable()
    .Resizable(r=>r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Groupable(g=>g.ShowFooter(false))
    .Filterable()
    .Scrollable()
    //.Events(events => events.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .AutoSync(true)
        .ServerOperation(false)
        //.Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.Id);

        })
        //.Group(group=>group.Add("Category.CategoryName", typeof(string), ListSortDirection.Descending))
        //.Create("DetailProducts_Create", "Grid")
        .Read("GetRemoteSignInSingOutGridData", "HRDirect", new { @area = "CHR", Id=Model.Id, UserId=Model.UserId})
    //.Update("DetailProducts_Update", "Grid")
    //.Destroy("DetailProducts_Destroy", "Grid")
    )
)
                </div>
            </div>
        </div>
    </div>*@




