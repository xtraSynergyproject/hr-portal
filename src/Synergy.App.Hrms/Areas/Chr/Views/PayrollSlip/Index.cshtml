@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.PayrollSlipController> Resource
@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common


@model SalaryEntryViewModel
@{
    ViewBag.Title = @Resource["PayrollSlip"];
    // Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = ViewBag.Layout ?? null;
}

<style>
    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .date {
        margin-left: 1%;
        margin-right: 1%
    }

    .k-listview {
        border: none !important;
    }



    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    #banner {
        width: 100%;
        height: 140px;
        /* height: 160px;*/
        left: 389px;
        top: 157px;
        background: #2D9FCA;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 6px;
        font-family: roboto;
    }
</style>

<script>

     
    var columnDefs = [

           {
            field: "SalaryName",
               headerName:"@Resource["SalaryName"]"
           },
           {
               field: "PersonFullName",
                headerName:"@Resource["PersonFullName"]"

           },
           {
               field: "PersonNo",
                headerName:"@Resource["EmployeeNo"]"
           },
        {
            field: "SponsorshipNo",
             headerName:"@Resource["IqamahNo"]"
        },       
        {
            field: "PayrollStartDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },

        {
            field: "PayrollEndDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        {
            field: "TotalEarning",
              headerName:"@Resource["TotalEarning"]",
        },
        {
            field: "TotalDeduction",
             headerName:"@Resource["TotalDeduction"]",
        },
        {
            field: "NetAmount",
            headerName:"@Resource["NetAmount"]",
        },
        {
            field: "PayrollId",
            headerName:"@Resource["Download"]",
            cellRenderer: params => {
                return "<span style='cursor:pointer;' class='glyphicon glyphicon-download-alt' onclick='return OnDownload(\"" + params.data.Id +"\");' title='Export To Pdf'><i class='fas fa-download'></i></span>"; //only for enum
            }
        },

    ];

    $(function () {

        getPaySlipData();



    });

    function getPaySlipData() {
        document.getElementById("kgrdPaySlip").innerHTML = "";
        var search = FilterGrid();
        gridConfig(
            "kgrdPaySlip",
            "/Chr/PayrollSlip/ReadPaySlipData?Year=" + search.Year+"&Month=" + search.Month+"&PersonId=" + search.PersonId,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script type="text/javascript">
    function OnDataBound(arg) {
        $("#kgrdPaySlip tbody tr").each(function () {
            var currentDataItem = $("#kgrdPaySlip").data("kendoGrid").dataItem($(this));
        });
    }
    function FilterGrid() {
        
        return {
            Year: '@Model.Year',
            Month: '@Model.Month',
            PersonId: '@Model.PersonId'
        };
    }

</script>
<script type="text/javascript">
    $(document).ready(function () {
        $(".k-grid .k-grid-btnAdd span").addClass("k-icon k-add");
    });


    function Close(dorefresh, mode) {
        var wnd = $("#kpoupwindow").data("kendoWindow");
        wnd.content("");
        wnd.close();
        if (dorefresh) {

            if (mode == "Insert") {
                getPaySlipData();
               // $("#kgrdPaySlip").data("kendoGrid").dataSource.read({ operationMode: "@DataOperation.Create" });
                ShowNotification('');
            }
            else if (mode == "Update") {
                getPaySlipData();
               // $("#kgrdPaySlip").data("kendoGrid").dataSource.read({ operationMode: "@DataOperation.Update" });
                ShowNotification("");
            }
        }
    }

    function OnDetail(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        iframeOpenUrl = "/Pay/PaySlip/Details?Id=" + dataItem.Id;
        var wnd = $("#kiframepopupwindow").data("kendoWindow");
        wnd.setOptions({
            width: 900,
            height: 600,
            title: "Pay Slip Details"
        });
        wnd.center().open();



    }
    function OnDownload(id) {
          @*var url = '/Cms/Report?rptName=Pay/PaySlip.trdp&lo=@LayoutModeEnum.Popup&rptUrl=pay/query/GetPaySlipDetails/'+id;*@
        var url = '/Cms/FastReport?rptName=PAY_PaySlip&lo=@LayoutModeEnum.Popup&rptUrl=pay/query/GetPaySlipDetails/'+id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Payslip', Width: 800, Height: 700 });
        //window.open("/Pay/PaySlip/DownloadPayslip?salaryEntryId=" + id, '_blank');
        //return false;
    }

    function OnManage(source, id) {
        var url = "/Pay/Payslip/" + source + (id == null ? "" : "?id=" + id);
        alert(url);
        window.location.href = url;
    }


    function OnViewPaySlip(Id) {
        var ru = "/pay/payslip/payslipviewer?id=" + Id;
       // window.location.href = ru;
        ru = encodeURIComponent(ru);
       // var url = "/nts/service/manage?templateMasterCode=LEAVE_CANCEL&parentServiceType=LeaveCancel&ParentServiceId=" + serviceId + "&ru=" + ru;
        invokeCSCode(ru);
    }

    function invokeCSCode(data) {
        try {
            // alert(data);
            // log("Sending Data:" + data);
            invokeCSharpAction(data);
        }
        catch (err) {
            //log(err);
        }
    }

</script>

<div class="row">
    <div class="col-12">
        @*<button class="btn btn-filter-reset" onclick="OnService()" title="Reset Filter">Create</button>*@
        <div class="panel panel-primary">
            <div class="panel-heading"></div>
            <div class="panel-body">
               
                <div id="kgrdPaySlip" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                @*@(Html.Kendo().Grid<SalaryEntryViewModel>
                                    ().Name("kgrdPaySlip")
                                    .Columns(col =>
                                    {
                                        col.Bound(c => c.SalaryName).Title(@Resource["SalaryName"]).HtmlAttributes(new { Class = "hidden-xs" }).HeaderHtmlAttributes(new { Class = "hidden-xs" }).Width(180);
                                        col.Bound(c => c.PersonFullName).Title(@Resource["EmployeeName"]).Width(180);
                                        col.Bound(c => c.PersonNo).Title(@Resource["EmployeeNo"]).Width(180);
                                        col.Bound(c => c.SponsorshipNo).Title(@Resource["IqamahNo"]).Width(180);
                                        col.Bound(c => c.PayrollStartDate).Title(@Resource["PayrollStartDate"]).Width(100).Format(ApplicationConstant.DateAndTime.DefaultDateFormat).Width(150);
                                        col.Bound(c => c.PayrollEndDate).Title(@Resource["PayrollEndDate"]).Width(100).Format(ApplicationConstant.DateAndTime.DefaultDateFormat).Width(150);
                                        col.Bound(c => c.TotalEarning).Title(@Resource["TotalEarning"]).Width(150);
                                        col.Bound(c => c.TotalDeduction).Title(@Resource["TotalDeduction"]).Width(150);
                                        col.Bound(c => c.NetAmount).Title(@Resource["NetAmount"]).Width(150);
                                        col.Bound(c=>c.PayrollId).Title(@Resource["Download"]).ClientTemplate("<span style='cursor:pointer;' class='glyphicon glyphicon-download-alt' onclick='return OnDownload(#=Id#);' title='Export To Pdf'></span>").Width(180);
                                    })
                                    .Resizable(resize => resize.Columns(true))
                                    //.Events(e => e.DataBound("OnDataBound"))
                                    .Scrollable(x => x.Enabled(true))
                                    .Sortable(srt => srt.Enabled(true))
                                    .Selectable(select => select.Enabled(false))
                                    .Filterable(f => f.Extra(false)
                                    .Operators(o => o.ForString(s => s.Clear()
                                    .Contains("Contains")
                                    .IsEqualTo("Is equal to")
                                    )))
                                    .Pageable(pageable => pageable
                                    .Refresh(true)

                                    .PageSizes(true)
                                    .ButtonCount(5))
                                    .AutoBind(true)
                                    .DataSource(
                                    dataSource => dataSource
                                    .Ajax()
                                    .PageSize(10)

                                    .Read(read => read.Action("ReadPaySlipData", "PayrollSlip", new { @area="CHR"}).Data("FilterGrid"))

                                    .Model(model => model.Id(p => p.PayrollId))
                                    )
        )*@
            </div>
        </div>
    </div>
</div>




