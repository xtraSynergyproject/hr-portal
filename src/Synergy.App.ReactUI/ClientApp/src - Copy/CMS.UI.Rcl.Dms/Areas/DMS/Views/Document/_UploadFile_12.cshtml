@inject IStringLocalizer<CMS.UI.Web.Areas.DMS.Controllers.DocumentController> Resource
@using Kendo.Mvc.UI
@using CMS.UI.ViewModel
@model NoteTemplateViewModel
@{

    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
<style>
    /*.k-upload .k-upload-action {
        display: none;
    }*/

    .group .input {
        margin-bottom: 25px;
        width: 100%;
        color: black;
        display: block;
        border: 1px;
        padding: 15px 20px;
        border-radius: 50px;
        background: rgba(142, 139, 139, 0.1);
    }
</style>


<form asp-controller="document" asp-action="AddUploadedFile" class="form-horizontal" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
      data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
      data-ajax="true" data-ajax-method="POST">
    <div id="validation-summary" class="text-danger hr-v-summary" asp-validation-summary="All"></div>



    <div class="row" style="padding:10px;">
        <div id="message">
            <div style="padding: 5px;">
                <div id="inner-message" class="alert alert-info">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    @Resource["Alldocumentswillbeuploadedundergeneraldocumentcategoryasdraft"]
                </div>
            </div>
        </div>
        <div id="message">
            <div style="padding: 5px;">
                <div id="inner-message" class="alert alert-info">
                    <button type="button" class="close" data-dismiss="alert">&times;</button>
                    @Resource["SavewillbeenabledafteruploadingallfilesLargefoldermaytakemoretimetocomplete"]
                </div>
            </div>
        </div>
        <div class="col-md-8">
            <div class="row">
                <div class="col-md-7">

                    <div class="row" style="margin-top:10px;">
                        <div class="col-xs-11 col-md-11">
                            <div style="margin-top:10px;padding-left:10px;color:dimgray">

                                @(Html.Kendo().Upload()
                                        .Name("files")
                                        .Async(a => a
                                            .Save("UploadFiles", "Document")
                                        )
                                        .Multiple(true)
                                        .Directory(false)
                                        .DirectoryDrop(false)
                                         .Events(e => e.Success("OnUploadSuccess").Error("onUploadError"))
                                    )

                            </div><br />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-md-12 pull-right" style="padding-top:20px;padding:10px;text-align:right;">
                            @*@Html.Kendo().Button().Name("btnSubmit").Content(@SharedResource["Save"]).HtmlAttributes(new { @class = "k-primary" }).Enable(false)*@
                            <button type="submit" class="btn btn-primary" id="btnSubmit" disabled>@SharedResource["Save"]</button>
                        </div>

                    </div>


                </div>
            </div>

        </div>


        @Html.HiddenFor(x => x.Id)

        @Html.HiddenFor(x => x.FileIds)

        @Html.HiddenFor(x => x.ParentNoteId)


    </div>
    <div class="chart-loading" style="min-height:100%"></div>
</form>
<script type="text/javascript">
    var uploadedfile = [];
    $(document).ready(function () {
        $("#btnSubmit").click(function (e) {
            kendo.ui.progress($(".chart-loading"), true);
            //if (uploadedfile.length == 0) {
            //    $(".hr-v-summary").removeClass("validation-summary-valid");
            //    $(".hr-v-summary").addClass("validation-summary-errors");
            //    var msg = "Please upload folder before save";
            //    $(".hr-v-summary ul").html(msg);
            //    e.preventDefault();
            //    kendo.ui.progress($(".chart-loading"), false);
            //}
            //else {
            //    $("#UploadedContent").val(JSON.stringify(uploadedfile));
            //}
        });
    });

    function onAjaxSuccess(response) {
        debugger;
        if (response.success) {
            kendo.ui.progress($(".chart-loading"), false);
            var win = GetMainWindow();
            win.CloseWindow({ MethodName: "refreshFileManager" });
        }
        else {
            kendo.ui.progress($(".chart-loading"), false);
            ShowErrors(response.errors);
        }
    }
    function OnCancel(e) {
        win.CloseWindow({ MethodName: "refreshFileManager" });
    }
    function OnCreate() {
        window.parent.OpenDetail();
    }
    function ShowErrors(err) {
        kendo.ui.progress($(".chart-loading"), false);
        $(".hr-v-summary").removeClass("validation-summary-valid");
        $(".hr-v-summary").addClass("validation-summary-errors");
        var msg = err;
        $(".hr-v-summary ul").html(msg);
    }

    function setLocalFileIds(fileId) {
        if (fileId != null) {
            var fileIds = $("#FileIds").val() == null ? '' : $("#FileIds").val();

            fileIds = fileId + ',' + fileIds;
            $("#FileIds").val(fileIds);
        }

    }
    var i = 1;
    function OnUploadSuccess(e) {
        debugger;
        //if (e.response) {
        //    uploadedfile.push(e.response);
        //}
        //else {
        //    var msg = ExtractError(e.response.errors, true);
        //    alert(msg);
        //}
        //return true;
        if (e.response.success) {
            // $("#ContractAttachmentId").val(e.response.fileId);
            setLocalFileIds(e.response.fileId);
            var items = e.sender.wrapper.find('.k-file').length;
            if (items === i) {
                var button = $("#btnSubmit");
                // enable button
                button.attr("disabled", false);
            }
            i++;
        }
        else {
            var msg = e.response.errors;
            alert(msg);
            i++;
        }
        return true;
    }


    function onUploadError(e) {
        debugger;
        if (e.response != null && e.response != undefined) {
            var msg = ExtractError(e.response.errors, true);
            alert(msg);
        }
        else {
            alert(e.XMLHttpRequest.responseText);
        }

    }

    function hideLoader() {
        document.getElementById('speach-load').style.display = "none";
    }

    function showLoader() {
        document.getElementById('speach-load').style.display = "unset";
        document.getElementById('speech-srch').innerText = "Loading...";
        $(".main-menu").css("z-index", '2');
        $(".skitt-ui").css("z-index", '2');
    }

</script>


