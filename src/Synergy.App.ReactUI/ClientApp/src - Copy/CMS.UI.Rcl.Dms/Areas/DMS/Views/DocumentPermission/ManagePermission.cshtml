@inject IStringLocalizer<CMS.UI.Web.Areas.DMS.Controllers.DocumentPermissionController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;


@model DocumentPermissionViewModel
@{
    ViewBag.Title = "Permission";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
    // Layout = null;
}




<style>

    ul li {
        list-style: none;
    }

    a, a:hover, a:focus {
        text-decoration: none;
        outline: none;
        outline: 0;
    }

    .nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover, li.active {
        color: #fff;
        cursor: default;
        background-color: #007bff;
        border: 1px solid #ddd;
        border-bottom-color: transparent;
    }

    .nav-tabs > li > a {
        margin-right: 2px;
        line-height: 1.42857143;
        border: 1px solid transparent;
        border-radius: 4px 4px 0 0;
    }

    .nav > li > a {
        position: relative;
        display: block;
        padding: 10px 15px;
    }

    a {
        color: #337ab7;
        text-decoration: none;
    }

    a {
        background-color: transparent;
    }

    .form-group {
        padding-bottom: 0px !important;
    }

        .form-group:last-child {
            margin-bottom: 15px !important;
        }

    .k-widget {
        font-size: 14px;
    }


    .card-tile {
        border: 0;
        /* margin-bottom: 30px; */
        /* margin-top: 30px; */
        margin: 10px;
        border-radius: 6px;
        color: #333;
        background: #fff;
        width: 30%;
        box-shadow: 0 4px 20px 0 rgba(0,0,0,.14), 0 7px 10px -5px #fff;
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #eee;
        min-height: 80px;
        cursor: pointer;
    }

    .ic {
        margin-top: 10px;
        font-size: 15px;
        color: white;
    }

    .span-c {
        margin-top: 6px;
        color: white;
        margin-bottom: 10px;
    }

    .announcement {
        background-color: #f7e6be;
        border: 2px solid white;
        color: #373e4c;
        padding: 10px 30px 15px 15px;
    }

    .iconwithtextan {
        display: flex;
        align-items: center;
    }
      .highlightButton

    {
        border-color: red;
        color: red;
        font-weight: bold;
    }
</style>

<form asp-controller="DocumentPermission" asp-action="Save" class="form-horizontal" id="myForm" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
      data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
      data-ajax="true" data-ajax-method="POST">
    <div class="text-danger" asp-validation-summary="All" style="font-size:14px;"></div>

    <div class="container" style="padding-bottom:20px" id="option-sel">

        <ul class="nav nav-tabs">
            <li class=""><a href="#" onclick="onclickUser()"><i class="fad fa-user ic"></i> @Resource["SelectUser"]</a></li>
            <li><a href="#" onclick="onclickWorkspaceUserGroup();"><i class="fad fa-users ic"></i> @Resource["SelectWorkspaceUserGroup"]</a></li>

        </ul>


    </div>



    <!--<div class="col-md-12 " id="option-sel">
        <div class="row" style="text-align:center;margin-left:12%">-->
    @*<div class="col-xs-2"></div>*@
    <!--<div class="col-xs-2">

            </div>
            <div class="card-tile col-xs-4" style="background-color:#3B80F4;width:26%" onclick="onclickUser();" title="Click to select user">
                <i class="fad fa-user ic" style="margin-left:48%"></i>
                <span class="span-c">Select User</span>
            </div>
            <div class="card-tile col-xs-4" style="background-color:#EA4436;width:26%" onclick="onclickWorkspaceUserGroup();" title="Click to select user group">
                <i class="fad fa-users ic" style="margin-left:48%"></i>
                <span class="span-c">Select Workspace User Group</span>
            </div>
            <div class="col-xs-3">

            </div>
        </div>
    </div>
    <br />
    <br />-->

    <div class="form-group col-xs-12 col-lg-12" id="UserDiv" >


        <div class="row">
            <div class="form-group col-xs-12 col-lg-12" @*id="UserGroupDiv" style="display:none"*@>
                <div class="col-lg-12 label-div" style="padding-bottom: 5px;">
                    @Resource["LegalEntity"]
                </div>
                <div class="col-md-6">


                    @*@(Html.Kendo().DropDownListFor(x => x.LegalEntityId)
                               //.Name("LegalEntity")
                               .OptionLabel("Select Legal Entities")
                               .DataSource(source =>
                               {
                                   source.Read(read =>
                                   {
                                       read.Action("GetIdNameList", "LegalEntity", new { area = "Cms" });
                                   });
                               })
                               .DataTextField("Name")
                               .DataValueField("Id")
                               .Filter(FilterType.Contains)
                               .AutoBind(true)
                               .Events(e =>
                                   e.Change("onLegalEnityChanged")
                               )
                                       .HtmlAttributes(new { @class = "form-control", @style = "width:400px" })
            )*@

                    <input asp-for="LegalEntityId" id="LegalEntityId" class="form-control" style="width: 400px;" />
                </div>
            </div>
        </div>
        <div class="col-lg-12 label-div" style=" padding-bottom: 5px;">
            @Resource["User"]       </div>
        <div class="col-md-6">
            @*@(Html.Kendo().DropDownListFor(x=>x.PermittedUserId)
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetUsersIdNameList", "User", new { area = "PortalAdmin" });
                                 });
                             })
                             .TemplateId("user1-template1")
                             .OptionLabel("Select User").Height(300)
                             .Filter(FilterType.Contains)
                             .DataTextField("Name")
                             .DataValueField("Id")
                             .HtmlAttributes(new { @class = "form-control", @style = "width:400px" })
                              .Events(events => events.Filtering(
                        @<text>
                            function(e) {
                               var filterValue = e.filter != undefined ? e.filter.value : "";
                                    e.preventDefault();

                                  this.dataSource.filter({
                                    logic: "or",
                                    filters: [
                                      {
                                        field: "Name",
                                        operator: "contains",
                                        value: filterValue
                                      },
                                      {
                                        field: "Email",
                                        operator: "contains",
                                        value: filterValue
                                      }
                                    ]
                                  });
                            }
                            </text>
                            ))
            )*@

            <input asp-for="PermittedUserId" id="PermittedUserId" class="form-control" style="width: 400px;" />

            <script type="text/x-kendo-tmpl" id="user1-template1">
                  <div class="row no-gutter pb-1 pt-1">
                      <div class="col-2">
                      #if(data.PhotoId!=null)
                          {#<img class="avatar-drp-profile" src="/Cms/document/getimagemongo?id=#:data.PhotoId#"  /> #}
                      else
                          {#<img class="avatar-drp-profile" style="background-color:gray;" src="/images/profile.jpg" />#}#
                     </div>

                        <div class="col-6">
                          <span>#:Name#</span>
                        </div>

                          #if (data.Email!=null)
                              {#
                           <div class="col-1">
                          <i class='fa fas fa-envelope' style='font-size:12px'></i>
                           </div>
                          <div class="col-2">
                          <span style="font-size:12px;">#:Email#</span><br/>
                          </div>
                         # } #



                </div>
            </script>



        </div>
    </div>
    <div @*class="row"*@ id="UserGroupDiv" style="display:none">
        <div class="row">
            <div class="form-group col-xs-12 col-lg-12" style="margin-left:17px" @*id="UserGroupDiv" style="display:none"*@>
                <div class="col-lg-12 label-div" style="padding-bottom: 5px;">
                    @Resource["WorkspaceUserGroup"]
                </div>
                <div class="col-lg-9">
                    @*@(Html.Kendo().DropDownListFor(x => x.PermittedUserGroupId)
                                              .DataTextField("Name")
                                              .DataValueField("Id")
                                              .OptionLabel("Select Group")

                                            //  .Events(e=>e.Change("OnChange"))
                                              .HtmlAttributes(new { @class = "hr-xx-large t-shadow" })
                                              .DataSource(source =>
                                              {
                                                  source.Read(read =>
                                                  {
                                                      read.Action("GetUserGroupIdNameList", "UserGroup", new { area = "PortalAdmin" });
                                                  });//.ServerFiltering(true);
                                              })
                                              .Filter(FilterType.Contains)

                                              .AutoBind(true)
            )*@
                    <input asp-for="PermittedUserGroupId" id="PermittedUserGroupId" class="hr-xx-large t-shadow" />
                </div>
            </div>
        </div>
        <div class="row">


        </div>
    </div>


    <div class="form-group col-xs-12 col-lg-12">
        <div class="col-lg-12 label-div">
            @*<span class="required">*</span>*@
            @Resource["PermissionType"]
        </div>
        <div class="col-lg-9">

            @*@(Html.Kendo().DropDownListFor(x=>x.PermissionType)
        .DataTextField("Name")
                        .DataValueField("EnumId")
                 .DataSource(source =>
                 {
                     source.Read(read =>
                     {
                         //read.Action("GetPerformanceStageIdNameList", "Performance", new {area = "Pms", performanceId = Model.Id });
                         read.Action("GetEnumIdNameList", "Home", new { area = "", enumType = "DmsPermissionTypeEnum" });
                     });
                 })
                 //.AutoClose(false)
                 //.Placeholder("Search Type")
                 .OptionLabel("Select Permission Type")
                 .Filter("contains")


                             .HtmlAttributes(new { @class = "hr-xx-large search-control" })
            )*@

            <input asp-for="PermissionType" id="PermissionType" class="hr-xx-large search-control" />
        </div>
    </div>

    <div class="form-group col-xs-12 col-lg-12">
        <div class="col-lg-12 label-div">
            @*<span class="required">*</span>*@
            @Resource["Access"]
        </div>


        <div class="col-lg-9">

            @*@(Html.Kendo().DropDownListFor(x=>x.Access)
                 .DataSource(source =>
                 {
                     source.Read(read =>
                     {
                         //read.Action("GetPerformanceStageIdNameList", "Performance", new {area = "Pms", performanceId = Model.Id });
                         read.Action("GetEnumIdNameList", "Home", new { area = "", enumType = "DmsAccessEnum" });
                     });
                 })
                 //.AutoClose(false)
                 //.Placeholder("Sear Accessch Type")
                 .OptionLabel("Select Accss")
                 .Filter("contains")
                             .DataTextField("Name")
                             .DataValueField("EnumId")

                             .HtmlAttributes(new { @class = "hr-xx-large search-control" })
            )*@
            <input asp-for="Access" id="Access" class="hr-xx-large search-control" />
        </div>
    </div>



    <div class="form-group col-xs-12 col-lg-12">
        <div class="col-lg-12 label-div">
            @*<span class="required">*</span>*@
            @Resource["AppliesTo"]
        </div>


        <div class="col-lg-9">

            @*@(Html.Kendo().DropDownListFor(x=>x.AppliesTo)
             .DataSource(source =>
             {
                 source.Read(read =>
                 {
                     //read.Action("GetPerformanceStageIdNameList", "Performance", new {area = "Pms", performanceId = Model.Id });
                     read.Action("GetEnumIdNameList", "Home", new { area = "", enumType = "DmsAppliesToEnum" });
                 });
             })
             //.AutoClose(false)
             //.Placeholder("Search Type")
             .OptionLabel("Select Applies To")
             .Filter("contains")
                         .DataTextField("Name")
                         .DataValueField("EnumId")

                         .HtmlAttributes(new { @class = "hr-xx-large search-control" })
        )*@
            @if (Model.DataAction == DataActionEnum.Edit)
            {
                <input asp-for="AppliesTo" id="AppliesTo" class="hr-xx-large search-control"  readonly/>

            }
            else
            {
                <input asp-for="AppliesTo" id="AppliesTo" class="hr-xx-large search-control" />

            }

        </div>
    </div>



    <div class="form-group col-xs-12 col-sm-6">
        <div class="col-lg-3 label-div">
            &nbsp;
        </div>
        <div class="col-lg-9">
            @*@Html.Kendo().Button().Name("btnCancel").Content(@SharedResource["Cancel"]).Icon("cancel").Events(x => x.Click("OnCancel")).HtmlAttributes(new { @type = "button" })*@
            <button type="button" class="btn btn-light" id="btnCancel" onclick="OnCancel()">@SharedResource["Cancel"]</button>
            @*@Html.Kendo().Button().Name("btnSubmit").Content("Submit").Icon("check-outline").Events(x => x.Click("return OnSubmit")).HtmlAttributes(new { @class = "k-primary" })*@
            <input id="btnSubmit" type="submit" value="@SharedResource["Submit"]" class="btn btn-primary" />
        </div>
    </div>

    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.NoteId)
    @Html.HiddenFor(x => x.DataAction)

</form>


<script type="text/javascript">
    $('li > a').click(function () {
        $('li').removeClass();
        $(this).parent().addClass('active');
    });

    function OnSave(evt) {
       // var categoryType = $("#TagCategoryType").data("kendoDropDownList").value();

        ShowLoader($('#myForm'));

    }

    var onAjaxSuccess = function (res) {

        HideLoader($('#myForm'));
        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                window.parent.ShowNotification("@SharedResource["SavedSuccessfully"]", "success");
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                window.parent.ShowNotification("@SharedResource["UpdatedSuccessfully"]", "success");
            }
            var id ='@Model.NoteId';
           var Status = {
               noteId: id,
        };
            //window.parent.$("#kgrdPermisstion").data("kendoGrid").dataSource.read(Status);
            Close();

            var win = GetMainWindow();
            win.CloseWindow({ MethodName: 'OnAfterCreateuser' });
            return false;


        }
        else {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html(res.error);

            HideLoader($('#myForm'));
        }
    };


    function OnCancel() {
        Close();
    }

    function Close() {
       
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }


   function FilterUser() {
        var a = {
            assignToType: '@AssignToTypeEnum.User',
            legalEntity: $("#LegalEntityId").val()
        };
        return a;
    }

    function onLegalEnityChanged() {
       // $("#UserId").data("kendoDropDownList").dataSource.read({ legalEntityId: $("#LegalEntityId").val(), });
    }

    $(document).ready(function () {

        //$("#btnSubmit").click(function (e) {


      //  $("#New").addClass("highlightButton", 500, "linear").removeClass("highlightButton", 500, "linear");
      /*  document.getElementById('listViewTM').style.border = "none";*/
        if ('@Model.PermittedUserId' != '') {
            $("#UserDiv").show();
            $("#UserGroupDiv").hide();
            $("#option-sel").hide();
        } else if ('@Model.PermittedUserGroupId' != '') {
            $("#UserDiv").hide();
            $("#UserGroupDiv").show();
            $("#option-sel").hide();
        } else {
            $("#UserDiv").hide();
            $("#UserGroupDiv").hide();
        }

        onclickUser();

        $("#LegalEntityId").kendoDropDownList({
            optionLabel: "Select Legal Entities",
            dataTextField: "Name",
            dataValueField: "Id",
            value: "@Model.LegalEntityId",
            filter: "contains",
            autoBind: true,
            change: onLegalEnityChanged,
            dataSource: {
                transport: {
                    read: {
                        url: "/cms/LegalEntity/GetIdNameList",
                    }
                }
            }
        });

        $("#PermittedUserId").kendoDropDownList({
            optionLabel: "Select User",
            dataTextField: "Name",
            dataValueField: "Id",
            value: "@Model.PermittedUserId",
            filter: "contains",
            autoBind: true,
            template: kendo.template($("#user1-template1").html()),
            filtering: function (e) {
                var filterValue = e.filter != undefined ? e.filter.value : "";
                e.preventDefault();

                this.dataSource.filter({
                    logic: "or",
                    filters: [
                        {
                            field: "Name",
                            operator: "contains",
                            value: filterValue
                        },
                        {
                            field: "Email",
                            operator: "contains",
                            value: filterValue
                        }
                    ]
                });
            },
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/User/GetUsersIdNameList",
                    }
                }
            }
        });

        $("#PermittedUserGroupId").kendoDropDownList({
            optionLabel: "Select Group",
            dataTextField: "Name",
            dataValueField: "Id",
            value: "@Model.PermittedUserGroupId",
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/UserGroup/GetUserGroupIdNameList",
                    }
                }
            }
        });

        $("#PermissionType").kendoDropDownList({
            optionLabel: "Select Permission Type",
            dataTextField: "Name",
            dataValueField: "EnumId",
            value: "@((int)((DmsPermissionTypeEnum)Enum.Parse(typeof(DmsPermissionTypeEnum), Model.PermissionType.ToString())))",
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=DmsPermissionTypeEnum",
                    }
                }
            }
        });

        $("#Access").kendoDropDownList({
            optionLabel: "Select Accss",
            dataTextField: "Name",
            dataValueField: "EnumId",
            value: "@((int)((DmsAccessEnum)Enum.Parse(typeof(DmsAccessEnum), Model.Access.ToString())))",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=DmsAccessEnum",
                    }
                }
            }
        });

        $("#AppliesTo").kendoDropDownList({
            optionLabel: "Select Applies To",
            dataTextField: "Name",
            dataValueField: "EnumId",
            value: "@((int)((DmsAppliesToEnum)Enum.Parse(typeof(DmsAppliesToEnum), Model.AppliesTo.ToString())))",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=DmsAppliesToEnum",
                    }
                }
            }
        });

    });
    //function filter() {
    //    return {
    //        Id: $("#WorkspacePermissionGroupId").val(),
    //    };
    //}
    function OnChange(e) {
        var grid = $("#listViewTM").data("kendoListView");
        var search = filter();
        grid.dataSource.read(search);
        return true;
    }
    //function hideLoader() {
    //    document.getElementById('speach-load').style.display = "none";
    //}

    //function showLoader() {
    //    document.getElementById('speach-load').style.display = "unset";
    //    document.getElementById('speech-srch').innerText = "Loading...";
    //    $(".main-menu").css("z-index", '2');
    //    $(".skitt-ui").css("z-index", '2');
    //}
    //function OnSuccess(response) {
    //    if (response.success) {
    //        var pop2 = window.parent.GetIframePopup();
    //        pop2.CloseSuccess(true);
    //    }
    //    else {

    //        ShowErrors(response.errors);
    //    }
    //    kendo.ui.progress($(document.body), false);
    //}


    //function ShowErrors(err) {
    //    $(".hr-v-summary").removeClass("validation-summary-valid");
    //    $(".hr-v-summary").addClass("validation-summary-errors");
    //    var msg = ExtractError(err);
    //    $(".hr-v-summary ul").html(msg);


    //}

    function onclickUser() {

        //ResetUserGroup();
        $("#UserDiv").show();
        $("#UserGroupDiv").hide();

    }

    function onclickWorkspaceUserGroup() {
       // ResetUserGroup();
        $("#UserDiv").hide();
        $("#UserGroupDiv").show();
    };

    function ResetUserGroup() {
        $("#LegalEntityId").data("kendoComboBox").dataSource.read();
        $("#UserId").data("kendoComboBox").dataSource.read();
        $("#WorkspacePermissionGroupId").data("kendoComboBox").dataSource.read();
    }
</script>
