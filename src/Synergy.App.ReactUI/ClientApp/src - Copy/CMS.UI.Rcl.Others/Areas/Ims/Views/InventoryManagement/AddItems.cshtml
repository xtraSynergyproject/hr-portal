@using CMS.UI.ViewModel
@using CMS.Common
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Manage Direct Sales";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model ItemsViewModel

<style>
    .k-switch-label-on, .k-switch-label-off {
        display: flex
    }

    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }

    .avatar-myProfile {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .avatar-mysign {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .bold {
        font: bold
    }
</style>

<div class="row" style="margin:10px;margin-bottom:60px;">

    <form asp-controller="InventoryManagement" asp-action="ManageDirectSaleItems" class="form-horizontal" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div class="text-danger" asp-validation-summary="All"></div>

        <fieldset>
            <legend style="margin-bottom:0px;">Proposal Information</legend>
            <div class="card pad-10" style="padding-top:0px;">

                <div class="row col-12" style="padding:10px;">
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Proposal Code</label>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        @Html.DisplayFor(x => x.ProposalNo)
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Proposal Type</label>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        @Html.DisplayFor(x => x.ProposalTypeName)
                    </div>


                </div>
            </div>
        </fieldset>
        &nbsp;
        &nbsp;
        <fieldset>
            <legend style="margin-bottom:0px;">Add Line Items</legend>
            <div class="card pad-10" style="padding-top:0px;">

                <div class="row col-12" style="padding:10px;">
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Item Head<span class="required">*</span></label>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <input type="text" asp-for="ItemHead" class="form-control" />
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Item Category<span class="required">*</span></label>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <input type="text" asp-for="ItemCategory" class="form-control" />
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Item SubCategory<span class="required">*</span></label>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <input type="text" asp-for="ItemSubCategory" class="form-control" />
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Item Name<span class="required">*</span></label>
                    </div>
                    <div class="col-2" style="padding-bottom:10px;">
                        <input type="text" asp-for="Item" class="form-control" />
                    </div>
                    <div class="col-1" style="padding-bottom:10px;">
                        <button class="btn btn-primary" onclick="AddItem()"><i class="fas fa-plus"></i></button>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Sales Rate<span class="required">*</span></label>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <input type="text" asp-for="SaleRate" class="form-control" />
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Item Description</label>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <input type="text" asp-for="ItemDescription" class="form-control" />
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <label>Item Quantity<span class="required">*</span></label>
                    </div>
                    <div class="col-3" style="padding-bottom:10px;">
                        <input type="text" asp-for="ItemQuantity" id="Country" class="form-control" />
                    </div>


                </div>
            </div>
        </fieldset>
        <div class="row pad-10" style="float:right;">
            <input type="submit" class="btn btn-primary" value="Add" style="margin:5px;" onclick="OnSubmit()" />
            <input type="button" class="btn btn-primary" value="Close" style="margin:5px;" onclick="closeNav()" />
        </div>
        &nbsp;
        &nbsp;
        <fieldset style="width:100%">
            <legend style="margin-bottom:0px;">Items List</legend>
            <div id="ItemsGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </fieldset>
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.NoteId)
        @Html.HiddenFor(x => x.DirectSalesId)
        @Html.HiddenFor(x => x.Amount)
    </form>
</div>
<script>
    var columnDefs = [
        {
            field: "ItemName",
            headerName: "Item Name"
        },
        //{
        //    field: "ProposalDate",
        //    headerName: "Proposal Date"
        //},
        {
            field: "ItemDescription",
            headerName: "Item Description"
        },
        {
            field: "ItemQuantity",
            headerName: "Quantity",

        },
        {
            field: "SaleRate",
            headerName: "Sale Rate",

        },
        {
            field: "Amount",
            headerName: "Amount",

        },
        {
            headerName: "Actions",
            field: "NoteId",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuItem' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {
        $("#ItemHead").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--Select--",
            change: function (e) {
                $("#ItemCategory").data("kendoDropDownList").dataSource.read({ ItemTypeId: $("#ItemHead").data("kendoDropDownList").value() });
            },
			@* value: "@Model.Status",*@
        dataSource: {
            transport: {
                read: {
                    url: "/Cms/LOV/GetListOfValueList?type=IMS_ITEM_TYPE",
                    }
            }
        }
        });
        $("#ItemCategory").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--Select--",
            autoBind:false,
			@* value: "@Model.Status",*@
            change: function (e) {
                $("#ItemSubCategory").data("kendoDropDownList").dataSource.read({ categoryId: $("#ItemCategory").data("kendoDropDownList").value() });
            },
        dataSource: {
            transport: {
                read: {
                    url: "/IMS/InventoryManagement/GetItemCategoryList",
                    }
            }
        }
        });
        $("#ItemSubCategory").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--Select--",
            autoBind: false,
            change: function (e) {
                $("#Item").data("kendoDropDownList").dataSource.read({ subCategoryId: $("#ItemSubCategory").data("kendoDropDownList").value() });
            },
			@* value: "@Model.Status",*@
        dataSource: {
            transport: {
                read: {
                    url: "/IMS/InventoryManagement/GetItemSubCategoryList",
                    }
            }
        }
    });
    $("#Item").kendoDropDownList({
        dataTextField: "ItemName",
        dataValueField: "Id",
        optionLabel: "--Select--",
        filter: "contains",
        dataSource: {
            transport: {
                read: {
                    url: "/IMS/InventoryManagement/GetItemList",
                }
            }
        }
    });
        getItemsData();
    $.contextMenu({
        selector: '#tree-menuItem',
        trigger: 'left',
        build: function ($trigger, e) {


            var id = $trigger.data('idvalue');

            var status = $trigger.data('status');

            switch (0) {
                case 0:

                    return {
                        callback: function (key, options) {
                            switch (key) {
                                case 'delete':
                                    onDeleteItem(id);
                                    break;



                                default:
                            }
                        },
                        items: {
                            "delete": { name: "Delete", icon: "fas fa-trash" }
                        }
                    };


            }
        }
    });
    });
    function onDeleteItem(id) {
        var flag = confirm('Do you really want to delete this item?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteSalesItem", "InventoryManagement", new { @area= "IMS" })?NoteId=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    debugger;
                    if (result.success) {
                        getItemsData();
                        kendo.alert("Deleted Successfully.");
                    } else {
                        getItemsData();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    getItemsData();
                }
            });
            return false;
        }
    }
    function AddItem()
    {
        var win = GetMainWindow();
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterItemCreate&source=Create&dataAction=Create&templateCodes=N_IMS_IMS_ITEM_MASTER';
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Add Item', Width: 1000, Height: 800 });
        return false;
    }
    function getItemsData() {
        document.getElementById("ItemsGrid").innerHTML = "";
        gridConfig(
            "ItemsGrid",
            "/IMS/InventoryManagement/ReadItemsData?directSalesId=@Model.DirectSalesId",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script type="text/javascript">

   
        var onAjaxSuccess = function (res) {
            if (res.success) {
                closeNav()
        }
        else {
            alert(res)
            showError(res.error);
        }
    };


    function closeNav() {

        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function onFileUploadSuccess(e) {
        //
        if (e.response.success) {
            // alert(e.response.fileId);
            //console.log(e);
            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserProfilePhoto?photoId=" + e.response.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                   //
                    $(".avatar-myProfile").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
                    $("#PhotoId").val(e.response.fileId);
                }
            });

        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    } 
    function confirmDelete() {
     //
        //        alert("Banner Delete");
        $(".avatar-myProfile").attr("src", "/images/200.png");
        $("#PhotoId").val('');
        var logoupload = $("#files").data("kendoUpload");
        //console.log(logoupload);
        logoupload.clearFile(function (file) { return true; });
    }
    //function OnSave(event) {
    //    debugger;
    //    var multiSelect = $("#UserRoles").data("kendoMultiSelect");
    //    var value = multiSelect.value();

    //   // $("#UserRoles").kendoMultiSelect.Data(Read);

    //}
</script>

