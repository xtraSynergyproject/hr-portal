@using CMS.UI.ViewModel
@using CMS.Common
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Vendor Category Mapping";
    //Layout = "/Views/Shared/_PopupLayout.cshtml";
}


<style>
 

    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }

    .avatar-myProfile {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .avatar-mysign {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .bold {
        font: bold
    }
</style>

<div class="row" style="margin-left:15px;margin-bottom:60px;">
    <div class="row">
        <input id="ShelfId" class="form-control" />
        <div id="categorytreeview"></div>
    </div>


    <div class="row" style="text-align:right;">
        <input type="submit" class="btn btn-primary" onclick="OnSave()" value="Save" />

    </div>


</div>

<script type="text/javascript">
    $(document).ready(function () {

        $("#ShelfId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
			@* value: "@Model.Status",*@
            dataSource: {
                transport: {
                    read: {
                        url: "/cms/IMS/GetShelfList",
                    }
                }
            }
        });





    });

    function getInputTree() {
        $("#categorytreeview").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/Bre/Bre/BreInputDataFancyTree",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/Bre/Bre/BreInputDataFancyTree",
                    data: { id: node.key}
                }

            },
            select: function (event, data) {
                debugger;
                var dataItem = data.node.data;
                $("#FieldId").val(data.node.key);
                
            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                var node = data.node;
                node.renderTitle();


            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {
                    debugger;
                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });
    }

</script>

