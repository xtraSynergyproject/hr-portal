//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using ERP.Utility;
using System;

namespace ERP.Data.GraphModel
{

    public partial class ADM_User : NodeBase
    {
        public string FirstName { get; set; }
        public string LastName { get; set; }
        public string UserName { get; set; }
        public string RemoteWorkingUserId { get; set; }
        public string Email { get; set; }
        public bool IsAdmin { get; set; }
        public bool? IsDmsAdmin { get; set; }
        public bool? EnableRemoteSignIn { get; set; }
        public UserAuthTypeEnum UserAuthType { get; set; }
        public UserLoginTypeEnum UserLoginType { get; set; }
        // public UserTypeEnum UserType { get; set; }
        public UserVerificationStatusEnum? VerificationStatus { get; set; }
        public string MobileNo { get; set; }
        public string IqamahNo { get; set; }
        public string Password { get; set; }
        //public long? PhotoId { get; set; }
        [NotMapped]
        public string UserNameWithEmail
        {
            get
            {
                return string.Concat(UserName, "(", Email.IsNullOrEmpty() ? (IqamahNo.IsNullOrEmpty() ? MobileNo : IqamahNo) : Email, ")");
            }
        }

        public bool EnableEmailSummary { get; set; }
        public bool EnableRegularEmail { get; set; }
        public string MobileDeviceToken { get; set; }
        public GridViewModeEnum? TaskGridViewMode { get; set; }
        public GridViewModeEnum? ServiceGridViewMode { get; set; }
        public GridViewModeEnum? NoteGridViewMode { get; set; }
        public bool? PasswordChangeRequired { get; set; }

        public Language? PreferredLanguage { get; set; }
        public BoolStatus? EnableLanguageChange { get; set; }

        public DateTime? AssessmentInterviewScheduledStartDate { get; set; }

        public string AssessmentInterviewUrl { get; set; }
        public int? AssessmentInterviewDuratrion { get; set; }
        public double? AssessmentInterviewWeightage { get; set; }
        public string JobTitle { get; set; }
        public string UserCode { get; set; }
        public string Color { get; set; }
        public bool? DisableWebAccess { get; set; }
        public bool? DisableDesktopAccess { get; set; }
        public bool? DisableMobileAccess { get; set; }
        public string AlternateEmail { get; set; }
        public string ForgotPasswordOTP { get; set; }


    }
    public class R_User_UserRole : RelationshipBase
    {

    }
    public class R_User_Action : RelationshipBase
    {

    }
    public class R_User_GeoLocation : RelationshipBase
    {

    }
    public class R_User_Field : RelationshipBase
    {
        public bool IsEditable { get; set; }
    }
    public class R_User_PersonRoot : RelationshipBase
    {

    }
    public class R_User_Mapping_OrganizationRoot : RelationshipBase
    {
        public bool ExcludeAllChild { get; set; }
        public ModuleEnum? ModuleName { get; set; }
    }
    public class R_UserReport_Mapping_OrganizationRoot : RelationshipBase
    {
        public bool ExcludeAllChild { get; set; }
        public ModuleEnum? ModuleName { get; set; }
    }
    public class R_User_Mapping_TemplateMaster : RelationshipBase
    {
    }
    public class R_User_Mapping_Team : RelationshipBase
    {
    }
    public class R_User_Company : RelationshipBase
    {

    }
    public class R_User_Permission_Hierarchy : RelationshipBase
    {
        public HierarchyPermissionEnum HierarchyPermission { get; set; }
        public long? CustomPermissionId { get; set; }
    }
    public class R_User_GrantedTo_User : RelationshipBase
    {
        public DateTime StartDate { get; set; }
        public DateTime? EndDate { get; set; }
        public GrantStatusEnum GrantStatus { get; set; }
    }
    public partial class R_User_ParentUser : RelationshipDatedBase
    {
        public virtual DateTime? EffectiveStartDate { get; set; }
        public virtual DateTime? EffectiveEndDate { get; set; }
        public virtual long HierarchyId { get; set; }
        public virtual bool IsLatest { get; set; }
    }

    public partial class R_User_HierarchyLevel_ParentUser : RelationshipDatedBase
    {
        public virtual DateTime? EffectiveStartDate { get; set; }
        public virtual DateTime? EffectiveEndDate { get; set; }
        public virtual long HierarchyId { get; set; }
        public virtual int HierarchyLevelNo { get; set; }
        public virtual bool IsLatest { get; set; }
        public virtual int OptionNo { get; set; }
    }

    public class R_User_LegalEntity_OrganizationRoot : RelationshipBase
    {
        public bool IsPrimary { get; set; }
    }
    public class R_User_Workspace_Note : RelationshipBase
    {

    }
    public class R_User_AdminWorkspace_Note : RelationshipBase
    {

    }
    public class R_User_UserPermissionGroup : RelationshipBase
    {

    }

    public class R_User_DistributionList_Note : RelationshipBase
    {

    }
    public class R_User_MyWorkspace_Note : RelationshipBase
    {

    }

    public class R_User_Assessment_Service : RelationshipBase
    {
        public DateTime? ScheduledStartDate { get; set; }       
        public string AssessmentUrl { get; set; }
        public string AssessmentName { get; set; }
        public long? SequenceNo { get; set; }
        public long? SlotId { get; set; }
    }
    public class R_User_CaseStudy_Service : RelationshipBase
    {
        public DateTime? ScheduledStartDate { get; set; }       
        public string AssessmentUrl { get; set; }
        public string AssessmentName { get; set; }
        public long? SequenceNo { get; set; }
        public long? SlotId { get; set; }
    }
    public class R_User_AssessmentSurvey_Service : RelationshipBase
    {
        public DateTime? ScheduledStartDate { get; set; }
        public string AssessmentUrl { get; set; }
    }
    public class R_User_Interview_Service : RelationshipBase
    {
        public DateTime? AssessmentInterviewScheduledStartDate { get; set; }
        public string AssessmentInterviewUrl { get; set; }
        public int? AssessmentInterviewDuratrion { get; set; }
        public double? AssessmentInterviewWeightage { get; set; }
        public long? SlotId { get; set; }
    }
    public class R_User_InterviewPanel_Team : RelationshipBase
    {
    }
    public class R_User_ReportTo_User : RelationshipBase
    {
    }

    public class R_User_Sponsor : RelationshipBase
    {
    }
    public class R_User_Proctor_User : RelationshipBase
    {
    }
    public class R_User_Slot_Note : RelationshipBase
    {
    }
    public class R_User_Slot_Service : RelationshipBase
    {
    }

}
