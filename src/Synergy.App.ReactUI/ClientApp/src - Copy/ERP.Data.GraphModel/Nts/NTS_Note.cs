//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ERP.Data.GraphModel
{
    using ERP.Utility;
    using System;
    using System.Linq;


    public partial class NTS_Note : NTSBase
    {
        //public long NoteId { get; set; }
        public string NoteNo { get; set; }
        public long? VersionNo { get; set; }
        public string Subject { get; set; }
        public string Description { get; set; }
        public bool? IsPrivate { get; set; }
        public TimeSpan? SLA { get; set; }
        public NoteReferenceTypeEnum? ReferenceType { get; set; }
        //public long? ReferenceTo { get; set; }

        //public string CategoryCode { get; set; }
        //public GEN_ListOfValue Category { get; set; }

        public DateTime? ExpiryDate { get; set; }
        public DateTime? ReminderDate { get; set; }

        //public BroadcastTypeEnum? BroadcastType { get; set; }

        //public long RequestedByUserId { get; set; }

        //public string NoteStatusCode { get; set; }
        public string MediaAttachmentLocation { get; set; }
        public bool? IsUserGuide { get; set; }
        public String CloudDocumentUrl { get; set; }
        public LockStatusEnum? LockStatus { get; set; }
        public DateTime? LastLockedDate { get; set; }

        public bool? DisablePermissionInheritance { get; set; }
        public decimal? SequenceNo { get; set; }

    }

    public class R_Note_LockedBy_User : RelationshipBase
    {

    }
    public class R_Note_Template : RelationshipBase
    {

    }
    public class R_Note_Owner_User : RelationshipBase
    {

    }
    //public class R_Note_Team : RelationshipBase
    //{

    //}
    //public class R_Note_OrganizationRoot : RelationshipBase
    //{

    //}
    //public class R_Note_Broadcast : RelationshipBase
    //{
    //    public NoteReferenceTypeEnum BroadcastType { get; set; }
    //    public bool ExcludeChildOrganization { get; set; }
    //    public bool SendNotification { get; set; }
    //    public bool DisableBroadcast { get; set; }
    //}

    public class R_Note_RequestedBy_User : RelationshipBase
    {

    }

    public class R_Note_Status_ListOfValue : RelationshipBase
    {

    }
    public class R_Note_NtsCategory : RelationshipBase
    {

    }
    public partial class R_Note_TagTo : RelationshipBase
    {
        public NoteReferenceTypeEnum? ReferenceType { get; set; }
        public bool ExcludeChildHierarchy { get; set; }
        public bool SendNotification { get; set; }
        public bool EnableBroadcast { get; set; }
    }


    /// <summary>
    /// from note to add a tag note
    /// Mutlipe
    /// </summary>
    public partial class R_Note_Tag_Note : RelationshipBase
    {
    }
    public class R_User_Like_Note : RelationshipBase
    {

    }

    public class R_User_Follow_Post : RelationshipBase
    {

    }

    //public partial class R_Note_TagTo_PositionRoot : RelationshipBase
    //{

    //}
    //public partial class R_Note_TagTo_OrganizationRoot : RelationshipBase
    //{

    //}
    //public partial class R_Note_TagTo_JobRoot : RelationshipBase
    //{

    //}
    //public partial class R_Note_TagTo_PersonRoot : RelationshipBase
    //{

    //}
    //public partial class R_Note_TagTo_User : RelationshipBase
    //{

    //}
    public class R_Note_SharedTo_User : RelationshipBase
    {
        public SharingModeEnum SharingMode { get; set; }
        public long SharedByUserId { get; set; }
        public bool? FullAccess { get; set; }
        public bool? CanView { get; set; }
        public bool? CanEdit { get; set; }
        public bool? CanDelete { get; set; }
        public bool? CanShare { get; set; }
    }
    public class R_Note_SharedTo_Team : RelationshipBase
    {
        public SharingModeEnum SharingMode { get; set; }
        public long SharedByUserId { get; set; }
        public bool? FullAccess { get; set; }
        public bool? CanView { get; set; }
        public bool? CanEdit { get; set; }
        public bool? CanDelete { get; set; }
        public bool? CanShare { get; set; }
    }
    public class R_Note_SharedTo_OrganizationRoot : RelationshipBase
    {
        public bool ExcludeAllChild { get; set; }
        public SharingModeEnum SharingMode { get; set; }
        public long SharedByUserId { get; set; }
        public bool? FullAccess { get; set; }
        public bool? CanView { get; set; }
        public bool? CanEdit { get; set; }
        public bool? CanDelete { get; set; }
        public bool? CanShare { get; set; }
    }

    public class R_Note_Reference : RelationshipBase
    {
        public ReferenceTypeEnum? ReferenceTypeCode { get; set; }
    }
    public class R_Note_ChangeRequest_Service : RelationshipBase
    {
    }
    public class R_Note_Multiple_Reference : RelationshipBase
    {
        public ReferenceTypeEnum? ReferenceTypeCode { get; set; }
    }
    public class R_Note_Parent_Note : RelationshipBase
    {

    }
    public class R_Note_Multiple_Parent_Note : RelationshipBase
    {

    }
    public class R_Note_LegalEntity_OrganizationRoot : RelationshipBase
    {

    }
    public class R_Note_ParentReference : RelationshipBase
    {
        public ReferenceTypeEnum? ReferenceTypeCode { get; set; }
    }

    public class R_Note_Resource_User : RelationshipBase
    {

    }
    public class R_Note_Workspace_Note : RelationshipBase
    {

    }
    public class R_Note_ContractTenant_Note : RelationshipBase
    {

    }
    public class R_Note_ContractUnit_Note : RelationshipBase
    {

    }
    public class R_Note_ContractPayment_Note : RelationshipBase
    {

    }
}

