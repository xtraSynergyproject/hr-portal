@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.HRDirectController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@{
    ViewData["Title"] = @SharedResource["Team"];
    Layout = null;
}
<script>
      function OnDeleteTeam(e) {
          var flag = confirm('@SharedResource["Areyousurethatyouwanttoproceed?"]');
        //alert("..Delete");
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url:'@Url.Action("Delete", "Team", new { @area="Cms"})?Id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        getDataTeam();
                      //  $("#Teamgrid").data("kendoGrid").dataSource.read();
                        kendo.alert("@SharedResource["DeletedSuccessfully"]");
                    } else {
                        getDataTeam();
                       // $("#Teamgrid").data("kendoGrid").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    getDataTeam();
                   // $("#Teamgrid").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }
</script>
<div>



    <div class="row">
        <div class="col-12">
            <div id="Teamgrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            @*@(Html.Kendo().Grid<TeamViewModel>
        ()
        .Name("Teamgrid")

        //toolbar.Custom().Text("Create Group").HtmlAttributes(new { href = "javascript:OnCreateGroup();" }))
        .Columns(columns =>
        {
            columns.Bound(c => c.Name).Title(@Resource["TeamName"]);
            columns.Bound(c => c.Description).Title(@SharedResource["Description"]);
            columns.Bound(c => c.UserName).Title(@Resource["MemberName"]);
            columns.Bound(c => c.Status).Title(@SharedResource["Status"]);
            columns.Bound(c => c.IsTeamOwner).Title(@Resource["IsTeamOwner"]);


        })
         .Scrollable(x => x.Enabled(false))
                    .Sortable(srt => srt.Enabled(true))
                    .Selectable(select => select.Enabled(false))
                    .Filterable(f => f.Extra(false)
                                                        .Operators(o => o.ForString(s => s.Clear()
                                                        .Contains("Contains")
                                                        .IsEqualTo("Is equal to")
                                                    )))
                    .Pageable(pageable => pageable
                    .Refresh(true)

                    .PageSizes(true)
                    .ButtonCount(5))
                    .AutoBind(true)
                    .DataSource(
                    dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    //.Events(events => events.Error("OnError"))
                    .Read(read => read.Action("ReadTeamData", "HRDirect",new {userId= ViewBag.UserId }))
                    .Model(model => model.Id(p => p.Id))
                    )
              )*@
        </div>
    </div>

</div>
<script>
    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        {
            field: "Name",
            headerName:"@Resource["TeamName"]"
        },
        {
            field: "Description",
            headerName: "@SharedResource["Description"]"
        },
        {
            field: "UserName",
             headerName: "@Resource["MemberName"]"
        },
        {
            field: "Status",
            headerName:"@SharedResource["Status"]",
            cellRenderer: params => {
                return statusObj[params.value]; //only for enum
            }
        },
        {
            field: "IsTeamOwner",
             headerName: "@Resource["IsTeamOwner"]"
        },

    ];

    $(function () {

        getDataTeam();
    });



   function getDataTeam() {
       document.getElementById("Teamgrid").innerHTML = "";
       gridConfig(
           "Teamgrid",
           "/chr/HRDirect/ReadTeamData?userId=@ViewBag.UserId",
           columnDefs,
           false,
           true,
           true,
           true,
           1,
           true,
           10);
    }

</script>
