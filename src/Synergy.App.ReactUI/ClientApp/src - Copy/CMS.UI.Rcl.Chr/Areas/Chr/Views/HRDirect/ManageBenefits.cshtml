@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.HRDirectController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@model PayrollReportViewModel;
@{
    Layout = null;// string.Concat("~/Areas/CMS/Views/Shared/_LayoutCMS.cshtml");
}
<style>
    .tab-pane {
        background-color: #fff !important;
    }


    .number-text {
        font-size: 11px;
        /*overflow-wrap: break-word;*/
    }

    .nav-link {
        padding: .5rem .5rem !important;
    }

    .nav-item {
        background-color: rgb(239, 239, 239) !important;
    }

    .container {
        position: relative;
    }

    .wrapper {
        position: relative;
        margin: 0 auto;
        overflow: hidden;
        padding: 5px;
        height: 50px;
    }

    .list {
        /*  position: absolute;*/
        left: 0px;
        top: 0px;
        /*min-width: 1560px;*/
        margin-left: 0px;
        margin-top: 0px;
    }

        .list li {
            display: table-cell;
            position: relative;
            text-align: center;
            cursor: grab;
            cursor: -webkit-grab;
            color: #efefef;
            vertical-align: middle;
        }

    .scroller {
        text-align: center;
        cursor: pointer;
        display: inline-flex;
        padding: 7px;
        padding-top: 11px;
        white-space: no-wrap;
        vertical-align: middle;
        /*    background-color: #fff;*/
        position: absolute;
        font-size: 25px;
    }

    .scroller-right {
        float: right;
        right: -25px;
        top: 36px;
    }

    .scroller-left {
        float: left;
        left: -25px;
        top: 36px;
    }

    h6 {
        font-size: 18px;
    }

    .div-count-active, .div-count:hover {
        background-color: #17a2b8;
        color: #fff !important;
        border-radius: 5px;
    }
</style>

<script>
    $(document).ready(function () {
        $("#StartDate").kendoDatePicker({
            format: "MMMM yyyy",
            start: "@CalendarView.Year",
            depth: "@CalendarView.Year",
            dateInput: true,
            value:'@Model.StartDate'
        });

        $("#EndDate").kendoDatePicker({
            format: "MMMM yyyy",
            start: "@CalendarView.Year",
            depth: "@CalendarView.Year",
            dateInput: true,
            value:'@Model.EndDate'
        });


    });
</script>

<div class="row no-gutters pad-20">

    <div class="row col-12">


        <div class="row cols-4">
            <div class="col-12">
                <span class="required">* @SharedResource["From"]</span>

            </div>
            <div class="col-12">
                @*@(Html.Kendo().DatePickerFor(model=>model.StartDate)
        .Start(CalendarView.Year)
        .Depth(CalendarView.Year)
        .Format("MMMM yyyy")
        .DateInput()
        .HtmlAttributes(new { @class = "hr-small"})
        )*@
                <input  id="StartDate" class="hr-small" />
            </div>
        </div>
        <div class="row cols-4 ">
            <div class="col-12">
                <span class="required">* @SharedResource["To"]</span>

            </div>
            <div class="col-12">
                @*@(Html.Kendo().DatePickerFor(model=>model.EndDate)
        .Start(CalendarView.Year)
        .Depth(CalendarView.Year)
        .Format("MMMM yyyy")
        .DateInput()
        .HtmlAttributes(new { @class = "hr-small"})
        )*@
                <input id="EndDate" class="hr-small" />
            </div>
        </div>
        <div class="row cols-4 ">
            <div class="col-12">
                &nbsp;
            </div>
            <div class="col-12">
                @*@Html.Kendo().Button().Name("btnSearch").Content(@SharedResource["Search"]).HtmlAttributes(new { @class = "k-primary", @onclick = "return OnSearchSubmit()" })*@
                <button type="button" class="btn btn-primary" id="btnSearch" onclick="OnSearchSubmit()">@SharedResource["Search"]</button>
            </div>
        </div>
    </div>



    <div class="row col-12">
        <script>


    var columnDefs = [
           {
               field: "PersonNo",
                headerName:"@Resource["EmployeeNo"]"
        },
        {
               field: "PersonFullName",
                headerName:"@Resource["PersonFullName"]"

           },
            {
            field: "ElementName",
               headerName:"@Resource["ElementName"]"
           },
        {
            field: "OrganizationName",
             headerName:"@Resource["OrganizationName"]"
        },


        {
            field: "JobName",
           headerName:"@Resource["JobName"]"
        },
        {
            field: "OpeningQuantity",
              headerName:"@Resource["OpeningQuantity"]",
        },
        {
            field: "EarningQuantity",
             headerName:"@Resource["EarningQuantity"]",
        },
        {
            field: "DeductionQuantity",
            headerName:"@Resource["DeductionQuantity"]",
        },
        {
            field: "ClosingQuantity",
            headerName:"@Resource["ClosingQuantity"]",

        },
        {
            field: "EffectiveDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        {
            field: "IsTransactionClosed",
            headerName:"@Resource["IsTransactionClosed"]",

        },
    ];

    $(function () {

        getVacationData();



    });

    function getVacationData() {
        document.getElementById("kgrdVacationAccrual").innerHTML = "";
        var search = FilterVacationGrid();
        gridConfig(
            "kgrdVacationAccrual",
            "/Chr/PayrollSlip/ReadPaySlipData?Year=" + search.Year+"&Month=" + search.Month+"&PersonId=" + search.PersonId,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
        </script>
        @*<br/>
        <br/>
        <button class="btn-primary" onclick="OnVacationExportToExcel()">@SharedResource["ExportToExcel"]</button>*@
        <div id="kgrdVacationAccrual" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        @*@(Html.Kendo().Grid<PayrollReportViewModel>
                                                                ().Name("kgrdVacationAccrual")
                                                                .Columns(col =>
                                                                {
                                                                    col.Bound(c => c.PersonNo).Title(@Resource["EmployeeNo."]).HeaderHtmlAttributes(new { title = Resource["EmployeeNo."] }).Width(150);
                                                                    col.Bound(c => c.PersonName).Title(@Resource["EmployeeName"]).HeaderHtmlAttributes(new { title = Resource["EmployeeName"] }).Width(200);
                                                                    //col.Bound(c => c.SponsorshipNo).Title("Iqamah No").Width(150);
                                                                    col.Bound(c => c.ElementName).Title(@Resource["ElementName"]).HeaderHtmlAttributes(new { title = Resource["ElementName"] }).Width(200);

                                                                    col.Bound(c => c.OrganizationName).Title(@Resource["OrganisationName"]).HeaderHtmlAttributes(new { title = Resource["OrganisationName"] });
                                                                    col.Bound(c => c.JobName).Title(@Resource["JobName"]).HeaderHtmlAttributes(new { title = Resource["JobName"] });
                                                                    col.Bound(c => c.OpeningQuantity).Title(@Resource["OpeningQuantity"]).HeaderHtmlAttributes(new { title = Resource["OpeningQuantity"] });
                                                                    col.Bound(c => c.EarningQuantity).Title(@Resource["Accrual"]).HeaderHtmlAttributes(new { title = Resource["Accrual"] });
                                                                    col.Bound(c => c.DeductionQuantity).Title(Resource["LeaveTaken"]).HeaderHtmlAttributes(new { title = Resource["LeaveTaken"] });
                                                                    col.Bound(c => c.ClosingQuantity).Title(@Resource["ClosingQuantity"]).HeaderHtmlAttributes(new { title = Resource["ClosingQuantity"] });
                                                                    col.Bound(c => c.EffectiveDate).Title(@Resource["EffectiveDate"]).Filterable(false).HeaderHtmlAttributes(new { title = Resource["EffectiveDate"] });//.Title("");
                                                                    col.Bound(c => c.IsTransactionClosed).Title(@Resource["IsTransactionClosed"]).HeaderHtmlAttributes(new { title = Resource["IsTransactionClosed"] });
                                                                })
                                                                .ToolBar(toolbar =>
                                                                {
                                                                    //toolbar.Excel();
                                                                    toolbar.Custom().Text(@SharedResource["ExportToExcel"]).Name("btnAdd").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnVacationExportToExcel();" });

                                                                })
                                                                //.Events(e => e.DataBound("OnDataBound"))
                                                                .Excel(e => e.FileName("VacationAccrualReport.xlsx").AllPages(true))
                                                                .Scrollable(x => x.Enabled(true))

                                                                .Sortable(srt => srt.Enabled(true))
                                                                .Selectable(select => select.Enabled(false))
                                                                .Filterable(f => f.Extra(false)
                                                                .Operators(o => o.ForString(s => s.Clear()
                                                                .Contains("Contains")
                                                                .IsEqualTo("Is equal to")
                                                                )))
                                                                .Resizable(resize => resize.Columns(true))
                                                                .Pageable(pageable => pageable
                                                                .Refresh(true)

                                                                .PageSizes(true)
                                                                .ButtonCount(5))
                                                                .AutoBind(true)
                                                                .DataSource(
                                                                dataSource => dataSource
                                                                .Ajax()
                                                                .PageSize(100)
                                                                .Model(model => model.Id(p => p.PayrollId))
                                                                )


        )*@

    </div>
</div>

<script type="text/javascript">

    function FilterVacationGrid() {
        var search = {
            Year: $("#Year").val(),
            Month: $("#Month").val(),
            PersonId: $("#PersonId").val(),
            PayrollId: $("#PayrollId").val(),
        };
        return search;
    }
        function OnVacationExportToExcel()
    {
        var grid = $("#kgrdVacationAccrual").data("kendoGrid");
        var requestObject = (new kendo.data.transports["aspnetmvc-server"]({ prefix: "" }))
            .options.parameterMap({
                page: grid.dataSource.page(),
                sort: grid.dataSource.sort(),
                filter: grid.dataSource.filter()
            });
        var href = '@Url.Action("VacationAccuralDetailsByDateDataExcel", "PayrollReport", new { area = "rpt",})';
        href = href + "?page=" + (requestObject.page || '1');
        href = href + "&sort=" + (requestObject.sort || '~');
        href = href + "&pageSize=" + (grid.dataSource._pageSize || '0');
        href = href + "&filter=" + (requestObject.filter || '~');
          var search = FilterVacationGrid();
            href = href + "&PayrollId=" + search.PayrollId + "&Year=" + search.Year + "&Month=" + search.Month + "&personId=" + search.PersonId;
        window.location.href = href;
    }
</script>