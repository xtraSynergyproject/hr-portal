<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AdditionalInfo" xml:space="preserve">
    <value>Additional Info</value>
  </data>
  <data name="AlertCorrectSuccess" xml:space="preserve">
    <value>Field corrected Successfully</value>
  </data>
  <data name="AlertCreateSuccess" xml:space="preserve">
    <value>New Field created Successfully</value>
  </data>
  <data name="AlertDeleteSuccess" xml:space="preserve">
    <value>Field deleted Successfully</value>
  </data>
  <data name="AlertUpdateSuccess" xml:space="preserve">
    <value>Field updated Successfully</value>
  </data>
  <data name="AreaName" xml:space="preserve">
    <value>Area Name</value>
  </data>
  <data name="AutoBind" xml:space="preserve">
    <value>Auto Bind</value>
  </data>
  <data name="CharacterMaximumLength" xml:space="preserve">
    <value>Character Maximum Length</value>
  </data>
  <data name="CharacterMinimumLength" xml:space="preserve">
    <value>Character Minimum Length</value>
  </data>
  <data name="ClientDataBindScript" xml:space="preserve">
    <value>Client DataBind Script</value>
  </data>
  <data name="ClientOnChangeScript" xml:space="preserve">
    <value>Client OnChange Script</value>
  </data>
  <data name="ClientReadOnlyScript" xml:space="preserve">
    <value>Client ReadOnly Script</value>
  </data>
  <data name="ClientValidationScript" xml:space="preserve">
    <value>Client Validation Script</value>
  </data>
  <data name="ClientVisibilityScript" xml:space="preserve">
    <value>Client Visibility Script</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Code</value>
  </data>
  <data name="CreateField" xml:space="preserve">
    <value>Create New Field</value>
  </data>
  <data name="DataFormatString" xml:space="preserve">
    <value>Data Format String</value>
  </data>
  <data name="DataLength" xml:space="preserve">
    <value>Data Length</value>
  </data>
  <data name="DataSourceActionName" xml:space="preserve">
    <value>DataSource Action Name</value>
  </data>
  <data name="DataSourceAreaName" xml:space="preserve">
    <value>DataSource Area Name</value>
  </data>
  <data name="DataSourceControllerName" xml:space="preserve">
    <value>DataSource Controller Name</value>
  </data>
  <data name="DataSourceHtmlAttributesString" xml:space="preserve">
    <value>DataSource HtmlAttributes</value>
  </data>
  <data name="DataSourceParameters" xml:space="preserve">
    <value>DataSource Parameters</value>
  </data>
  <data name="DataTextField" xml:space="preserve">
    <value>Data Text Field</value>
  </data>
  <data name="DataType" xml:space="preserve">
    <value>Data Type</value>
  </data>
  <data name="DataValueField" xml:space="preserve">
    <value>Data Value Field</value>
  </data>
  <data name="DecimalPrecision" xml:space="preserve">
    <value>Decimal Precision</value>
  </data>
  <data name="DefaultCodeStatic" xml:space="preserve">
    <value>Default Static Code</value>
  </data>
  <data name="DefaultDataTypeCode" xml:space="preserve">
    <value>Default DataType Code</value>
  </data>
  <data name="DefaultDataTypeName" xml:space="preserve">
    <value>Default DataType Name</value>
  </data>
  <data name="DefaultDynamicMethodName" xml:space="preserve">
    <value>Default Dynamic Method Name</value>
  </data>
  <data name="DefaultValue" xml:space="preserve">
    <value>Default Value</value>
  </data>
  <data name="DefaultValueQuery" xml:space="preserve">
    <value>Default Value Query</value>
  </data>
  <data name="DefaultValueStatic" xml:space="preserve">
    <value>Default Static Value</value>
  </data>
  <data name="DefaultValueTypeCode" xml:space="preserve">
    <value>Default Value</value>
  </data>
  <data name="DisplayMode" xml:space="preserve">
    <value>Display Mode</value>
  </data>
  <data name="DocumentReadyScript" xml:space="preserve">
    <value>Document Ready Script</value>
  </data>
  <data name="EditableBy" xml:space="preserve">
    <value>Editable By</value>
  </data>
  <data name="EditableBys" xml:space="preserve">
    <value>Editable By</value>
  </data>
  <data name="EditableContext" xml:space="preserve">
    <value>Editable Context</value>
  </data>
  <data name="EnableDropdownGrouping" xml:space="preserve">
    <value>Enable Dropdown Grouping</value>
  </data>
  <data name="FieldColumnWidth" xml:space="preserve">
    <value>Field Column Width</value>
  </data>
  <data name="FieldHtmlAttributes" xml:space="preserve">
    <value>Field Html Attributes</value>
  </data>
  <data name="FieldHtmlAttributesString" xml:space="preserve">
    <value>Field HtmlAttributes String</value>
  </data>
  <data name="FieldId" xml:space="preserve">
    <value>Field Id</value>
  </data>
  <data name="FieldName" xml:space="preserve">
    <value>Field Name</value>
  </data>
  <data name="FieldPartialViewName" xml:space="preserve">
    <value>Field Partial View Name</value>
  </data>
  <data name="FieldSerialNo" xml:space="preserve">
    <value>Field Serial No</value>
  </data>
  <data name="FieldValueId" xml:space="preserve">
    <value>Field Value Id</value>
  </data>
  <data name="FieldWidthCode" xml:space="preserve">
    <value>Field Width Code</value>
  </data>
  <data name="GridAddButtonName" xml:space="preserve">
    <value>Grid Add Button Name</value>
  </data>
  <data name="GridAllowFilter" xml:space="preserve">
    <value>Grid Allow Filter</value>
  </data>
  <data name="GridAllowPaging" xml:space="preserve">
    <value>Grid Allow Paging</value>
  </data>
  <data name="GridAllowSorting" xml:space="preserve">
    <value>Grid Allow Sorting</value>
  </data>
  <data name="GridCanAdd" xml:space="preserve">
    <value>Grid Can Add</value>
  </data>
  <data name="GridCanDelete" xml:space="preserve">
    <value>Grid Can Delete</value>
  </data>
  <data name="GridCanEdit" xml:space="preserve">
    <value>Grid Can Edit</value>
  </data>
  <data name="GridCanView" xml:space="preserve">
    <value>Grid Can View</value>
  </data>
  <data name="GridColumns" xml:space="preserve">
    <value>Grid Columns</value>
  </data>
  <data name="GridDeleteButtonName" xml:space="preserve">
    <value>Grid Delete Button Name</value>
  </data>
  <data name="GridDeleteConfirmationMessage" xml:space="preserve">
    <value>Grid Delete Confirmation Message</value>
  </data>
  <data name="GridDeleteSuccessMessage" xml:space="preserve">
    <value>Grid Delete Success Message</value>
  </data>
  <data name="GridEditButtonName" xml:space="preserve">
    <value>Grid Edit Button Name</value>
  </data>
  <data name="GridMaximumRows" xml:space="preserve">
    <value>Grid Maximum Rows</value>
  </data>
  <data name="GridMinimumRows" xml:space="preserve">
    <value>Grid Minimum Rows</value>
  </data>
  <data name="GridPageSize" xml:space="preserve">
    <value>Grid Page Size</value>
  </data>
  <data name="GridRequiredMinimumRows" xml:space="preserve">
    <value>Grid Required Minimum Rows</value>
  </data>
  <data name="GridShowDeleteConfirmation" xml:space="preserve">
    <value>Grid Show Delete Confirmation</value>
  </data>
  <data name="GridViewButtonName" xml:space="preserve">
    <value>Grid View Button Name</value>
  </data>
  <data name="GroupTemplateFieldId" xml:space="preserve">
    <value>Group Template Field Id</value>
  </data>
  <data name="HelpInfo" xml:space="preserve">
    <value>Help Info</value>
  </data>
  <data name="HyperlinkTarget" xml:space="preserve">
    <value>Hyperlink Target</value>
  </data>
  <data name="InjectDefaultDatasourceAttributes" xml:space="preserve">
    <value>Inject Default Datasource Attributes</value>
  </data>
  <data name="InjectDefaultLabelAttributes" xml:space="preserve">
    <value>Inject Default Label Attributes</value>
  </data>
  <data name="IsDataSourceMultiValued" xml:space="preserve">
    <value>Is DataSource MultiValued</value>
  </data>
  <data name="IsLabelItalic" xml:space="preserve">
    <value>Is Label Italic?</value>
  </data>
  <data name="IsLabelUnderlined" xml:space="preserve">
    <value>Is Label Underlined?</value>
  </data>
  <data name="IsSelectionMultiValued" xml:space="preserve">
    <value>Is Selection Multi Valued</value>
  </data>
  <data name="IsVisible" xml:space="preserve">
    <value>Is Visible</value>
  </data>
  <data name="LabelColorHexa" xml:space="preserve">
    <value>Label Color Hexa</value>
  </data>
  <data name="LabelColumnWidth" xml:space="preserve">
    <value>Label Column Width</value>
  </data>
  <data name="LabelDisplayName" xml:space="preserve">
    <value>Label Display Name</value>
  </data>
  <data name="LabelHtmlAttributes" xml:space="preserve">
    <value>Label Html Attributes</value>
  </data>
  <data name="LabelHtmlAttributesString" xml:space="preserve">
    <value>Label Html Attributes String</value>
  </data>
  <data name="MaximumValue" xml:space="preserve">
    <value>Maximum Value</value>
  </data>
  <data name="MinimumValue" xml:space="preserve">
    <value>Minimum Value</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NumberOfLines" xml:space="preserve">
    <value>Number Of Lines</value>
  </data>
  <data name="PageTitleCorrect" xml:space="preserve">
    <value>Correct Field</value>
  </data>
  <data name="PageTitleCreate" xml:space="preserve">
    <value>Create Field</value>
  </data>
  <data name="PageTitleDelete" xml:space="preserve">
    <value>Delete Field</value>
  </data>
  <data name="PageTitleTemplateCorrect" xml:space="preserve">
    <value>Correct Template Field</value>
  </data>
  <data name="PageTitleTemplateCreate" xml:space="preserve">
    <value>Create Template Field</value>
  </data>
  <data name="PageTitleTemplateEditHistory" xml:space="preserve">
    <value>Edit Template Field - History</value>
  </data>
  <data name="PageTitleTemplateUpdate" xml:space="preserve">
    <value>Update Template Field</value>
  </data>
  <data name="PageTitleUpdate" xml:space="preserve">
    <value>Update Field</value>
  </data>
  <data name="PartialViewName" xml:space="preserve">
    <value>PartialView Name</value>
  </data>
  <data name="PlaceHolder" xml:space="preserve">
    <value>Place Holder</value>
  </data>
  <data name="PopupHeight" xml:space="preserve">
    <value>Popup Height</value>
  </data>
  <data name="PopupTitle" xml:space="preserve">
    <value>Popup Title</value>
  </data>
  <data name="PopupWidth" xml:space="preserve">
    <value>Popup Width</value>
  </data>
  <data name="ReadOnlyClientScript" xml:space="preserve">
    <value>ReadOnly Client Script</value>
  </data>
  <data name="ReadOnlyServerScript" xml:space="preserve">
    <value>ReadOnly Server Script</value>
  </data>
  <data name="ReadonlyTypeCode" xml:space="preserve">
    <value>Readonly</value>
  </data>
  <data name="RequiredClientScript" xml:space="preserve">
    <value>Required Client Script</value>
  </data>
  <data name="RequiredServerScript" xml:space="preserve">
    <value>Required Server Script</value>
  </data>
  <data name="RequiredTypeCode" xml:space="preserve">
    <value>Required Type</value>
  </data>
  <data name="SequenceNo" xml:space="preserve">
    <value>Sequence No</value>
  </data>
  <data name="ServerValidationScript" xml:space="preserve">
    <value>Server Validation Script</value>
  </data>
  <data name="ShowInGrid" xml:space="preserve">
    <value>Show In Grid</value>
  </data>
  <data name="ShowRequiredAsterisk" xml:space="preserve">
    <value>Show Required Asterisk</value>
  </data>
  <data name="TemplateColumnCount" xml:space="preserve">
    <value>TemplateColumn Count</value>
  </data>
  <data name="TemplateFieldId" xml:space="preserve">
    <value>Template Field Id</value>
  </data>
  <data name="TemplateId" xml:space="preserve">
    <value>Template Id</value>
  </data>
  <data name="TemplateMaximumColumn" xml:space="preserve">
    <value>Template Maximum Column</value>
  </data>
  <data name="ToolTip" xml:space="preserve">
    <value>Tool Tip</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>Value</value>
  </data>
  <data name="ViewableBy" xml:space="preserve">
    <value>Viewable By</value>
  </data>
  <data name="ViewableBys" xml:space="preserve">
    <value>Viewable By</value>
  </data>
  <data name="ViewableContext" xml:space="preserve">
    <value>Viewable Context</value>
  </data>
  <data name="VisibilityClientScript" xml:space="preserve">
    <value>Visibility Client Script</value>
  </data>
  <data name="VisibilityServerScript" xml:space="preserve">
    <value>Visibility Server Script</value>
  </data>
  <data name="VisibilityTypeCode" xml:space="preserve">
    <value>Visibility Type Code</value>
  </data>
</root>