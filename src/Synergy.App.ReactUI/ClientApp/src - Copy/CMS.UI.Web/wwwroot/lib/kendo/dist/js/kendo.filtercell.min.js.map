{"version":3,"sources":["kendo.filtercell.js"],"names":["f","define","$","undefined","isNonValueFilter","filter","operator","inArray","nonValueOperators","findFilterForField","field","i","result","filters","isPlainObject","hasOwnProperty","isArray","length","removeFiltersForField","expression","grep","removeDuplicates","dataSelector","dataTextField","getter","kendo","e","item","text","items","index","seen","push","window","ui","DataSource","data","Widget","CHANGE","BOOL","ENUM","STRING","EQ","NEQ","proxy","FilterCell","extend","init","element","options","wrapper","that","dataSource","viewModel","passedOptions","first","type","operators","input","suggestDataSource","fields","target","addClass","this","appendTo","attr","fn","call","model","reader","values","_parse","value","parse","defaultOperator","observable","operatorVisible","val","get","_clearInProgress","_prevOperator","bind","updateDsFilter","initSuggestDataSource","inputWidth","width","_getColumnTitle","_setInputType","showOperators","_createOperatorDropDown","css","_createClearIcon","template","setAutoCompleteSource","setComboBoxSource","_refreshUI","_refreshHandler","radioInput","inputName","labelTrue","labelFalse","_angularItems","suggestionOperator","delay","minLength","remove","guid","messages","isTrue","append","clone","isFalse","column","title","prop","dropdown","operatorDropDown","kendoDropDownList","dataValueField","open","popup","valuePrimitive","ariaLabel","find","removeClass","customDataSource","group","create","_pageSize","autoComplete","setDataSource","comboBox","manuallyUpdatingVM","set","_applyFilter","currentFilter","prevented","mergeResult","logic","toJSON","trigger","_merge","idx","clear","html","click","clearFilter","action","elements","closest","angular","destroy","filterModel","unbind","events","name","string","eq","neq","startswith","contains","doesnotcontain","endswith","isnull","isnotnull","isempty","isnotempty","isnullorempty","isnotnullorempty","number","gte","gt","lte","lt","date","enums","plugin","jQuery","amd","a1","a2","a3"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;CAwBC,SAAUA,EAAGC,QACVA,OAAO,oBACH,qBACA,mBACA,uBACA,iBACA,sBACDD,IACL,WAsbE,MA9aC,UAAUE,EAAGC,GASV,QAASC,GAAiBC,GACtB,GAAIC,GAA6B,gBAAXD,GAAsBA,EAASA,EAAOC,QAC5D,OAAOJ,GAAEK,QAAQD,EAAUE,MAE/B,QAASC,GAAmBJ,EAAQK,GAApC,GAYaC,GACDC,EAZJC,IACJ,IAAIX,EAAEY,cAAcT,GAChB,GAAIA,EAAOU,eAAe,WACtBF,EAAUR,EAAOQ,YACd,IAAIR,EAAOK,OAASA,EACvB,MAAOL,EAMf,KAHIH,EAAEc,QAAQX,KACVQ,EAAUR,GAELM,EAAI,EAAGA,EAAIE,EAAQI,OAAQN,IAEhC,GADIC,EAASH,EAAmBI,EAAQF,GAAID,GAExC,MAAOE,GAInB,QAASM,GAAsBC,EAAYT,GACnCS,EAAWN,UACXM,EAAWN,QAAUX,EAAEkB,KAAKD,EAAWN,QAAS,SAAUR,GAEtD,MADAa,GAAsBb,EAAQK,GAC1BL,EAAOQ,QACAR,EAAOQ,QAAQI,OAEfZ,EAAOK,OAASA,KAKvC,QAASW,GAAiBC,EAAcC,GACpC,GAAIC,GAASC,EAAMD,OAAOD,GAAe,EACzC,OAAO,UAAUG,GAEb,IAFG,GAGKC,GAAuBC,EAF3BC,EAAQP,EAAaI,GAAId,KAAakB,EAAQ,EAAGC,KAC9CD,EAAQD,EAAMZ,QACbU,EAAOE,EAAMC,KAAUF,EAAOJ,EAAOG,GACpCI,EAAKhB,eAAea,KACrBhB,EAAOoB,KAAKL,GACZI,EAAKH,IAAQ,EAGrB,OAAOhB,IAvDlB,GACOa,GAAQQ,OAAOR,MAAOS,EAAKT,EAAMS,GAAIC,EAAaV,EAAMW,KAAKD,WAAYE,EAASH,EAAGG,OAAQC,EAAS,SAAUC,EAAO,UAAWC,EAAO,QAASC,EAAS,SAAUC,EAAK,cAAeC,EAAM,kBAAmBC,EAAQ1C,EAAE0C,MAAOpC,GAC/N,SACA,YACA,UACA,aACA,gBACA,oBAmDJqC,EAAaR,EAAOS,QACpBC,KAAM,SAAUC,EAASC,GAAnB,GAEEC,GACAC,EAAaC,EAAYC,EAAWC,EAAyBC,EAAOC,EAAMC,EAAsDC,EAChIC,EAYAC,EACAC,EAkBInD,CAVR,IAxBAsC,EAAU9C,EAAE8C,GAASc,SAAS,gBAC1BZ,EAAUa,KAAKb,QAAUhD,EAAE,WAAW8D,SAAShB,GAC/CG,EAAOY,KAA6BT,EAAgBL,EAAsBQ,EAAYN,EAAKM,UAAYR,EAAQQ,cAAiBC,EAAQP,EAAKO,MAAQxD,EAAE,YAAY+D,KAAKxC,EAAMwC,KAAK,QAAS,gBAAgBD,SAASd,GACrNS,EAAoBV,EAAUA,EAAQU,kBAAoB,KAC1DA,IACAV,EAAU/C,EAAE4C,UAAWG,GAAWU,wBAEtCtB,EAAO6B,GAAGnB,KAAKoB,KAAKhB,EAAMH,EAAQ,GAAIC,GAClCU,IACAR,EAAKF,QAAQU,kBAAoBA,GAErCV,EAAUE,EAAKF,QACfG,EAAaD,EAAKC,WAAaH,EAAQG,WACvCD,EAAKiB,MAAQhB,EAAWiB,OAAOD,MAC/BZ,EAAOP,EAAQO,KAAOf,EAClBmB,EAASnC,EAAMD,OAAO,uBAAuB,GAAM4B,OACnDS,EAASD,EAAOX,EAAQvC,OACxBmD,GAAUA,EAAOL,OACjBA,EAAOP,EAAQO,KAAOK,EAAOL,MAE7BP,EAAQqB,SACRrB,EAAQO,KAAOA,EAAOhB,GAE1BiB,EAAYA,EAAUD,IAASP,EAAQQ,UAAUD,IAC5CF,EAAchD,SACf,IAAKiD,IAASE,GAAW,CACrBR,EAAQ3C,SAAWiD,CACnB,OAGRJ,EAAKoB,OAAS,SAAUC,GACpB,MAAgB,OAATA,EAAgBA,EAAQ,GAAKA,GAEpCrB,EAAKiB,OAASjB,EAAKiB,MAAMR,SACrBlD,EAAQyC,EAAKiB,MAAMR,OAAOX,EAAQvC,OAClCA,GACIA,EAAM+D,QACNtB,EAAKoB,OAAS3B,EAAMlC,EAAM+D,MAAO/D,KAI7CyC,EAAKuB,gBAAkBzB,EAAQ3C,SAC/B6C,EAAKE,UAAYA,EAAY5B,EAAMkD,YAC/BrE,SAAU2C,EAAQ3C,SAClBkE,MAAO,KACPI,gBAAiB,WACb,GAAIC,GAAMd,KAAKe,IAAI,QACnB,OAAe,QAARD,GAAgBA,IAAQ1E,GAAoB,aAAP0E,GAAsBzE,EAAiB2D,KAAKe,IAAI,eAAiB3B,EAAK4B,oBAG1H5B,EAAK6B,cAAgB/B,EAAQ3C,SAC7B+C,EAAU4B,KAAK3C,EAAQM,EAAMO,EAAK+B,eAAgB/B,IAC9CK,GAAQf,GACRU,EAAKgC,sBAAsBlC,GAEJ,OAAvBA,EAAQmC,aACR1B,EAAMI,SAAS,iBACfJ,EAAM2B,MAAMpC,EAAQmC,aAExB1B,EAAMO,KAAK,aAAcd,EAAKmC,mBAC9B5B,EAAMO,KAAK,QAASd,EAAKmC,mBACzBnC,EAAKoC,cAActC,EAASO,GACxBA,GAAQjB,GAAQU,EAAQuC,iBAAkB,EAC1CrC,EAAKsC,wBAAwBhC,IAE7BvD,EAAE,6BAA6BwF,IAAI,UAAW,QAAQ9D,KAAK,MAAMoC,SAASd,GAC1EA,EAAQY,SAAS,sBAErBX,EAAKwC,mBACLlE,EAAMwD,KAAKlB,KAAKb,QAASG,GACrBG,GAAQf,IACHQ,EAAQ2C,UACTzC,EAAK0C,yBAGTrC,GAAQhB,GACRW,EAAK2C,kBAAkB3C,EAAKF,QAAQqB,QAExCnB,EAAK4C,aACL5C,EAAK6C,gBAAkBpD,EAAMO,EAAK4C,WAAY5C,GAC9CA,EAAKC,WAAW6B,KAAK3C,EAAQa,EAAK6C,kBAEtCT,cAAe,SAAUtC,EAASO,GAAnB,GAcHyC,GACA/C,EACAgD,EACAC,EAEAC,EAlBJjD,EAAOY,KAAML,EAAQP,EAAKO,KACC,mBAApBT,GAAQ2C,UACf3C,EAAQ2C,SAASzB,KAAKhB,EAAKE,WACvBL,QAASG,EAAKO,MACdN,WAAYD,EAAKQ,oBAErBR,EAAKkD,cAAc,YACZ7C,GAAQf,EACfiB,EAAMO,KAAKxC,EAAMwC,KAAK,QAAS,gBAAgBA,KAAKxC,EAAMwC,KAAK,cAAehB,EAAQ1B,eAAiB0B,EAAQvC,OAAOuD,KAAKxC,EAAMwC,KAAK,UAAWhB,EAAQqD,oBAAoBrC,KAAKxC,EAAMwC,KAAK,SAAUhB,EAAQsD,OAAOtC,KAAKxC,EAAMwC,KAAK,cAAehB,EAAQuD,WAAWvC,KAAKxC,EAAMwC,KAAK,oBAAoB,GAC7R,QAART,EACPE,EAAMO,KAAKxC,EAAMwC,KAAK,QAAS,cACxBT,GAAQjB,GACfmB,EAAM+C,SACFR,EAAa/F,EAAE,yBACfgD,EAAUC,EAAKD,QACfgD,EAAYzE,EAAMiF,OAClBP,EAAYjG,EAAE,YAAY0B,KAAKqB,EAAQ0D,SAASC,QAAQC,OAAOZ,GACnEA,EAAWhC,KAAKxC,EAAMwC,KAAK,QAAS,iBAAiBA,KAAK,OAAQiC,GAAWrB,IAAI,QAC7EuB,EAAaD,EAAUW,QAAQlF,KAAKqB,EAAQ0D,SAASI,SACzDd,EAAWa,QAAQjC,IAAI,SAASb,SAASoC,GACzClD,EAAQ2D,QACJV,EACAC,KAEW,UAAR5C,EACPE,EAAMO,KAAKxC,EAAMwC,KAAK,QAAS,kBAAkBA,KAAK,QAASd,EAAKmC,mBAC7D9B,GAAQhB,GACfkB,EAAMO,KAAKxC,EAAMwC,KAAK,QAAS,YAAYA,KAAKxC,EAAMwC,KAAK,cAAe,QAAQA,KAAKxC,EAAMwC,KAAK,YAAY,GAAMA,KAAKxC,EAAMwC,KAAK,UAAW,YAAYA,KAAKxC,EAAMwC,KAAK,eAAgB,SAASA,KAAKxC,EAAMwC,KAAK,oBAAoB,IAGhPqB,gBAAiB,WACb,GAAI0B,GAASjD,KAAKd,QAAQ+D,MAC1B,OAAOA,GAASA,EAAOC,OAASD,EAAOtG,MAAQ,IAEnD+E,wBAAyB,SAAUhC,GAAV,GAEZyD,GAMLC,EAPAtF,KAAYwB,EAAYU,KAAKV,SACjC,KAAS6D,IAAQzD,GACb5B,EAAMG,MACFJ,KAAM6B,EAAUyD,GAChB1C,MAAO0C,GAGXC,GAAWjH,EAAE,sCAAwCuB,EAAMwC,KAAK,QAAU,wBAAwBD,SAASD,KAAKb,SACpHa,KAAKqD,iBAAmBD,EAASE,mBAC7BjE,WAAYvB,EACZN,cAAe,OACf+F,eAAgB,QAChBC,KAAM,WACFxD,KAAKyD,MAAMxE,QAAQqC,MAAM,MAE7BoC,gBAAgB,IACjBrF,KAAK,qBACRiB,EAAU4B,KAAK,SAAU,WACrB,GAAIyC,GAAYjE,EAAUJ,EAAU/C,SACpC6G,GAASlD,KAAK,aAAcyD,KAEhC3D,KAAKqD,iBAAiBlE,QAAQyE,KAAK,sBAAsBC,YAAY,qBAAqB9D,SAAS,eAEvGqB,sBAAuB,SAAUlC,GAC7B,GAAIU,GAAoBV,EAAQU,iBAC1BA,aAA6BxB,MAC1Bc,EAAQ4E,kBAAoBlE,IAC7BA,EAAkBmE,MAAQ3H,GAE9BwD,EAAoBI,KAAKJ,kBAAoBxB,EAAW4F,OAAOpE,IAE9DV,EAAQ4E,mBACTlE,EAAkBqE,UAAY7H,EAC9BwD,EAAkBU,OAAOjC,KAAOf,EAAiBsC,EAAkBU,OAAOjC,KAAM2B,KAAKd,QAAQvC,QAEjGqD,KAAKJ,kBAAoBA,GAE7BkC,sBAAuB,WACnB,GAAIoC,GAAelE,KAAKL,MAAMtB,KAAK,oBAC/B6F,IACAA,EAAaC,cAAcnE,KAAKJ,oBAGxCmC,kBAAmB,SAAUxB,GAAV,GACXlB,GAAajB,EAAW4F,QAAS3F,KAAMkC,IACvC6D,EAAWpE,KAAKL,MAAMtB,KAAK,gBAC3B+F,KAAapE,KAAKd,QAAQ2C,UAC1BuC,EAASD,cAAc9E,IAG/B2C,WAAY,WACR,GAAI5C,GAAOY,KAAM1D,EAASI,EAAmB0C,EAAKC,WAAW/C,SAAU0D,KAAKd,QAAQvC,WAAc2C,EAAYF,EAAKE,SACnHF,GAAKiF,oBAAqB,EAC1B/H,EAASH,EAAE4C,QAAO,KAAUzC,GACxB8C,EAAKF,QAAQO,MAAQjB,GACjBc,EAAUmB,QAAUnE,EAAOmE,OAC3BrB,EAAKD,QAAQyE,KAAK,UAAUT,KAAK,WAAW,GAGhD7G,EAAOC,UACP+C,EAAUgF,IAAI,WAAYhI,EAAOC,UAErC+C,EAAUgF,IAAI,QAAShI,EAAOmE,OAC9BrB,EAAKiF,oBAAqB,GAE9BE,aAAc,SAAUjI,GAEhB0D,KAAKX,WAAW/C,OADhBA,EAAOQ,QAAQI,OACQZ,OAK/B6E,eAAgB,SAAUxD,GAAV,GAC6BrB,GAcrCkI,EAEApH,EAIAqH,EAiBAC,EArCAtF,EAAOY,KAAMK,EAAQjB,EAAKE,SAC9B,OAAe,YAAX3B,EAAEhB,OAAuB0D,EAAMI,QAAUrE,IAAcC,EAAiBgE,IAAUhE,EAAiB+C,EAAK6B,gBACxG3E,EAAS8C,EAAKC,WAAW/C,WACrBQ,WACA6H,MAAO,OAEXxH,EAAsBb,EAAQ8C,EAAKF,QAAQvC,OAC3CyC,EAAK6B,cAAgBZ,EAAM9D,SAC3B6C,EAAKmF,aAAajI,GAClB,IAEA8C,EAAKiF,oBAAiC,YAAX1G,EAAEhB,OAAuB0D,EAAMI,QAAUrE,IAAcC,EAAiBgE,IAAqB,YAAX1C,EAAEhB,OAAuByC,EAAK4B,kBAAoC,OAAhBX,EAAMI,QAGrK+D,EAAgBrI,EAAE4C,UAAWK,EAAKE,UAAUsF,UAAYjI,MAAOyC,EAAKF,QAAQvC,QAChFyC,EAAK6B,cAAgBuD,EAAcjI,SAC/Ba,GACAuH,MAAO,MACP7H,YAEA2H,GAAY,GACZD,EAAc/D,QAAUrE,GAAqC,OAAxBoI,EAAc/D,OAAkBpE,EAAiBmI,KAAmBxE,KAAKgB,oBAC9G5D,EAAWN,QAAQmB,KAAKuG,GACxBC,EAAYrF,EAAKyF,QAAQtG,GACrBjC,OAAQc,EACRT,MAAOyC,EAAKF,QAAQvC,UAGxByC,EAAK4B,kBAA4C,OAAxBwD,EAAc/D,SACvCgE,EAAYrF,EAAKyF,QAAQtG,GACrBjC,OAAQ,KACRK,MAAOyC,EAAKF,QAAQvC,SAGxB8H,IAGAC,EAActF,EAAK0F,OAAO1H,GAC9BgC,EAAKmF,aAAaG,KA3BlB,IA6BJI,OAAQ,SAAU1H,GACd,GAAkFd,GAG3EyI,EAAK7H,EAHRkC,EAAOY,KAAM2E,EAAQvH,EAAWuH,OAAS,MAAO7H,EAAUM,EAAWN,QAAiBD,EAASuC,EAAKC,WAAW/C,WAC3GQ,WACA6H,MAAO,MAGf,KADAxH,EAAsBN,EAAQuC,EAAKF,QAAQvC,OACtCoI,EAAM,EAAG7H,EAASJ,EAAQI,OAAQ6H,EAAM7H,EAAQ6H,IACjDzI,EAASQ,EAAQiI,GACjBzI,EAAOmE,MAAQrB,EAAKoB,OAAOlE,EAAOmE,MAyBtC,OAvBA3D,GAAUX,EAAEkB,KAAKP,EAAS,SAAUR,GAChC,MAAwB,KAAjBA,EAAOmE,OAAiC,OAAjBnE,EAAOmE,OAAkBpE,EAAiBC,KAExEQ,EAAQI,SACJL,EAAOC,QAAQI,QACfE,EAAWN,QAAUA,EACA,QAAjBD,EAAO8H,QACP9H,EAAOC,UACC6H,MAAO9H,EAAO8H,MACd7H,QAASD,EAAOC,UAExBD,EAAO8H,MAAQ,OAGf9H,EAAOC,QAAQmB,KADfnB,EAAQI,OAAS,EACGE,EAEAN,EAAQ,MAGhCD,EAAOC,QAAUA,EACjBD,EAAO8H,MAAQA,IAGhB9H,GAEX+E,iBAAkB,WACd,GAAIxC,GAAOY,IACX7D,GAAE,iEAAwEiD,EAAKF,QAAQ0D,SAASoC,MAAQ,OAAQ9E,KAAK,aAAcd,EAAKF,QAAQ0D,SAASoC,OAAO9E,KAAKxC,EAAMwC,KAAK,QAAS,2BAA2B+E,KAAK,iDAAmDC,MAAMrG,EAAMO,EAAK+F,YAAa/F,IAAOa,SAASb,EAAKD,UAEnUgG,YAAa,WACTnF,KAAKgB,kBAAmB,EACpB3E,EAAiB2D,KAAKV,UAAU/C,WAChCyD,KAAKV,UAAUgF,IAAI,WAAYtE,KAAKW,iBAExCX,KAAKV,UAAUgF,IAAI,QAAS,MAC5BtE,KAAKgB,kBAAmB,GAE5BsB,cAAe,SAAU8C,GAAV,GACPC,GAAWrF,KAAKb,QAAQmG,QAAQ,MAAMvE,MACtCkC,EAASjD,KAAKd,QAAQ+D,MAC1BjD,MAAKuF,QAAQH,EAAQ,WACjB,OACIC,SAAUA,EACVhH,OAAS4E,OAAQA,QAI7BuC,QAAS,WACL,GAAIpG,GAAOY,IACXZ,GAAKqG,YAAc,KACnBrG,EAAKiE,iBAAmB,KACxBjE,EAAKkD,cAAc,WACflD,EAAK6C,kBACL7C,EAAKC,WAAW6B,KAAK3C,EAAQa,EAAK6C,iBAClC7C,EAAK6C,gBAAkB,MAE3BvE,EAAMgI,OAAOtG,EAAKH,SAClBX,EAAO6B,GAAGqF,QAAQpF,KAAKhB,GACvB1B,EAAM8H,QAAQpG,EAAKH,UAEvB0G,QAASpH,GACTW,SACI0G,KAAM,aACNpD,MAAO,IACPC,UAAW,EACXpB,WAAY,KACZd,OAAQnE,EACR0H,kBAAkB,EAClBnH,MAAO,GACPa,cAAe,GACfiC,KAAM,SACNG,kBAAmB,KACnB2C,mBAAoB,aACpBhG,SAAU,KACVkF,eAAe,EACfI,SAAU,KACVe,UACIC,OAAQ,UACRG,QAAS,WACT1G,OAAQ,SACR0I,MAAO,QACPzI,SAAU,YAEdmD,WACImG,QACIC,GAAInH,EACJoH,IAAKnH,EACLoH,WAAY,cACZC,SAAU,WACVC,eAAgB,mBAChBC,SAAU,YACVC,OAAQ,UACRC,UAAW,cACXC,QAAS,WACTC,WAAY,eACZC,cAAe,eACfC,iBAAkB,aAEtBC,QACIZ,GAAInH,EACJoH,IAAKnH,EACL+H,IAAK,8BACLC,GAAI,kBACJC,IAAK,2BACLC,GAAI,eACJV,OAAQ,UACRC,UAAW,eAEfU,MACIjB,GAAInH,EACJoH,IAAKnH,EACL+H,IAAK,uBACLC,GAAI,WACJC,IAAK,wBACLC,GAAI,YACJV,OAAQ,UACRC,UAAW,eAEfW,OACIlB,GAAInH,EACJoH,IAAKnH,EACLwH,OAAQ,UACRC,UAAW,kBAK3BlI,GAAG8I,OAAOnI,IACZZ,OAAOR,MAAMwJ,QACRhJ,OAAOR,OACE,kBAAVxB,SAAwBA,OAAOiL,IAAMjL,OAAS,SAAUkL,EAAIC,EAAIC,IACrEA,GAAMD","file":"kendo.filtercell.min.js","sourcesContent":["/*!\n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n                                                                                                                                                                                                       \n\n*/\n(function (f, define) {\n    define('kendo.filtercell', [\n        'kendo.autocomplete',\n        'kendo.datepicker',\n        'kendo.numerictextbox',\n        'kendo.combobox',\n        'kendo.dropdownlist'\n    ], f);\n}(function () {\n    var __meta__ = {\n        id: 'filtercell',\n        name: 'Row filter',\n        category: 'framework',\n        depends: ['autocomplete'],\n        advanced: true\n    };\n    (function ($, undefined) {\n        var kendo = window.kendo, ui = kendo.ui, DataSource = kendo.data.DataSource, Widget = ui.Widget, CHANGE = 'change', BOOL = 'boolean', ENUM = 'enums', STRING = 'string', EQ = 'Is equal to', NEQ = 'Is not equal to', proxy = $.proxy, nonValueOperators = [\n                'isnull',\n                'isnotnull',\n                'isempty',\n                'isnotempty',\n                'isnullorempty',\n                'isnotnullorempty'\n            ];\n        function isNonValueFilter(filter) {\n            var operator = typeof filter === 'string' ? filter : filter.operator;\n            return $.inArray(operator, nonValueOperators) > -1;\n        }\n        function findFilterForField(filter, field) {\n            var filters = [];\n            if ($.isPlainObject(filter)) {\n                if (filter.hasOwnProperty('filters')) {\n                    filters = filter.filters;\n                } else if (filter.field == field) {\n                    return filter;\n                }\n            }\n            if ($.isArray(filter)) {\n                filters = filter;\n            }\n            for (var i = 0; i < filters.length; i++) {\n                var result = findFilterForField(filters[i], field);\n                if (result) {\n                    return result;\n                }\n            }\n        }\n        function removeFiltersForField(expression, field) {\n            if (expression.filters) {\n                expression.filters = $.grep(expression.filters, function (filter) {\n                    removeFiltersForField(filter, field);\n                    if (filter.filters) {\n                        return filter.filters.length;\n                    } else {\n                        return filter.field != field;\n                    }\n                });\n            }\n        }\n        function removeDuplicates(dataSelector, dataTextField) {\n            var getter = kendo.getter(dataTextField, true);\n            return function (e) {\n                var items = dataSelector(e), result = [], index = 0, seen = {};\n                while (index < items.length) {\n                    var item = items[index++], text = getter(item);\n                    if (!seen.hasOwnProperty(text)) {\n                        result.push(item);\n                        seen[text] = true;\n                    }\n                }\n                return result;\n            };\n        }\n        var FilterCell = Widget.extend({\n            init: function (element, options) {\n                element = $(element).addClass('k-filtercell');\n                var wrapper = this.wrapper = $('<span/>').appendTo(element);\n                var that = this, dataSource, viewModel, passedOptions = options, first, type, operators = that.operators = options.operators || {}, input = that.input = $('<input/>').attr(kendo.attr('bind'), 'value: value').appendTo(wrapper);\n                var suggestDataSource = options ? options.suggestDataSource : null;\n                if (suggestDataSource) {\n                    options = $.extend({}, options, { suggestDataSource: {} });\n                }\n                Widget.fn.init.call(that, element[0], options);\n                if (suggestDataSource) {\n                    that.options.suggestDataSource = suggestDataSource;\n                }\n                options = that.options;\n                dataSource = that.dataSource = options.dataSource;\n                that.model = dataSource.reader.model;\n                type = options.type = STRING;\n                var fields = kendo.getter('reader.model.fields', true)(dataSource) || {};\n                var target = fields[options.field];\n                if (target && target.type) {\n                    type = options.type = target.type;\n                }\n                if (options.values) {\n                    options.type = type = ENUM;\n                }\n                operators = operators[type] || options.operators[type];\n                if (!passedOptions.operator) {\n                    for (first in operators) {\n                        options.operator = first;\n                        break;\n                    }\n                }\n                that._parse = function (value) {\n                    return value != null ? value + '' : value;\n                };\n                if (that.model && that.model.fields) {\n                    var field = that.model.fields[options.field];\n                    if (field) {\n                        if (field.parse) {\n                            that._parse = proxy(field.parse, field);\n                        }\n                    }\n                }\n                that.defaultOperator = options.operator;\n                that.viewModel = viewModel = kendo.observable({\n                    operator: options.operator,\n                    value: null,\n                    operatorVisible: function () {\n                        var val = this.get('value');\n                        return val !== null && val !== undefined && val != 'undefined' || isNonValueFilter(this.get('operator')) && !that._clearInProgress;\n                    }\n                });\n                that._prevOperator = options.operator;\n                viewModel.bind(CHANGE, proxy(that.updateDsFilter, that));\n                if (type == STRING) {\n                    that.initSuggestDataSource(options);\n                }\n                if (options.inputWidth !== null) {\n                    input.addClass('k-sized-input');\n                    input.width(options.inputWidth);\n                }\n                input.attr('aria-label', that._getColumnTitle());\n                input.attr('title', that._getColumnTitle());\n                that._setInputType(options, type);\n                if (type != BOOL && options.showOperators !== false) {\n                    that._createOperatorDropDown(operators);\n                } else {\n                    $('<div unselectable=\"on\" />').css('display', 'none').text('eq').appendTo(wrapper);\n                    wrapper.addClass('k-operator-hidden');\n                }\n                that._createClearIcon();\n                kendo.bind(this.wrapper, viewModel);\n                if (type == STRING) {\n                    if (!options.template) {\n                        that.setAutoCompleteSource();\n                    }\n                }\n                if (type == ENUM) {\n                    that.setComboBoxSource(that.options.values);\n                }\n                that._refreshUI();\n                that._refreshHandler = proxy(that._refreshUI, that);\n                that.dataSource.bind(CHANGE, that._refreshHandler);\n            },\n            _setInputType: function (options, type) {\n                var that = this, input = that.input;\n                if (typeof options.template == 'function') {\n                    options.template.call(that.viewModel, {\n                        element: that.input,\n                        dataSource: that.suggestDataSource\n                    });\n                    that._angularItems('compile');\n                } else if (type == STRING) {\n                    input.attr(kendo.attr('role'), 'autocomplete').attr(kendo.attr('text-field'), options.dataTextField || options.field).attr(kendo.attr('filter'), options.suggestionOperator).attr(kendo.attr('delay'), options.delay).attr(kendo.attr('min-length'), options.minLength).attr(kendo.attr('value-primitive'), true);\n                } else if (type == 'date') {\n                    input.attr(kendo.attr('role'), 'datepicker');\n                } else if (type == BOOL) {\n                    input.remove();\n                    var radioInput = $('<input type=\\'radio\\'/>');\n                    var wrapper = that.wrapper;\n                    var inputName = kendo.guid();\n                    var labelTrue = $('<label/>').text(options.messages.isTrue).append(radioInput);\n                    radioInput.attr(kendo.attr('bind'), 'checked:value').attr('name', inputName).val('true');\n                    var labelFalse = labelTrue.clone().text(options.messages.isFalse);\n                    radioInput.clone().val('false').appendTo(labelFalse);\n                    wrapper.append([\n                        labelTrue,\n                        labelFalse\n                    ]);\n                } else if (type == 'number') {\n                    input.attr(kendo.attr('role'), 'numerictextbox').attr('title', that._getColumnTitle());\n                } else if (type == ENUM) {\n                    input.attr(kendo.attr('role'), 'combobox').attr(kendo.attr('text-field'), 'text').attr(kendo.attr('suggest'), true).attr(kendo.attr('filter'), 'contains').attr(kendo.attr('value-field'), 'value').attr(kendo.attr('value-primitive'), true);\n                }\n            },\n            _getColumnTitle: function () {\n                var column = this.options.column;\n                return column ? column.title || column.field : '';\n            },\n            _createOperatorDropDown: function (operators) {\n                var items = [], viewModel = this.viewModel;\n                for (var prop in operators) {\n                    items.push({\n                        text: operators[prop],\n                        value: prop\n                    });\n                }\n                var dropdown = $('<input class=\"k-dropdown-operator\" ' + kendo.attr('bind') + '=\"value: operator\"/>').appendTo(this.wrapper);\n                this.operatorDropDown = dropdown.kendoDropDownList({\n                    dataSource: items,\n                    dataTextField: 'text',\n                    dataValueField: 'value',\n                    open: function () {\n                        this.popup.element.width(150);\n                    },\n                    valuePrimitive: true\n                }).data('kendoDropDownList');\n                viewModel.bind('change', function () {\n                    var ariaLabel = operators[viewModel.operator];\n                    dropdown.attr('aria-label', ariaLabel);\n                });\n                this.operatorDropDown.wrapper.find('.k-i-arrow-60-down').removeClass('k-i-arrow-60-down').addClass('k-i-filter');\n            },\n            initSuggestDataSource: function (options) {\n                var suggestDataSource = options.suggestDataSource;\n                if (!(suggestDataSource instanceof DataSource)) {\n                    if (!options.customDataSource && suggestDataSource) {\n                        suggestDataSource.group = undefined;\n                    }\n                    suggestDataSource = this.suggestDataSource = DataSource.create(suggestDataSource);\n                }\n                if (!options.customDataSource) {\n                    suggestDataSource._pageSize = undefined;\n                    suggestDataSource.reader.data = removeDuplicates(suggestDataSource.reader.data, this.options.field);\n                }\n                this.suggestDataSource = suggestDataSource;\n            },\n            setAutoCompleteSource: function () {\n                var autoComplete = this.input.data('kendoAutoComplete');\n                if (autoComplete) {\n                    autoComplete.setDataSource(this.suggestDataSource);\n                }\n            },\n            setComboBoxSource: function (values) {\n                var dataSource = DataSource.create({ data: values });\n                var comboBox = this.input.data('kendoComboBox');\n                if (comboBox && !this.options.template) {\n                    comboBox.setDataSource(dataSource);\n                }\n            },\n            _refreshUI: function () {\n                var that = this, filter = findFilterForField(that.dataSource.filter(), this.options.field) || {}, viewModel = that.viewModel;\n                that.manuallyUpdatingVM = true;\n                filter = $.extend(true, {}, filter);\n                if (that.options.type == BOOL) {\n                    if (viewModel.value !== filter.value) {\n                        that.wrapper.find(':radio').prop('checked', false);\n                    }\n                }\n                if (filter.operator) {\n                    viewModel.set('operator', filter.operator);\n                }\n                viewModel.set('value', filter.value);\n                that.manuallyUpdatingVM = false;\n            },\n            _applyFilter: function (filter) {\n                if (filter.filters.length) {\n                    this.dataSource.filter(filter);\n                } else {\n                    this.dataSource.filter({});\n                }\n            },\n            updateDsFilter: function (e) {\n                var that = this, model = that.viewModel, filter;\n                if (e.field == 'operator' && model.value === undefined && !isNonValueFilter(model) && isNonValueFilter(that._prevOperator)) {\n                    filter = that.dataSource.filter() || {\n                        filters: [],\n                        logic: 'and'\n                    };\n                    removeFiltersForField(filter, that.options.field);\n                    that._prevOperator = model.operator;\n                    that._applyFilter(filter);\n                    return;\n                }\n                if (that.manuallyUpdatingVM || e.field == 'operator' && model.value === undefined && !isNonValueFilter(model) || e.field == 'operator' && that._clearInProgress && model.value !== null) {\n                    return;\n                }\n                var currentFilter = $.extend({}, that.viewModel.toJSON(), { field: that.options.field });\n                that._prevOperator = currentFilter.operator;\n                var expression = {\n                    logic: 'and',\n                    filters: []\n                };\n                var prevented = false;\n                if (currentFilter.value !== undefined && currentFilter.value !== null || isNonValueFilter(currentFilter) && !this._clearInProgress) {\n                    expression.filters.push(currentFilter);\n                    prevented = that.trigger(CHANGE, {\n                        filter: expression,\n                        field: that.options.field\n                    });\n                }\n                if (that._clearInProgress || currentFilter.value === null) {\n                    prevented = that.trigger(CHANGE, {\n                        filter: null,\n                        field: that.options.field\n                    });\n                }\n                if (prevented) {\n                    return;\n                }\n                var mergeResult = that._merge(expression);\n                that._applyFilter(mergeResult);\n            },\n            _merge: function (expression) {\n                var that = this, logic = expression.logic || 'and', filters = expression.filters, filter, result = that.dataSource.filter() || {\n                        filters: [],\n                        logic: 'and'\n                    }, idx, length;\n                removeFiltersForField(result, that.options.field);\n                for (idx = 0, length = filters.length; idx < length; idx++) {\n                    filter = filters[idx];\n                    filter.value = that._parse(filter.value);\n                }\n                filters = $.grep(filters, function (filter) {\n                    return filter.value !== '' && filter.value !== null || isNonValueFilter(filter);\n                });\n                if (filters.length) {\n                    if (result.filters.length) {\n                        expression.filters = filters;\n                        if (result.logic !== 'and') {\n                            result.filters = [{\n                                    logic: result.logic,\n                                    filters: result.filters\n                                }];\n                            result.logic = 'and';\n                        }\n                        if (filters.length > 1) {\n                            result.filters.push(expression);\n                        } else {\n                            result.filters.push(filters[0]);\n                        }\n                    } else {\n                        result.filters = filters;\n                        result.logic = logic;\n                    }\n                }\n                return result;\n            },\n            _createClearIcon: function () {\n                var that = this;\n                $('<button type=\\'button\\' class=\\'k-button k-button-icon\\' title = \\'' + that.options.messages.clear + '\\'/>').attr('aria-label', that.options.messages.clear).attr(kendo.attr('bind'), 'visible:operatorVisible').html('<span class=\\'k-icon k-i-filter-clear\\'></span>').click(proxy(that.clearFilter, that)).appendTo(that.wrapper);\n            },\n            clearFilter: function () {\n                this._clearInProgress = true;\n                if (isNonValueFilter(this.viewModel.operator)) {\n                    this.viewModel.set('operator', this.defaultOperator);\n                }\n                this.viewModel.set('value', null);\n                this._clearInProgress = false;\n            },\n            _angularItems: function (action) {\n                var elements = this.wrapper.closest('th').get();\n                var column = this.options.column;\n                this.angular(action, function () {\n                    return {\n                        elements: elements,\n                        data: [{ column: column }]\n                    };\n                });\n            },\n            destroy: function () {\n                var that = this;\n                that.filterModel = null;\n                that.operatorDropDown = null;\n                that._angularItems('cleanup');\n                if (that._refreshHandler) {\n                    that.dataSource.bind(CHANGE, that._refreshHandler);\n                    that._refreshHandler = null;\n                }\n                kendo.unbind(that.element);\n                Widget.fn.destroy.call(that);\n                kendo.destroy(that.element);\n            },\n            events: [CHANGE],\n            options: {\n                name: 'FilterCell',\n                delay: 200,\n                minLength: 1,\n                inputWidth: null,\n                values: undefined,\n                customDataSource: false,\n                field: '',\n                dataTextField: '',\n                type: 'string',\n                suggestDataSource: null,\n                suggestionOperator: 'startswith',\n                operator: 'eq',\n                showOperators: true,\n                template: null,\n                messages: {\n                    isTrue: 'is true',\n                    isFalse: 'is false',\n                    filter: 'Filter',\n                    clear: 'Clear',\n                    operator: 'Operator'\n                },\n                operators: {\n                    string: {\n                        eq: EQ,\n                        neq: NEQ,\n                        startswith: 'Starts with',\n                        contains: 'Contains',\n                        doesnotcontain: 'Does not contain',\n                        endswith: 'Ends with',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null',\n                        isempty: 'Is empty',\n                        isnotempty: 'Is not empty',\n                        isnullorempty: 'Has no value',\n                        isnotnullorempty: 'Has value'\n                    },\n                    number: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: 'Is greater than or equal to',\n                        gt: 'Is greater than',\n                        lte: 'Is less than or equal to',\n                        lt: 'Is less than',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null'\n                    },\n                    date: {\n                        eq: EQ,\n                        neq: NEQ,\n                        gte: 'Is after or equal to',\n                        gt: 'Is after',\n                        lte: 'Is before or equal to',\n                        lt: 'Is before',\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null'\n                    },\n                    enums: {\n                        eq: EQ,\n                        neq: NEQ,\n                        isnull: 'Is null',\n                        isnotnull: 'Is not null'\n                    }\n                }\n            }\n        });\n        ui.plugin(FilterCell);\n    }(window.kendo.jQuery));\n    return window.kendo;\n}, typeof define == 'function' && define.amd ? define : function (a1, a2, a3) {\n    (a3 || a2)();\n}));"]}