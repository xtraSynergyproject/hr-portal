@inject IStringLocalizer<CMS.UI.Web.Areas.PortalAdmin.Controllers.UserController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@model UserHierarchyPermissionViewModel

@{
    ViewData["Title"] = @Resource["UserHierarchyPermission"];
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
<script>
  var hierarchyPermission = '@Html.Raw(EnumExtension.EnumToJson(typeof(HierarchyPermissionEnum)))';
    var hierarchyPermissionObj = JSON.parse(hierarchyPermission);

    var columnDefs = [
        {
            field: "HierarchyName",
        },

        {
           field: "HierarchyPermission",
           cellRenderer: params => {
               return hierarchyPermissionObj[params.value]; //only for enum
           }
        },
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBinUserHier' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\"><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getDataUserHierarchy();

        $.contextMenu('update');
        $('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBinUserHier',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEdit(id);
                                        break;

                                    case 'delete':
                                        OnDelete(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });
     function OnCreateUserHierarchyPermission() {

         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("ManageUserHierarchyPermission", "User", new { @area="PortalAdmin",userId=Model.UserId})';
         win.OpenWindow({ Title: 'Manage User Hierarchy Permission', Width: 450, Height: 800 });
        return false;
    }

    function onEdit(id) {
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("ManageUserHierarchyPermission", "User", new { @area = "PortalAdmin" })?pId=' + id;
        win.OpenWindow({ Title: 'Manage User Hierarchy Permission', Width: 450, Height: 800 });
        return false;
        }

        function OnDelete(id) {
        var flag = confirm('Do you really want to delete the User Hierarchy Permission?');

        if (flag) {
        $.ajax({
        url:'@Url.Action("DeleteUserHierarchyPermission", "User", new { @area = "PortalAdmin" })?Id=' + id,
        type: 'POST',
        data: {},
        dataType: 'json',
        success: function (result) {
        debugger;
        if (result.success) {
        getDataUserHierarchy();
        kendo.alert("Deleted Successfully.");
        } else {
        getDataUserHierarchy();
        var err = result.errors.BinderCountError.errors[0];
        kendo.alert(err);
        }
        },
        error: function (ert) {
        getDataUserHierarchy();
        }
        });
        return false;
        }
    }
    function CallBack() {
       // window.parent.getDataUserHierarchy({ userId:'@Model.UserId' });
         $("#kgrdUserHierarchyPermission").data("kendoGrid").dataSource.read({ userId:'@Model.UserId' });
    }

        function getDataUserHierarchy() {
            document.getElementById("myGridUserHierarchy").innerHTML = "";
        gridConfig(
        "myGridUserHierarchy",
        "@Url.Action("ReadUserHierarchyPermission", "User", new { @area = "PortalAdmin", userId = Model.UserId })",
        columnDefs,
        false,
        true,
        true,
        true,
        1,
        true,
        10);
        }

</script>

<div>
    <h4>@ViewBag.Title</h4>

    <hr />


    <div class="row">
        <div class="col-12">
            <button type='button' class='btn btn-primary' onclick='OnCreateUserHierarchyPermission();'><i class='fa fas fa-plus'></i>&nbsp;Create User Hierarchy Permission</button>
            <br /><br />
            <div id="myGridUserHierarchy" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>