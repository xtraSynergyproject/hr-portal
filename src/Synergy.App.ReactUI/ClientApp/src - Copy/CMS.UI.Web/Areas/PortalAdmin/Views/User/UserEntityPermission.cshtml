@inject IStringLocalizer<CMS.UI.Web.Areas.PortalAdmin.Controllers.UserController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "UserEntityPermission";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
@model UserEntityPermissionViewModel


<style>
</style>

<script>
    var permissionIds;
    var newpermissions = [];
    function OnSelect(e) {
        e.preventDefault();
    }

    function handlePermission(e, pageName, perName) {

        //var ids = e.id.split("_");
        //var permissionId = ids[1];
        //var pageId = ids[2];
        //var pageName = e.PageName;
        // var perName = e.DisplayName;
        //  $("#board").data("kendoListView").dataSource.read({ pageName: pageName, perName: perName});
        var newpermid = e.id + "_" + e.checked;
        permissionIds += newpermid + ",";
        $("#PermissionIds").val(permissionIds);
        if (e.checked == true) {
            var span = "<div style='display:block;' class=" + e.id + ">" + pageName + "-" + perName + "</div>";
            $('#perlist').append(span);
        }
        else {
            var spanid = "." + e.id;
            $(spanid).remove();
        }
    }
</script>
<div id="mainDiv" class="row-12" style="margin-left:20px;margin-bottom:60px;">

    <form asp-controller="User" asp-action="ManageUserEntityPermission" method="post" class="form-horizontal">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row">
            <div class="col-12">
                <div class="row">
                    <div class="col-6" style="padding:20px">
                        @*<div class="col-4">*@ @Resource["LegalEntity"] <span class="required">*</span>
                        @*</div>
                            <div class="col-6">*@
                        @*@(Html.Kendo().MultiSelectFor(x=>x.LegalEntityId1)
                            //.Name("LegalEntities")
                            .AutoClose(false)
                            .Placeholder("Select Legal Entities...")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetIdNameList", "LegalEntity",new { @area="Cms"});
                                });

                            })
                            //.Events(x=>x.Change("OnChange"))
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .AutoBind(true)
                            .HtmlAttributes(new { @class = "hr-xx-large", @style = "width:100%",@readonly= "@readonly" })
                            .ValuePrimitive(true)
                            .Height(300)
                            )*@

                        <select asp-for="LegalEntityId1" id="LegalEntityId1" style="width:80%"></select>
                        @*</div>*@
                    </div>
                    <div class="col-6" style="padding:20px">
                        @*<div class="col-4">*@ @Resource["Organization"] <span class="required">*</span>
                        @*</div>
                            <div class="col-6">*@
                        @*@(Html.Kendo().MultiSelectFor(x=>x.OrganisationId)
                            // .Name("Organization")
                             .AutoClose(false)
                             .Placeholder("Select Organisations...")
                             .DataSource(source =>
                             {
                             source.Read(read =>
                             {
                             read.Action("GetAllOrganisation", "HRCore",new { @area="CHR"});
                             });

                             })
                             //.Events(x=>x.Change("OnChange"))
                             .DataTextField("Name")
                             .DataValueField("Id")
                             .AutoBind(true)
                             .HtmlAttributes(new { @class = "hr-xx-large", @style = "width:100%" })
                             .ValuePrimitive(true)
                             .Height(300)
                             )*@

                        <select asp-for="OrganisationId" id="OrganisationId" style="width:80%"></select>

                        @*</div>*@
                    </div>
                </div>
            </div>
            <div class="col-12">
                <div class="row">

                    <div class="col-6" style="padding:20px">
                        @Resource["Templates"] <span class="required">*</span>

                        @*@(Html.Kendo().MultiSelectFor(x=>x.TemplateId)
                            // .Name("Organization")
                             .AutoClose(false)
                             .Placeholder("Select Templates...")
                             .DataSource(source =>
                             {
                             source.Read(read =>
                             {
                             read.Action("GetTemplates", "Template",new { @area="Cms"});
                             });

                             })
                             //.Events(x=>x.Change("OnChange"))
                             .DataTextField("Name")
                             .DataValueField("Id")
                             .AutoBind(true)
                             .HtmlAttributes(new { @class = "hr-xx-large", @style = "width:100%" })
                             .ValuePrimitive(true)
                             .Height(300)
                             )*@

                        <select asp-for="TemplateId" id="TemplateId" style="width:80%"></select>


                    </div>

                    @if (ViewBag.Portal == "DMS" && Model.UserEntityType == UserEntityTypeEnum.User)
                    {
                        <div class="col-6" style="padding:20px">

                            @Resource["WorkspacePermissionGroup"] <span class="required">*</span>

                            @*@(Html.Kendo().MultiSelectFor(x=>x.WorkspaceId)
                                // .Name("Organization")
                                 .AutoClose(false)
                                 .Placeholder("Select Templates...")
                                 .DataSource(source =>
                                 {
                                 source.Read(read =>
                                 {
                                 read.Action("ReadWorkspaceList", "User",new { @area="PortalAdmin"});
                                 });

                                 })
                                 //.Events(x=>x.Change("OnChange"))
                                 .DataTextField("Name")
                                 .DataValueField("Id")
                                 .AutoBind(true)
                                 .HtmlAttributes(new { @class = "hr-xx-large", @style = "width:100%" })
                                 .ValuePrimitive(true)
                                 .Height(300)
                                 )*@

                            <select asp-for="WorkspaceId" id="WorkspaceId" style="width:80%"></select>


                        </div>

                    }
                </div>
            </div>

            <div class="col-12">
                <br />
                <div class="row">
                    <div class="col-6">
                        @if (Model.UserEntityType == UserEntityTypeEnum.User)
                        {
                            @*<div style="margin:10px;">*@
                            @*@(Html.Kendo().TreeView()
                                    .Name("contentTreeView").HtmlAttributes( new {@class="treeview"})
                                    .Events(e=>e.Select("OnSelect"))
                                    .DataTextField("Name")
                                    .TemplateId("ct-tv-template")
                                    .DataSource(dataSource => dataSource
                                        .Read(read => read
                                            .Action("GetPortalTreeList", "User",new { @area="PortalAdmin", userId = Model.UserEntityId })
                                        )
                                    )
                                )*@
                            @*</div>*@

                            <div id="portalTreeList"></div>

                        }

                        else if (Model.UserEntityType == UserEntityTypeEnum.UserRole)
                        {
                            @*<div style="margin:10px;">*@
                            @*@(Html.Kendo().TreeView()
                                    .Name("contentTreeView").HtmlAttributes( new {@class="treeview"})
                                    .Events(e=>e.Select("OnSelect"))
                                    .DataTextField("Name")
                                    .TemplateId("ct-tv-template")
                                    .DataSource(dataSource => dataSource
                                        .Read(read => read
                                            .Action("GetPortalRoleTreeList", "User",new { @area="PortalAdmin", userId = Model.UserEntityId })
                                        )
                                    )
                                )*@
                            <div id="portalRoleTreeList"></div>

                        }



                        <script id="ct-tv-template" type="text/kendo-ui-template">
    <span style="width:100%;margin-right: 10%;">  #: item.Name # </span>
       #if(item.Type=='Permission'){#<input type="checkbox" id="chk_#:item.id#_#:item.ParentId#"
    #= item.Checked ? checked="checked" : "" #
    onclick="handlePermission(this,'#:item.PageName#','#:item.DisplayName#');">#}#
    @*<span data-id="#:item.id#" data-type="#:item.Type#" data-portal-name="#:item.Name#" data-parent-id="#:item.ParentId#" data-portal-id="#:item.PortalId#" class="tree-menu" data-level="#:item.ItemLevel#"></span>*@
                        </script>
                    </div>
                    <div class="col-6">
                        <span style="font-weight:400">@Resource["Permissions"]</span>
                        @*@(Html.Kendo().ListView<IdNameViewModel>()
                                .Name("listView")
                                .TagName("div")
                                .ClientTemplateId("template")
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .Read(read => read.
                                Action("GetPermissionlist", "User", new { @area = "PortalAdmin", userId = Model.UserEntityId }))
                               // .PageSize(21)
                                )
                                .HtmlAttributes(new { @Class = "board", @id = "board", @style = "height:650px;background-color: transparent" })
                      //.Events(events => events.DataBound("OnDataBoundDoc"))
                      )*@

                        <div id="board" class="board" style="height:650px;background-color:transparent"></div>
                        <script id="template" type="text/kendo-ui-template">
                            <div id="perlist"> <span class="#=Id#"> #=Name# <br/> </span> </div>
                        </script>

                    </div>
                </div>

            </div>


        </div>
        <div class="cms-slidebar-footer">
            <button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">@SharedResource["Close"]</button>
            <input type="submit" class="btn btn-primary" value="@SharedResource["Save"]" id="submitBtn" />
        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.UserEntityType)
        @Html.HiddenFor(x => x.UserEntityId)
        @Html.HiddenFor(x => x.PortalId)
        @Html.HiddenFor(x => x.LegalEntityId)
        @Html.HiddenFor(x => x.PermissionIds)

    </form>
</div>
<script>
    $(document).ready(function () {
            if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();

          }

          //var multiselect = $("#LegalEntityId1").data("kendoMultiSelect");
          //var multiselectvalue = multiselect.value();
          //return {
          //    selectedValues: multiselectvalue.join()
          //};



        $("#LegalEntityId1").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/LegalEntity/GetIdNameList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Legal Entities...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.LegalEntityId1)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

        $("#OrganisationId").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/CHR/HRCore/GetAllOrganisation",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Organisations...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.OrganisationId)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });


        $("#TemplateId").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/CMS/Template/GetTemplates",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Templates...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.TemplateId)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

        $("#WorkspaceId").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/PortalAdmin/User/ReadWorkspaceList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Templates...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.WorkspaceId)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

        if ('@Model.UserEntityType' == '@UserEntityTypeEnum.User') {
            readPortalTreeListData();
        } else if ('@Model.UserEntityType' == '@UserEntityTypeEnum.UserRole')
        {
                 readPortalRoleTreeListData();
        }

        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/PortalAdmin/User/GetPermissionlist?userId="+'@Model.UserEntityId',
                    dataType: "json"
                }
            },
        });

        $("#board").kendoListView({
            dataSource: dataSource,
            template: kendo.template($("#template").html())
        });
    });


    function closeNavMemberGroup() {

        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }



    function readPortalRoleTreeListData() {
         @*document.getElementById('portalRoleTreeList').innerHTML = "";
        ShowLoader($('#mainDiv'));
          $.ajax({
              url: '/PortalAdmin/User/GetPortalRoleTreeList?userId=@Model.UserEntityId',
            dataType: "json",
            success: function (result) {
                debugger;

                var root = document.getElementById('portalRoleTreeList');
                var parent = result.filter(x => x.id != null);
                for (var i = 0; i <= parent.length - 1; i++) {
                    var data = parent[i];
                   createTreeList(data, root, result, null);
                }

                var toggler = document.getElementsByClassName("caret");
                var i;

                for (i = 0; i < toggler.length; i++) {
                    toggler[i].addEventListener("click", function () {
                        this.parentElement.querySelector(".nested").classList.toggle("active");
                        this.classList.toggle("caret-down");
                    });
                }
                HideLoader($('#mainDiv'));

            }
        });*@

        $("#portalRoleTreeList").fancytree({
              checkbox: true,
              source: $.ajax({
                  url: '/PortalAdmin/User/GetPortalRoleFancyTreeList?userId=@Model.UserEntityId',
                  dataType: "json"
              }),
              lazyLoad: function (event, data) {
                  var node = data.node;
                  // Issue an Ajax request to load child nodes
                  data.result = {
                      url: '/PortalAdmin/User/GetPortalRoleFancyTreeList',
                      data: { id: data.node.key, userId: '@Model.UserEntityId' }
                  }
              },
              renderNode: function (event, data) {
                  // Optionally tweak data.node.span
                  var node = data.node;
                  node.renderTitle();
              },
              expand: function (event, data) {
                  expandedItem = data.node.expanded;
            },
            select: function (event, data) {
                debugger;

                var newpermid = "chk_" + data.node.key + "_" + data.node.parent.key + "_" + true;
                permissionIds += $("#PermissionIds").val() + newpermid + ",";

                // var permissionIds = $("#PermissionIds").val() + "," + data.node.key;
                $("#PermissionIds").val(permissionIds);
            },
          });
    }

    function createTreeList(data, root, result, ul) {
        debugger;
        var child = [];
        if (data.id != null) {
            child = searchChild(data.id, result, root);
        } else {
            chid = [];
        }
        if (ul == null) {
             ul = document.createElement('ul');
        }
       // li.classList.add("nested");
        var li = document.createElement('li');
        if (child.length > 0) {
            li.classList.add("caret");
        }
                    var p1 = "";
                    var p2 = "";
                    var p3 = "";


        if (data.Checked) {
            p3 = 'checked'
        }
        if (data.Type == 'Permission') {

            p2 = "<input type='checkbox' id='chk_" + data.id + "_" + data.ParentId +  p3 + "onclick = 'handlePermission(this,\"" + data.PageName + "\",\"" + data.DisplayName + "\");' >";
        }

        p1 = "  <span style='width:100 %;margin-right: 10%;'> " + data.Name + " </span>";
        li.innerHTML = p1 + p2;

        ul.appendChild(li);
        root.appendChild(ul);

        if (child != [])
        {
            var ul = document.createElement('ul');
            ul.classList.add("nested");
            for (var x = 0; x <= child.length - 1; x++)
            {
                createTreeList(child[x], li, result, ul);
            }
        }
       // return root;
    }

    function searchChild(nameKey, myArray) {
        var newArray  = [];
        for (var i = 0; i < myArray.length; i++) {
            if (myArray[i].ParentCommentId === nameKey) {
                newArray.push( myArray[i]);
            }
        }
        return newArray;
    }

      function readPortalTreeListData() {
          @*document.getElementById('portalTreeList').innerHTML = "";
        ShowLoader($('#mainDiv'));
          $.ajax({
              url: '/PortalAdmin/User/GetPortalTreeList?userId=@Model.UserEntityId',
            dataType: "json",
            success: function (result) {
                debugger;

                var root = document.getElementById('portalTreeList');
                var parent = result.filter(x => x.id != null);
                for (var i = 0; i <= parent.length - 1; i++) {
                    var data = parent[i];
                   createTreeList(data, root, result, null);
                }

                var toggler = document.getElementsByClassName("caret");
                var i;

                for (i = 0; i < toggler.length; i++) {
                    toggler[i].addEventListener("click", function () {
                        this.parentElement.querySelector(".nested").classList.toggle("active");
                        this.classList.toggle("caret-down");
                    });
                }
                HideLoader($('#mainDiv'));

            }
        });*@

          $("#portalTreeList").fancytree({
              checkbox: true,
              source: $.ajax({
                  url: '/PortalAdmin/User/GetPortalFancyTreeList?userId=@Model.UserEntityId',
                  dataType: "json"
              }),
              lazyLoad: function (event, data) {
                  var node = data.node;
                  // Issue an Ajax request to load child nodes
                  data.result = {
                      url: '/PortalAdmin/User/GetPortalFancyTreeList',
                      data: { id: data.node.key, userId: '@Model.UserEntityId' }

                  }
              },
              renderNode: function (event, data) {
                  // Optionally tweak data.node.span
                  var node = data.node;
                  node.renderTitle();
              },
              expand: function (event, data) {
                  expandedItem = data.node.expanded;
              },
              select: function (event, data) {
                  debugger;

                  var newpermid = "chk_" + data.node.key + "_" + data.node.parent.key + "_" + true;
                  permissionIds += $("#PermissionIds").val() + newpermid + ",";

                 // var permissionIds = $("#PermissionIds").val() + "," + data.node.key;
                  $("#PermissionIds").val(permissionIds);
              },
          });
    }

</script>
