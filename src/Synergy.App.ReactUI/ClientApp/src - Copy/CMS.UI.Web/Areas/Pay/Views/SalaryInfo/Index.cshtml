@inject IStringLocalizer<CMS.UI.Web.Areas.Pay.Controllers.SalaryInfoController> Resource
@using CMS.UI.ViewModel;
@using Kendo.Mvc.UI;
@using CMS.Common;
@using Kendo.Mvc.Extensions;
@{
    ViewData["Title"] = @Resource["SalaryInfo"];
    //Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}
<style>
    .kgrdSalaryInfoStyle {
        width: 100% !important;
    }
</style>
<script type="text/javascript">
    function OnCreateSalaryInfo() {
        var win = GetMainWindow();
       // var portalId = $('#GlobalPortalId').val();
       // var url = '/Cms/Page?lo=Popup&cbm=OnAfterNoteCreate&source=Create&dataAction=Create&pageName=SalaryInfo&portalId=' + portalId /*+ '&prms=' + prms*/;
        win.iframeOpenUrl = "/pay/SalaryInfo/Create";
        win.OpenWindow({ Title: '@Html.Raw(Resource["CreateSalaryInfo"])', Width: 1000, Height: 700 });
        return false;
    }
    function onEditSalaryInfo(Id) {
     debugger
        //e.preventDefault();
      //  var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //alert(dataItem.NoteId);
        var win = GetMainWindow();
        var portalId = $('#GlobalPortalId').val();
       // var url = '/Cms/Page?lo=Popup&cbm=OnAfterNoteCreate&source=@RequestSourceEnum.Versioning.ToString()&dataAction=Edit&pageName=SalaryInfo&portalId=' + portalId + '&recordId=' + dataItem.NoteId;
        win.iframeOpenUrl = "/pay/SalaryInfo/Create?salaryInfoId=" +Id;
        win.OpenWindow({ Title: '@Html.Raw(Resource["EditSalaryInfo"])', Width: 1000, Height: 700 });
    }
    function OnManageSalaryElements(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
       // alert(dataItem.NoteId);
       // var win = GetMainWindow();
        var portalId = $('#GlobalPortalId').val();
        //var prms = encodeURIComponent('ParentNoteId=' + dataItem.NoteId);
        var customUrl = encodeURIComponent('salaryInfoId=' + dataItem.NtsNoteId);
        var url = '/Cms/Page?pageName=SalaryInfoElement&portalId=' + portalId + '&customUrl=' + customUrl;
        LoadCmsPartialView(url, "Custom", false, "", "", "")
        //win.iframeOpenUrl = "/pay/SalaryInfo/SalaryElementInfoIndex?salaryInfoId=" + dataItem.NoteId;
       // win.OpenWindow({ Title: 'Salary Element Info', Width: 1000, Height: 700 });
    }
    function OnAfterNoteCreate() {
        GetSalData();
       // $("#kgrdSalaryInfo").data("kendoGrid").dataSource.read();
    }
</script>
<script>
      var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);
                        var columnDefs = [
                            {
                                field: "Id",
                                cellRenderer: params => {
                                    return "<div class='btn-group grid-menu' id='tree-lovBin' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
                                }
                            },
                            {
                                field: "PersonId_PersonFullName",
                                headerName: "@Resource["EmployeeName"]",

                            },
                            {
                                field: "PersonId_PersonNo",
                                headerName:"@Resource["EmployeeNo."]",width:200
                            },
                            {
                                field: "PersonId_IqamahNoNationalId",
                                headerName: "@Resource["IqamahNo."]", width: 100,


                            },
                            {
                                field: "BankAccountNumber",
                                headerName: "@Resource["BankAccountNumber"]", width: 200,


                            },
                            {
                                field: "BankIBanNumber",
                                headerName: "@Resource["BankIBanNumber"]", width: 200,


                            },
                            {
                                field: "PayGroupId_Name",
                                headerName: "@Resource["PayGroupName"]", width: 200,
                            },
                              {
                                  field: "Status",
                                  headerName: "@SharedResource["Status"]", width: 200,
                                  cellRenderer: params => {
                                      return statusObj[params.value]; //only for enum
                                  }
                            },




                        ];
                        $(function () {
                            GetSalData();
                            $.contextMenu({
                                selector: '#tree-lovBin',
                                trigger: 'left',
                                build: function ($trigger, e) {


                                    var id = $trigger.data('idvalue');

                                    //var portalName = $trigger.data('portal-name');

                                    switch (0) {
                                        case 0:
                                            return {
                                                callback: function (key, options) {
                                                    switch (key) {
                                                        case 'edit':
                                                            onEditSalaryInfo(id);
                                                            break;


                                                        default:
                                                    }
                                                },
                                                items: {
                                                    "edit": { name: "Edit", icon: "fas fa-edit" },


                                                }
                                            };


                                    }
                                }
                            });
                        });

                function GetSalData() {
                    document.getElementById("kgrdSalaryInfo").innerHTML = "";
                            gridConfig(
                                "kgrdSalaryInfo",
                                "/Pay/SalaryInfo/ReadSalaryInfoData",
                                columnDefs,
                                false,
                                true,
                                true,
                                true,
                                1,
                                true,
                                10);
                        }
</script>
<h3>@ViewBag.Title</h3>
<div class="row">
    <div class="col-md-12">
        <button type='button' class='btn btn-primary' onclick='OnCreateSalaryInfo();'><i class='fa fas fa-plus'></i>&nbsp;@SharedResource["Create"]</button>
        <br /><br />
        <div id="kgrdSalaryInfo" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        @*@(Html.Kendo().Grid<dynamic>
        ().Name("kgrdSalaryInfo").HtmlAttributes(new { @class = "kgrdSalaryInfoStyle" })
        .Columns(col =>
        {
            col.Command(command =>
            {
                command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("onEditSalaryInfo").HtmlAttributes(new { @class = "action-icon", @title = "Edit" });
               // command.Custom("Manage Salary Elements").Text("<i class='fa fas fa-cog'></i>").Click("OnManageSalaryElements").HtmlAttributes(new { @class = "action-icon", @title = "Manage Salary Elements" });
            }).Title(@SharedResource["Action"]).Width(150);
            //col.Bound(c => c.Id);
            col.Bound("PersonId_PersonFullName").Title(@Resource["EmployeeName"]);
            col.Bound("PersonId_PersonNo").Title(@Resource["EmployeeNo."]).Width(150);
            col.Bound("PersonId_IqamahNoNationalId").Title(Resource["IqamahNo."]).Width(150);
            col.Bound("BankAccountNumber").Title(@Resource["BankAccountNumber"]);
            col.Bound("BankIBanNumber").Title(@Resource["BankIbanNumber"]);
            col.Bound("PayGroupId_Name").Title(@Resource["PayGroupName"]);
            //col.Bound(c => c.EffectiveStartDate).Width(150).Format(ERP.Utility.Constant.Annotation.DefaultDateFormat);
            //col.Bound(c => c.EffectiveEndDate).Width(150).Format(ERP.Utility.Constant.Annotation.DefaultDateFormat);
            col.Bound("Status").Title(@SharedResource["Status"]).Width(150);
            // col.Command(c => c.Custom("Edit").Text("Edit").SendDataKeys(true).Click("OnEdit")).Width(80).Visible(2246.HasPermission());
        })
        .ToolBar(toolbar =>
        {
            toolbar.Custom().Text(@SharedResource["Create"]).Name("btnAdd").IconClass("fa fas fa-plus").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnCreateSalaryInfo();" });
        })
        .Scrollable(x => x.Enabled(true))

        .Sortable(srt => srt.Enabled(true))
        .Selectable(select => select.Enabled(false))
        .Filterable(f => f.Extra(false)
        .Operators(o => o.ForString(s => s.Clear()
        .Contains("Contains")
        .IsEqualTo("Is equal to")
        )))
          .Resizable(resize => resize.Columns(true))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .AutoBind(true)
        .DataSource(
        dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("ReadSalaryInfoData", "SalaryInfo", new { Area="Pay"}))
        .Model(model => model.Id("Id")))
        )*@
    </div>
</div>

