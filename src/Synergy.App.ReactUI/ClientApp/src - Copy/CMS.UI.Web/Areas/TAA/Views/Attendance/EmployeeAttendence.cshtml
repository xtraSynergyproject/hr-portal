@inject IStringLocalizer<CMS.UI.Web.Areas.TAA.Controllers.AttendanceController> Resource
@using CMS.Data.Model
@using CMS.UI.ViewModel
@using Kendo.Mvc.UI
@using CMS.Common


@model TimeinTimeoutDetailsViewModel
@{
    ViewBag.Title = "Time Permission Request";
    // Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    //Layout = null;
}

<style>
    .k-grid a:hover {
        text-decoration: underline !important;
    }

    .hover:hover {
        text-decoration: underline;
    }

    .col-md-6 {
        max-width: 100% !important;
    }

    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .date {
        margin-left: 1%;
        margin-right: 1%
    }

    .k-listview {
        border: none !important;
    }



    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    #banner {
        width: 100%;
        height: 140px;
        /* height: 160px;*/
        left: 389px;
        top: 157px;
        background: #2D9FCA;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 6px;
        font-family: roboto;
    }
</style>


<script>



    $('#btnSearch').bind('click', function (e) {


        var grid = $("#kgrdAttendance").data("kendoGrid");
        var search = FilterGrid();
        grid.dataSource.read(search);
        return false;
    });



    function FilterGrid() {

        var search = {
            UserId: $("#UserId").val(),
            SearchMonth: $("#SearchMonth").val(),
            SearchStart: $("#SearchStart").val(),
            SearchEnd: $("#SearchEnd").val(),
            SearchType: $('input[name=SearchType]:checked').val(),

        };
        return search;
    }





    function OnAfterServiceCreate(service) {

        $("#TimePermissionGridView").data("kendoGrid").dataSource.read();
    }

    function OnEmployeechange(e) {
        var dataItem = e.sender.dataItem();
        var id = dataItem.UserId;




        var Status = {
            Id: id,
        };
        $("#TimePermissionGridView").data("kendoGrid").dataSource.read(Status);

    }



    function gotoService(NoteId, Pagename) {



        var portalId = $('#GlobalPortalId').val();

        // var url = '/Cms/Page?source=Edit&dataAction=Edit&pageName=Project&portalId=' + portalId + '&recordId=' + id ;
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=Versioning&dataAction=Edit&pageName=' + Pagename + '&portalId=' + portalId + '&recordId=' + NoteId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: "" + Pagename + "", Width: 1200, Height: 600 });
        return false;

    }

    $(document).ready(function () {
        $("#SearchMonth").kendoDatePicker({
            value: "@Model.SearchMonth",
          
            start: '@CalendarView.Year',
            depth: '@CalendarView.Year',
            format: "MMMM yyyy",
            dateInput:true
        });

        $("#SearchStart").kendoDatePicker({ value: "@Model.SearchStart", format:"dd MMMM yyyy"});
        $("#SearchEnd").kendoDatePicker({ value: "@Model.SearchEnd", format: "dd MMMM yyyy"});


    });

</script>





<div class="row no-gutter hr-pad-top-15" style="margin-left:5px;">
    @Html.HiddenFor(x => x.UserId)
    <div class="form-group col-md-3 col-sm-2">
        <div class="col-md-6 label-div">

            @*@(Html.Kendo().RadioButton().Value(ScheduleTypeEnum.Monthly.ToString()).Name("type1").Checked(true).HtmlAttributes(new { @name = "SearchType" }).Label(@SharedResource["Month"]))*@

            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" class="custom-control-input" id="type1" name="SearchType" value="@ScheduleTypeEnum.Monthly.ToString()" checked>
                <label class="custom-control-label" for="type1">@SharedResource["Month"]</label>
            </div>
        </div>
        <div class="col-md-6">
            @*@(Html.Kendo().DatePickerFor(x => x.SearchMonth)
                                           .Start(CalendarView.Year)
                                           .Depth(CalendarView.Year)
                                           .Format("MMMM yyyy")
                                           //.Value("November 2011")
                                           .DateInput()
                                           .HtmlAttributes(new { style = "width: 100%", title = "monthpicker" })
        )*@
            <input id="SearchMonth" style="width:100%" title="monthpicker" />
        </div>
    </div>

    <div class="form-group col-md-3 col-sm-2">
        <div class="col-md-6 label-div">
            @*@(Html.Kendo().RadioButton().Value(ScheduleTypeEnum.Manual.ToString()).Name("type2").HtmlAttributes(new { @name = "SearchType" }).Label(@Resource["PeriodFrom"]))*@

            <div class="custom-control custom-radio custom-control-inline">
                <input type="radio" class="custom-control-input" id="type2" name="SearchType" value="@ScheduleTypeEnum.Manual.ToString()">
                <label class="custom-control-label" for="type2">@Resource["PeriodFrom"]</label>
            </div>
        </div>
        <div class="col-md-6">
            @*@Html.Kendo().DatePickerFor(x => x.SearchStart).Format("dd MMMM yyyy").HtmlAttributes(new { @class = "form-control hr-small" })*@
            <input id="SearchStart" class="form-control hr-small" />
        </div>
    </div>

    <div class="form-group col-md-3 col-sm-2">
        <div class="col-md-6 label-div" style=" margin-bottom: -7px;">
            @Html.Label(@Resource["To"])
        </div>
        <div class="col-md-6">
            @*@Html.Kendo().DatePickerFor(x => x.SearchEnd).Format("dd MMMM yyyy").HtmlAttributes(new { @class = "form-control hr-small" })*@
            <input id="SearchEnd" class="form-control hr-small" />
        </div>
    </div>

    <div class="form-group col-md-3 col-sm-2" style="margin-top: 22px;">
        <div class="col-md-6">
            @*@Html.Kendo().Button().Name("btnSearch").HtmlAttributes(new { @class = "btn btn-filter-reset" }).Content(@SharedResource["Search"])*@
            <button type="button" id="btnSearch" class="btn btn-filter-reset">@SharedResource["Search"]</button>

        </div>
    </div>
    @Html.HiddenFor(x => x.UserId)

</div>

<div class="row">
    <div class="col-12">
        @*<button class="btn btn-filter-reset" onclick="OnService()" title="Reset Filter">Add Time Permission</button>*@
        <div class="panel panel-primary">
            <div class="panel-heading"></div>
            <div class="panel-body">
                @(Html.Kendo().Grid<TimeinTimeoutDetailsViewModel>()
                        .Name("kgrdAttendance")
                        .Columns(columns =>
                        {
                            //columns.Select().Width(75).HtmlAttributes(new { @class = "checkbox-align" }).HeaderHtmlAttributes(new { @class = "checkbox-align" });
                            columns.Bound(p => p.Date).Title(@Resource["Date"]).Format("{0:dd MMM yyyy}").Width(170);
                            columns.Bound(c => c.Roster).Title(@Resource["Roster"]).Filterable(false).Width(170).ClientTemplate("<div style='color:blue'>#= Roster# <br/> #= Duty2Roster# <br/>  #=Duty3Roster#</div>").ClientHeaderTemplate(@Resource["Timeintimeout"]).HtmlAttributes(new { Class = "hidden-xs" }).HeaderHtmlAttributes(new { Class = "hidden-xs" });
                            columns.Bound(c => c.Actual).Title(@Resource["Actual"]).Filterable(false).Width(170).ClientTemplate("<div style='color:blue'>#=Actual#<br/>#=Duty2Actual# <br/>#=Duty3Actual#</div>").ClientHeaderTemplate(@Resource["Actualtimeintimeout"]).HtmlAttributes(new { Class = "hidden-xs" }).HeaderHtmlAttributes(new { Class = "hidden-xs" });

                            columns.Bound(p => p.EmployeeComments).Title(@Resource["EmployeeComments"]).Width(170);
                            columns.Bound(p => p.OverrideComments).Title(@Resource["OverrideComments"]).Width(170);


                        })
                        .ToolBar(toolbar =>
                        {
                            //toolbar.Excel();
                            //toolbar.Pdf();
                            toolbar.Search().Text(@SharedResource["Search"]);
                        })
//.Pdf(pdf=>pdf.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
//.Excel(excel=>excel.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
.ColumnMenu(col => col.Filterable(false))
.Height(700)
.Editable()
.Pageable()
.Sortable()
.Navigatable()
.Resizable(r => r.Columns(true))
.Reorderable(r => r.Columns(true))
.Groupable(g => g.ShowFooter(false))
.Filterable()
.Scrollable()
//.Events(events => events.DataBound("onDataBound"))
.DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .PageSize(20)
    .AutoSync(true)
    .ServerOperation(false)
   //.Events(events => events.Error("error_handler"))
   .Model(model =>
   {
       model.Id(p => p.Id);
       model.Field(p => p.Date).Editable(false);
       model.Field(p => p.Roster).Editable(false);
       model.Field(p => p.Actual).Editable(false);
       model.Field(p => p.OverrideComments).Editable(false);

   })
    //.Group(group=>group.Add("Category.CategoryName", typeof(string), ListSortDirection.Descending))
    //.Create("DetailProducts_Create", "Grid")
    .Read(read => read.Action("GetEmployeeAtendanceList", "Attendance").Data("FilterGrid"))

)
)
            </div>
        </div>
    </div>
</div>




