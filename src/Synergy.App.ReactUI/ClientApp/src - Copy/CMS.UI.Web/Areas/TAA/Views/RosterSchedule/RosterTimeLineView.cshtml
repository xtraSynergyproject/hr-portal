@inject IStringLocalizer<CMS.UI.Web.Areas.TAA.Controllers.RosterScheduleController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;

@{

    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model RosterScheduleViewModel




<style>
    /*.k-scheduler-layout tbody tr:nth-child(1) .k-scheduler-table tbody tr:nth-child(2) {
        display: none !important;
    }*/
    .k-scheduler-table tbody tr {
        height: 30px !important;
    }
    /*.k-scheduler-table tbody td {
        width: 10px !important;
    }*/
    .R {
        background-color: lightpink;
        text-align: center;
        padding-top: 0px;
        height: 30px;
    }

    .A {
        background-color: #c6ecd9;
        text-align: center;
        padding-top: 5px;
        height: 30px;
        border-radius: 5px;
    }

    .k-scheduler-toolbar > ul:first-child {
        float: left;
        visibility: hidden;
    }
</style>
<div style="padding:5px;">

    @(Html.Kendo().Scheduler<RosterTimeLineViewModel>()
                .Name("scheduler")
                .Date(Model.RosterDate)
                .StartTime(new DateTime(Model.RosterDate.Year, Model.RosterDate.Month, Model.RosterDate.Day,00,00,00))
                //.StartTime(new DateTime(DateTime.Now.Date.Year, DateTime.Now.Date.Month, DateTime.Now.Day, 00, 00, 00))
                .MajorTick(60)
                .Height(700)
                .Views(views =>
                {
                    views.TimelineView(timeline => timeline.Editable(false).MinorTickCount(1).ColumnWidth(20).MajorTimeHeaderTemplateId("title").EventHeight(30).EventTemplateId("titleTemplate"));
                    views.TimelineWeekView(timeline => timeline.Editable(false).Selected(true).MinorTickCount(1).ColumnWidth(30).MajorTimeHeaderTemplateId("title").EventHeight(30).EventTemplateId("titleTemplate"));
                    views.TimelineMonthView(timeline => timeline.Editable(false).MinorTickCount(1).ColumnWidth(30).MajorTimeHeaderTemplateId("title").ShowWorkHours(false).EventHeight(30).MajorTimeHeaderTemplateId("title").EventTemplateId("titleTemplate"));

                })
                .Group(group => { group.Resources("Colleagues","Attendees").Orientation(SchedulerGroupOrientation.Vertical); })
                .Resources(resource =>
                {
                    resource.Add(m => m.PersonId)
                    .Title("Colleagues")
                    .Name("Colleagues")
                    .DataTextField("Name")
                    .DataValueField("Id")
                    // .DataColorField("Color")
                    .BindTo(Model.userList);

                    resource.Add(m => m.TypeVal)
                              .Title("Attendees")
                              .Name("Attendees")
                              .Multiple(true)
                              .DataTextField("Text")
                              .DataValueField("Value")
                              .DataColorField("Color")
                              .BindTo(new[] {
                    new { Text = "Roster", Value = 1, Color = "#f8a398" } ,
                    new { Text = "Attendance", Value = 2, Color = "#51a0ed" }
                              });


                })
                .DataSource(d => d
                .Model(m =>
                {
                    m.Id(f => f.PersonId);
                    m.Field(f => f.Title).DefaultValue("No title");
                    m.Field(f => f.Title).DefaultValue("No title");

                })
            .Read("GetRosterTimeData", "RosterSchedule", new { orgId = Model.OrganizationId ,date = Model.RosterDate })

                )
        )

</div>

<script type="text/x-kendo-tmpl" id="titleTemplate">

    <div class="#=Type #" ></div>

</script>
<script type="text/x-kendo-tmpl" id="title">
    <div>#=kendo.toString(date, 'HH')#</div>
</script>