@using CMS.UI.ViewModel;
@using CMS.Common;


@{
    ViewData["Title"] = "Template";
    Layout = null;
}
<script>

    var columnDefs = [

        {
            headerName: "Select", field: "Id",
            //cellRenderer: params => {
            //    //return "< onclick='javascript:gotoService(\"" + params.data.Id + "\");' style='cursor:pointer;color:dodgerblue;'>" + params.data.ServiceNo + "</a>";
            //    return "<input type='checkbox' id='" + params.data.Id + "' onchange='toggleCheckbox(this)'>";
            //   // return "checkbox"
            //},
            cellRenderer: params => {
                debugger;
                return `<input name='chk' id='` + params.data.Id + `' type='checkbox' />`;
            }
        },
        {
            headerName: "Name", field: "Name",
        },
        {
            headerName: "DisplayName", field: "DisplayName",
        }, {
            headerName: "Code", field: "Code",
        }, {
            headerName: "TemplateType", field: "TemplateType",
        }, {
            headerName: "Status", field: "Status",
        },

    ];

    function getData() {
        document.getElementById("deletegrid").innerHTML = "";
        gridConfig(
            "deletegrid",
            "/cms/Template/ReadTemplateData",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    $(document).ready(function () {

        getData();
    });

    var selectedRows = [];
      function OnDeleteTeam(e) {
        var flag = confirm('Do you really want to delete the Team?');
        //alert("..Delete");
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url:'@Url.Action("Delete", "Team", new { @area="Cms"})?Id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#Teamgrid").data("kendoGrid").dataSource.read();
                        kendo.alert("Team Deleted Successfully.");
                    } else {
                        $("#Teamgrid").data("kendoGrid").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //
                    $("#Teamgrid").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }
    function pushPopinArray(arr) {

        for (var i = 0; i < arr.length; i++) {
            if (arr[i].Select == true) {
                selectedRows.push(arr[i].Id);

            }

        }

    }
    function OnDelete() {
        var ques = '';
        //var entityGrid = $("#Templategrid").data("JSGrid");
        //entityGrid.updateItem();
        //pushPopinArray(entityGrid.data);
        //var grid = $("#Templategrid").data("kendoGrid");
        //grid.tbody.find("input:checked").closest("tr").each(function (index) {
        //    ques = ques + grid.dataItem(this).Id + ',';
        //    //alert(grid.dataItem(this).Id);
        //});
        debugger;
        $("input:checkbox[name=chk]:checked").each(function () {
            selectedRows.push($(this).attr("id"));//+ " Value: " + $(this).val());
        });
        ques = selectedRows.join(',');
        if (ques == '' || ques == ',') {
            alert("Please Select atleast one template");
        }
        else {
           // ShowLoader($('#template'));
            $.ajax({
                type: "POST",
                url: "/cms/Template/DeleteTemplateData",
                data: { 'templateIds': ques },
                success: function (data) {
                   // HideLoader($('#template'));
                    alert("Template Deleted successfully");
                   // $("#Templategrid").data("kendoGrid").dataSource.read();
                    getData();
                },
                dataType: "json",
            });
        }
    }
</script>
<div id="template">
    <h4>@ViewBag.Title</h4>

    <hr />


    <div class="row">
        <div class="col-12">
            <input type="submit" class="btn btn-primary" onclick="OnDelete(event)" value="Delete" />
            <div id="Templategrid"></div>
            <div id="deletegrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            @*@(Html.Kendo().Grid<TemplateViewModel>
                 ()
                 .Name("Templategrid")
                .ToolBar(toolbar =>
                {
                    toolbar.Custom().Text("Delete").Name("btnMap").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnDelete();" });
                })
                 .Columns(columns =>
                 {
                     //columns.Bound(c => c.Id).Width(140).Hidden(true);
                     //  columns.Bound(c => c.Id).Title(" ").Width(100).ClientTemplate("<a class='btn btn-success' onclick='return OnEditGroup(\"#=Id#\");'><i class='fad fa-edit'></i> Edit</a>");
                     columns.Select().Width(50);
                     columns.Bound(c => c.Name);
                     columns.Bound(c => c.DisplayName);
                     columns.Bound(c => c.Code);
                     columns.Bound(c => c.TemplateType);
                     columns.Bound(c => c.Status);

                     //columns.Bound(c => c.GroupPortals).ClientTemplate("#= GroupPortals.join(', ')  #").Width(140);

                 })
                  .Scrollable(x => x.Enabled(false))
                             .Sortable(srt => srt.Enabled(true))
                             .Selectable(select => select.Enabled(false))
                             .Filterable(f => f.Extra(false)
                                                                 .Operators(o => o.ForString(s => s.Clear()
                                                                 .Contains("Contains")
                                                                 .IsEqualTo("Is equal to")
                                                             )))
                             .Pageable(pageable => pageable
                             .Refresh(true)

                             .PageSizes(true)
                             .ButtonCount(5))
                             .AutoBind(true)
                             .DataSource(
                             dataSource => dataSource
                             .Ajax()
                             .PageSize(50)
                             //.Events(events => events.Error("OnError"))
                             .Read(read => read.Action("ReadTemplateData", "Template"))
                             .Model(model => model.Id(p => p.Id))
                             )
                       )*@
        </div>
    </div>

</div>

<script>


    //$("#Templategrid").jsGrid({
    //    width: "100%",
    //    height: "600px",
    //    // selecting: true,
    //    inserting: false,
    //    editing: true,
    //    sorting: true,
    //    paging: true,
    //    autoload: true,
    //    pageSize: 14,
    //    filtering: true,
    //    pageButtonCount: 5,
    //    deleteConfirm: "Do you really want to delete client?",
    //    //data: clients,
    //    controller: {
    //        loadData: function (filter) {
    //            return $.ajax({
    //                type: "GET",
    //                url: "/cms/Template/ReadTemplateData",
    //                data: filter,
    //                dataType: "json"
    //            });
    //        },


    //    },
    //    onItemEditing: function (e) {
    //        if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {
    //            e.grid.updateItem();
    //        }
    //    },
    //    fields: [
    //        {
    //            name: "Select", type: "checkbox", width: 60, editing: true

    //        },
    //        {
    //            name: "Name", type: "text", width: 150, editing: false
    //        },
    //        {
    //            name: "DisplayName", type: "text", width: 200, editing: false
    //        },
    //        { name: "Code", type: "text", width: 200, editing: false },
    //        { name: "TemplateType", type: "text", width: 100, editing: false },
    //        { name: "Status", type: "text", width: 100, editing: false },


    //    ]
    //});

  

</script>