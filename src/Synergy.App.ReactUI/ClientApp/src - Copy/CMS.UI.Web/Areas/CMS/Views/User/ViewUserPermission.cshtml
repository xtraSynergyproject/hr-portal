@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;

@model UserPermissionViewModel
@{
    ViewData["Title"] = "Team";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
<script>
    var columnDefs = [

        {
            field: "UserName",
        },
        { field: "PortalName" },
        { field: "Type" },
        { field: "PageName" },
        { field: "Permission" },



    ];

    $(function () {

        getDataServiceDashboard();





    });


    function getDataServiceDashboard() {
        document.getElementById("ViewPermissions").innerHTML = "";
        gridConfig(
            "ViewPermissions",
            '@Url.Action("ReadUserPermissionData", "User", new { @area = "PortalAdmin",userId = ViewBag.UserId })',
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<div>
    <div class="row">
        <div class="col-12">

            <div id="ViewPermissions" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>

    @*<div class="row">
            <div class="col-12">

                @(Html.Kendo().Grid<UserPermissionViewModel>
        ()
        .Name("ViewPermissions")
        //.ToolBar(toolbar =>
        // toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateTeam();'><i class='fa fas fa-plus'></i>&nbsp;Create Team</button>"))


        .Columns(columns =>
        {

            //columns.Command(command =>
            //{
            //    command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditTeam").HtmlAttributes(new { @class = "action-icon" });
            //    command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteTeam").HtmlAttributes(new { @class = "action-icon" });
            //}).Title("Action").Width(100);
            columns.Bound(c => c.UserName).Width(100);
            columns.Bound(c => c.PortalName).Width(100);
            columns.Bound(c => c.Type).Title("Permission Source").Width(100);
            columns.Bound(c => c.PageName).Width(100);
            columns.Bound(c => c.Permission).Width(200);



        })
         .Scrollable(x => x.Enabled(true))
                    .Sortable(srt => srt.Enabled(true))
                    .Selectable(select => select.Enabled(false))
                    .Filterable(f => f.Extra(false)
                                                        .Operators(o => o.ForString(s => s.Clear()
                                                        .Contains("Contains")
                                                        .IsEqualTo("Is equal to")
                                                    )))
                    .Pageable(pageable => pageable
                    .Refresh(true)

                    .PageSizes(true)
                    .ButtonCount(5))
                    .AutoBind(true)
                    .DataSource(
                    dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    //.Events(events => events.Error("OnError"))
                    .Read(read => read.Action("ReadUserPermissionData", "User", new { @area = "PortalAdmin",userId = ViewBag.UserId }))
                    .Model(model => model.Id(p => p.Id))
                    )
              )
            </div>
        </div>*@

</div>

<script>
    //function OnCreateTeam() {
    //    window.location.href = "/Cms/Team/Manage";
    //}

        // $(document).ready(function () {

        //        $("#grid").data("kendoGrid").dataSource.reload()

        //});

    //function OnDeleteUser() {
    //
    //    $('#dlg_DeleteConfirmation').data("kendoDialog").open();
    //}



</script>