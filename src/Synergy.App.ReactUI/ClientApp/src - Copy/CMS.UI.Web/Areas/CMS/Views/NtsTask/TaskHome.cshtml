@inject IStringLocalizer<CMS.UI.Web.Areas.CMS.Controllers.NtsTaskController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@model TaskSearchViewModel
@{

    Layout = ViewBag.Layout ?? null;
}

<style>
    .k-listview-content {
        overflow: hidden !important;
    }
    .col-md-3{
        max-width:none !important;
    }

    #MainPost {
        padding: 5px 5px;
        margin-bottom: -1px;
        width: 100%;
        height: 100%;
        overflow: auto;
        overflow-x: hidden;
    }

    .group .input {
        margin-bottom: 25px;
        width: 100%;
        color: black;
        display: block;
        border: 1px;
        padding: 15px 20px;
        border-radius: 50px;
        background: rgba(142, 139, 139, 0.1);
    }

    .round {
        border-radius: 50%;
    }

    .gallery-cell {
        width: 100%;
        height: 200px;
        margin-right: 10px;
        align-content: center;
        padding-bottom: 10px;
        cursor: pointer;
        background: Transparent;
        counter-increment: gallery-cell;
        border-radius: 10px;
    }



    img {
        max-width: 100%;
        max-height: 100%;
    }

    .breadcrumb {
        margin-bottom: -44px;
        background-color: transparent;
    }

    #kgrdTask_pager {
        background-color: bisque;
        font-size: 12px;
    }

    .fontstyle {
        font-size: 27px;
        color: #333333;
        display: block;
        font-weight: bold;
        margin-bottom: 5px;
        margin-top: 8px;
        border-bottom: 1px solid rgba(255, 255, 255, .5);
    }

    #AnnouncementPost {
        width: 100%;
        height: 38vh;
        overflow: auto;
        overflow-x: hidden;
    }

    #DocumentPost {
        width: 100%;
        height: 37vh;
        overflow: auto;
        overflow-x: hidden;
    }

    .sectionbox {
        margin-bottom: 30px;
        border-radius: 5px;
        color: #333333;
        background: #fff;
        width: 100%;
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        min-height: 100px;
    }


    .iconwothtext {
        display: flex;
        cursor: pointer;
        align-items: center;
    }

        .iconwothtext.img {
            margin: 10px;
            padding: 10px;
            transition: margin 200ms;
        }


    .iconwothtextsub {
        display: flex;
        cursor: pointer;
        align-items: center;
    }

        .iconwothtextsub.img {
            margin: 10px;
            padding: 10px;
            transition: margin 200ms;
        }

    .profilemenustyle {
        font-size: 20px;
        color: #4b4f56;
        display: block;
        margin-top: 8px;
        border-bottom: 1px medium rgba(255, 255, 255, .5);
    }

    .leftmenustyle {
        font-size: 14px;
        color: #4b4f56;
        margin-bottom: 6px;
        font-weight: normal;
        margin-top: 6px;
        padding-left: 5px;
        border-bottom: 1px medium rgba(255, 255, 255, .5);
    }

    .leftsubmenustyle {
        font-size: 16px;
        color: #4b4f56;
        margin-bottom: 5px;
        font-weight: normal;
        margin-top: 5px;
        padding-left: 5px;
        border-bottom: 1px medium rgba(255, 255, 255, .5);
    }

    .submenustyle {
        font-size: 15px;
        color: darkgoldenrod;
        display: block;
        margin-bottom: 10px;
        border-bottom: 1px medium rgba(255, 255, 255, .5);
    }

    @@media (min-width: 800px) {
        body {
            background: #fafafa;
            background-position: center;
            background-size: cover;
            width: 100%;
            height: 96%;
            background-repeat: no-repeat;
            padding-top: 10px;
            /*overflow: hidden;*/
        }
    }



    @@media(max-width: 800px) {
        body {
            background: #fafafa;
            background-position: center;
            background-size: cover;
            width: 100%;
            height: 96%;
            background-repeat: no-repeat;
            padding-top: 10px;
            overflow: auto;
        }
    }

    .content {
        padding-top: 10px;
    }

    .card {
        margin-top: 15px;
        margin-bottom: 10px;
    }

    .content-popup {
        padding: 0px;
        padding-top: 0px;
    }

    .login-form {
        margin-top: 60px;
        min-height: 300px;
        perspective: 1000px;
        transform-style: preserve-3d;
        border-color: #dfdddb;
    }

    .login-wrap {
        background-color: transparent;
        border-radius: 10px;
    }

    .k-primary {
        border-color: lightgray;
    }

    .round {
        border-radius: 50%;
    }

    [data-letters]:before {
        content: attr(data-letters);
        display: inline-block;
        font-size: 1em;
        width: 1.8em;
        height: 1.8em;
        line-height: 1.8em;
        text-align: center;
        border-radius: 30%;
        background: DarkOrange;
        //background: String.Format("#{0:X6}", new Random((int)DateTime.Now.Ticks).Next(0x1000000));
        vertical-align: middle;
        margin-right: 1em;
        color: white;
    }

    #LeftPanel {
        height: 90vh;
        overflow: auto;
        overflow-x: hidden;
    }

    ::-webkit-scrollbar-track {
        -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,0.3);
        background-color: #F5F5F5;
        border-radius: 10px;
    }

    ::-webkit-scrollbar {
        width: 6px;
        background-color: #F5F5F5;
    }

    ::-webkit-scrollbar-thumb {
        border-radius: 10px;
        background-color: #F90;
        background-image: -webkit-linear-gradient(90deg, rgba(255, 255, 255, .2) 25%, transparent 25%, transparent 50%, rgba(255, 255, 255, .2) 50%, rgba(255, 255, 255, .2) 75%, transparent 75%, transparent)
    }

    /*p {
        text-align: center;
        white-space: nowrap;
        overflow: hidden;
        width: 40em;
        animation: type 3s steps(60, end);
    }

        p:nth-child(2) {
            animation: type2 3s steps(60, end);
        }

        p:nth-child(3) {
            animation: type3 6s steps(60, end);
        }*/

    @@keyframes type {
        from {
            width: 0;
        }
    }

    @@keyframes type2 {
        0% {
            width: 0;
        }

        50% {
            width: 0;
        }

        100% {
            width: 100;
        }
    }

    @@keyframes type3 {
        0% {
            width: 0;
        }

        50% {
            width: 0;
        }

        100% {
            width: 100;
        }
    }

    .roundcheckbox {
        position: relative;
    }

        .roundcheckbox label {
            background-color: #fff;
            border: 1px solid #ccc;
            border-radius: 50%;
            cursor: pointer;
            height: 28px;
            left: 0;
            position: absolute;
            top: 0;
            width: 28px;
        }

            .roundcheckbox label:after {
                border: 2px solid #fff;
                border-top: none;
                border-right: none;
                content: "";
                height: 6px;
                left: 7px;
                opacity: 0;
                position: absolute;
                top: 8px;
                transform: rotate(-45deg);
                width: 12px;
            }

        .roundcheckbox input[type="checkbox"] {
            visibility: hidden;
        }

            .roundcheckbox input[type="checkbox"]:checked + label {
                background-color: #66bb6a;
                border-color: #66bb6a;
            }

                .roundcheckbox input[type="checkbox"]:checked + label:after {
                    opacity: 1;
                }

    .fromcolor {
        color: darkblue;
    }

    .iconwithtextnoanim {
        display: flex;
        align-items: center;
    }

        .iconwithtextnoanim.img {
            margin: 10px;
            padding: 10px;
            transition: margin 200ms;
        }

    .k-listview {
        background-color: transparent;
        border: none;
    }

    span.k-invalid-msg {
        position: absolute;
        margin-left: 6px;
    }

    #kpnlbarActiveService .k-header {
        border: none;
        font-size: 14px;
        font-weight: bolder;
        color: #4b4f56;
        margin-top: 5px;
        padding-left: 15px;
        background-color: #fafafa;
        border-bottom-color: gray;
    }

    #kpnlbarActiveService {
        border: none;
        background-color: #fafafa;
        border-bottom: 1px;
    }

    #kpnlbarFilter .k-header {
        border: none;
        font-size: 14px;
        font-weight: bolder;
        color: #4b4f56;
        margin-top: 5px;
        padding-left: 15px;
        background-color: #fafafa;
        border-bottom-color: gray;
    }

    #kpnlbarFilter {
        border: none;
        background-color: #fafafa;
        border-bottom: 1px;
    }
    #kpnlbarPersonFilter {
        border: none;
        background-color: #fafafa;
        border-bottom: 1px;
    }

    .k-state-selected:link {
        background-color: #fafafa;
        color: black;
        box-shadow: none;
    }

    .k-state-selected .k-state-focused .k-content {
        background-color: #fafafa;
        color: black;
        box-shadow: none;
    }

    .k-item .k-state-default .k-state-highlight {
        color: black;
    }

    .k-link k-header {
        font-weight: bold;
    }

    .head-img {
        max-width: 100%;
        max-height: 149px;
        width: 100%;
        /* object-fit: none;*/
    }
    .banner-container {
        position: relative;
        color: white;
    }

    .banner-text {
        position: absolute;
        top: 14px;
        left: 60px;
        font-size: 35px;
    }
</style>
<script type="text/javascript">
     function OnStatusDataBound(e) {
      //  debugger
        var rootNodes = $("#statustreeview").getKendoTreeView().dataSource.data()[0].children.data();
         if (rootNodes != undefined && rootNodes.length != undefined && rootNodes.length > 0) {
            for (var i = 0; i < rootNodes.length; i++) {
                var node = rootNodes[i];
                if ("@ViewBag.Status" == "All") {
                      node.set("checked", true);
                  }
                else if (node.Name == "@ViewBag.Status") {
                    node.set("checked", true);
                }
            }
        }
    }
      function OnPersonDataBound(e) {
        //debugger
          var rootNodes = $("#persontreeview").getKendoTreeView().dataSource.data()[0].children.data();
          if (rootNodes != undefined &&  rootNodes.length != undefined && rootNodes.length > 0) {
              for (var i = 0; i < rootNodes.length; i++) {
                  var node = rootNodes[i];
                  if ("@ViewBag.Person" == "All") {
                      node.set("checked", true);
                  }
                  else if (node.Name == "@ViewBag.Person") {
                      node.set("checked", true);
                  }
              }
          }
    }
    function OnModuleDataBound(e) {
       // debugger
        var rootNodes = $("#moduletreeview").getKendoTreeView().dataSource.data()[0].children.data();
        if (rootNodes != undefined && rootNodes.length != undefined && rootNodes.length>0)
        {
             for (var i = 0; i < rootNodes.length; i++) {
            var node = rootNodes[i];
                 if ("@ViewBag.Module" == "All") {
                      node.set("checked", true);
                  }
            else if (node.Name == "@ViewBag.Module") {
                node.set("checked", true);
            }
        }
        }
        else {
            var rootNodes = $("#moduletreeview").getKendoTreeView().dataSource.data()[0];
            rootNodes.set("checked", true);
        }

    }
    $(document).ready(function () {

        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Cms/NtsTask/ReadTaskHomeData",
                    data: FilterGrid,
                    dataType: "json"
                }
            },
            pageSize: 20
        });

        $("#pager").kendoPager({
            dataSource: dataSource,
            buttonCount: 5
        });

        $("#kgrdTask").kendoListView({
            dataSource: dataSource,            
            template: kendo.template($("#templateTask").html())
        });

        $("#panelbar1").kendoPanelBar({
            //  expandMode: "single"
        });

        $("#panelbar2").kendoPanelBar({
            //  expandMode: "single"
        });

        $("#panelbar3").kendoPanelBar({
            //  expandMode: "single"
        });

        if ('@Model.TaskId'!=null && '@Model.TaskId'!='' && '@Model.TaskId'!='null')
        {
            OpenTask('@Model.TaskId','', '', '@ViewBag.TemplateMasterCode');
        }
        @*$("#todoheading").html("@ViewBag.Msg");*@
        var isChrome = /Chrome/.test(navigator.userAgent) && /Google Inc/.test(navigator.vendor);
        //     var isSafari = /Safari/.test(navigator.userAgent) && /Apple Computer/.test(navigator.vendor);
        if (isChrome) {
           // $(".body-content").css('zoom', '0.8');
           // $(".breadcrumb").css('zoom', '0.8');
        }
        $("#mysearch2").keyup(function () {
            var val = $('#mysearch2').val();

                var listView = $("#kgrdTask").data("kendoListView");
                listView.dataSource.filter({
                    logic: "or",
                    filters: [
                        {
                            field: "TaskSubject",
                            operator: "contains",
                            value: val
                        },
                        {
                            field: "TaskNo",
                            operator: "contains",
                            value: val
                        },
                        //{
                        //    field: "AvatarName",
                        //    operator: "contains",
                        //    value: val
                        //},
                        {
                            field: "GetTaskOwner",
                            operator: "contains",
                            value: val
                        },
                        {
                            field: "AssigneeDisplayName",
                            operator: "contains",
                            value: val
                        },
                        {
                            field: "TaskStatusName",
                            operator: "contains",
                            value: val
                        }
                    ]
                });

        });


        //fancy treee---------------------------------------------------------------------------------------------------------
        getStatusTree();
        getModuleTree();
        getRoleTree();
    });

    function getStatusTree() {
        $("#statusTree").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/home/GetEnumAsFancyTreeList",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/home/GetEnumAsFancyTreeList",
                    data: { id: node.key, enumType: "TaskSearchHomeByStatusEnum" }
                }

            },
            select: function (event, data) {
                debugger;
                var s = data.tree.getSelectedNodes().join(", ");
                var selectedNodes = data.tree.getSelectedNodes();
                var selectedNames = [];
                var selectedKey = [];
                for (var i = 0; i <= selectedNodes.length - 1; i++) {
                    selectedKey.push(selectedNodes[i].key);
                    selectedNames.push(selectedNodes[i].title);
                }
                if (selectedKey.length == 0 || selectedKey.includes("All")) {
                    $("#taskStatus").html("All");
                }
                else {
                    $("#taskStatus").html(selectedNames.join(", "));
                }
                $("#TaskStatus").val(selectedKey.join(","));
                var search = FilterGrid();
                $("#kgrdTask").data("kendoListView").dataSource.read(search);
            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                var node = data.node;
                node.renderTitle();


            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {
                    debugger;
                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });
    }

    function getModuleTree() {
        moduleCodes = '@Model.ModuleCode';
        $("#moduleTree").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/cms/NtsService/GetModuleFancyTreeList?moduleCodes=" + moduleCodes,
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                data.result = {
                    url: "/cms/NtsService/GetModuleFancyTreeList",
                    data: {id: node.key, moduleCodes: moduleCodes }
                }

            },
            select: function (event, data) {
                debugger;
                var s = data.tree.getSelectedNodes().join(", ");
                var selectedNodes = data.tree.getSelectedNodes();
                var selectedNames = [];
                var selectedKey = [];
                for (var i = 0; i <= selectedNodes.length - 1; i++) {
                    selectedKey.push(selectedNodes[i].key);
                    selectedNames.push(selectedNodes[i].title);
                }
                if (selectedKey.length == 0 || selectedKey.includes("All")) {
                    $("#moduleStatus").html("All");
                }
                else {
                    $("#moduleStatus").html(selectedNames.join(", "));
                }
                $("#ModuleId").val(selectedKey.join(","));
                var search = FilterGrid();
                $("#kgrdTask").data("kendoListView").dataSource.read(search);
            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                var node = data.node;
                node.renderTitle();
            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {
                    debugger;
                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });
    }

    function getRoleTree() {
        $("#roleTree").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/home/GetEnumAsFancyTreeList",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                data.result = {
                    url: "/home/GetEnumAsFancyTreeList",
                    data: { id: node.key, enumType: "TaskSearchHomeByPersonEnum" }
                }

            },
            select: function (event, data) {
                debugger;
                var s = data.tree.getSelectedNodes().join(", ");
                var selectedNodes = data.tree.getSelectedNodes();
                var selectedNames = [];
                var selectedKey = [];
                for (var i = 0; i <= selectedNodes.length - 1; i++) {
                    selectedKey.push(selectedNodes[i].key);
                    selectedNames.push(selectedNodes[i].title);
                }
                if (selectedKey.length == 0 || selectedKey.includes("All")) {
                    $("#personStatus").html("All");
                }
                else {
                    $("#personStatus").html(selectedNames.join(", "));
                }
                $("#Mode").val(selectedKey.join(","));
                var search = FilterGrid();
                $("#kgrdTask").data("kendoListView").dataSource.read(search);
            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                var node = data.node;
                node.renderTitle();
            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {
                    debugger;
                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });
    }

    $('#CreateGroup').click(function (e) {
        CreateGroup(e);
    });
    $('#tId').click(function (e) {
        $("#bid").toggle(700);
        $("#tclose").toggle(700);
    });
    $('#sId').click(function (e) {
       // alert("zdc");
       $("#partialView").load('@Url.Content("/nts/task/taskhome")');
    });
    $('#nId').click(function (e) {
        $("#bnid").toggle(700);
        $("#nclose").toggle(700);
    });
    $('#Group').click(function (e) {
        window.location.href = "/nts/note/grouplist";
    });

    function gotoTask(mode) {
        window.location.href = "/nts/task?mode=ASSIGN_TO&taskStatus=" + mode;
        }

        function DownloadOrgDoc(id) {
            var ru = encodeURIComponent("/nts/Note/OrgHome");
            var url = "/nts/Note/Manage?ru=" + ru +"&NoteId=" + id;
            window.location.href = url;
           // iframeOpenUrl = "/nts/Note/DocumentDownload?noteId=" + id;
           // var wnd = $("#kiframepopupwindow").data("kendoWindow");
           // wnd.setOptions({
           //     width: 800,
           //     height: 450,
           //     title: "Document"
           // });
           // wnd.center().open();
        }

    function gotoService(mode) {
        window.location.href = "/nts/service?mode=REQ_BY&serviceStatus=" + mode;
    }

    function gotoNote(mode) {
        window.location.href = "/nts/note?mode=CREATED_BY&noteStatus=" + mode;
    }

    @*function CreateGroup() {

        iframeOpenUrl = "/admin/team/CreateGroup";
        var wnd = $("#kiframepopupnotitlewindow").data("kendoWindow");
        wnd.setOptions({
            width: 600,
            height: 110,
            title: "@ERP.Translation.Message.DescribeGroup"

        });
        wnd.wrapper.find('.k-window-titlebar').css({
            'background-color': 'transparent',
            'border-bottom-style': 'none'
        });
        wnd.center().open();

    }*@

    function Close(redirect) {
        var wnd = $("#kiframepopupnotitlewindow").data("kendoWindow");
        wnd.close();
    }

    function renderDetail(id) {
        if ($("#step-iframe-edit-div-" + id).html() == '') {
             $("[id*='step-iframe-edit-div']").each(function (i, el) {
            $(this).html("");
        });
        $("#step-loader-"+id).show();
        $.ajax({
            url: '@Url.Action("StepHome", "Service")',
            type: 'GET',
            cache: false,
            data: { serviceId: id },
            success: function (response) {
                $("#step-iframe-edit-div-" + id).html(response);
                $("#step-loader-" + id).hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            },
            complete: function (data) {

            } //EINDE complete
        });
        } else {
            $("#step-iframe-edit-div-" + id).html("");
        }

    }


    function RenderTaskEdit(id) {

        $("[id*='step-edit-div']").each(function (i, el) {
            $(this).html("");
        });
        $("[id*='step-template']").each(function (i, el) {
            $(this).show();
        });
        $("#step-edit-div-add").html("");
        $("#taskAdd").show();
        $("#step-edit-loader-" + id).show();
        $.ajax({
            url: '@Url.Action("EditTaskPartial", "Task")',
            type: 'GET',
            cache: false,
            data: { taskId: id },
            success: function (response) {
                $("#step-edit-div-" + id).html(response);
                $("#step-template-" + id).hide();
                $("#step-edit-loader-" + id).hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            },
            complete: function (data) {

            } //EINDE complete
        });

    }

    function RenderStepEdit(id) {
        $("[id*='step-edit-div']").each(function (i, el) {
            $(this).html("");
        });
        $("[id*='step-template']").each(function (i, el) {
            $(this).show();
        });
        $("#step-edit-loader-" + id).show();
        $.ajax({
            url: '@Url.Action("EditTaskPartial", "Task")',
            type: 'GET',
            cache: false,
            data: { taskId: id },
            success: function (response) {
                $("#step-edit-div-" + id).html(response);
                $("#step-template-" + id).hide();
                $("#step-edit-loader-" + id).hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            },
            complete: function (data) {

            } //EINDE complete
        });

    }

    function RenderAddEdit(id) {
         $("[id*='step-edit-div']").each(function (i, el) {
            $(this).html("");
        });
        $("[id*='step-template']").each(function (i, el) {
            $(this).show();
        });
        $("#add-step-loader").show();
        $.ajax({
            url: '@Url.Action("AddTaskPartial", "Task")',
            type: 'GET',
            cache: false,
            data: { templateMasterId: id },
            success: function (response) {
                $("#step-edit-div-add").html("");

                $("#step-edit-div-add").html(response);
                $("#add-step-loader").hide();
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert(xhr.status);
                alert(thrownError);
            },
            complete: function (data) {

            } //EINDE complete
        });

    }

    function OnCancelTaskForm(id) {
        $("#step-edit-div-add").html("");
        $("#step-edit-div-" + id).html("");
        var display = $("#taskAdd").css("display");
        if (display == "none") {
            $("#taskAdd").show();
        }
        if (id != null || id != 0) {
            $("#step-template-" + id).show();
        }
    }

    function OnCancelStepForm(id) {
        $("#step-edit-div-" + id).html("");
        if (id != null || id != 0) {
            $("#step-template-" + id).show();
        }
    }

    function createAnnouncements(e) {
        var ru = "/nts/Note/OrgHome";
        window.location.href = "/nts/note/GotoAnnouncements?ru="+ru;
    }

    function gotoHome(e) {
        window.location.href = "/nts/note/ManagePost";
    }

    function gotoCompany(e) {
        window.location.href = "/nts/note/Companyhome";
    }



    function ClosePost(redirect) {
        var wnd1 = $("#kiframepopupnotitlewindow").data("kendoWindow");
        wnd1.close();
        manageNoteList_Refresh($('#manageNoteList'));
        return false;
        //window.location.reload();
        //var wnd1 = $("#kiframepopupwindow").data("kendoWindow");
        //wnd1.close();
        //var wnd = $("#kiframepopupnotitlewindow").data("kendoWindow");
        //wnd.close();


        //manageNoteList_LoadData($('#manageNoteList'));
    }

    function onDataBound(e) {
        // kendoConsole.log("Data bound");
    }
    $(function () {
        $(document).bind("kendo:skinChange", updateTheme);
    });
    function updateTheme() {
        $("#chart").getKendoChart().setOptions({ theme: kendoTheme });
    }

    function resetParam() {
        var listView = $("#kgrdTask").data("kendoListView");
        $("#TaskStatus").val("");
        $("#Mode").val("");
        $("#ModuleId").val("");
        $("#Text").val("");
        $("#taskStatus").html("All");
        $("#moduleStatus").html("All");
        $("#personStatus").html("All");
        listView.dataSource.read(FilterGrid());
    }
    function resetModuleParam() {
        var listView = $("#kgrdTask").data("kendoListView");
        $("#ModuleId").val("");
        $("#moduleStatus").html("All");
        //$("#moduletreeview").data("kendoTreeView").dataSource.read();
        getModuleTree();
        listView.dataSource.read(FilterGrid());
        listView.dataSource.pageSize(20);

    }
    function resetStatusParam() {
        var listView = $("#kgrdTask").data("kendoListView");
        //$("#statustreeview").data("kendoTreeView").dataSource.read();
        getStatusTree();
        $("#TaskStatus").val("");
        $("#taskStatus").html("All");
        listView.dataSource.read(FilterGrid());
        listView.dataSource.pageSize(20);

    }
    function resetRoleParam() {
        var listView = $("#kgrdTask").data("kendoListView");
        //$("#persontreeview").data("kendoTreeView").dataSource.read();
        getRoleTree();
        $("#Mode").val("");
        $("#personStatus").html("All");
        listView.dataSource.read(FilterGrid());
        listView.dataSource.pageSize(20);

    }
    function gotoWorklist() {
        window.location.href = "/Nts/ntsHome";
    }

    function sortbydate() {
        var listView = $("#kgrdTask").data("kendoListView");
        listView.dataSource.sort({ field: "Id", dir: "desc" });
    }

    function sortbyname() {
        var listView = $("#kgrdTask").data("kendoListView");
        listView.dataSource.sort({ field: "Subject", dir: "asc" });
    }

    function sortbyowner() {
        var listView = $("#kgrdTask").data("kendoListView");
        listView.dataSource.sort({ field: "OwnerName", dir: "asc" });
    }

    function sortbyassignee() {
        var listView = $("#kgrdTask").data("kendoListView");
        listView.dataSource.sort({ field: "AssigneeDisplayName", dir: "asc" });
    }

    function filtercompleted() {
        resetParam();
        var listView = $("#kgrdTask").data("kendoListView");
        $("#todoheading").html("Task (Completed)");
        listView.dataSource.filter({ field: "TaskStatusName", operator: "eq", value: "Completed" });
    }

    function filteroverdue() {
        resetParam();
        var listView = $("#kgrdTask").data("kendoListView");
        $("#todoheading").html("Task (Overdue)");
        listView.dataSource.filter({ field: "TaskStatusName", operator: "eq", value: "Over Due" });
    }
    function filterinprogress() {
        resetParam();
        var listView = $("#kgrdTask").data("kendoListView");
        $("#todoheading").html("Task (In Progress)");
        listView.dataSource.filter({ field: "TaskStatusName", operator: "eq", value: "In Progress" });
    }

    function filterreset() {
        resetParam();
        var listView = $("#kgrdTask").data("kendoListView");
        $("#todoheading").html("Task");
        listView.dataSource.filter({});
        listView.dataSource.sort({ field: "Id", dir: "desc" });
    }

    function filterinbox() {
        resetParam();
        var listView = $("#kgrdTask").data("kendoListView");
        $("#todoheading").html("Task");
        listView.dataSource.filter({});
        listView.dataSource.sort({ field: "Id", dir: "desc" });
    }

    function filtertoday() {
        resetParam();
        var listView = $("#kgrdTask").data("kendoListView");
        $("#Text").val("Today");
        $("#todoheading").html("Task (Today)");
        listView.dataSource.filter({});
        var search = FilterGrid();
        listView.dataSource.read(search);
    }

    function filternextweek() {
        resetParam();
        var listView = $("#kgrdTask").data("kendoListView");
        $("#Text").val("Week");
        $("#todoheading").html("Task (Next 7 days)");
        listView.dataSource.filter({});
        var search = FilterGrid();
        listView.dataSource.read(search);
    }

        function FilterGrid() {
        var search = {
           // ServiceNo: $("#ServiceNo").val(),
           // Subject: $("#Subject").val(),
           StartDate: $("#StartDate").val(),
           // StartToDate: $("#StartToDate").val(),
           DueDate: $("#DueDate").val(),
           // DueToDate: $("#DueToDate").val(),
           // CreationDate: $("#CreationDate").val(),
           // CompletionDate: $("#CompletionDate").val(),
           // CompletionToDate: $("#CompletionToDate").val(),
            ClosedDate: $("#ClosedDate").val(),
            ReminderDate: $("#ReminderDate").val(),
            TaskStatus: $("#TaskStatus").val(),
            Mode: $("#Mode").val(),
            ModuleId: $("#ModuleId").val(),
            ModuleCode: $("#ModuleCode").val(),
            TemplateCategoryCode: $("#TemplateCategoryCode").val(),
            TemplateMasterCode: $("#TemplateMasterCode").val(),
            Text: $("#Text").val(),
            UserId: $("#UserId").val(),
            PortalNames: $("#PortalNames").val(),
        };
        return search;
    }
    function checkedNodeIds(nodes, checkedNodes, checkedNodesName) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
                checkedNodesName.push(nodes[i].Name);
            }

            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes, checkedNodesName);
            }
        }
    }

    // show checked node IDs on datasource change
    function onStatusCheck() {
        var checkedNodes = [],checkedNodesName = [],
            treeView = $("#statustreeview").data("kendoTreeView"),
            message;

        checkedNodeIds(treeView.dataSource.view(), checkedNodes,checkedNodesName);

        $("#TaskStatus").val(checkedNodes.join(","));
        if (checkedNodesName.length == 0 || checkedNodesName.includes("All")) {
            $("#taskStatus").html("All");
        }
        else {
            $("#taskStatus").html(checkedNodesName.join(", "));
        }
       // $("#taskStatus").html(checkedNodesName.join(", "));
        var search = FilterGrid();
        $("#kgrdTask").data("kendoListView").dataSource.read(search);
        //if (checkedNodes.length > 0) {
        //    message = "IDs of checked nodes: " + checkedNodes.join(",");
        //} else {
        //    message = "No nodes checked.";
        //}

        //$("#result").html(message);
    }
    function onPersonCheck() {
        var checkedNodes = [], checkedNodesName = [],
            treeView = $("#persontreeview").data("kendoTreeView");
        checkedNodeIds(treeView.dataSource.view(), checkedNodes, checkedNodesName);

        $("#Mode").val(checkedNodes.join(","));
        if (checkedNodesName.length == 0 || checkedNodesName.includes("All")) {
            $("#personStatus").html("All");
        }
        else {
            $("#personStatus").html(checkedNodesName.join(", "));
        }
       // $("#personStatus").html(checkedNodesName.join(", "));
        var search = FilterGrid();
        $("#kgrdTask").data("kendoListView").dataSource.read(search);
        //if (checkedNodes.length > 0) {
        //    message = "IDs of checked nodes: " + checkedNodes.join(",");
        //} else {
        //    message = "No nodes checked.";
        //}

        //$("#result").html(message);
    }
    function onModuleCheck() {
        var checkedNodes = [], checkedNodesName = [],
            treeView = $("#moduletreeview").data("kendoTreeView");
        checkedNodeIds(treeView.dataSource.view(), checkedNodes, checkedNodesName);

        $("#ModuleId").val(checkedNodes.join(","));
        if (checkedNodesName.length == 0 || checkedNodesName.includes("All")) {
            $("#moduleStatus").html("All");
        }
        else {
            $("#moduleStatus").html(checkedNodesName.join(", "));
        }
       // $("#moduleStatus").html(checkedNodesName.join(", "));
        var search = FilterGrid();
        $("#kgrdTask").data("kendoListView").dataSource.read(search);

    }
    function OnIframStepEditLoad(obj) {
        var taskId = obj.getAttribute('id');
        obj.style.height = obj.contentWindow.document.body.scrollHeight + 80 + 'px';
        var div = $("#step-iframe-edit-div-" + taskId);
        RemoveAjaxLoader(div);
    }

    //$(function () {
    //    $(".k-add-button").click(function (e) {
    //        $("#serviceAdd").css("display", "none");
    //        var listView = $("#kgrdTask").data("kendoListView");
    //        listView.add();
    //        e.preventDefault();
    //    });
    //});

   function OnTaskCreate() {
        var portalId = $('#GlobalPortalId').val();
       var modulecodes = $("#ModuleCode").val();
       var url = '@Url.Action("SelectTaskTemplate", "NtsTask",new {area="Cms" })?cbm=OnAfterTaskCreate&templateCode=' + $("#TemplateMasterCode").val() + '&categoryCode=' + $("#TemplateCategoryCode").val() + '&moduleCodes=' + modulecodes + '&portalNames=' + '@Model.PortalNames';//'/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=Create&dataAction=Create&pageName=Project&portalId=' + portalId /*+ '&prms=' + prms*/;

        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(SharedResource["CreateTask"])', Width: 1000, Height: 600 });
        return false;
    }
  function backtoNtsTaskIndex(prm) {
         var portalId = $('#GlobalPortalId').val();
        var tempid = prm.tempid;

      var win = GetMainWindow();
      win.CloseWindow();
      return false;

         var url = '@Url.Action("NtsTaskPage", "NtsTask", new { @area = "Cms" })?templateid=' + tempid + '&lo=Popup&cbm=OnAfterTaskCreate&pageId=bcf41d01-77ce-4681-a501-a3c89161e003' /*+ portalId +'&pageName=NtsTaskTest'*/;
         var win = GetMainWindow();
         win.iframeOpenUrl = url;
         win.OpenWindow({ Title:  '@Html.Raw(SharedResource["CreateTask"])', Width: 1000, Height: 600});
    }
    function OnAfterTaskCreate() {
     resetParam();
     var listView = $("#kgrdTask").data("kendoListView");
     var search = FilterGrid();
     listView.dataSource.read(search);
     var win = GetMainWindow();
     win.CloseWindow();
    }

  //  function CloseTask(redirect, tempId) {
  //      var wnd = $("#kiframepopupwindow").data("kendoWindow");
  //      wnd.close();
  //      if (redirect) {
  //          $("#taskAdd").css("display", "none");
  //          RenderAddEdit(tempId);
  //      }
  //  }

    function CloseTask(redirect, tempId) {
        var wnd = $("#kiframepopupwindow").data("kendoWindow");
        wnd.close();
        if (redirect) {
            window.location.href = "/nts/task/Manage?templateMasterId=" + tempId;
        }
    }


    function SetTemplateAction(action) {
$("#TemplateAction").val(action);
//if (action == '@NtsActionEnum.Submit') {
//var shared = JSON.stringify($("#kgrdTaskShared").data().kendoGrid.dataSource.view());
//$("#ServiceSharedList").val(shared);
//}
//if (action == '@NtsActionEnum.Submit' || action == '@NtsActionEnum.Draft' || action == '@NtsActionEnum.EditAsNewVersion') {
//    if ($("#kgrdTaskSteps").length>0) {
//        var tasks = JSON.stringify($("#kgrdTaskSteps").data().kendoGrid.dataSource.data());
//        $("#ServiceTasks").val(tasks);
//    }
//    if ($("#kgrdTaskPlusService").length > 0) {
//        var services = JSON.stringify($("#kgrdTaskPlusService").data().kendoGrid.dataSource.data());
//        $("#ServicePlusServices").val(services);
//    }
//}
return true;
    }



    function ModuleFilter(moduleId, displayName) {
        //resetParam();
        var listView = $("#kgrdTask").data("kendoListView");
        $("#todoheading").html("Task (" + displayName +")");
        $("#moduleStatus").html(displayName);
        $("#ModuleId").val(moduleId);
        listView.dataSource.read(FilterGrid());
    }

    function OtherFilter(moduleName, displayName) {
        if (moduleName != "" && moduleName != null && moduleName != undefined) {
            //resetParam();
            var listView = $("#kgrdTask").data("kendoListView");
            $("#todoheading").html("Task (" + displayName + ")");
            $("#taskStatus").html(displayName);
            $("#TaskStatus").val(moduleName);
            listView.dataSource.read(FilterGrid());
        }
        else {
            //resetParam();
            var listView = $("#kgrdTask").data("kendoListView");
            $("#todoheading").html("Task (" + displayName + ")");
            $("#taskStatus").html(displayName);
            $("#TaskStatus").val("");
            listView.dataSource.read(FilterGrid());

        }

    }
    function PersonFilter(moduleName, displayName) {
        if (moduleName == "ASSIGN_TO") {
           // resetParam();
            $("#Mode").val("ASSIGN_TO");
            var listView = $("#kgrdTask").data("kendoListView");
            $("#todoheading").html("Task (" + displayName + ")");
            $("#personStatus").html(displayName);
            listView.dataSource.filter({});
            var search = FilterGrid();
            listView.dataSource.read(search);
        }
        else if (moduleName == "ASSIGN_BY") {
           // resetParam();
            $("#Mode").val("ASSIGN_BY");
            var listView = $("#kgrdTask").data("kendoListView");
            $("#todoheading").html("Task (" + displayName + ")");
            $("#personStatus").html(displayName);
            listView.dataSource.filter({});
            var search = FilterGrid();
            listView.dataSource.read(search);
        } else if (moduleName == "SHARE_TO") {
           // resetParam();
            $("#Mode").val("SHARE_TO");
            var listView = $("#kgrdTask").data("kendoListView");
            $("#todoheading").html("Task (" + displayName + ")");
            $("#personStatus").html(displayName);
            listView.dataSource.filter({});
            var search = FilterGrid();
            listView.dataSource.read(search);
        }
        else {
           // resetParam();
            var listView = $("#kgrdTask").data("kendoListView");
            $("#todoheading").html("Task (" + displayName + ")");
            $("#personStatus").html(displayName);
           // $("#TaskStatus").val(moduleName);
            $("#Mode").val("");
            listView.dataSource.read(FilterGrid());

        }

    }

    function OpenTask(taskId, serviceId, code, tempCode) {
        debugger
       @*if (serviceId != null) {
var id = serviceId;

            var source = '@RequestSourceEnum.View.ToString()';
            var action = '@DataActionEnum.View.ToString()';
            var pagename = "NtsServicePage";
        if (code ==='SERVICE_STATUS_DRAFT') {
                source = "Edit";
                action = "Edit";
        }
        var portalId = window.parent.$('#GlobalPortalId').val();

           var url = '/Cms/Page?lo=Popup&pageType=Service&cbm=OnAfterServiceCreate&source=' + source + '&dataAction=' + action + '&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
           win.iframeOpenUrl = url;--> '@Url.Action("NtsServicePage", "NtsService", new { @area = "Cms" })?lo=Popup&cbm=OnAfterServiceCreate&serviceId=' + id + '&dataAction=' + action + '&portalId=' + portalId+'&pageName=NtsServiceTest';
        <!--win.OpenWindow({ Title: '@Html.Raw(SharedResource["Task"])', Width: 1200, Height: 600 });
        return false;

       }*@
      // else
       //{

        var id = taskId;

            var source = '@RequestSourceEnum.View.ToString()';
            var action = '@DataActionEnum.View.ToString()';
            var pagename = "NtsTaskPage";
        if (code ==='TASK_STATUS_DRAFT') {
                source = "Edit";
                action = "Edit";
        }
        var portalId = window.parent.$('#GlobalPortalId').val();

           var url = '/Cms/Page?lo=Popup&pageType=Task&cbm=OnAfterTaskCreate&source=' + source + '&dataAction=' + action + '&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
           win.iframeOpenUrl = url; @*'@Url.Action("NtsTaskPage", "NtsTask", new { @area = "Cms" })?lo=Popup&cbm=OnAfterTaskCreate&taskId=' + id + '&dataAction=' + action + '&portalId=' + portalId +'&pageName=NtsTaskTest&pageId=bcf41d01-77ce-4681-a501-a3c89161e003';*@
        win.OpenWindow({ Title:  '@Html.Raw(SharedResource["Task"])', Width: 1200, Height: 600 });
        return false;
        //}
    }
    function DeleteTask(id, serviceId) {
        var flag = confirm('@Html.Raw(Resource["DoyoureallywanttodeletetheTask?"])');
        if (flag) {
            alert(id);
            alert(serviceId);
            $.ajax({
                url: '/cms/NtsTask/DeleteTask?taskId='+id+'&serviceId=' + serviceId,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    kendo.alert("@SharedResource["DeletedSuccessfully"]");
                    $("#kgrdTask").data("kendoListView").dataSource.read();

                },
                error: function (ert) {
                    $("#kgrdTask").data("kendoListView").dataSource.read();


                }
            });
            return false;
        }
        return false;
    }

    function FillSharingCount() {

    }


    function FillCommentCount() {

    }
      function OnSwitchView(switchTo) {

        var url = '@Url.Action("SetTaskGridViewMode", "User",new { @area="admin"})?view=' + switchTo;
                $.ajax({
                    url: url,
                    type: 'GET',
                    cache: false,
                    //async: false,
                    success: function (data) {
                        if ('@Model.RequestSource' == 'DMS') {
                            document.location.href="/nts/task/index?moduleName=DMS&rs=DMS";
                        }
                        else {
                            document.location.href="/nts/task/index";
                        }

                    },
                    error: function (errData) {
                        OnError(errData);
                    }
                });
    }

     function IframePostbackScript(res, type) {

         var win = GetMainWindow();
         win.CloseWindow();
         return false;
        $("#kgrdTask").data("kendoListView").dataSource.read();
    }

    function OnSelectWBSItem(id) {
     //   alert(id);
        window.parent.CloseGeneralSelect(id, '@ReferenceTypeEnum.NTS_Task');
    }
</script>


<div class="banner-container">
    <img style="width:100%; height:100px" src="~/images/HRBanners/Task Home.jpeg" />
    <div class="banner-text">@Resource["TaskHome"]</div>
</div>
<div class="container-fluid body-content">

    <div class="row ">

        <div class="col-md-3 dahboard-height" id="LeftPanel">

            <ul>
                <div class="iconwothtext" onclick="filterinbox()">
                    <div class="k-icon k-i-inbox" style="font-size:18px; color: gray"></div> <div class="leftmenustyle" style="padding-left: 10px">
                        @Resource["Home"]
                    </div><span id="tclose" class="k-icon k-i-arrow-chevron-right" style="font-size: 22px; padding-left: 55px; color: lightgrey"></span>
                </div>
                <div class="iconwothtext" onclick="filtertoday()">
                    <div class="k-icon k-i-calendar-date" style="font-size:18px; color: gray"></div> <div class="leftmenustyle" style="padding-left: 10px">
                        @Resource["PendingTillToday"]
                    </div><span id="tclose" class="k-icon k-i-arrow-chevron-right" style="font-size: 22px; padding-left: 55px; color: lightgrey"></span>
                </div>
                <div class="iconwothtext" onclick="filternextweek()">
                    <div class="k-icon k-i-calendar" style="font-size:18px; color: gray"></div> <div class="leftmenustyle" style="padding-left: 10px">
                        @Resource["EndinginNext7days"]
                    </div><span id="tclose" class="k-icon k-i-arrow-chevron-right" style="font-size: 22px; padding-left: 55px; color: lightgrey"></span>
                </div>
                @if (Model.RequestSource == "DMS")
                {

                }
                else
                {
            <div style="background-color: #fafafa;">
                @*@(Html.Kendo().PanelBar().Name("kpnlbarActiveService")
        .ExpandMode(PanelBarExpandMode.Multiple)
        .Items(panelbar =>
        {
        panelbar.Add().Text(@Resource["Modules"]).Expanded(true).Content(@<text>*@

                <ul id="panelbar1">
                    <li class="k-state-active">
                        <span class="k-link k-state-selected">@Resource["Modules"]</span>
                        <hr />
                        <div class="">
                            <label class="col-md-12" style="font-weight:bold">
                                Filtered By Module:
                            </label><span id="moduleStatus" class="col-md-12">&nbsp;@ViewBag.Module</span>
                            <div class="col-md-12">
                                <a href="#" onclick="resetModuleParam();">Clear Filter</a>
                            </div>
                        </div>
                        <div style="background-color: #fafafa;">
                            @*@if (Model.ModuleList.Count() > 0)
                                             {
                                                 @if (Model.ModuleList.Count() > 1)
                                                 {
                                                     <div class="iconwothtext" style="background-color: #fafafa;" onclick="ModuleFilter('', 'All')">
                                             <div class="k-icon k-i-blur" style="font-size:14px; color: lightgray"></div> <div class="leftmenustyle" style="padding-left: 10px; background-color: #fafafa;font-size:13px">
                                                All Modules
                                             </div>
                                         </div>
                                                 }

                    @foreach (var der in Model.ModuleList)
                    {

                                         <div class="iconwothtext" style="background-color: #fafafa;" onclick="ModuleFilter('@der.Id', '@der.Name')">
                                             <div class="k-icon k-i-circle" style="font-size:14px; color: lightgray"></div> <div class="leftmenustyle" style="padding-left: 10px; background-color: #fafafa;font-size:13px">
                                                 @der.Name
                                             </div>
                                         </div>

                    }

                                             }*@
                            @*   @(Html.Kendo().TreeView()
                        .Name("moduletreeview")
                      //.DataTextField("Name")
                      .TemplateId("moduleTemplate")
                          .Checkboxes(e => e.CheckChildren(true)
                                         //     .Template("# if (item.Type=='Child') { #" +
                                         //    "<input type='checkbox' #= item.checked ? 'checked' : '' #>" +
                                         //"# } #")
                                         )
                           .Events(events => events
                        .Check("onModuleCheck").DataBound("OnModuleDataBound"))
                        .DataSource(dataSource => dataSource
                            .Read(read => read
                                .Action("GetModuleTreeList", "NtsService",new { area="Cms", moduleCodes = Model.ModuleCode })
                            )
                        )
                    )*@

                            <div id="moduleTree"></div>


                            <script id="moduleTemplate" type="text/kendo-ui-template">
                                #: item.DisplayName #

                            </script>

                        </div>
                        @*</text>);
                }))*@

                    </li>
                </ul>
            </div>
            }
            <hr />
            <div style="background-color: #fafafa;">
                @*@(Html.Kendo().PanelBar().Name("kpnlbarFilter")
        .ExpandMode(PanelBarExpandMode.Multiple)
        .Items(panelbar =>
        {
            panelbar.Add().Text(@SharedResource["StatusFilters"]).Expanded(true).Content(@<text>*@


                <ul id="panelbar2">
                    <li class="k-state-active">
                        <span class="k-link k-state-selected">@Resource["StatusFilters"]</span>
                        <hr />
                        <div class="">
                            <label class="col-md-12" style="font-weight:bold">
                                Filtered By Status:
                            </label><span id="taskStatus" class="col-md-12">&nbsp;@ViewBag.Status</span>
                            <div class="col-md-12">
                                <a href="#" onclick="resetStatusParam();">Clear Filter</a>
                            </div>
                        </div>
                        <div style="background-color: #fafafa;">
                            @*<div class="iconwothtext" style="background-color: #fafafa;" onclick="OtherFilter('', 'All')">
                        <div class="k-icon k-i-blur" style="font-size:14px; color: lightgray"></div> <div class="leftmenustyle" style="padding-left: 10px; background-color: #fafafa;font-size:13px">
                           All Status
                        </div>
                    </div>*@
                            @*@foreach (var der in EnumExtension.SelectListFor(typeof(TaskSearchHomeByStatusEnum)))
                            {

                            <div class="iconwothtext" style="background-color: #fafafa;" onclick="OtherFilter('@der.Value.ToString()', '@der.Text.ToString()')">
                                <div class="k-icon k-i-blur" style="font-size:14px; color: lightgray"></div> <div class="leftmenustyle" style="padding-left: 10px; background-color: #fafafa;font-size:13px">
                                    @der.Text.ToString() @SharedResource["Task"]
                                </div>
                            </div>

                    }*@
                            @*@(Html.Kendo().TreeView()
                        .Name("statustreeview")
                      //.DataTextField("Name")
                      .TemplateId("statusTemplate")
                          .Checkboxes(e => e.CheckChildren(true)
                                         //     .Template("# if (item.Type=='Child') { #" +
                                         //    "<input type='checkbox' #= item.checked ? 'checked' : '' #>" +
                                         //"# } #")
                                         )
                           .Events(events => events
                        .Check("onStatusCheck").DataBound("OnStatusDataBound"))
                        .DataSource(dataSource => dataSource
                            .Read(read => read
                                .Action("GetEnumAsTreeList", "Home",new { area="", enumType = "TaskSearchHomeByStatusEnum" })
                            )
                        )
                    )*@
                            <div id="statusTree"></div>
                            <script id="statusTemplate" type="text/kendo-ui-template">
    #: item.DisplayName #
    @*# if (!item.items) { #
        <span class='k-icon k-i-close'></span>
    # } #*@
                            </script>

                        </div>
                        @*</text>);
                }))*@

                    </li>
                </ul>
            </div>
            <hr />
            <div style="background-color: #fafafa;">
                @*@(Html.Kendo().PanelBar().Name("kpnlbarPersonFilter")
        .ExpandMode(PanelBarExpandMode.Multiple)
        .Items(panelbar =>
        {
            panelbar.Add().Text(@SharedResource["PersonFilters"]).Expanded(true).Content(@<text>*@

                <ul id="panelbar3">
                    <li class="k-state-active">
                        <span class="k-link k-state-selected">@Resource["PersonFilters"]</span>
                        <hr />
                        <div class="">
                            <label class="col-md-12" style="font-weight:bold">
                                Filtered by Role:
                            </label><span id="personStatus" class="col-md-12">&nbsp;@ViewBag.Person</span>
                            <div class="col-md-12">
                                <a href="#" onclick="resetRoleParam();">Clear Filter</a>
                            </div>
                        </div>
                        <div style="background-color: #fafafa;">
                            @*<div class="iconwothtext" style="background-color: #fafafa;" onclick="PersonFilter('', 'All')">
                                                                                                                                                                                        <div class="k-icon k-i-blur" style="font-size:14px; color: lightgray"></div> <div class="leftmenustyle" style="padding-left: 10px; background-color: #fafafa;font-size:13px">
                                                                                                                                                                                           All Person
                                                                                                                                                                                        </div>
                                                                                                                                                                                    </div>
                                                                                                                                                                                        @foreach (var der in EnumExtension.SelectListFor(typeof(TaskSearchHomeByPersonEnum)))
                                                                                                                                                                                    {

                                                                                                                                                                                    <div class="iconwothtext" style="background-color: #fafafa;" onclick="PersonFilter('@der.Value.ToString()', '@der.Text.ToString()')">
                                                                                                                                                                                        <div class="k-icon k-i-blur" style="font-size:14px; color: lightgray"></div> <div class="leftmenustyle" style="padding-left: 10px; background-color: #fafafa;font-size:13px">
                                                                                                                                                                                            @der.Text.ToString() @SharedResource["Task"]
                                                                                                                                                                                        </div>
                                                                                                                                                                                    </div>

                                                                                                                                                                            }
                                                                                                                                                                                        @(Html.Kendo().TreeView()
                        .Name("persontreeview")
                      //.DataTextField("Name")
                      .TemplateId("personTemplate")
                          .Checkboxes(e => e.CheckChildren(true)
                                         //     .Template("# if (item.Type=='Child') { #" +
                                         //    "<input type='checkbox' #= item.checked ? 'checked' : '' #>" +
                                         //"# } #")
                                         )
                           .Events(events => events
                        .Check("onPersonCheck").DataBound("OnPersonDataBound"))
                        .DataSource(dataSource => dataSource
                            .Read(read => read
                                .Action("GetEnumAsTreeList", "Home",new { area="", enumType= "TaskSearchHomeByPersonEnum" })
                            )
                        )
                    )*@
                            <div id="roleTree"></div>

                            <script id="personTemplate" type="text/kendo-ui-template">
    #: item.DisplayName #
    @*# if (!item.items) { #
        <span class='k-icon k-i-close'></span>
    # } #*@
                            </script>

                        </div>
                        @*</text>);
                }))*@

                    </li>
                </ul>
            </div>
            <hr />
            </ul>
        </div>
        <div class="col-md-9">
            <div class="sectionbox render">
                <div id="MainPost" style="background-color:white; border:1px solid #f1f1f1">
                    @*<div class="head-image">
            <img class="head-img" src="~/images/TaskHomeBanner.png" />
        </div><br />*@
                    @*<div class="row" style="padding-left:15px;">
            <div class="col-3">
                <label  style="font-weight:bold">
                    Filtered by Module:
                </label><span id="moduleStatus">&nbsp;@ViewBag.Module</span>
            </div>
            <div class="col-3">
                <label  style="font-weight:bold">
                    Filtered by Status:
                </label><span id="taskStatus">&nbsp;@ViewBag.Status</span>
            </div>
            <div class="col-3">
                <label style="font-weight:bold">
                    Filtered by Person:
                </label><span id="personStatus">&nbsp;@ViewBag.Person</span>
            </div>
            <div class="col-3">
                <a href="#" onclick="resetParam();">Clear All Filter</a>
            </div>





        </div>*@
                    <div class="row">
                        <div class="col-md-3">
                            @*<div class="btn-group" role="group">
                    <a href="#" class="btn btn-sm btn-primary">List View</a>
                        <a href="javascript: void(0); onclick=OnSwitchView('Grid')" class="btn btn-sm btn-default">Switch To Grid View</a>
                </div>*@
                            <div class="iconwothtext" @*style="padding:12px"*@ id="taskAdd">
                                <div class="k-add-button" style="font-size:20px; color:#e55705; font-weight:lighter; padding-bottom:2px; padding-left:23px;">+</div> <div class="leftmenustyle" onclick="OnTaskCreate()">
                                    @SharedResource["AddTask"]
                                </div>
                            </div>
                        </div>
                        <div class="col-md-3">

                        </div>
                        <div class="col-md-5">
                            <input id="mysearch2" type="search" placeholder="@SharedResource["Search"]" class="form-control" style="border-radius: 30px;">
                        </div>
                        <div class="col-md-1">
                            <div class="btn-group">
                                <a class="k-icon k-i-more-horizontal dropdown-toggle" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="font-size:20px; color: gray">
                                </a>
                                <ul class="dropdown-menu" style="position:absolute;top:20px;right:0px;left:auto; min-width:180px; color:gray">
                                    <div class="iconwothtext" style="padding-left:10px" onclick="sortbydate()">
                                        <span class="k-icon k-i-calendar-date" style="font-size:18px"> </span> <div class="leftmenustyle" style="font-size:13px">
                                            @Resource["SortbyDate"]
                                        </div>
                                    </div>
                                    <div class="iconwothtext" style="padding-left:10px" onclick="sortbyname()">
                                        <span class="k-icon k-i-convert-lowercase" style="font-size:18px"> </span> <div class="leftmenustyle" style="font-size:13px">
                                            @Resource["SortbySubject"]
                                        </div>
                                    </div>
                                    <div class="iconwothtext" style="padding-left:10px" onclick="sortbyowner()">
                                        <span class="k-icon k-i-user" style="font-size:18px"> </span> <div class="leftmenustyle" style="font-size:13px">
                                            @Resource["SortbyOwner"]
                                        </div>
                                    </div>
                                    <div class="iconwothtext" style="padding-left:10px" onclick="sortbyassignee()">
                                        <span class="k-icon k-i-user" style="font-size:18px"> </span> <div class="leftmenustyle" style="font-size:13px">
                                            @Resource["SortbyAssignee"]
                                        </div>
                                    </div>
                                    <div class="iconwothtext" style="padding-left:10px" onclick="filterreset()">
                                        <span class="k-icon k-i-reset" style="font-size:18px"> </span> <div class="leftmenustyle" style="font-size:13px">
                                            @SharedResource["Reset"]
                                        </div>
                                    </div>
                                    <!-- <div class="iconwothtext" style="padding-left:10px" onclick="filtercompleted()">
                        <span class="k-icon k-i-check-outline" style="font-size:24px"> </span> <div class="leftmenustyle" style="font-size:18px">
                            Show completed services
                        </div>
                    </div>
                    <div class="iconwothtext" style="padding-left:10px" onclick="filteroverdue()">
                        <span class="k-icon k-i-clock" style="font-size:24px"> </span> <div class="leftmenustyle" style="font-size:18px">
                            Show overdue services
                        </div>
                    </div>
                    <div class="iconwothtext" style="padding-left:10px" onclick="filterinprogress()">
                        <span class="k-icon k-i-rotate" style="font-size:24px"> </span> <div class="leftmenustyle" style="font-size:18px">
                            Show in progress services
                        </div>
                    </div>
                    <div class="iconwothtext" style="padding-left:10px" onclick="filterreset()">
                        <span class="k-icon k-i-reset" style="font-size:24px"> </span> <div class="leftmenustyle" style="font-size:18px">
                            Reset
                        </div>
                    </div>-->
                                </ul>
                            </div>
                        </div>
                    </div>

                    <img width="150" height="50" id="add-step-loader" src="@Url.Content(String.Format("~/Images/loadingStep.gif"))" style="display:none">
                    <div class="row">

                        <div class="col-lg-12">
                            <div id="step-edit-div-add"></div>
                        </div>
                    </div>

                    <hr style="margin-top:5px !important">
                    @*@(Html.Kendo().ListView<TaskViewModel>().Name("kgrdTask")
                    .TagName("div")
                    .ClientTemplateId("templateTask")
                    .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(true)
                    .ButtonCount(5))
                    .AutoBind(true)
                    .DataSource(dataSource => dataSource
                            .Ajax()
                            .Read(read => read.Action("ReadTaskHomeData", "NtsTask", new { area = "Cms" }).Data("FilterGrid"))
                            .PageSize(20)
                            //.Events(events => events.Error("OnError"))
                            .Model(model => model.Id(p => p.Id))
                            )
        )*@

                    <div id="kgrdTask"></div>
                    <div id="pager"></div>

                    @Html.HiddenFor(x => x.Text)
                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.Mode)
                    @Html.HiddenFor(x => x.TaskStatus)
                    @Html.HiddenFor(x => x.ModuleId)
                    @Html.HiddenFor(x => x.ModuleCode)
                    @Html.HiddenFor(x => x.UserId)
                    @Html.HiddenFor(x => x.TemplateCategoryCode)
                    @Html.HiddenFor(x => x.TemplateMasterCode)
                    @Html.HiddenFor(x => x.StartDate)
                    @Html.HiddenFor(x => x.DueDate)
                    @Html.HiddenFor(x => x.ClosedDate)
                    @Html.HiddenFor(x => x.ReminderDate)
                    @Html.HiddenFor(x => x.PortalNames)
                </div>
            </div>
        </div>

    </div>
</div>
@*@(Html.Kendo().Dialog()
                                                                                            .Name("reason")
                                                                                            .Title("Reason")
                                                                                            .Content(string.Concat(
                                                                                            @Html.TextArea("CommentTemp", new { @class = "form-control hr-xx-large", @rows = "7" }).ToHtmlString(),
                                                                                            @"<div style='display:none;color:red;' id='commentReq'></div>"
                                                                                            )
                                                                                            )
                                                                                            .Width(460)
                                                                                            .Height(350)
                                                                                            .Modal(true)
                                                                                            .Visible(false)
                                                                                            .Actions(actions =>
                                                                                            {
                                                                                                actions.Add().Text("Cancel");
                                                                                                actions.Add().Text("Save").Primary(true).Action("OnReasonSave");
                                                                                            })
                                                                                            .Events(ev => ev.Close("onDialogueClose").Open("onDialogueOpen"))
    )*@
<script type="text/x-kendo-tmpl" id="templateTask">
    <div>
        <div class="row" style="padding:3px" id="step-template-#=Id#">
            <div class="col-md-2">
                <img width="40" height="40" src="@Url.Content(String.Format("~/Images/S.png", "#=TaskOwnerFirstLetter#"))">
    @if (Model.RequestSource == "EmailTask")
    {
      @*@(Html.Kendo().RadioButton().Name("select-wbs").Checked(false).Label("")
     .HtmlAttributes(new { onchange = "OnSelectWBSItem(\"#:Id#\");",@style="margin-left:25px" })
      )*@
        <div class="form-check">
            <input class="form-check-input" type="radio" style="margin-left:25px" name="select-wbs" id="select-wbs" onchange="OnSelectWBSItem('#:Id#');">
        </div>
    }

            </div>
            <div class="col-md-7">
                <div class="edit-buttons">

                    <span class="fromcolor" style="font-size: 1.1em; color:darkblue; display: inline-block;" >#if(TaskSubject != null) {# #:TaskSubject# #} else{# 'NA' #}#</span>
                    @*<span class="fromcolor" style="font-size: 12px; color:gray; display: inline-block;">to</span>
                    <span class="fromcolor" style="font-size: 1.1em; color:darkblue; display: inline-block;" title="@Html.Raw(Resource["AssignedTo"])">#=AssigneeDisplayName#</span>*@




                    <span style="font-size:1.1em;border-radius:5px;padding:1px;background-color:lightgray; text-align:center;white-space:nowrap;
">#=TaskNo#</span>
                </div>

                <div class="edit-buttons">
                    <span style="font-size: 1.1em; color:black">#=GetTaskOwner# to #=AssigneeDisplayName#</span>
                    @*<a class="k-button" href="javascript:RenderTaskEdit(#:Id#);" title="Quick View"><span class="k-icon k-i-eye" style="font-size:12px"></span></a>
        <a class="k-button k-button-icontext" href="javascript:OpenTask(#:Id#, #:ServiceId#);" title="Classic View/Edit"><span class="k-icon k-i-edit" style="font-size:12px"></span></a>*@
                    <a class="k-button k-button-icontext" href="javascript:OpenTask('#:Id#', '#:ParentServiceId#','#:TaskStatusCode#','#:TemplateMasterCode#');" title="@Html.Raw(Resource["ClassicView/Edit"])"><span class="fad fa-pen" style="font-size:12px; color:dimgrey"></span></a>
                    <a class="k-button k-button-icontext" href="javascript:DeleteTask('#:Id#', '#:ParentServiceId#','#:TaskStatusCode#');" title="@Html.Raw(SharedResource["Delete"])"><span class="fad fa-trash" style="font-size:12px; color:dimgrey"></span></a>

                </div>

                <div style="height: 100%;  width: 100%;  display: flex;  align-items: center;  justify-content: center;">
                    <img width="150" height="50" id="step-edit-loader-#=Id#" src="@Url.Content(String.Format("~/Images/loadingStep.gif"))" style="display:none">
                </div>
            </div>
            <div class="col-md-3">
                <div style="text-align:right; color:forestgreen; font-size: 1em;">#=TaskStatusName#</div>
                <div style="font-size: 1.1em; text-align:end; color:chocolate">#=DueDateDisplay#</div>
            </div>

        </div>
        <div id="step-edit-div-#=Id#"></div>
        <hr style="margin-top:5px !important">


    </div>
</script>
