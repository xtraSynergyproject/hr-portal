@using CMS.UI.ViewModel;
@using CMS.Common;

@{
    ViewData["Title"] = "Portal";
   // Layout = null;
    //Layout = "/Views/Shared/_PopupLayout.cshtml";
}
@inject CMS.Common.IUserContext _userContext
@model TaskTemplateViewModel

<style>

    .style-myiconimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-mybgimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    
    .jdp-input {
        width:100%!important;
    }
    .k-textbox {
        border: none !important;
    }
    .form-label-group {
        position: relative;
        margin-bottom: 0px;
    }
    .cms-manageportal-footer {
/*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }
    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }
    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }
/*    k-colorpicker {
        width: 100px;
    }

    .k-colorpicker .k-selected-color {
            width: 100px;
    }*/
    .richText .richText-editor {
        height: 150px;
    }
</style>
<script>
    function onFileUploadSuccessBanner(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-mybannerimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#BannerFileId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onFileUploadSuccessIcon(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-myiconimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#IconFileId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onFileUploadSuccessBackground(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-mybgimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#BackgroundFileId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onBackgroundDel() {
        //  
        //        alert("Banner Delete");
        $(".style-mybgimage").attr("src", "/images/200.png");
        $("#BackgroundFileId").val('');
        //var bgupload = $("#files3").data("kendoUpload");
        ////console.log(logoupload);
        //bgupload.clearFile(function (file) { return true; });
        $("#bgiconFile").dmUploader("reset");

    }
    function onBannerDel() {
        //   
        //        alert("Banner Delete");
        $(".style-mybannerimage").attr("src", "/images/200.png");
        $("#BannerFileId").val('');
        //var bannerupload = $("#files2").data("kendoUpload");
        ////console.log(bannerupload);
        //bannerupload.clearFile(function (file) { return true; });
        $("#bannericonFile").dmUploader("reset");

    }

    function onIconDel() {
        // 
        //        alert("Banner Delete");
        $(".style-myiconimage").attr("src", "/images/200.png");
        $("#IconFileId").val('');
        //var iconupload = $("#files1").data("kendoUpload");
        ////console.log(bannerupload);
        //iconupload.clearFile(function (file) { return true; });
        $("#iconFile1").dmUploader("reset");
    }
    function onchangetype(e) {
        debugger;
        //var assigneeType = $("#TaskTemplate").data("kendoRadioGroup").value();
        var assigneeType = $('input[name=TaskTemplate]:checked').val();

        if (assigneeType == 1) {
            $("#CreateNew").show();
            $("#UseExisting").hide();
        }
        else if (assigneeType == 2) {
            $("#CreateNew").hide();
            $("#UseExisting").show();
        }
    }

    function formTypeChange() {
        var data = $("#FormType").data("kendoDropDownList").value();
        debugger;
        jsonObj = JSON.parse(JSON.stringify(builder.instance.schema, null, 4));
        console.log(data);
        if (data == "Form") {
            //form
            jsonObj.display = "form";
        } else if (data == "Wizard") {
            //Wizard
            jsonObj.display = "wizard";
        }

        builder = new Formio.FormBuilder(document.getElementById("builder"), jsonObj, {
            builder: {
                custom: {
                    title: 'Chart',
                    weight: 10,
                    components: {
                        chartjs: {
                            title: 'Chart',
                            key: 'chartJS',
                            icon: 'terminal',
                            schema: {
                                label: 'Chart JS',
                                type: 'htmlelement',
                                key: 'chartJs',
                                input: true
                            }
                        },
                    }
                },

            }
        }, { noDefaultSubmitButton: true });
    }

</script>
<div class="main-container" style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

    <form asp-controller="Template" asp-action="ManageTask" method="post" class="form-horizontal" data-ajax-begin="onManageTaskAjaxBegin" data-ajax-complete="onManageTaskAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onManageTaskAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div id="validation-summary-managepagetask" class="text-danger" asp-validation-summary="All"></div>
        <div class="row pad-10">
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableIndexPage).Label("Enable Index Page"))*@
                <input type="checkbox" asp-for="EnableIndexPage" id="EnableIndexPage" />
                <label>Enable Index Page</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableTaskNumberManual).Label("Enable Task Number Manual"))*@
                <input type="checkbox" asp-for="EnableTaskNumberManual" id="EnableTaskNumberManual" />
                <label>Enable Task Number Manual</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableAttachment).Label("Enable Attachment"))*@
                <input type="checkbox" asp-for="EnableAttachment" id="EnableAttachment" />
                <label>Enable Attachment</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableComment).Label("Enable Comment"))*@
                <input type="checkbox" asp-for="EnableComment" id="EnableComment" />
                <label>Enable Comment</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableTimeEntry).Label("Enable Time Entry"))*@
                <input type="checkbox" asp-for="EnableTimeEntry" id="EnableTimeEntry" />
                <label>EnableTimeEntry</label>
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="EnableSaveAsDraft" type="checkbox" style="margin-right:5px;" />
                <label>Enable Save As Draft</label>
            </div>
            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="SaveAsDraftText" type="text" placeholder="Save As Draft Text" class="form-control" />
                    <label for="SaveAsDraftText">Save As Draft Text</label>
                </div>

            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="SaveAsDraftCss" type="text" placeholder="Save As Draft Css" class="form-control" />
                    <label for="SaveAsDraftCss">Save As Draft Css</label>
                </div>

            </div>
            @*<div class="col-3" style="margin-right:5px;">
                <input asp-for="SaveAsDraftText" type="text" placeholder="Save As Draft Text" class="form-control" />
            </div>
            <div class="col-3">
                <input asp-for="SaveAsDraftCss" type="text" placeholder="Save As Draft Css" class="form-control" />
            </div>*@
        </div>



        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="EnableRejectButton" type="checkbox" style="margin-right:5px;" />
                <label>Enable Reject Button</label>
            </div>

            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="RejectButtonText" type="text" placeholder="Reject Button Text" class="form-control" />
                    <label for="RejectButtonText">Reject Button Text</label>
                </div>

            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="RejectButtonCss" type="text" placeholder="Reject Button Css" class="form-control" />
                    <label for="RejectButtonCss">Reject Button Css</label>
                </div>

            </div>
            @*<div class="col-3" style="margin-right:5px;">
                <input asp-for="RejectButtonText" type="text" placeholder="Reject Button Text" class="form-control" />
            </div>
            <div class="col-3">

                <input asp-for="RejectButtonCss" type="text" placeholder="Reject Button Css" class="form-control" />
            </div>*@

        </div>

        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="EnableCancelButton" type="checkbox" style="margin-right:5px;" />
                <label>Enable Cancel Button</label>
            </div>
            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="CancelButtonText" type="text" placeholder="Cancel Button Text" class="form-control" />
                    <label for="CancelButtonText">CancelButtonText</label>
                </div>

            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="CancelButtonCss" type="text" placeholder="Cancel Button Css" class="form-control" />
                    <label for="CancelButtonCss">Cancel Button Css</label>
                </div>

            </div>

        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">

            </div>
            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="CompleteButtonText" type="text" placeholder="Complete Button Text" class="form-control" />
                    <label for="CompleteButtonText">Complete Button Text</label>
                </div>

            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="CompleteButtonCss" type="text" placeholder="Complete Button Css" class="form-control" />
                    <label for="CompleteButtonCss">Complete Button Css</label>
                </div>

            </div>
            @*<div class="col-3" style="margin-right:20px;">
                <input asp-for="CompleteButtonText" type="text" placeholder="Complete Button Text" class="form-control" />
            </div>
            <div class="col-3">
                <input asp-for="CompleteButtonCss" type="text" placeholder="Complete Button Css" class="form-control" />
            </div>*@
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="EnableBackButton" type="checkbox" style="margin-right:5px;" />
                <label>Enable Back Button</label>
            </div>
            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="BackButtonText" type="text" placeholder="Back Button Text" class="form-control" />
                    <label for="BackButtonText">Back Button Text</label>
                </div>

            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="BackButtonCss" type="text" placeholder="Back Button Css" class="form-control" />
                    <label for="BackButtonCss">Back Button Css</label>
                </div>

            </div>
            @*<div class="col-3" style="margin-right:5px;">
                <input asp-for="BackButtonText" type="text" placeholder="Back Button Text" class="form-control" />
            </div>
            <div class="col-3">

                <input asp-for="BackButtonCss" type="text" placeholder="Back Button Css" class="form-control" />
            </div>*@

        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="IsRejectReasonRequired" type="checkbox" style="margin-right:5px;" />
                <label>Reject Reason Required?</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.IsCancelReasonRequired).Label("Is Cancel Reason Required"))*@
                <input type="checkbox" asp-for="IsCancelReasonRequired" id="IsCancelReasonRequired" />
                <label>Is Cancel Reason Required</label>
            </div>
            <div class="col-4">
                <input asp-for="IsCompleteReasonRequired" type="checkbox" style="margin-right:5px;" />
                <label>Complete Reason Required?</label>
            </div>
        </div>



        @*<div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="EnableIndexPage" type="checkbox"  style="margin-right:5px;" />
                <label>Enable Index Page</label>
            </div>

            <div class="col-4">
                <input asp-for="EnableTaskNumberManual" type="checkbox"  style="margin-right:5px;" />
                <label>Enable Task Number Manual</label>
            </div>



        </div>

        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="EnableAttachment" type="checkbox"  style="margin-right:5px;" />
                <label>Enable Attachment</label>
            </div>

            <div class="col-3">
                <input asp-for="EnableComment" type="checkbox"  style="margin-right:5px;" />
                <label>Enable Comment</label>
            </div>

        </div>*@

        <div class="row no-gutters pad-10">
            <div class="col-3">


            </div>
            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="SubmitButtonText" type="text" placeholder="Submit Button Text" class="form-control" />
                    <label for="SubmitButtonText">Submit Button Text</label>
                </div>

            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="SubmitButtonCss" type="text" placeholder="Submit Button Css" class="form-control" />
                    <label for="SubmitButtonCss">Submit Button Css</label>
                </div>

            </div>
            @*<div class="col-3" style="margin-right:20px;">
                <input asp-for="SubmitButtonText" type="text" placeholder="Submit Button Text" class="form-control" />
            </div>
            <div class="col-3">
                <input asp-for="SubmitButtonCss" type="text" placeholder="Submit Button Css" class="form-control" />
            </div>*@
        </div>



        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="IsSubjectMandatory" type="checkbox" style="margin-right:5px;" />
                <label>Is Subject Mandatory</label>
            </div>
            <div class="col-3" style="margin-right:5px;">
                <div class="form-label-group">
                    <input asp-for="SubjectText" type="text" placeholder="Subject Text" class="form-control" />
                    <label for="SubjectText">Subject Text</label>
                </div>
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="IsSubjectUnique" type="checkbox" style="margin-right:5px;" />
                <label>Is Subject Unique</label>
            </div>
            <div class="col-3">

            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="IsDescriptionMandatory" type="checkbox" style="margin-right:5px;" />
                <label>Is Description Mandatory</label>
            </div>

            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="DescriptionText" type="text" placeholder="Description Text" class="form-control" />
                    <label for="DescriptionText">Description Text</label>
                </div>
            </div>
        </div>

        <div class="row no-gutters pad-10">
            <div class="col-3">
            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="TaskNoText" type="text" placeholder="Task No Text" class="form-control" />
                    <label for="TaskNoText">Task No Text</label>
                </div>
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
            </div>

            <div class="col-3" style="padding-right:5px;">
                <div class="form-label-group">
                    <input asp-for="OwnerUserText" type="text" placeholder="Owner User Text" class="form-control" />
                    <label for="OwnerUserText">Owner User Text</label>
                </div>
            </div>
            <div class="col-3" style="padding-right:5px;">
                <div class="form-label-group">
                    <input asp-for="RequestedByUserText" type="text" placeholder="Requested By User Text" class="form-control" />
                    <label for="RequestedByUserText">Requested By User Text</label>
                </div>
            </div>
            <div class="col-3" style="padding-right:5px;">
                <div class="form-label-group">
                    <input asp-for="AssignedToUserText" type="text" placeholder="Assigned To User Text" class="form-control" />
                    <label for="AssignedToUserText">Assigned To User Text</label>
                </div>
            </div>
        </div>

        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input asp-for="EnablePrintButton" type="checkbox" style="margin-right:5px;" />
                <label>Enable Print Button</label>
            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="PrintButtonText" type="text" placeholder="Print Button Text" class="form-control" />
                    <label for="PrintButtonText">Print Button Text</label>
                </div>
            </div>
        </div>

        @*<div class="row no-gutters pad-10">
            <div class="col-3">
            </div>
            <div class="col-3">
                <div class="form-label-group">
                    <input asp-for="AssignedToUserText" type="text" placeholder="Assigned To User Text" class="form-control" />
                    <label for="AssignedToUserText">Assigned To User Text</label>
                </div>
            </div>
        </div>*@
        <div class="row no-gutters pad-10">
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HideHeader).Label("Hide Header").HtmlAttributes(new { onchange= "hideTaskHeader();" }))*@
                <input type="checkbox" asp-for="HideHeader" id="HideHeader" onchange="hideTaskHeader();" />
                <label>Hide Header</label>
            </div>
            <div class="col-3" id="hideSubject">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HideSubject).Label("Hide Subject"))*@
                <input type="checkbox" asp-for="HideSubject" id="HideSubject" />
                <label>Hide Subject</label>
            </div>
            <div class="col-3" id="hideDescription">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HideDescription).Label("Hide Description"))*@
                <input type="checkbox" asp-for="HideDescription" id="HideDescription" />
                <label>Hide Description</label>
            </div>
            <div class="col-3" id="hideStartDate">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HideStartDate).Label("Hide Start Date"))*@
                <input type="checkbox" asp-for="HideStartDate" id="HideStartDate" />
                <label>Hide Start Date</label>
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3" id="hideDueDate">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HideDueDate).Label("Hide Due Date"))*@
                <input type="checkbox" asp-for="HideDueDate" id="HideDueDate" />
                <label>Hide Due Date</label>
            </div>
            <div class="col-3" id="hideSLA">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HideSLA).Label("Hide SLA"))*@
                <input type="checkbox" asp-for="HideSLA" id="HideSLA" />
                <label>Hide SLA</label>
            </div>
            <div class="col-3" id="hidePriority">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HidePriority).Label("Hide Priority"))*@
                <input type="checkbox" asp-for="HidePriority" id="HidePriority" />
                <label>Hide Priority</label>
            </div>
            <div class="col-3" id="hideToolbar">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HideToolbar).Label("Hide Toolbar"))*@
                <input type="checkbox" asp-for="HideToolbar" id="HideToolbar" />
                <label>Hide Toolbar</label>
            </div>
        </div>

        <div class="row no-gutters pad-10">
            <div class="col-3" id="hideBanner">
                @*@(Html.Kendo().CheckBoxFor(m=>m.HideBanner).Label("Hide Banner"))*@
                <input type="checkbox" asp-for="HideBanner" id="HideBanner" />
                <label>Hide Banner</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowPastStartDate).Label("Allow Past StartDate"))*@
                <input type="checkbox" asp-for="AllowPastStartDate" id="AllowPastStartDate" />
                <label>Allow Past StartDate</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowSLAChange).Label("Allow SLA Change"))*@
                <input type="checkbox" asp-for="AllowSLAChange" id="AllowSLAChange" />
                <label>Allow SLA Change</label>
            </div>





        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.IsNumberNotMandatory).Label("Is Number Not Mandatory "))*@
                <input type="checkbox" asp-for="IsNumberNotMandatory" id="IsNumberNotMandatory" />
                <label>Is Number Not Mandatory</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableLegalEntityFilter).Label("Enable LegalEntity Filter"))*@
                <input type="checkbox" asp-for="EnableLegalEntityFilter" id="EnableLegalEntityFilter" />
                <label>Enable LegalEntity Filter</label>
            </div>
            <div class="col-3">
                <input type="checkbox" asp-for="EnableSequenceOrder" id="EnableSequenceOrder" class="k-checkbox" />
                <label>Enable Sequence Order</label>
            </div>
            <div class="col-3">
                <input type="checkbox" asp-for="EnableDirectEmailAssignee" id="EnableDirectEmailAssignee" class="k-checkbox" />
                <label>Enable Direct Email Assignee</label>
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <input type="checkbox" asp-for="EnableReOpenButton" id="EnableReOpenButton" class="k-checkbox" />
                <label>Enable Re-Open Button</label>
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowSLAChange).Label("Enable SLA"))*@
                <input type="checkbox" asp-for="HideTaskNumberInHeader" id="HideTaskNumberInHeader" />
                <label>Hide Task Number In Header</label>
            </div>

            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.IsNumberNotMandatory).Label("Is Number Not Mandatory "))*@
                <input type="checkbox" asp-for="HideStatusInHeader" id="HideStatusInHeader" />
                <label>Hide Status In Header</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableLegalEntityFilter).Label("Enable LegalEntity Filter"))*@
                <input type="checkbox" asp-for="HideVersionInHeader" id="HideVersionInHeader" />
                <label>Hide Version In Header</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableLegalEntityFilter).Label("Enable LegalEntity Filter"))*@
                <input type="checkbox" asp-for="HidePriorityInHeader" id="HidePriorityInHeader" />
                <label>Hide Priority In Header</label>
            </div>
        </div>

        <div class="row no-gutters pad-10">
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowSLAChange).Label("Enable SLA"))*@
                <input type="checkbox" asp-for="HideDueDateInHeader" id="HideDueDateInHeader" />
                <label>Hide DueDate In Header</label>
            </div>

            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.IsNumberNotMandatory).Label("Is Number Not Mandatory "))*@
                <input type="checkbox" asp-for="HideNotificationInHeader" id="HideNotificationInHeader" />
                <label>Hide Notification In Header</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableLegalEntityFilter).Label("Enable LegalEntity Filter"))*@
                <input type="checkbox" asp-for="HideProcessDiagramInHeader" id="HideProcessDiagramInHeader" />
                <label>Hide ProcessDiagram In Header</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableLegalEntityFilter).Label("Enable LegalEntity Filter"))*@
                <input type="checkbox" asp-for="HideCommentInHeader" id="HideCommentInHeader" />
                <label>Hide Comment In Header</label>
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowSLAChange).Label("Enable SLA"))*@
                <input type="checkbox" asp-for="HideShareInHeader" id="HideShareInHeader" />
                <label>Hide Share In Header</label>
            </div>


            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableLegalEntityFilter).Label("Enable LegalEntity Filter"))*@
                <input type="checkbox" asp-for="HideAttachmentInHeader" id="HideAttachmentInHeader" />
                <label>Hide Attachment In Header</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableLegalEntityFilter).Label("Enable LegalEntity Filter"))*@
                <input type="checkbox" asp-for="HideTahsInHeader" id="HideTahsInHeader" />
                <label>Hide Tahs In Header</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowSLAChange).Label("Enable SLA"))*@
                <input type="checkbox" asp-for="HideEmailInHeader" id="HideEmailInHeader" />
                <label>Hide Email In Header</label>
            </div>
        </div>
        <div class="row no-gutters pad-10">


            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.IsNumberNotMandatory).Label("Is Number Not Mandatory "))*@
                <input type="checkbox" asp-for="HideWorkflowInHeader" id="HideWorkflowInHeader" />
                <label>Hide Work flow In Header</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.EnableLegalEntityFilter).Label("Enable LegalEntity Filter"))*@
                <input type="checkbox" asp-for="HideLogInHeader" id="HideLogInHeader" />
                <label>Hide Log In Header</label>
            </div>
            <div class="col-3">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowSLAChange).Label("Enable SLA"))*@
                <input type="checkbox" asp-for="EnablePlanning" id="EnablePlanning" />
                <label>Enable Planning</label>
            </div>

        </div>
        <div class="row no-gutters pad-10">


            <div class="col-4">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowSLAChange).Label("Enable SLA"))*@
                <input type="checkbox" asp-for="EnableCustomMessageOnCreation" id="EnableCustomMessageOnCreation" />
                <label>Enable Custom Message On Creation</label>
            </div>

            <div class="col-8">
                @*@(Html.Kendo().CheckBoxFor(m=>m.IsNumberNotMandatory).Label("Is Number Not Mandatory "))*@
                @*<textarea asp-for="CustomMessageOnEdit" type="text" rows="2" class="form-control" placeholder="Custom Message On Edit"></textarea>*@

                <div class="page-wrapper box-content">
                    <textarea class="content" asp-for="CustomMessageOnCreation" id="CustomMessageOnCreation"></textarea>
                </div>
            </div>



        </div>
        <div class="row no-gutters pad-10">


            <div class="col-4">
                @*@(Html.Kendo().CheckBoxFor(m=>m.AllowSLAChange).Label("Enable SLA"))*@
                <input type="checkbox" asp-for="EnableCustomMessageOnEdit" id="EnableCustomMessageOnEdit" />
                <label>Enable Custom Message On Edit</label>
            </div>
            <div class="col-8">
                @*@(Html.Kendo().CheckBoxFor(m=>m.IsNumberNotMandatory).Label("Is Number Not Mandatory "))*@
                @*<textarea asp-for="CustomMessageOnEdit" type="text" rows="2" class="form-control" placeholder="Custom Message On Edit"></textarea>*@

                <div class="page-wrapper box-content">
                    <textarea class="content1" asp-for="CustomMessageOnEdit" id="CustomMessageOnEdit"></textarea>
                </div>
            </div>

        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <label for="TaskAssignedToTypeId ">Task Assigned To Type</label>
            </div>
            <div class="col-9">

                <input asp-for="TaskAssignedToTypeId" id="TaskAssignedToTypeId" class="hr-x-large" />
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <label for="TaskTemplateType ">Task Type</label>
            </div>
            <div class="col-9">
                @*@(Html.Kendo().DropDownListFor(x => x.TaskTemplateType)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "TaskTypeEnum" });
                                        });
                                    })
                                     .DataTextField("Name")
                                     .DataValueField("Id")
                                     .Value(Model.TaskTemplateType.ToString())
                                     .HtmlAttributes(new { @class = "hr-x-large" })
                )*@

                <input asp-for="TaskTemplateType" id="TaskTemplateType" class="hr-x-large" />
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <label for="Priority">Priority</label>
            </div>
            <div class="col-9">
                @*@(Html.Kendo().DropDownListFor(x => x.PriorityId)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetLOVIdNameList", "LOV", new { @area = "Cms", LOVType = "TASK_PRIORITY" });
                                        });
                                    })
                         .DataTextField("Name")
                         .DataValueField("Id")
                         .Value(Model.EditReturnType.ToString())
                                   .HtmlAttributes(new { @class = "hr-x-large" })
                )*@

                <input asp-for="PriorityId" id="PriorityId" class="hr-x-large" />
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <label for="EditReturnType">Edit Return Type</label>
            </div>
            <div class="col-9">
                @*@(Html.Kendo().DropDownListFor(x => x.EditReturnType)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "EditReturnTypeEnum" });
                                        });
                                    })
                         .DataTextField("Name")
                         .DataValueField("Id")
                         .OptionLabel("Select")
                         .Value(Model.EditReturnType.ToString())
                                   .HtmlAttributes(new { @class = "hr-x-large" })
                )*@

                <input asp-for="EditReturnType" id="EditReturnType" class="hr-x-large" />
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <label for="CreateReturnType">Create Return Type</label>
            </div>
            <div class="col-9">
                @*@(Html.Kendo().DropDownListFor(x => x.CreateReturnType)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "CreateReturnTypeEnum" });
                                        });
                                    })
                         .DataTextField("Name")
                         .DataValueField("Id").OptionLabel("Select")
                         .Value(Model.CreateReturnType.ToString())
                                   .HtmlAttributes(new { @class = "hr-x-large" })
                )*@

                <input asp-for="CreateReturnType" id="CreateReturnType" class="hr-x-large" />
            </div>
        </div>
        <div class="row no-gutters pad-10">

            <div class="col-3">
                <label for="NumberGenerationType">Number Generation Type</label>
            </div>

            <div class="col-9">
                @*@(Html.Kendo().DropDownListFor(x => x.NumberGenerationType)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NumberGenerationTypeEnum" });
                                        });
                                    })
                         .DataTextField("Name")
                         .DataValueField("Id")
                         .Value(Model.NumberGenerationType.ToString())
                                   .HtmlAttributes(new { @class = "hr-x-large" })
                )*@

                <input asp-for="NumberGenerationType" id="NumberGenerationType" class="hr-x-large" />
            </div>
        </div>
        <div class="row no-gutters pad-10">

            <div class="col-3">
                <label for="ActionButtonPosition">ActionButtonPosition</label>
            </div>

            <div class="col-9">
               

                <input asp-for="ActionButtonPosition" id="ActionButtonPosition" class="hr-x-large" />
            </div>
        </div>

        <div class="row no-gutters pad-10">

            <div class="col-3">
                <label for="EmailCopyTemplateCode">Email Copy Template Code</label>
            </div>

            <div class="col-9">
                @*@(Html.Kendo().TextBoxFor(x=>x.EmailCopyTemplateCode).HtmlAttributes(new { @class = "", @style= "width:37%;border-color:#ced4da !important;border: solid 1px;" }))*@
                <input asp-for="EmailCopyTemplateCode" class="form-control" type="text" placeholder="Email Copy Template Code" style="width:80%;border-color:#ced4da !important;border: solid 1px;" />
                @*<div class="form-label-group">
                    <input asp-for="EmailCopyTemplateCode" type="text" placeholder="Email Copy Template Code" class="form-control" autocomplete="off" style="width:100%" />
                    <label for="EmailCopyTemplateCode">Email Copy Template Code</label>
                </div>*@

            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <label for="SubjectUdfMappingColumn">Subject Mapping Udf</label>
            </div>
            <div class="col-9">
                <input asp-for="SubjectUdfMappingColumn" class="form-control" type="text" placeholder="Subject Mapping Udf" style="width: 80%; border-color: #ced4da !important; border: solid 1px;" />
            </div>
        </div>
        <div class="row no-gutters pad-10">
            <div class="col-3">
                <label for="DescriptionUdfMappingColumn">Description Mapping Udf</label>
            </div>
            <div class="col-9">
                <input asp-for="DescriptionUdfMappingColumn" class="form-control" type="text" placeholder="Description Mapping Udf" style="width: 80%; border-color: #ced4da !important; border: solid 1px;" />
            </div>
        </div>

        <div class="col-12">Icon</div>
        <div class="col-12 pad-15" style="min-height:130px;">
            @*<div class="style-image">
                @if (Model.IconFileId != null)
                {
                    <img class="style-myiconimage" src="/cms/Document/GetImageMongo?id=@Model.IconFileId" onerror='OnPhotoError(this);' />
                }
                else
                {
                    <img class="style-myiconimage" style="background-color:gray;" src="/images/200.png" />
                }

            </div>*@
            <div @*class="style-upload"*@>
                @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @Area="Cms"})
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccessIcon")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                        //.MaxFileSize(2097152)
                        )
                        .HtmlAttributes(new { @class = "hr-large", @id = "files1" })
                )*@

                @*<div class="row">
        <div class="col">
            <div id="iconFile" class="dm-uploader">
                <h6 class=" text-muted">Drag &amp; drop files here</h6>

                <div class="btn btn-primary btn-block ">
                    <span>Open the file Browser</span>
                    <input type="file" title='Click to add Files' />
                </div>
            </div>

        </div>*@
                @*if multiple use this*@

                @*<div class="col">
            <div class="card h-100">
                <div class="card-header">
                    File List
                </div>
                <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                    <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                </ul>
            </div>
        </div>*@
                @*if multiple use this*@
                @*</div>
        <button type="button" class="btn btn-light" title="Delete" onclick="onIconDel();"><i class='fa fas fa-trash'></i></button>*@

                @{
                    await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.IconFileId), Value = Model.IconFileId });
                }
            </div>

        </div>
        <div class="col-12">Banner</div>
        <div class="col-12 pad-15" style="min-height:130px;">
            @*<div class="style-image">
                @if (Model.BannerFileId != null)
                {
                    <img class="style-mybannerimage" src="/cms/Document/GetImageMongo?id=@Model.BannerFileId" onerror='OnPhotoError(this);' />
                }
                else
                {
                    <img class="style-mybannerimage" style="background-color:gray;" src="/images/200.png" />
                }

            </div>*@
            <div @*class="style-upload"*@>
                @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @Area="Cms"})
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccessBanner")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                        //.MaxFileSize(2097152)
                        )
                        .HtmlAttributes(new { @class = "hr-large", @id = "files2" })
                )*@

                @*<div class="row">
        <div class="col">
            <div id="bannericonFile" class="dm-uploader">
                <h6 class=" text-muted">Drag &amp; drop files here</h6>

                <div class="btn btn-primary btn-block ">
                    <span>Open the file Browser</span>
                    <input type="file" title='Click to add Files' />
                </div>
            </div>

        </div>*@
                @*if multiple use this*@

                @*<div class="col">
            <div class="card h-100">
                <div class="card-header">
                    File List
                </div>
                <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                    <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                </ul>
            </div>
        </div>*@
                @*if multiple use this*@
                @*</div>
        <button type="button" class="btn btn-light" title="Delete" onclick="onBannerDel();"><i class='fa fas fa-trash'></i></button>*@

                @{
                    await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.BannerFileId), Value = Model.BannerFileId });
                }
            </div>

        </div>
        <div class="col-12">Background</div>
        <div class="col-12 pad-15" style="min-height:130px;">
            @*<div class="style-image">
                @if (Model.BackgroundFileId != null)
                {
                    <img class="style-mybgimage" src="/cms/Document/GetImageMongo?id=@Model.BackgroundFileId" onerror='OnPhotoError(this);' />
                }
                else
                {
                    <img class="style-mybgimage" style="background-color:gray;" src="/images/200.png" />
                }

            </div>*@
            <div @*class="style-upload"*@>
                @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @Area="Cms"})
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccessBackground")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                        //.MaxFileSize(2097152)
                        )
                        .HtmlAttributes(new { @class = "hr-large", @id = "files3" })
                )*@

                @*<div class="row">
        <div class="col">
            <div id="bgiconFile" class="dm-uploader">
                <h6 class=" text-muted">Drag &amp; drop files here</h6>

                <div class="btn btn-primary btn-block ">
                    <span>Open the file Browser</span>
                    <input type="file" title='Click to add Files' />
                </div>
            </div>

        </div>*@
                @*if multiple use this*@

                @*<div class="col">
            <div class="card h-100">
                <div class="card-header">
                    File List
                </div>
                <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                    <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                </ul>
            </div>
        </div>*@
                @*if multiple use this*@
                @*</div>
        <button type="button" class="btn btn-light" title="Delete" onclick="onBackgroundDel();"><i class='fa fas fa-trash'></i></button>*@

                @{
                    await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.BackgroundFileId), Value = Model.BackgroundFileId });
                }
            </div>

        </div>
        <div class="row" id="radiogrp">

            <div class="col-12 k-radio-list k-list-horizontal" style="margin:10px;">
                @*@(Html.Kendo().RadioGroup()
                    .Name("TaskTemplate")
                    .Items(i =>
                    {
                        i.Add().Label("Create New Template").Value("1");
                        i.Add().Label("Use Existing Template").Value("2");
                    })
                    .Events(e => e.Change("onchangetype"))
                    .Value("1")
                )*@

                <section class="section-preview">
                    <div class="custom-control custom-radio custom-control-inline">
                        <input type="radio" class="custom-control-input" id="1" name="TaskTemplate" value="1" onchange="onchangetype();" checked>
                        <label class="custom-control-label" for="1">Create New Template</label>
                    </div>
                    <div class="custom-control custom-radio custom-control-inline">
                        <input type="radio" class="custom-control-input" id="2" name="TaskTemplate" value="2" onchange="onchangetype();">
                        <label class="custom-control-label" for="2">Use Existing Template</label>
                    </div>
                </section>


            </div>

        </div>
        <div id="CreateNew">
            <div class="row pad-10">
                <div class="pad-15 no-gutters" style="width: 100%;">
                    <div class="pad-b-15 card col-12 page" data-mode="@Model.DataAction" id="@Model.Id" data-page-content-type="Page"
                         data-sequence="@Model.SequenceOrder">
                        <div class="card-header page-header bg-info">

                            <span class="cms-settings-box" onclick="OpenPageSettings(this)">
                                <i class="cursor-p fa fa-cog" title="Settings"></i>
                            </span>

                        </div>
                        <div class="card-body" id="component-container">
                            @Html.HiddenFor(m => m.Id)
                            @Html.HiddenFor(m => m.DataAction)
                            @Html.HiddenFor(m => m.Json)
                            @Html.HiddenFor(m => m.TemplateId)
                            @Html.HiddenFor(m => m.UdfTemplateId)
                            @Html.HiddenFor(m => m.UdfTableMetadataId)
                            @Html.HiddenFor(x => x.TaskIndexPageTemplateId)
                            @Html.HiddenFor(m => m.IconFileId)
                            @Html.HiddenFor(m => m.BannerFileId)
                            @Html.HiddenFor(m => m.BackgroundFileId)
                            @Html.HiddenFor(m => m.TaskTemplateType)

                            @*@(Html.Kendo().DropDownListFor(x=>x.FormType)
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Events(e => e.Change("formTypeChange"))
                            .DataSource(source =>
                            {
                            source.Read(read =>
                            {
                                read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "FormTypeEnum" });
                            });
                            })
                            .Value(Model.FormType.ToString())
                            .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                            )*@
                            <input asp-for="FormType" id="FormType" class="form-control" style="width:80%" />
                            <br />
                            <br />
                            <div id="builder"></div>
                        </div>
                    </div>


                </div>
            </div>
        </div><br />
        <div id="UseExisting" style="display:none;">
            <div class="col-12">Note Template </div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(model=>model.PageId)
                .DataTextField("Name")
                .DataValueField("Id")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetNoteList", "Template");
                    });
                })
                .OptionLabel("Select Note Template")
                .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
                )*@

                <input asp-for="PageId" id="PageId" class="form-control" style="width:80%" />
                <br /><br /><br /><br /><br />
            </div>
        </div>
        <div class="cms-footer">
            <div class="col-sm-12" style="text-align:right;">
                <button type="submit" class="btn btn-success" onclick="OnSave()">Save</button>
                @if (ViewBag.LayoutMode == LayoutModeEnum.Popup.ToString())
                {
                    <input type="button" class="btn btn-light" value="Close" onclick="return OnClose('@Model.TemplateId');" />
                }
            </div>
            @*<input type="button" class="btn btn-link" value="Save and Preview" onclick="OnSave('Preview')" />
            <input type="button" class="btn btn-success" value="Save and Publish" onclick="OnSave('Publish')" />
            <input type="button" class="btn btn-primary" value="Save" onclick="OnSave()" />*@
        </div>
    </form>
</div>

@*<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

    

    <div class="row">
        <div class="pad-15 no-gutters" style="width: 100%;">
            <div class="pad-b-15 card col-12 page" data-mode="@Model.DataAction" id="@Model.Id" data-page-content-type="Page"
                 data-sequence="@Model.SequenceOrder">
                <div class="card-header page-header bg-info">
                   
                    <span class="cms-settings-box" onclick="OpenPageSettings(this)">
                        <i class="cursor-p fa fa-cog" title="Settings"></i>
                    </span>

                </div>
                <div class="card-body" id="component-container">
                    <div id="builder"></div>
                </div>
            </div>

           
        </div>
    </div>
</div>*@

<script type="text/javascript">
    $(document).ready(function () {

        $('.content').richText();
        $('.content1').richText();
        $("#TaskAssignedToTypeId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/LOV/GetLOVIdNameList?LOVType=TASK_ASSIGN_TO_TYPE",
                    }
                }
            }
        });

        $("#TaskTemplateType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            @*optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",*@
            value: '@Model.TaskTemplateType.ToString()',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=TaskTypeEnum",
                    }
                }
            }
        });

        $("#PriorityId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/LOV/GetLOVIdNameList?LOVType=TASK_PRIORITY",
                    }
                }
            }
        });

        $("#EditReturnType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            @*optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",*@
            value: '@Model.EditReturnType.ToString()',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=EditReturnTypeEnum",
                    }
                }
            }
        });

        $("#CreateReturnType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            @*optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",*@
            value: '@Model.CreateReturnType.ToString()',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=CreateReturnTypeEnum",
                    }
                }
            }
        });

        $("#NumberGenerationType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.NumberGenerationType.ToString()',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=NumberGenerationTypeEnum",
                    }
                }
            }
        });
          $("#ActionButtonPosition").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ActionButtonPosition.ToString()',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=ActionButtonPositionEnum",
                    }
                }
            }
         });

        $("#FormType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.FormType.ToString()',
            change: formTypeChange,
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=FormTypeEnum",
                    }
                }
            }
        });

        $("#PageId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/Template/GetNoteList",
                    }
                }
            }
        });

        onchangetype();
        hideTaskHeader();
        $('#SLASeconds').durationPicker();
        if ('@ViewBag.Success' == "True") {
            //alert("1");
            closeNavPortal();
            var tree = window.parent.$("#contentTreeView").data("kendoTreeView");
            tree.dataSource.read();
            //alert("2");


        }

         $.ajax({
             type: "GET",
             url: "/Cms/Template/GetTemplateJson?templateId=@Model.TemplateId",
            success: function (response) {
                if (response != "" && response != null) {
                    var obj = JSON.parse(response);
                    builder = new Formio.FormBuilder(document.getElementById("builder"), obj, {
                        builder: {
                            custom: {
                                title: 'Chart',
                                weight: 10,
                                display: 'form',
                                components: {
                                    chartjs: {
                                        title: 'Chart',
                                        key: 'chartJS',
                                        icon: 'terminal',
                                        schema: {
                                            label: 'Chart JS',
                                            type: 'htmlelement',
                                            key: 'chartJs',
                                            input: true
                                        }
                                    },
                                }
                            },

                        }
                       , noDefaultSubmitButton: true
                    });
                }
                else {
                     var obj = {
                        "synergyTableMapId": '@ViewBag.SynergyTableMapId'
                    }
                    builder = new Formio.FormBuilder(document.getElementById("builder"), obj, {
                        builder: {
                            custom: {
                                title: 'Chart',
                                weight: 10,
                                display: 'form',
                                components: {
                                    chartjs: {
                                        title: 'Chart',
                                        key: 'chartJS',
                                        icon: 'terminal',
                                        schema: {
                                            label: 'Chart JS',
                                            type: 'htmlelement',
                                            key: 'chartJs',
                                            input: true
                                        }
                                    },
                                }
                            },

                        }
                        , noDefaultSubmitButton: true
                    });
                }
            },
            error: function (response) {
                alert("error");
            },
         });

        if ($('#EnableIndexPage').is(':checked')) {
            $('#litaskindex').show();
        } else {
            $('#litaskindex').hide();
        }

        $('#EnableIndexPage').on('change', function () {
            if (this.checked) {
                //alert("checked : Enable Index Page");
                $('#litaskindex').show();
            } else {
                //alert("not checked : hide Index Page");
                $('#litaskindex').hide();
            }
        });

        if ('@Model.TaskTemplateType' == '@TaskTypeEnum.StepTask') {

            $("#radiogrp").show();
        }
        else
        {
            $("#radiogrp").hide();
        }
        //uploadFile();
        //banneruploadFile();
        //bguploadFile();
    });


    function uploadFile() {
        $("#iconFile1").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-myiconimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#IconFileId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }

    function banneruploadFile() {
        $("#bannericonFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs 
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-mybannerimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#BannerFileId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }

    function bguploadFile() {
        $("#bgiconFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs 
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-mybgimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#BackgroundFileId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }

    function OnSave() {
        $("#Json").val(JSON.stringify(builder.instance.schema, null, 4));
        return true;
    }

     var onManageTaskAjaxSuccess = function (res) {

        if (res.success) {

            ShowNotification("Saved Successfully", "success");
            var TemplateId = res.templateId;
            LoadPartailView('@Url.Action("ManageTask", "Template", new { @area = "Cms" })?templateId='+ TemplateId  + '&lo=@(ViewBag.LayoutMode??"")&cbm=@(ViewBag.CallbackMethod??"")', $('#detailPage'));
        }
        else {
            showError(res.error);
        }
    };
    var onManageTaskAjaxBegin = function () {
        ShowLoader($('.main-container'));
    };

    var onManageTaskAjaxComplete = function () {
        HideLoader($('.main-container'));
    };
    var showError = function (error) {

        //#validation-summary-manageform
        $("#validation-summary-managepagetask").html(error);
        $("#validation-summary-managepagetask").css("display", "block")
    }

    function hideTaskHeader() {
        if ($('#HideHeader').is(':checked')) {
            $('#HideSubject').prop("checked", false);
            $('#hideSubject').hide();
            $('#HideDescription').prop("checked", false);
            $('#hideDescription').hide();
            $('#HideStartDate').prop("checked", false);
            $('#hideStartDate').hide();
            $('#HideDueDate').prop("checked", false);
            $('#hideDueDate').hide();
            $('#HideSLA').prop("checked", false);
            $('#hideSLA').hide();
            $('#HidePriority').prop("checked", false);
            $('#hidePriority').hide();
            $('#HideToolbar').prop("checked", false);
            $('#hideToolbar').hide();
            $('#HideBanner').prop("checked", false);
            $('#hideBanner').hide();
        } else {
            $('#hideSubject').show();
            $('#hideDescription').show();
            $('#hideStartDate').show();
            $('#hideDueDate').show();
            $('#hideSLA').show();
            $('#hidePriority').show();
            $('#hideToolbar').show();
            $('#hideBanner').show();
        }
    }
</script>
