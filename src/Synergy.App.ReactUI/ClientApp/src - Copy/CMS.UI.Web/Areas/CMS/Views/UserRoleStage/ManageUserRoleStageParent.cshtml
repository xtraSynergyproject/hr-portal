@using CMS.UI.ViewModel;
@using CMS.Common;
@using CMS.Common.Enums;

@{
    ViewData["Title"] = "Manage User Role";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model UserRoleStageParentViewModel

<style>
    
    .required {
        color: red;
    }
</style>
<script>

     var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);
      @*var HierarchyType1 = '@Html.Raw(EnumExtension.EnumToJson(typeof(HierarchyTypeEnum)))';
    var HierarchyTypeObj1 = JSON.parse(HierarchyType1);*@
    var columnDefs = [
        {
            field: "HierarchyType",
            cellRenderer: params => {
                debugger;
                //return HierarchyTypeObj1[params.value];
                return params.value;
            }
        },
           {
            field: "Name",
           },
           {
               field: "StatusLable",

           },
           {
               field: "StatusCode",
               cellRenderer: params => {
                   return generateTemplate(params.value)
               },
               },



        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin15' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        if ('@Model.DataAction' != "Edit") {
            getUserRoleStageChildData();
        }
        
       
        $.contextMenu({
            selector: '#tree-menuBin15',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OnEditUserRoleStageChild(id);
                                        break;

                                    case 'delete':
                                        OnDeleteUserRoleStageChild(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });

    function getUserRoleStageChildData(inboxStageId) {
        document.getElementById("KrdUserRolegrid1").innerHTML = "";
        gridConfig(
            "KrdUserRolegrid1",
            "/cms/UserRoleStage/GetUserRoleStageChildListData?inboxStageId=" + inboxStageId,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<div class="row" style="margin-left:15px;">

    <form asp-controller="UserRoleStage" asp-action="ManageUserRoleStageParent"
          method="post" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
              data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
              data-ajax="true" data-ajax-method="POST"
          class="form-horizontal" id="myForm">                    
        <div class="text-danger" style="width:300px;" asp-validation-summary="All"></div>            
          
        <div class="row" style="padding:10px;margin-right:15px;">

            <div class="col-12 pad-15">
                <div class="form-label-group">
                    <input asp-for="InboxStageName" type="text" class="form-control" placeholder="Inbox Stage Name" required="required" autocomplete="off" />
                    <label for="InboxStageName">Inbox Stage Name <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-15">
                <div class="form-label-group">
                    <input asp-for="TemplateCode" type="text" class="form-control" placeholder="Template Code" autocomplete="off" />
                    <label for="TemplateCode">Template Code</label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="TemplateShortName" type="text" class="form-control" placeholder="Template Short Name" autocomplete="off" />
                    <label for="TemplateShortName">Template Short Name</label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="TemplateName" type="text" class="form-control" placeholder="Template Name" autocomplete="off" />
                    <label for="TemplateName">Template Name</label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="StageSequence" type="number" class="form-control" placeholder="Stage Sequence" autocomplete="off" />
                    <label for="StageSequence">Stage Sequence</label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="ChildSequence" type="number" class="form-control" placeholder="Child Sequence" autocomplete="off" />
                    <label for="ChildSequence">Child Sequence</label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="InboxCode" type="text" class="form-control" placeholder="Inbox Code" autocomplete="off" />
                    <label for="InboxCode">Inbox Code</label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <label for="Users">Users </label>
                @*@(Html.Kendo().DropDownListFor(x => x.UserRoleId)

        .OptionLabel("Select User Role...")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetUserRoleIdNameList", "UserRole",new { @area="Cms"});
            });

        })

        .DataTextField("Name")
        .DataValueField("Id")
        .AutoBind(true)
        .HtmlAttributes(new { @class = "hr-xx-large" })
         .ValuePrimitive(true)
        .Height(300)
               )*@

                <input asp-for="UserRoleId" id="UserRoleId" class="hr-xx-large" />
            </div>
            <div class="col-12" id="stagechild">
                <button type='button' class='btn btn-primary' onclick='OnCreateUserRoleStageChild();'><i class='fa fas fa-plus'></i>&nbsp;Create User Role Stage Child</button>
                <br /><br />
                <div id="KrdUserRolegrid1" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                @*@(Html.Kendo().Grid<UserRoleStageChildViewModel>
        ()
        .Name("UserRolegrid").Width(550)
        .ToolBar(toolbar =>
        toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateUserRoleStageChild();'><i class='fa fas fa-plus'></i>&nbsp;Create User Role Stage Child</button>"))


        .Columns(columns =>
        {
            columns.Command(command =>
            {
                command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditUserRoleStageChild").HtmlAttributes(new { @class = "action-icon"});
                command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteUserRoleStageChild").HtmlAttributes(new { @class = "action-icon"});
            }).Title("Action").Width(150);
            // columns.Bound(c => c.Name);
            columns.Bound(c => c.StatusLabel);
            columns.Bound(c => c.StatusCode).ClientTemplate("#=generateTemplate(StatusCode)#");




        })
         .Scrollable(x => x.Enabled(false))
                    .Sortable(srt => srt.Enabled(true))
                    .Selectable(select => select.Enabled(false))
                    .Filterable(f => f.Extra(false)
                                                        .Operators(o => o.ForString(s => s.Clear()
                                                        .Contains("Contains")
                                                        .IsEqualTo("Is equal to")
                                                    )))
                    .Pageable(pageable => pageable
                    .Refresh(true)

                    .PageSizes(true)
                    .ButtonCount(5))
                    .AutoBind(true)
                    .DataSource(
                    dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    //.Events(events => events.Error("OnError"))
                    .Read(read => read.Action("GetUserRoleStageChildList", "UserRoleStage"))
                    .Model(model => model.Id(p => p.Id))
                    )
              )*@
            </div>


            <div class="cms-slidebar-footer">
                <button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">Close</button>
                <input type="submit" class="btn btn-primary" value="Save" id="submitBtn" />
            </div>

        </div>
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.DataAction)
</form>
</div>
<script type="text/x-kendo-tmpl" id="template">
    <div class="row col-12" style="margin:5px;">
    @*<div class="col-3">
    <span>#:Id#</span>
    </div>*@
    <div class="col-9">
      <span>#:Name#</span>
    </div>
    </div>
</script>

<script type="text/javascript">
    var id = '@Model.Id';
    function generateTemplate(statuscount) {
        var template = "<span>";
        for (var i = 0; i < statuscount.length; i++) {
            template = template + statuscount[i] + ",";
        }

        return template + "</span>";
    }

    function OnChange(e)
    {
        var search = FilterDDl();
        $("#UserlistView").data("kendoListView").dataSource.read(search)
    }

    function FilterDDl(id) {
        //alert($("#Users").val());
        return {
            inboxStageId: id
        };
    }
    $(document).ready(function () {
        //var search = FilterDDl();
      //  $("#UserlistView").data("kendoListView").dataSource.read(search)
        if ('@Model.DataAction' == "Edit") {
            $("#stagechild").show();
            var search = FilterDDl('@Model.Id');
            //$("#UserRolegrid").data("kendoGrid").dataSource.read(search);
            getUserRoleStageChildData('@Model.Id')
        }
        else {
            $("#stagechild").hide();
        }

        $("#UserRoleId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "Select User Role...",
            value:'@Model.UserRoleId',
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/UserRole/GetUserRoleIdNameList",
                    }
                }
            }
        });

    });

    function closeNavMemberGroup() {
      
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function OnCreateUserRoleStageChild() {
       // alert(id);
         var inboxstageid = id;
      
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateUserRoleStageChild", "UserRoleStage", new { @area="Cms"})?inboxStageId=' + id;
        win.OpenWindow({ Title: 'Manage User Role Stage Child', Width: 450, Height: 800 });
        return false;

    }

    function OnEditUserRoleStageChild(id) {
       //
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
       
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditUserRoleStageChild", "UserRoleStage", new { @area="Cms"})?Id=' + id;
        win.OpenWindow({ Title: 'Manage User Role', Width: 450, Height: 800 });
        return false;
    }

    function refresh() {
        //$("#UserRolegrid").data("kendoGrid").dataSource.read({ inboxStageId: id });
        getUserRoleStageChildData(id)
    }


    function OnDeleteUserRoleStageChild(id) {
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDeleteRole(id);

        }, function () {

        });

    }
        function confirmDeleteRole(id) {
        //

        $.ajax({
           // url: "~/UserRole/DeleteUserRole?Id=" + id,
            url:'@Url.Action("DeleteUserRoleStageChild", "UserRoleStage", new { @area="Cms"})?Id=' + id,
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                // $('#dlg_DeleteConfirmation').data("kendoDialog").close();
               //
                //$("#UserRolegrid").data("kendoGrid").dataSource.read();
                getUserRoleStageChildData();
            },
            error: function () {
               //
                //$("#UserRolegrid").data("kendoGrid").dataSource.read();
                getUserRoleStageChildData();
            }
        });


    }

        var onAjaxSuccess = function (res) {
       // alert("test");
        if (res.success) {


           // alert(res);
            ShowNotification("Saved Successfully", "success");
            id = res.id;
              $("#DataAction").val('@DataActionEnum.Edit');
             $("#Id").val(id);
            var search = FilterDDl(id);
            $("#stagechild").show();
            //$("#UserRolegrid").data("kendoGrid").dataSource.read(search);
            getUserRoleStageChildData(id);
            window.parent.getUserRoleStageData();
        }
        else {

            showError(res.error);
        }

        //HideLoader($('#divjobAdv'));
    };

</script>