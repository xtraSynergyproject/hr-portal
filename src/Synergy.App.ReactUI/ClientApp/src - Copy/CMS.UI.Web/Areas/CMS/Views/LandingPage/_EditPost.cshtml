@inject IStringLocalizer<CMS.UI.Web.Areas.CMS.Controllers.LandingPageController> Resource
@using Kendo.Mvc.UI
@using CMS.UI.ViewModel
@model NoteViewModel
@{
    //ViewBag.Title = @ERP.Translation.Nts.Master.Dashboard;
    //  Layout = "~/Views/Shared/_LayoutPopup.cshtml";
    Layout = null;
}
<style>
    .group .input {
        margin-bottom: 25px;
        width: 100%;
        color: black;
        display: block;
        border: 1px solid rgba(0,0,0,.3);
        padding: 15px 20px;
        border-radius: 50px;
        background: rgba(142, 139, 139, 0.1);
    }

    .sectionbox1 {
        border: 1px solid #dddfe2;
        margin-bottom: 30px;
        border-radius: 5px;
        color: #333333;
        background: #fff;
        width: 100%;
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #eeeeee;
        min-height: 100px;
        box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14), 0 3px 1px -2px rgba(0, 0, 0, 0.2), 0 1px 5px 0 rgba(0, 0, 0, 0.12);
    }

    pre {
        margin: 20px 0;
        padding: 20px;
        background: #fafafa;
    }

    .round {
        border-radius: 50%;
    }

    .fromcolor {
        /*color: darkslateblue;*/
        color: #424242;
    }

    .iconwithtextnoanim {
        display: flex;
        align-items: center;
    }

        .iconwithtextnoanim.img {
            margin: 10px;
            padding: 10px;
            transition: margin 200ms;
        }

    .k-listview {
        background-color: transparent;
        border: none;
    }

    .childDiv {
        width: 100%;
    }

    .cloudDiv {
        width: 100%;
    }

    /*missing styles*/
    .row-marg {
        margin-right: 0px;
        margin-left: 0px;
    }

    .dynamic-marg {
        /*width: 98%;*/
        width: 100%;
    }

    hr {
        width: 100%;
    }
    viewer-toolbar#toolbar {
        display: none !important;
    }
</style>
<script type="text/javascript">

    
    function manageShare(Id) {
        //return false;
        //iframeOpenUrl = "/nts/note/sharePost?noteId=" + Id;
        //var wnd = $("#kiframepopupwindow").data("kendoWindow");
        //wnd.setOptions({
        //    width: 1000,
        //    height: 650,
        //    title: "Share to Team/User"
        //});
        //wnd.center().open();
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("NtsNoteShared", "Cms", new { @area = "" })?noteId=' + Id+'&IsSharingEnabled=true';
        win.OpenWindow({ Title: '@Html.Raw(Resource["ShareWith"])', Width: 800, Height: 600 });
    }
    function DeleteNote(id) {
        // alert(id);
        kendo.confirm("@SharedResource["Areyousurethatyouwanttoproceed?"]").then(function () {
            $.ajax({
                type: "Get",
                url: "/cms/LandingPage/DeletePost?noteId=" + id,
                //data: { 'Id': id },
                success: function (data) {

                    if (data.success) {
                        window.location.href = window.location.href;
                    }

                },
                dataType: "json",
            });
        }, function () {

        });
    }
    function EditNote(id) {

        var url = "/cms/LandingPage/EditHelpPost?noteId=" + id + "&isUserGuide=" + $("#IsUserGuide").val() + "&moduleName=Admin&isHelp=true";

        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({
            Title: '@Html.Raw(Resource["EditPost"])', Width: 600, Height: 500
        });
    }

     function showAvatarImage(e) {
        var listView = $("#listView-@Model.Id").data("kendoListView");
        if (listView != null) {
            var dataSource = listView.dataSource;
            $.each(listView.items(), function (index, item) {
                var uid = $(item).data("uid");
                var dataItem = dataSource.getByUid(uid);
                var nam = dataItem.CommentedByUserUserName;
                var id = dataItem.Id;
                //   alert(id);
                //$.ajax({
                //    url: "/nts/note/GenerateAvatar",
                //    type: "GET",
                //    data: { name: nam },
                //    cache: false,
                //    success: function (data) {
                //        // alert(data);
                //        var imag = "<img style='border-radius: 80px; width: 40px; height: 40px'"
                //            + "src='" + data + "'/>";

                //        $('#' + id).html(imag);

                //    },
                //    error: function (xhr) {
                //      //  alert(xhr.responseText);
                //    }
                //});
            });
        }
    }
    function OnPhotoError(obj) {
        obj.onerror = null;
        obj.src = '/images/profile.jpg';
    }

</script>
<div style="padding:0px;" id="docfeed-@Model.Id"></div>
<div class="row row-marg" id="main-@Model.Id">
    <div id="dynamic-@Model.Id" class="dynamic-marg">
        <div class="sectionbox1" style="min-height: 150px;">
            <div class="row row-marg" style="margin-top:10px;">
                <div class="col-xs-11 col-md-11">
                    <div class="iconwithtextnoanim" id="addproject-@Model.Id" style="padding-left:5px">
                        <img class="img-profile rounded-circle" style="margin-bottom:6px" width="40" height="40" src="@Url.Action("getimagemongo","document",new { @area="Cms",id=Model.UserPhotoId})" onerror='OnPhotoError(this);'>@*@Url.Content(String.Format("~/Images/{0}.png", Model.OwnerFirstLetter))">*@

                        <div>
                            <div class="iconwithtextnoanim" style="padding-left: 10px;">
                                <div class="fromcolor" style="font-size: 13px;font-family:'Titillium Web', sans-serif;font-weight:bold">@Model.SourceName</div>
                                <div style="font-size: 13px; padding-left: 10px;">@Model.Action</div>
                                <div class="fromcolor" style="font-size: 13px; padding-left: 10px;font-family:'Titillium Web', sans-serif;font-weight:bold">@Model.TargetName</div>
                            </div>
                            <div class="iconwithtextnoanim" style="margin-bottom:10px; padding-left: 10px;">
                                <div style="font-size: 11px; color: dimgrey">@Model.FormattedCreateDate</div>
                            </div>
                        </div>

                    </div>
                </div>
                <div class="col-xs-1 col-md-1">
                    <!-- <div class="k-icon k-i-more-horizontal" style="color:dimgray; font-size: 30px; "></div> -->
                    @if (Model.IsOwner)
                    {
                        <div class="btn-group">
                            <a class="k-icon k-i-more-horizontal" href="#" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false" style="font-size:20px; color: gray">
                            </a>
                            <ul class="dropdown-menu" style="position:absolute;top:20px;right:0px;left:auto; min-width:120px; color:gray">
                                <div class="iconwothtext" style="padding-left:10px" onclick="return EditNote('@Model.NoteId')">
                                    <span class="fad fa-edit" style="font-size:18px"> </span> <div class="leftmenustyle" style="font-size:12px">
                                        @SharedResource["Edit"]
                                    </div>
                                </div>
                                <div class="iconwothtext" style="padding-left:10px" onclick="return DeleteNote('@Model.NoteId')">
                                    <span class="fad fa-trash-alt" style="font-size:18px"> </span> <div class="leftmenustyle" style="font-size:12px">
                                        @SharedResource["Delete"]
                                    </div>
                                </div>

                                <!-- <div class="iconwothtext" style="padding-left:10px" onclick="filtercompleted()">
                                    <span class="k-icon k-i-check-outline" style="font-size:24px"> </span> <div class="leftmenustyle" style="font-size:18px">
                                        Show completed services
                                    </div>
                                </div>
                                <div class="iconwothtext" style="padding-left:10px" onclick="filteroverdue()">
                                    <span class="k-icon k-i-clock" style="font-size:24px"> </span> <div class="leftmenustyle" style="font-size:18px">
                                        Show overdue services
                                    </div>
                                </div>
                                <div class="iconwothtext" style="padding-left:10px" onclick="filterinprogress()">
                                    <span class="k-icon k-i-rotate" style="font-size:24px"> </span> <div class="leftmenustyle" style="font-size:18px">
                                        Show in progress services
                                    </div>
                                </div>
                                <div class="iconwothtext" style="padding-left:10px" onclick="filterreset()">
                                    <span class="k-icon k-i-reset" style="font-size:24px"> </span> <div class="leftmenustyle" style="font-size:18px">
                                        Reset
                                    </div>
                                </div>-->
                            </ul>
                        </div>
                    }
                </div>
            </div>@*<br />*@<hr />
                            <div class="row row-marg">
                                <p class="col-xs-12 col-md-12" style="font-size:16px;font-weight: 400;
                            color: rgba(0,0,0,.8); padding: 5px; /*white-space: pre-line;*/">
                                    @Model.NoteDescription
                                </p>
                                @if (Model.AttachmentList != null && Model.AttachmentList.Count() > 0)
                                {
                                    @foreach (var data in Model.AttachmentList)
                                    {

                                        if (data.MediaNewType == "PHOTO")
                                        {
                                            <div style="width:100%;max-height:500px;">
                                                <img src='data:@data.ContentType;base64,@data.ContentBase64' id='imageFeeds+@data.Id' style='width:100%;' />
                                                @*<img id="imageFeeds+@Model.Id" alt="" src="@Url.Action("GetFileMongo", "Document", new { @area = "", fileId = Model.Id })" style="width:100%" onclick="loadImage(this)" />*@
                                            </div>
                                        }
                                        if (data.MediaNewType == "PDF")
                                        {
                                            <!--<div style="width:100%;max-height:500px;">
                <object data='data:application/pdf;base64,@data.ContentBase64' class="childDiv+@data.Id" type='application/pdf' id='pdfview' height="1000" width="100%"></object>-->
                                            @*<object class="childDiv+@Model.Id" data="@(Constant.AppSettings.FileWebApiBaseUrl)api/streamdocs?fileId=@Model.Id" type="application/pdf" height="1000" width="100%" alt="pdf"></object>*@
                                            <!--</div>-->
                            <div style="width:100%;max-height:500px;">
                                <object>
                                    <embed id="@data.Id" type="application/pdf" width="1200" height="600" src="data:application/pdf;base64,@data.ContentBase64#toolbar=0&navpanes=0" />
                                </object>
                            </div>
                                                <!--<div>
                    <script>
                        $(document).ready(function () {
                            window.onload = function () {
                            
                            var pdfViewer = document.getElementById('pdfViewer_@data.Id').ej2_instances[0];
                            pdfViewer.print.print();
                        }
                         var viewer = new ej.pdfviewer.PdfViewer({-->
                                                @*downloadFileName: "@tab.VersionNo",*@
                                                <!--documentPath: "@data.Id",
                            serviceUrl: '/api/PdfViewer/',
                            isCommandPanelOpen:true
                            });
                            ej.pdfviewer.PdfViewer.Inject(ej.pdfviewer.Toolbar, ej.pdfviewer.Magnification, ej.pdfviewer.BookmarkView, ej.pdfviewer.ThumbnailView, ej.pdfviewer.TextSelection, ej.pdfviewer.TextSearch, ej.pdfviewer.Print, ej.pdfviewer.Navigation, ej.pdfviewer.LinkAnnotation, ej.pdfviewer.Annotation, ej.pdfviewer.FormFields);
                            viewer.appendTo('#pdfViewer_@data.Id');
                            debugger
                            });
                        </script>
                        <div id="pdfViewer_@data.Id" style="height:640px; width:100%;"></div>
                    </div>-->
                                                }
                                                if (data.FileExtension == ".doc" || data.FileExtension == ".docx")
                                                {
                                                <h1>@Resource["test"]</h1>
                                                <div id="doccontainer" style="height:95vh;"></div>
                                                <script>
       // alert("teest");
    document.addEventListener('DOMContentLoaded', function () {
        var container = new ejs.documenteditor.DocumentEditorContainer({
            "enableLocalPaste": false,
            "enableToolbar": true,
            "restrictEditing": false,
            "showPropertiesPane": false
        });

        container.appendTo("#doccontainer");
        loadFile();

        function loadFile() {
            $.ajax({
                type: "GET",
                url: "/cms/Import",
                data: { fileId: '@data.Id' },
               // contentType: "text/html",
                //dataType: "text",
                success: function (result) {
                  //  container.documentEditor.open(result);
                  //  container.documentEditor.resize();
                    //alert(result);
                },
                error: function (xhr, httpStatusMessage, customErrorMessage) {
                    alert(customErrorMessage);
                }
            });
        }
    });
                                                </script>
                                                }
                                                if (data.FileExtension == ".mp4")
                                                {
                                                <video id="videoRec" @*autoplay*@ style="width: 95%;margin:2%;" controls playsinline>
                                                    <source src="/cms/Document/GetFileMongo?fileId=@data.Id" type="video/mp4">
                                                </video>
                                                }
                                                if (data.FileExtension == ".mp3")
                                                {
                                                <audio id="audioRec" controls playsinline style="width: 95%;margin:2%;">
                                                    <source src="/cms/Document/GetFileMongo?fileId=@data.Id" type="audio/mp3">
                                                </audio>
                                                }
                                                }
                                                }


                                                @*@if (Model.MediaNewType == "CLOUD")
                        {
                            <div>
                                <iframe id="cloudDiv+@Model.Id" src="@Model.CloudDocumentUrl" width="100%" height="1000"></iframe>
                            </div>
                        }*@
                                            </div><br /><hr />
                                            <div class="row row-marg" style="padding-bottom:0px;padding-top:0px">
                                                <div class="col-xs-6 col-md-6" style="text-align:center">
                                                    <div class="iconwithtextnoanim">
                                                        <img src="~/images/likecounticon.png" width="35" height="35" alt="" title="@Resource["Likes"]" />
                                                        <div onclick="showUsers('@Model.NoteId')" id="lcnt-@Model.NoteId" style="color:gray; padding-left: 12px; font-weight:normal; font-size: 12px; cursor:pointer">@Model.LikesUserCount</div>
                                                    </div>
                                                </div>
                                                <div class="col-xs-6 col-md-6">
                                                    <div class="iconwithtextnoanim" style="text-align:right; padding-top: 11px">
                                                        @*<div style="color: dimgray; font-weight: normal; font-size: 12px; ">Comments</div>
                                <div id="ncmt-@Model.NoteId" style="color:gray; padding-left: 12px; font-weight:normal; font-size: 12px">@Model.CommentsCount</div>*@
                                                    </div>
                                                </div>
                                            </div><br /><hr />
                                            <div class="row row-marg" style="padding-bottom:15px;">
                                                <div class="col-xs-4 col-md-4">
                                                    <div class="iconwithtextnoanim" id="unlike-@Model.NoteId" style="text-align:right; padding-left: 15px;display:none;">
                                                        <div style="font-size:18px"><i class="fad fa-thumbs-up" style="color:blue;"></i></div>
                                                        <div id="act-@Model.NoteId" onclick="UnLikeNote('@Model.NoteId')" style="cursor:pointer; padding-left: 15px; color: darkslateblue; font-weight: bold; font-size:11px">@Resource["Liked"]</div>
                                                    </div>
                                                    <div class="iconwithtextnoanim" id="like-@Model.NoteId" style="text-align:right;">
                                                        <div style="font-size:18px"><i class="fal fa-thumbs-up"></i></div>
                                                        <div id="acte-@Model.NoteId" onclick="LikeNote('@Model.NoteId')" style="cursor:pointer;padding-left: 15px; color: gray; font-weight: bold; font-size:11px;">@Resource["Like"]</div>
                                                    </div>
                                                </div>
                                                <div class="col-xs-4 col-md-4" style="text-align:center">
                                                    <div title="Comment" onclick="gototextbox('@Model.NoteId')" id="comme-@Model.NoteId" style="cursor:pointer; color: dimgray; font-weight: bold; font-size:11px">
                                                        <div title="@SharedResource["Comment"]" style="font-size:18px">
                                                            <i class="fad fa-comments-alt"></i>
                                                            <span style="font-size:12px;">@SharedResource["Comment"]</span>
                                                            <span id="ncmt-@Model.NoteId" style="color:gray; padding-left: 12px; font-weight:normal; font-size: 12px">@Model.CommentsCount</span>
                                                        </div>
                                                    </div>
                                                </div>
                                                @if (Model.IsUserGuide == false)
                                                {
                                                    <div class="col-xs-4 col-md-4" style="text-align:center" id="shareid-@Model.NoteId">
                                                        <div title="@SharedResource["Share"]" style="color: gray; font-weight: bold; cursor:pointer" onclick="manageShare('@Model.NoteId')">
                                                            <div style="text-align:center;font-size:18px">
                                                                <i class="fal fa-share-alt"></i>
                                                                <span style="font-size:12px;"> @SharedResource["Share"]</span>
                                                                <span id="nshr-@Model.NoteId" style="color:gray; padding-left: 12px; font-weight:normal; font-size: 12px">@Model.ShareCount</span>
                                                            </div>
                                                        </div>
                                                    </div>
                                                }

                                            </div><hr />
                                            <div class="row row-marg" id="route-@Model.NoteId">
                                                <div style="padding-left:28px; border: none" id="commentListPV-@Model.NoteId">
                                                    @*@(Html.Kendo().ListView<NtsNoteCommentViewModel>()
                                                      .Name("listView-" + @Model.NoteId)
                                                      .TagName("div")
                                                      .AutoBind(true)
                                                      .ClientTemplateId("template")
                                                      .DataSource(dataSource => dataSource
                                                      .Ajax()
                                                        .Read(read => read.Action("ReadNoteCommentData", "Cms", new { noteId = Model.NoteId, area = "" }))
                                                        .Model(model => model.Id(p => p.Id))
                                                   )*@

                                                    @*<div id="listViewEP"></div>*@
                                                    <div id="listView-@Model.NoteId"></div>

                    @*.DataSource(dataSource =>
                    {
                    .Ajax()
                    dataSource.Read(read => read.Action("ReadNoteCommentData", "Cms", new { noteId = Model.Id,area="" }));
                    })*@

                    
                                                </div>
                                                <div class="col-xs-11 col-md-11 group" style="color: lightgray">
                                                    @Html.TextBoxFor(m => m.MessageComment, new { @class = "input", @placeholder = @Resource["PostComment....."], id = "commentId-" + @Model.NoteId })
                                                </div>
                                                <div class="col-xs-1 col-md-1" style="margin-left:-70px;margin-top:10px;">
                                                    @*<img src="~/Images/attachment.png" alt="" width="20" height="20" title="Attachment" />*@
                                                </div>
                                            </div>
                                        </div>
    </div>
    @Html.HiddenFor(x => x.LikeStatus)
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.IsUserGuide)
</div>
<script type="text/x-kendo-tmpl" id="template">
    <div class="iconwithtextnoanim" style="padding-left:10px; margin-bottom: 10px;">
        <img width="25" height="25" src="@Url.Content(String.Format("~/images/S.png", "#=CommenterFirstLetter#"))">

        <div>
            <div class="iconwithtextnoanim" style="padding-left: 10px;">
                <div class="fromcolor" >#=CommentedByUserName#</div>
                <div style="font-size: 10px; padding-left: 10px;"></div>
                <div style="font-size: 10px; padding-left: 10px;">#=Comment#</div>
            </div>
            <div class="iconwithtextnoanim" style="margin-bottom:10px; padding-left: 30px;">
                <div style="font-size: 10px; color: midnightblue"></div>
                <div style="font-size: 10px; padding-left: 10px; color: dimgrey"></div>
                <div style="font-size: 10px; color: dimgrey">#:kendo.toString(kendo.parseDate(CommentedDate), 'yyyy-MMM-dd hh:mm:ss')#</div>
            </div>
        </div>

    </div>
</script>
<script type="text/javascript">
    $(document).ready(function () {
        debugger;
        @*var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/cms/ReadNoteCommentData?noteId=" + '@Model.NoteId',
                    dataType: "json"
                }
            },
        });*@

        @*$("#listView-@Model.NoteId").kendoListView({
            dataSource: dataSource,
            template: kendo.template($("#template").html())
        });*@

        $('#commentId-@Model.NoteId').bind('keyup', function (e) {
            //debugger;
            var c = $('#commentId-@Model.NoteId').val();
            if (e.keyCode == 13 && c != '') {
                var c = $('#commentId-@Model.NoteId').val()
                $.ajax({
               type: "POST",
              url: "/cms/PostNoteComment",
                 data: {
                     NtsNoteId: "@Model.NoteId",
                     Comment: c,
                    // CommentToUserId: $("#CommentToUserId").data("kendoDropDownList").value()
                   // FileId: $("#FileId").val(),
                },
                    success: function (data) {
                         $("#listView-@Model.NoteId").data("kendoListView").dataSource.read();
                        $("#ncmt-" + "@Model.NoteId").html(data.CommentsCount);
                        $('#commentId-@Model.NoteId').val("");
                        //FillCommentCount();
               },
               dataType: "json",
           });
            }

        });

        if ('@Model.ILiked' == '0') {
            $("#unlike-@Model.NoteId").hide();
              $("#like-@Model.NoteId").show();
        } else {
            $("#like-@Model.NoteId").hide();
            $("#unlike-@Model.NoteId").show();
        }
        //FillSharingCount();
    });
    function FillSharingCount() {
        @*var openUrl = "/cms/GetNoteSharedCount?noteId=@Model.NoteId" ;
        $.ajax({
            url: openUrl,
            type: 'GET',
            cache: false,
            success: function (data) {
                //alert('@Model.NoteId');
                $("#nshr-@Model.NoteId").html(data);
            },
            error: function (errData) {
               // OnError(errData);
            }
        });*@
        //refreshing the list
        CallBack();
    }
    function FillCommentCount() {
        var openUrl = "/cms/GetNoteCommentCount?noteId=@Model.NoteId" ;
        $.ajax({
            url: openUrl,
            type: 'GET',
            cache: false,
            success: function (data) {
                $("#ncmt-@Model.NoteId").html(data);
            },
            error: function (errData) {
               // OnError(errData);
            }
        });
    }


    function onDataBound(e) {
        var listViewElements = e.sender.tbody.find(".listview");
        $.each(listViewElements, function () {
            alert("adsasdasd");
        });
    }

    function updateList() {
        $.ajax({
               type: "GET",
               url: "/nts/note/CommentsList",
               data: { NoteId: '@Model.Id'},
               cache: false,
               dataType: "html",
               success: function (data) {
                   $("#commentListPV").html(data);
            }, error: function (xhr) {
                alert(xhr.responseText);
            }
           });
    }


    function onSeriesClick(e) {
        //alert(e.series.name);
    }
    function OnGoalCreate(e) {

    }
    function OnTeamGoalCreate(e) {
        var usr = $("#TeamUserId").data("kendoDropDownList");
        window.location.href = "/pms/performancedocument/manage?userId=" + usr.value();

    }
    function CloseTask(redirect, tempId) {
        var wnd = $("#kiframepopupwindow").data("kendoWindow");
        wnd.close();
        if (redirect) {
            window.location.href = "/nts/task/Manage?templateId=" + tempId;
        }
    }
    function OnServiceCreate(e) {
        iframeOpenUrl = "/nts/service/Create";
        var wnd = $("#kiframepopupwindow").data("kendoWindow");
        wnd.setOptions({
            width: 800,
            height: 400,
            title: "@Html.Raw(SharedResource["CreateService"])"
        });
        wnd.center().open();
    }
    function CloseService(redirect, tempId) {
        var wnd = $("#kiframepopupwindow").data("kendoWindow");
        wnd.close();
        if (redirect) {
            window.location.href = "/nts/service/Manage?templateId=" + tempId;
        }
    }
    function onDataBound(e) {
        // kendoConsole.log("Data bound");
    }
    $(function () {
        $(document).bind("kendo:skinChange", updateTheme);
    });

    function updateTheme() {
        $("#chart").getKendoChart().setOptions({ theme: kendoTheme });
    }
    function OnTeamChange(e) {
        var usr = $("#TeamMemberId").data("kendoDropDownList");
        if (usr.value() != '') {
            $("#chartSummary").data("kendoChart").dataSource.read({ teamMemberId: usr.value() });
        }
        else {
            $("#chartSummary").data("kendoChart").dataSource.read();
        }
        $("#chartSummary").data("kendoChart").refresh();
    }

    (function (w, d) {


        function LetterAvatar(name, size) {

            name = name || '';
            size = size || 60;

            var colours = [
                "#1abc9c", "#2ecc71", "#3498db", "#9b59b6", "#34495e", "#16a085", "#27ae60", "#2980b9", "#8e44ad", "#2c3e50",
                "#f1c40f", "#e67e22", "#e74c3c", "#ecf0f1", "#95a5a6", "#f39c12", "#d35400", "#c0392b", "#bdc3c7", "#7f8c8d"
            ],

                nameSplit = String(name).toUpperCase().split(' '),
                initials, charIndex, colourIndex, canvas, context, dataURI;



                initials = nameSplit[0].charAt(0);

            if (w.devicePixelRatio) {
                size = (size * w.devicePixelRatio);
            }

            charIndex = (initials == '?' ? 72 : initials.charCodeAt(0)) - 64;
            colourIndex = charIndex % 20;
            canvas = d.createElement('canvas');
            canvas.width = size;
            canvas.height = size;
            context = canvas.getContext("2d");

            context.fillStyle = colours[colourIndex - 1];
            context.fillRect(0, 0, canvas.width, canvas.height);
            context.font = Math.round(canvas.width / 2) + "px Arial";
            context.textAlign = "center";
            context.fillStyle = "#FFF";
            context.fillText(initials, size / 2, size / 1.5);

            dataURI = canvas.toDataURL();
            canvas = null;

            return dataURI;
        }

        LetterAvatar.transform = function () {

            Array.prototype.forEach.call(d.querySelectorAll('img[avatar]'), function (img, name) {
                name = img.getAttribute('avatar');
                img.src = LetterAvatar(name, img.getAttribute('width'));
                img.removeAttribute('avatar');
                img.setAttribute('alt', name);
            });
        };


        // AMD support
        if (typeof define === 'function' && define.amd) {

            define(function () { return LetterAvatar; });

            // CommonJS and Node.js module support.
        } else if (typeof exports !== 'undefined') {

            // Support Node.js specific `module.exports` (which can be a function)
            if (typeof module != 'undefined' && module.exports) {
                exports = module.exports = LetterAvatar;
            }

            // But always support CommonJS module 1.1.1 spec (`exports` cannot be a function)
            exports.LetterAvatar = LetterAvatar;

        } else {

            window.LetterAvatar = LetterAvatar;

            d.addEventListener('DOMContentLoaded', function (event) {
                LetterAvatar.transform();
            });
        }

    })(window, document);

     $(function () {
         @*if ('@Model.ReferenceType' === 'Organization')
         {
             $('#shareid-@Model.Id').hide();
         }*@

    });

    $(function () {
        var id = '#mainav-@Model.Id';

        $.ajax({
          // url: "/nts/note/GenerateAvatar",
          // type: "GET",
          // data: { name: '@Model.OwnerDisplayName' },
          // cache: false,
          // success: function (data) {
          //
          //     var imag = "<img style='border-radius: 80px; width: 60px; height: 60px'"
          //         + "src='" + data + "'/>";
          //
          //     $(id).html(imag);
          //
          // },
          // error: function (xhr) {
          //    // alert(xhr.responseText);
          // }
        });
    });

    $(function () {
        if ('@Model.ILiked' == '0' ) {
              $("#unlike-@Model.Id").hide();
              $("#like-@Model.Id").show();
        } else {
            $("#like-@Model.Id").hide();
            $("#unlike-@Model.Id").show();
        }
    });

    function LikeNote(id) {

        $("#like-"+id).hide();
        $("#unlike-" + id).show();
        var count = $("#lcnt-" + id).html() + 1;
        $.ajax({
            type: "Get",
            url: "/cms/LandingPage/LikeUnlikeNote?likeState=LIKE&Id=" + id,
           // data: { 'likeState': 'LIKE', 'Id':id },
            success: function (data) {
                //debugger;
                $("#lcnt-" + id).html(data.LikeCount);
            },
            dataType: "json",
        });

    }






    function UnLikeNote(id) {
        $("#unlike-" + id).hide();
        $("#like-" + id).show();
        var count = $("#lcnt-" + id).html() - 1;
        $.ajax({
            type: "Get",
            url: "/cms/LandingPage/LikeUnlikeNote?likeState=UNLIKE&Id=" + id,
           // data: { 'likeState': 'UNLIKE', 'Id': id },
            success: function (data) {
                //debugger;
                $("#lcnt-" + id).html(data.LikeCount);
            },
            dataType: "json",
        });

    }

    function showUsers(id) {
        return false;
        iframeOpenUrl = "/nts/note/GotoLikesUser?noteId=" + id;
        var wnd = $("#kiframepopupwindow").data("kendoWindow");
        wnd.setOptions({
            width: 400,
            height: 600,
            title: "@Html.Raw(Resource["UsersLikethisNote"])"
        });
        wnd.center().open();
    }



    function loadImage(e) {
        //alert(e.id)
        const viewer = new Viewer(document.getElementById(e.id), {
            hidden: function () {
                viewer.destroy();
            },
        });

        // image.click();
        viewer.show();

    }
    var clicked = false;
    function gototextbox(id) {
        //return false;
        //$("#commentId-" + id).focus();
        if (!clicked) {
            clicked = true;
            var dataSource = new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/ReadNoteCommentData?noteId=" + '@Model.NoteId',
                        dataType: "json"
                    }
                },
            });
            $("#listView-@Model.NoteId").kendoListView({
                dataSource: dataSource,
                template: kendo.template($("#template").html())
            });
        }        
    }

</script>
