@using Syncfusion.EJ2
@using Syncfusion.EJ2.Navigations

@using CMS.UI.ViewModel
@using CMS.Business
@using CMS.Common;
@{
    ViewData["Title"] = "Import";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model TemplateViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }

    .k-widget k-upload k-upload-async k-upload-empty {
        width: 80%
    }
</style>
<script>
    function ShowLoader(target) {
        // target.loadingOverlay();
        kendo.ui.progress(target, true);
    }
    function HideLoader(target) {
        //target.loadingOverlay('remove');
        kendo.ui.progress(target, false);
    }
    function Import() {
        
        
        if ($("#actualCode").val() == $("#Code").val()) {
            kendo.confirm("Are you about to override the existing template.If you want to Create new template change the code.").then(function () {
                OnImport();
            }, function () {
                return;
            });
        }
        else
        {
            OnImport();
        }

    }
    function OnImport()
    {
        ShowLoader($('#content-wrapper'));
         $.ajax({
            type: "POST",
            url: "/Cms/Template/ImportTemplate",
            dataType: "json",
            data:
            {
                TemplateType: '@Model.TemplateType',
                TemplateCategoryId: $("#TemplateCategoryId").val(),
                Name: $("#Name").val(),
                Code: $("#Code").val(),
                DisplayName: $("#DisplayName").val(),
                Description: $("#Description").val(),
                ImportFileId: $("#ImportFileId").val()
            },
            success: function (response) {
                if (response.success) {
                    ShowNotification("Imported Successfully", 'success');

                 
                    var win = GetMainWindow();
                    win.CloseWindow();
                    return false;
                }
                else
                {
                    ShowNotification(response.error, 'error');
                }
                HideLoader($('#content-wrapper'));
            },
            error: function (res) {
                HideLoader($('#content-wrapper'));
                showError(res.error);
            }
        });
    }
    function onFileUploadSuccess(e) {
        if (e.response.success) {
            $("#ImportFileId").val(e.response.fileId);
            $.ajax({
                type: "GET",
                url: "/Cms/Template/getTemplateDetails?fileId=" + $("#ImportFileId").val(),
                dataType: "json",
                success: function (response) {
                    $("#Name").val(response.Name);
                    $("#DisplayName").val(response.DisplayName);
                    $("#Code").val(response.Code);
                    $("#actualCode").val(response.Code);
                    $("#Description").val(response.Description);
                },
            });
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    $(document).ready(function () {

      //  uploadFile();


    });

    function uploadFile() {
        $("#iconFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs 
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $("#ImportFileId").val(data.fileId);
                //upload Callback
                $.ajax({
                    type: "GET",
                    url: "/Cms/Template/getTemplateDetails?fileId=" + $("#ImportFileId").val(),
                    dataType: "json",
                    success: function (response) {
                        $("#Name").val(response.Name);
                        $("#DisplayName").val(response.DisplayName);
                        $("#Code").val(response.Code);
                        $("#actualCode").val(response.Code);
                        $("#Description").val(response.Description);
                    },
                });

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }

</script>
<div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>
<input type="hidden" name="actualCode" id="actualCode"/>
<div class="row" style="padding:10px;margin-left:15px;">
    <div class="row">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12" style="margin-top:20px"><label class="col-form-label SYN-sub-title">Select File To Import</label></div>
    </div>

    <br />
    <div class="row">
        <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12" style="margin-top:20px">
            <div class="x-dropdown dropdown" style="width:80%">
                @*@(Html.Kendo().Upload().Multiple(false)
            .Name("files")
            .Async(a => a
            .Save("SaveFile", "Document", new { @Area="Cms"})
            .AutoUpload(true)
            )
            .Events(e => e.Success("onFileUploadSuccess")
            )
                //.Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })

                //)
                .HtmlAttributes(new { @class = "form-control", @id = "files2", style="width:80%"})
        )*@

                <div class="row">
                    @{
                        await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel
                        {
                            CallbackMethod = "onFileUploadSuccess",
                            Property = nameof(Model.ImportFileId),
                        });
                    }
                    @*<div class="col">
            <div id="iconFile" class="dm-uploader">
                <h6 class=" text-muted">Drag &amp; drop files here</h6>

                <div class="btn btn-primary btn-block ">
                    <span>Open the file Browser</span>
                    <input type="file" title='Click to add Files' />
                </div>
            </div>

        </div>
                if multiple use this

                <div class="col">
            <div class="card h-100">
                <div class="card-header">
                    File List
                </div>
                <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                    <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                </ul>
            </div>*@


                </div>
                @*if multiple use this*@
                @*</div>*@

                @*@{
                    await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.ImportFileId), Value = Model.ImportFileId });
                }*@

            </div>
        </div>
        <div class="row" style=" padding:10px;">

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" title="Special character and space not allowed in name." required="required" autocomplete="off" style="width:80%" />
                    <label for="Name">Name <span class="required">*</span></label>
                </div>
            </div>
            @*<div class="col-12 pad-15">
                 @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", placeholder = "Name", style = "width:80%", required = "required" })
                </div>*@
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="DisplayName" type="text" class="form-control" placeholder="Enter Display Name" title="Special character and space not allowed in name." required="required" autocomplete="off" style="width:80%" />
                    <label for="DisplayName">Display Name <span class="required">*</span> </label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="Code" type="text" class="form-control" placeholder="Enter Code" autocomplete="off" required="required" style="width:80%" />
                    <label for="Code">Code <span class="required">*</span></label>
                </div>
            </div>

            @*<div class="col-12 pad-15">
                    @Html.TextBoxFor(model => model.ShortName, htmlAttributes: new { @class = "form-control", placeholder = "Short Name", style = "width:80%", required = "required" })
                </div>*@

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div>
                        <label for="Description">Description </label>
                    </div>
                    <textarea asp-for="Description" class="form-control" placeholder="Description" autocomplete="off" style="width:80%; height:150px;"></textarea>
                    @*<label for="Responsibilities">Responsibilities</label>*@
                </div>
            </div>

            <div class="row">
                <div class="col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12" style="margin:20px">
                    <button class="btn btn-dark SYN-but-share" type="button" onclick="Import()">Import</button>
                </div>
            </div>
        </div>
    </div>
</div>


@Html.HiddenFor(x => x.ImportFileId)
@Html.HiddenFor(x => x.TemplateType)
@Html.HiddenFor(x => x.TemplateCategoryId)


<script type="text/javascript">

    @*$(document).ready(function () {
        if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();
            window.parent.$("#SubModulegrid").data("kendoGrid").dataSource.read();
        }

    });

    function OnSave(evt) {

        if ($("#ModuleId").val() == "") {
          //  
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Module is required");
            evt.preventDefault();
            return false;

        }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }
    }*@

    function closeNavMemberGroup() {
      
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

</script>