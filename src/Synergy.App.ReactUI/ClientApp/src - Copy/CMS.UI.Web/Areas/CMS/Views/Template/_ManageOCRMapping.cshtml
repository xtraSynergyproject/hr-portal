@using CMS.UI.ViewModel;
@using CMS.Common;

@{
    ViewData["Title"] = "OCR Mapping";
    //Layout = null;
}
@model NoteTemplateViewModel
<script>

    var columnDefs = [
        {
            field: "FieldName",
            headerName:'Field Name'
        },
        {
            field: "Cordinate1",
            headerName: 'Cordinate X'
        },
        {
            field: "Cordinate2",
            headerName: 'Cordinate Y'
        },
        {
            field: "Cordinate3",
            headerName: 'Page Number'
        },
        //{
        //    field: "Cordinate4",
        //    headerName: 'Cordinate 4'
        //},
        //{
        //    field: "Cordinate5",
        //    headerName: 'Cordinate 5'
        //},
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-ocr' data-idvalue='" + params.value + "' data-fieldname='" + params.data.FieldName + "'><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getDataGridOcr();

        $.contextMenu({
            selector: '#tree-ocr',
            trigger: 'left',
            build: function ($trigger, e) {
                var id = $trigger.data('idvalue');
                var fieldName = $trigger.data('fieldname');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'add':
                                        onPreview('@Model.OcrTemplateFileId');
                                        break;

                                    case 'edit':
                                        onEdit(id, fieldName);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "add": { name: "View", icon: "fas fa-eye" },
                                "edit": { name: "Edit", icon: "fas fa-edit" },


                            }
                        };


                }
            }
        });


    });

    function onEdit(id, fieldName) {
       var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("PreviewOCRDocuments", "Cms", new { @area = "" })?templateId=@Model.TemplateId&ocrId=' + id + '&fileId=@Model.OcrTemplateFileId&fieldName=' + fieldName;
        win.OpenWindow({ Title: 'Preview OCR Documents', Width: 1000, Height: 700 });
        return false;
    }
    function onPreview(id) {
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("PreviewOCRDocuments", "Cms", new { @area = "" })?fileId=' + id;
        win.OpenWindow({ Title: 'Preview OCR Documents', Width: 1000, Height: 700 });
        return false;
    }


    function getDataGridOcr() {
        document.getElementById("ocrGrid").innerHTML = "";
       gridConfig(
           "ocrGrid",
           "/cms/Template/GetOCRMapping?templateId=@Model.TemplateId",
           columnDefs,
           false,
           true,
           true,
           true,
           1,
           true,
           10);
        }

        function OnUploadSuccess(e) {
            if (e.response.success) {
                var fileid = e.response.fileId;
                var templateId = '@Model.TemplateId';
                $("#OcrTemplateFileId").val(fileid);
                $.ajax({
                    url: "/CMS/Template/SetOcrTemplateFileId?templateId=@Model.TemplateId&fileId=" + fileid,
                    type: "GET",
                    dataType: "JSON",
                    success: function (response) {
                        if (response) {
                            LoadPartailView('@Url.Action("ManageOCRMapping", "Template", new { @area = "Cms" })?templateId=' + templateId, $('#ocrTemplate'));
                        }
                    }
                });
            }
            else {
                var msg = e.response.errors;
                alert(msg);
            }
            return true;
        }


        function onUploadError(e) {
            if (e.response != null && e.response != undefined) {
                var msg = ExtractError(e.response.errors, true);
                alert(msg);
            }
            else {
                alert(e.XMLHttpRequest.responseText);
            }

        }
</script>
<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">       
    <div class="col-12">Upload OCR Template Document</div>
    <div class="row" style="margin-top:10px;">
        <div class="col-xs-11 col-md-11">
            <div style="margin-top:10px;padding-left:10px;color:dimgray">

                @(Html.Kendo().Upload()
                                        .Name("files")
                                        .Async(a => a
                                            .Save("UploadFiles", "Document",new {@area="Dms" })
                                        )
                                        .Multiple(false)
                                        .Directory(false)
                                        .DirectoryDrop(false)
                                        .Events(e => e.Success("OnUploadSuccess").Error("onUploadError"))
                                    )

            </div><br />
            @if (Model.OcrTemplateFileId.IsNotNullAndNotEmpty())
            {
                <a onclick="onPreview('@Model.OcrTemplateFileId')" style="color:Highlight">@ViewBag.FileName</a>
            }
        </div>
    </div>
    <div class="row">
        <div class="pad-15 no-gutters" style="width: 100%;">
            <div id="ocrGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>
@Html.HiddenFor(m => m.OcrTemplateFileId)

