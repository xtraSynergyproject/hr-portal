@inject IStringLocalizer<CMS.UI.Web.Areas.Pms.Controllers.PerformanceController> Resource
@using CMS.Data.Model
@using CMS.UI.ViewModel
@using Kendo.Mvc.UI
@using CMS.Common

@model ProgramDashboardViewModel

@{
    /**/

    /**/
    // Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
    //Layout = "~/Views/Shared/_LayoutPopup.cshtml";
}
<style>
    .k-gantt .k-treelist .k-alt.k-state-selected, .k-gantt .k-treelist .k-alt.k-state-selected > td, .k-gantt .k-treelist .k-state-selected, .k-gantt .k-treelist .k-state-selected td {
        background-color: none !important;
    }

    .k-state-selected {
        color: #fff;
        background-color: #fd695e;
        border-color: #fd695e;
    }

    .k-task-single {
        background-color: #fd695e;
        border-color: #f58647;
        color: #fff;
        /* height: 25px; */
        text-align: center;
        /* vertical-align: middle; */
        /* padding: 3px; */
    }

    ::-webkit-scrollbar-thumb {
        border-radius: 0px !important;
        background-color: #d4d4d4 !important;
        background-image: none !important;
    }

    ::-webkit-scrollbar-track {
        -webkit-box-shadow: none !important;
        background-color: #fafafa;
        border-radius: 0px !important;
    }

    .k-gantt .k-treelist .k-alt {
        background-color: #ffffff;
    }

    .k-grid td {
        color: black !important;
        font-size: 14px !important;
        font-family: sans-serif;
    }

    .k-link {
        color: #28282b !important;
        font-size: 14px !important;
        font-family: sans-serif;
    }

    .k-gantt .k-grid-content tr, .k-gantt-rows tr, .k-gantt-tasks tr {
        height: 4.4em;
    }
    /*style the task template*/
    .k-task-template {
        height: 100%;
        padding: 0 !important;
    }

    .template {
        height: 100%;
        overflow: hidden;
    }

    .resource-img {
        float: left;
        width: 32px;
        height: 32px;
        border-radius: 50%;
        margin: 8px;
    }

    .tree-list-img {
        float: left;
        width: 32px;
        height: 32px;
        border-radius: 50%;
    }

    .wrapper {
        padding: 8px;
        color: #fff;
    }

    .k-task-template .wrapper > * {
        display: block;
        overflow: hidden;
        text-overflow: ellipsis;
    }

    .title {
        font-weight: bold;
        font-size: 13px;
    }

    .resource {
        text-transform: uppercase;
        font-size: 9px;
        margin-top: .5em;
    }

    .progress {
        position: absolute;
        left: 0;
        bottom: 0;
        width: 0%;
        height: 4px;
        background: rgba(0, 0, 0, .3);
    }

    .team-lead-name {
        display: inline-block;
        vertical-align: middle;
        line-height: 32px;
        padding-left: 3px;
    }
    /*center treelist cell content vertically*/
    .k-gantt .k-treelist td {
        vertical-align: middle;
    }

    /*hide the resource labels, as they are present in the task template*/
    .k-gantt .k-resource {
        display: none;
    }
    /* .k-reset {
        float:left;
        display:inline-flex;
        padding:10px;
    }*/
    .k-link {
        padding: 5px;
    }

    .k-gantt {
        display: inline-block;
    }

    #ProjectTimeLineGanttChart {
        width: 100%;
    }
    /*#ProjectFilter .k-reset {
        float: unset;
        display: unset;
        padding: unset;
    }*/
</style>
<script type="text/javascript">
    function OnTimelineView() {
        //alert("Timeline");
        $("#divtimelineview").show();
        $("#divgridview").hide();
        $("#ProjectTimeLineGanttChart").data("kendoGantt").dataSource.read();
    }
    function OnGridView() {
        //alert("Grid View");
        $("#divtimelineview").hide();
        $("#divgridview").show();
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read();
    }
    function OnOpen(TemplateCode, Id) {
        
       // e.preventDefault();
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var portalId = $('#GlobalPortalId').val();
        // var prms = encodeURIComponent('parentServiceId=' + Id);
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=View&dataAction=View&templateCodes=' + TemplateCode + '&portalId=' + portalId + '&recordId=' + Id;

        LoadCmsPartialView(url, 'Task', true, 1200, 650, 'Open Task');
        return false;

    }
</script>
<script>



    $(document).ready(function () {
        HideLoader($("#global-overlay"));
        window.parent.LoadPartailView1("/pms/PerformanceTask/ProjectDetailsFilter", 'ProjectFilter');
            var parentId = null;
            var userType = null;
            OnGridView();
        $("#menu, #divmenu").mouseleave(function () {
            $("#menu").hide();
        });
        $("#stagemenu, #divstagemenu").mouseleave(function () {
            $("#stagemenu").hide();
        });

            $(".bt1").click(function (e) {
                var tasks = $("#ProjectTimeLineGanttChart").data("kendoGantt").dataSource.view();
                var shouldExpand = !tasks[0].expanded;
                for (i = 0; i < tasks.length; i++) {

                    tasks[i].set("expanded", shouldExpand)
                }
            })

        });

    function OnStageMenuClick(e) {
        var command = $(e.item).attr('id');

        if (command == "CreateNewStage") {
            var portalId = $('#GlobalPortalId').val();
            var prms = encodeURIComponent('parentServiceId=' + serviceId);

            var url = '/Cms/Page?lo=Popup&cbm=OnAfterCreate&source=Create&dataAction=Create&pageName=ProjectStage&portalId=' + portalId + '&prms=' + prms;
            LoadCmsPartialView(url, 'Service', true, 1000, 600, '@Html.Raw(Resource["CreateStage"])');
        }
        $("#stagemenu").hide();
    }

    function OnTaskMenuClick(e) {
        var command = $(e.item).attr('id');

        if (command == "Open") {
            var portalId = $('#GlobalPortalId').val();
            var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=Versioning&dataAction=Edit&templateCodes=ProjectTask&portalId=' + portalId + '&recordId=' + taskId;
            LoadCmsPartialView(url, 'Task', true, 1200, 650, 'Edit Task');
        }
        else if (command == "SubTask") {
            var portalId = $('#GlobalPortalId').val();
            var prms = encodeURIComponent('parentServiceId=' + parentid + '&parentTaskId=' + taskId);
            var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=Create&dataAction=Create&templateCodes=ProjectTask&portalId=' + portalId + '&prms=' + prms;
            LoadCmsPartialView(url, 'Task', true, 1200, 650, 'Create Sub Task');

            @*if (userType == '@NtsUserTypeEnum.Assignee' || '@Model.TemplateUserType' == '@NtsUserTypeEnum.Owner') {
                
            }
            else {
                alert("Owner or assignee can create sub task");
            }*@
        }
        $("#menu").hide();
    }
    function OnAfterCreate(service) {
        $("#ProjectTimeLineGanttChart").data("kendoGantt").dataSource.read();
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read();
    }
    function OnExcelMenuClick(e) {
        @*var command = $(e.item).attr('id');
             //
            if (command == "Open") {
                    
             }
             else if (command == "SubTask") {

                 if (userType == '@NtsUserTypeEnum.Assignee' || '@Model.TemplateUserType' == '@NtsUserTypeEnum.Owner') {
                    
                 }
                 else {
                        alert("Owner or assignee can create sub task");
                 }
             }
             $("#menu").hide();
        }*@
    }
        function OnDataBound(e) {

        }
        function onChange(e) {

            var gantt = e.sender;
            var selection = gantt.select();

            if (selection.length) {
                var dataItem = gantt.dataItem(selection);

                
                if (dataItem.Type == 'Task') {
                    menu = $("#menu");
                    menu1 = $("#stagemenu");
                    taskId = dataItem.Id;
                    parentid = dataItem.parentId;
                    menu.css({ top: event.pageY+100, left: event.pageX-300 });
                    console.log(event.pageY, event.pageX);
                    menu.show();
                    menu1.hide();
                }
                else {
                    menu = $("#stagemenu");
                    menu1 = $("#menu");
                    serviceId = dataItem.Id;
                    console.log(event.pageY, event.pageX);
                    menu.css({ top: event.pageY+100, left: event.pageX-300 });
                    menu.show();
                    menu1.hide();
                }
            }
        }
        $("#CreateItem").click(function () {
            var portalId = $('#GlobalPortalId').val();
            var prms = encodeURIComponent('parentServiceId=@Model.Id');
            var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=Create&dataAction=Create&pageName=ProjectTask&portalId=' + portalId + '&prms=' + prms;

            LoadCmsPartialView(url, 'Task', true, 1200, 650, '@Html.Raw(Resource["Create"])');
            return false;
          
        });
        $("#CreateStage").click(function () {
            //var portalId = $('#GlobalPortalId').val();
            var prms = encodeURIComponent('parentServiceId=@Model.Id');
           // var url = '/Cms/Page?source=Create&dataAction=Create&pageName=Project&portalId=' + portalId;

           // LoadCmsPartialView(url, 'Service');

            var portalId = $('#GlobalPortalId').val();
            //var prms = encodeURIComponent('parentServiceId=123&parentTaskId=223');

            var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=Create&dataAction=Create&pageName=ProjectStage&portalId=' + portalId + '&prms=' + prms;
            LoadCmsPartialView(url, 'Service', true, 1200, 650, '@Html.Raw(Resource["Create"])');
            return false;

        });
        //$(document).on('click', function (e) {
        //    if ($(e.target).closest("#menu").length === 0 && $(e.target).closest(".hr-org-menu").length === 0) {
        //        $("#menu").hide();
        //    }
        //});
    function OnAfterTaskCreate(service) {
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read();
        onSearch();
    }
    function OnAfterServiceCreate(service) {
        onSearch();
    }
    function onSearch() {
        var search = {
            projectIds: $("#ProjectFiltersIds").data("kendoMultiSelect").value(),
            recieverids: $("#Receiver").data("kendoMultiSelect").value(),
            senderIds: $("#Sender").data("kendoMultiSelect").value(),
            statusIds: $("#Status").data("kendoMultiSelect").value(),
            column: $("#Column").data("kendoDropDownList").value(),
            dateRange: $("#DateType").data("kendoDropDownList").value(),
            fromDate: kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
            toDate: kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        /*$("#ProjectTimeLineGanttChart").data("kendoGantt").dataSource.read(search);*/
    }
    function onReset() {
        window.parent.LoadPartailView1("/pjm/ProjectTask/ProjectDetailsFilter", 'ProjectFilter');
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read();
       /* $("#ProjectTimeLineGanttChart").data("kendoGantt").dataSource.read();*/
    }
</script>
<script type="text/x-kendo-tmpl" id="title">
    <div>#=Start#</div>
</script>
<script type="text/x-kendo-tmpl" id="daytitle">
    <div>#=Start# </div>
</script>

<script id="task-template" type="text/x-kendo-template">

    <div class="template">
         @*<img class="resource-img" src='/General/File/PersonPhoto?fileId=#:data.PhotoId#' onerror="OnPhotoError(this,'#:data.UserName#');" />*@
        <div class="wrapper">
            <strong class="title">#= title # </strong>
            <span class="resource">#= UserName #</span>
        </div>
    </div>

</script>
@*<script id="column-template" type="text/x-kendo-template">

        <span class="team-lead-name">#= Title #</span>
    </script>*@
<script>
    
    var columnDefs = [
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-Bin' data-idvalue='" + params.value + "' data-status=\"" + params.data.TemplateCode + "\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
        {
            field: "Title",
            headerName: "@SharedResource["Subject"]",
        },
           {
               field: "OwnerName",
               headerName: "@SharedResource["From"]"
           },

        {
            field: "UserName",
            headerName: "@SharedResource["To"]",

        },
        {
            field: "Start",
            headerName: "@SharedResource["ReceiveDate"]",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        @if (Model.TemplateName == "PMS_GOAL" && Model.InboxType != InboxTypeEnum.RECEIVED) {
            @:{ field: "ServiceStage",headerName: "@Resource["Goal"]",},
        }
        else if (Model.TemplateName == "PMS_COMPENTENCY" && Model.InboxType != InboxTypeEnum.RECEIVED) {
            @:{ field: "ServiceStage",headerName: "@Resource["Compentency"]"},
        }
        else if (Model.InboxType != InboxTypeEnum.RECEIVED) {
             @:{ field: "ServiceStage",headerName: "@Resource["Goal"]/@Resource["Compentency"]"},
        }
         {
             field: "End",
             headerName: "@SharedResource["DueDate"]",
             cellRenderer: params => {

                 var date = new Date(params.value);
                 return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
             }
        },
         {
             field: "Priority",
            headerName: "@SharedResource["Priority"]"
        },
         {
             field: "NtsStatus",
            headerName: "@SharedResource["Status"]"
        },

    ];

    $(function () {
        getData();
        $.contextMenu({
            selector: '#tree-Bin',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                var tempCode = $trigger.data('status');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OnOpen(tempCode,id);
                                        break;


                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Open", icon: "fa fas fa-eye" },


                            }
                        };


                }
            }
        });
    });

    function getData() {
        document.getElementById("kgdProjectGridView").innerHTML = "";
        gridConfig(
            "kgdProjectGridView",
            "/Pms/PerformanceDocument/ReadPerformanceTaskGridViewData?performanceId =@Model.Id&objectiveId=@Model.ObjectiveId&inboxType=@Model.InboxType",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<div id="ProjectFilter">

</div>
<div style="margin:20px;">
    <br />
    @* @if (Model.TemplateUserType == NtsUserTypeEnum.Owner)*@

    <div class="row" style="padding-right:10px;">
        <div class="col-md-8" style="text-align: left;">
            @if (Model.Id != null)
            {
                <div>
                    <input class="k-button bt1" type="button" value="Expand/Collapse"/>&nbsp;
                    <button class="k-button k-primary" id="CreateItem">@Resource["CreateTask"]</button>&nbsp;
                    @if (Model.TemplateName == "PMS_GOAL")
                    {
                        <button class="k-button k-primary" id="CreateStage">@Resource["CreateGoal"]</button>
                    }
                    @if (Model.TemplateName == "PMS_COMPENTENCY")
                    {
                        <button class="k-button k-primary" id="CreateStage">@Resource["CreateCompentency"]</button>
                    }
                </div>
            }
        </div>
        <div class="col-md-4" style="text-align: right;">

            @*<a href="javascript: void(0); onclick=OnGridView()" class="btn btn-sm btn-primary" title="Grid View"><i class="fas fa-list-alt fa-1x"></i></a>*@
            @*@if (Model.InboxType != InboxTypeEnum.RECEIVED)
            {
                <a href="javascript: void(0); onclick=OnTimelineView()" class="btn btn-sm btn-primary" title="Timeline View"><i class="fas fa-line-columns fa-1x"></i></a>
            }*@
            &nbsp;&nbsp;&nbsp;
        </div>
    </div>

    <br />
    @*<div class="row" id="divtimelineview">
        <div class="col-sm-12">
            @(Html.Kendo().Gantt<ProjectGanttTaskViewModel, Cms.UI.ViewModel.DependencyViewModel>()
            .Name("ProjectTimeLineGanttChart")
            .Columns(columns =>
            {
                columns.Bound(c=>c.Title).Title(""+SharedResource["Subject"] +"").Width(200);
                columns.Bound(c=>c.Start).Title(""+SharedResource["ReceiveDate"] +"").Format("{0:dd MMM yyyy}").Width(100).Editable(true);
                columns.Bound(c=>c.End).Title(""+SharedResource["DueDate"] +"").Format("{0:dd MMM yyyy}").Width(100).Editable(true);
                columns.Bound(c => c.UserName).Title(""+SharedResource["Assignee"] +"").Width(150);
                columns.Bound(c => c.Priority).Title(""+SharedResource["Priority"] +"").Width(150);
                columns.Bound(c => c.NtsStatus).Title(""+SharedResource["Status"] +"").Width(150);
            })
            .Views(views =>
            {
                views.DayView();
                views.WeekView(weekView => weekView.Selected(true));
                views.MonthView();
            })
            .Events(events => events.Change("onChange"))
            .Height(700)

            .ShowWorkHours(false)
            .ShowWorkDays(false)
            .Snap(false)
            .Resizable(true)
            .TaskTemplateId("task-template")
            .Editable(false)
            .ShowWorkHours(false)
            .ShowWorkDays(false)
            .Snap(false)
            .Selectable(true)
            .DataSource(d => d
            .Model(m =>
            {
                m.Id(f => f.Id);
                m.ParentId(f => f.ParentId);
                m.Field(f => f.Expanded).DefaultValue(true);
            })
     
            .Read("ReadWBSTimelineGanttChartData", "Performance",new { @area = "PMS", performanceId = Model.Id }) 
       
            )
           
            )

        </div>
    </div>*@

    <div id="divgridview" class="row">

        <div class="col-sm-12">
            <div id="kgdProjectGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            @*@(Html.Kendo().Grid<ProjectGanttTaskViewModel>()
            .Name("kgdProjectGridView")
            .Columns(columns =>
            {

                columns.Command(command =>
                {
                    command.Custom("open").Text("<i class='fa fas fa-eye' title='Open'></i>").Click("OnOpen").HtmlAttributes(new { @class = "action-icon" });
                    //command.Custom("addtask").Text("<i class='fa fa-plus' title='Add Task'></i>").Click("OnEditJobDesc").HtmlAttributes(new { @class = "action-icon" });
                    //command.Custom("addStage").Text("<i class='fa fa-plus' title='View Job Description Request'></i>").Click("OnViewJobDesc").HtmlAttributes(new { @class = "action-icon" });
                }).Width(150).Title(""+SharedResource["Action"] +"");
                columns.Bound(p => p.Title).Title(""+SharedResource["Subject"] +"").Width(300);
                columns.Bound(p => p.OwnerName).Title(""+SharedResource["From"] +"").Width(200);
                columns.Bound(p => p.UserName).Title(""+SharedResource["To"] +"").Width(200);
                columns.Bound(p => p.Start).Title(""+SharedResource["ReceiveDate"] +"").Format("{0:dd MMM yyyy}").Width(160);
                //columns.Bound(p => p.ProjectName).Title("Project").Width(250);
                if (Model.TemplateName == "PMS_GOAL" && Model.InboxType != InboxTypeEnum.RECEIVED)
                {
                    columns.Bound(p => p.ServiceStage).Title(""+Resource["Goal"] +"").Width(250);
                }
                else if(Model.TemplateName == "PMS_COMPENTENCY" && Model.InboxType != InboxTypeEnum.RECEIVED)
                {
                    columns.Bound(p => p.ServiceStage).Title(""+Resource["Compentency"] +"").Width(250);
                }
                else if(Model.InboxType != InboxTypeEnum.RECEIVED)
                {
                    columns.Bound(p => p.ServiceStage).Title(""+Resource["Goal"]+"/"+Resource["Compentency"] +"").Width(250);
                }
                columns.Bound(p => p.End).Title(""+SharedResource["DueDate"] +"").Format("{0:dd MMM yyyy}").Width(150);
                columns.Bound(p => p.Priority).Title(""+SharedResource["Priority"]+"").Width(200);
                columns.Bound(p => p.NtsStatus).Title(""+SharedResource["Status"]+"").Width(200);


            })
            .ToolBar(toolbar =>
            {

                toolbar.Search();
            })

            .ColumnMenu(col=>col.Filterable(false))
            .Height(700)
            .Editable()
            .Pageable()
            .Sortable()
            .Navigatable()
            .Resizable(r=>r.Columns(true))
            .Reorderable(r => r.Columns(true))
            .Groupable(g=>g.ShowFooter(false))
            .Filterable()
            .Scrollable()
            //.Events(events => events.DataBound("onDataBound"))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(20)
                .AutoSync(true)
                .ServerOperation(false)

                .Model(model =>
                {
                    model.Id(p => p.Id);

                })

                .Read("ReadPerformanceTaskGridViewData", "PerformanceDocument", new { @area = "PMS", performanceId = Model.Id,objectiveId=Model.ObjectiveId , inboxType=Model.InboxType})


            )
        )*@

        </div>
    </div>
</div>
@*<div id="divmenu">
    @(Html.Kendo().Menu()
                .Name("menu")
                .Orientation(MenuOrientation.Vertical)
                .Events(e => e.Select("OnTaskMenuClick"))
                .HtmlAttributes(new { @class = "dropdown-menu", @style="width:auto;" })
                .Items(items =>
                {
                    items.Add().Text(""+SharedResource["Open"] +"").HtmlAttributes(new { @id = "Open" });
                    items.Add().Text(""+SharedResource["NewSubTask"] +"").HtmlAttributes(new { @id = "SubTask" });

                })
        )
</div>*@
@*<div id="divstagemenu">
    @(Html.Kendo().Menu()
                .Name("stagemenu")
                .Orientation(MenuOrientation.Vertical)
                .Events(e => e.Select("OnStageMenuClick"))
                .HtmlAttributes(new { @class = "dropdown-menu", @style="width:auto;" })
                .Items(items =>
                {
                    //items.Add().Text("Open").HtmlAttributes(new { @id = "OpenStage" });
                    items.Add().Text(""+Resource["CreateStage"] +"").HtmlAttributes(new { @id = "CreateNewStage" });
                })
        )
</div>*@
@*<div id="divmenu">
        @(Html.Kendo().Menu()
                .Name("menu")
                .Orientation(MenuOrientation.Vertical)
                .Events(e => e.Select("OnExcelMenuClick"))
                .HtmlAttributes(new { @class = "dropdown-menu" })
                .Items(items =>
                {
                items.Add().Text("Open").HtmlAttributes(new { @id = "Open" });
                items.Add().Text("Create Sub Task").HtmlAttributes(new { @id = "SubTask" });

                })
        )
    </div>*@

