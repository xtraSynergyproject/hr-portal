@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Kendo.Mvc.UI;
@{
    Layout = ViewBag.Layout;
}
@model FormIndexPageTemplateViewModel;
<script>
    function ReloadIndexPage(res) {
        var id = '@Model.Page.Id';
        var type = '@Model.Page.PageType.ToString()';
        var source = '@RequestSourceEnum.Main.ToString()';
        var action = '@DataActionEnum.Read.ToString()';
        LoadPageById(id, type, source, action);
    }
     function OnCreate() {
            var id = '@Model.Page.Id';
            var type = '@Model.Page.PageType.ToString()';
            var source = '@RequestSourceEnum.Create.ToString()';
            var action = '@DataActionEnum.Create.ToString()';
         LoadPageById(id, type, source, action, null, true, 1200, 600, 'Create Form', 'ReloadIndexPage');
            return false;
        }
        function OnEdit(id) {
            //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
            var id = '@Model.Page.Id';
            var type = '@Model.Page.PageType.ToString()';
            var source = '@RequestSourceEnum.Edit.ToString()';
            var action = '@RequestSourceEnum.Edit.ToString()';
            LoadPageById(id, type, source, action, id, true, 1200, 600, 'Manage Form', 'ReloadIndexPage');
            return false;
    }
    var deleteEvent = null;
    function OnDelete(id) {
        if ('@Model.EnableDeleteConfirmation'==='True')
        {
            deleteEvent = id;
            $('#confirmDelete').data("kendoDialog").open();

        }
        else
        {
            DeleteItem(id);
        }

    }
    function DeleteItem(parmId) {
       // var dataItem = $("#kgridIndex").data("kendoGrid").dataItem($(e.currentTarget).closest("tr"));
        var id = '@Model.Page.Id';
        var type = '@Model.Page.PageType.ToString()';
        var source = '@RequestSourceEnum.Post.ToString()';
        var action = '@RequestSourceEnum.Delete.ToString()';
        LoadPageById(id, type, source, action, parmId);
        return false;
    }
    function ConfirmDelete() {
        $('#confirmDelete').data("kendoDialog").close();
        DeleteItem(deleteEvent);
    }
</script>
<div class="row no-gutters pad-15">
    <div>
        <h4>@Model.Page.Title</h4>
    </div>
    <div style="width:100%">
        <script>
                        var columnDefs = [
                            {
                                headerName: "Actions",
                                field: "Id",
                                cellRenderer: params => {
                                    if ("@Model.EnableEditButton"=="True" || "@Model.EnableDeleteButton"=="True")
                                    {
                                        return "<div class='btn-group grid-menu' id='tree-menuBinTableData' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\"><i class='fas fa-ellipsis-v'></i></div>"
                                    }
                                    return "";
                                }
                            },
                            @foreach (var item in Model.SelectedTableRows)
                            {
                                @:{ field: '@item.ColumnName', headerName: '@item.HeaderName' },
                            }
                        ];
                        $(function () {
                            GetData_kgrid();
                            $.contextMenu({
                                selector: '#tree-menuBinTableData',
                                trigger: 'left',
                                build: function ($trigger, e) {


                                    var id = $trigger.data('idvalue');
                                    switch (0) {
                                        case 0:
                                            return {
                                                callback: function (key, options) {
                                                    switch (key) {

                                                        case 'edit':
                                                            OnEdit(id);
                                                            break;

                                                        case 'delete':
                                                            OnDelete(id);
                                                            break;

                                                        default:
                                                    }
                                                },
                                                items: {
                                                    @if (Model.EnableEditButton)
                                                    {
                                                        @:"edit": { name: "Edit", icon: "fas fa-edit" },
                                                    }
                                                    @if (Model.EnableEditButton)
                                                    {
                                                        @:"delete": { name: "Delete", icon: "fas fa-trash" },
                                                    }
                                                }
                                            };


                                    }
                                }
                            });
                        });

                        function GetData_kgrid() {
                            document.getElementById("kgridIndex").innerHTML = "";
                            var p = 'indexPageTemplateId=@Model.Id' ;
                            gridConfig(
                                "kgridIndex",
                                "/cms/LoadFormIndexPageGrid?"+p,
                                columnDefs,
                                false,
                                true,
                                true,
                                true,
                                1,
                                true,
                                10);
                        }
        </script>
        @if (Model.EnableCreateButton)
        {
            <button type='button' class='btn btn-primary' onclick='OnCreate();'><i class='fa fas fa-plus'></i>&nbsp;@Model.CreateButtonText.ToDefaultCreateButtonText()</button>
        }
        <div id="kgridIndex" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        @*@(Html.Kendo().Grid<dynamic>()
        .Name("kgridIndex")

        .Columns(columns =>
        {
            columns.Bound("Id").Visible(false);
            columns.Command(command =>
            {
                if (Model.EnableEditButton)
                {
                    command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEdit").HtmlAttributes(new { @class = "action-icon" });
                }
                if (Model.EnableDeleteButton)
                {
                    command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDelete").HtmlAttributes(new { @class = "action-icon" });
                }
            }).Width(120);
            foreach (var column in Model.SelectedTableRows)
            {

                columns.Bound(column.ColumnName).Title(column.ColumnHeaderName);

            }

        })

        .ToolBar(toolbar =>
        {
            if (Model.EnableCreateButton)
            {
                toolbar.ClientTemplate($"<button type='button' class='btn btn-primary' onclick='OnCreate();'><i class='fa fas fa-plus'></i>&nbsp;{Model.CreateButtonText.ToDefaultCreateButtonText()}</button>");
            }
        })
        .Scrollable(x => x.Enabled(true))
        .Sortable(srt => srt.Enabled(true))
        .Selectable(select => select.Enabled(false))
        .Filterable(f => f.Extra(false))
        .Pageable(pageable => pageable
        .Refresh(true)

        .PageSizes(true)
        .ButtonCount(5))
        .AutoBind(true)
        .DataSource(
        dataSource => dataSource
        .Ajax()
        .PageSize(10)

        .Read(read => read.Action("LoadFormIndexPageGrid", "Cms", new { indexPageTemplateId = Model.Id }))


        )
            )*@
    </div>
    @(Html.Kendo().Dialog()
        .Name("confirmDelete")
        .Title("Confirm Delete")
        .Content(Model.DeleteConfirmationMessage)
        .Width(400)
        .Modal(true)
        .Visible(false)
        .Actions(actions =>
        {
            actions.Add().Text("Cancel");
            actions.Add().Text("Continue Delete").Primary(true).Action("ConfirmDelete");
        }))
</div>

