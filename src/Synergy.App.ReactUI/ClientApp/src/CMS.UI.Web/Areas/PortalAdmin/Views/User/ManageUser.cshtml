@inject IStringLocalizer<CMS.UI.Web.Areas.PortalAdmin.Controllers.UserController> Resource
@using Kendo.Mvc.UI
@using Synergy.App.ViewModel
@using Synergy.App.Common
@using Newtonsoft.Json;

@model UserViewModel
@{
    ViewData["Title"] = "Manage User";
    Layout = ViewBag.Layout;
    // Layout = "/Views/Shared/_PopupLayout.cshtml";
}
<style>
    .k-switch-label-on, .k-switch-label-off {
        display: flex
    }

    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }

    .avatar-myProfile {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .avatar-mysign {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .bold {
        font: bold
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        //uploadFile();
        //uploadFile1();
        $("#TwoFactorAuthType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
			value: "@Model.TwoFactorAuthType",
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=TwoFactorAuthTypeEnum",
                    }
                }
            }
        });
          $("#Status").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
			value: "@Model.Status",
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StatusEnum",
                    }
                }
            }
        });

        $("#LineManagerId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: "@Model.LineManagerId",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/User/GetUserIdNameList",
                    }
                }
            }
        });

        $("#SponsorId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: "@Model.SponsorId",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/LOV/GetListOfValueList?type=HR_SPONSOR",
                    }
                }
            }
        });

        $("#LegalEntityIds").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetLegalEntitiesList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.LegalEntityIds)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });


        $("#Portal").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/portaladmin/User/GetPortalForUser",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Portal...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.Portal)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

        if ('@Model.SendWelcomeEmail' == 'True') {
            $('#SendWelEmail').prop('checked', true);
        }
        else {
            $('#SendWelEmail').prop('checked', false);
        }

    });
    var showError = function (error) {
        //#validation-summary-manageform
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }
    function closeNavUser() {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    var onAjaxSuccess = function (res) {
        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                ShowNotification("@SharedResource["SavedSuccessfully"]", "success");
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("@SharedResource["UpdatedSuccessfully"]", "success");
            }
            var TemplateId = res.templateId;
            closeNavUser();
            window.parent.GetDataUser(res.result.Id);
        }
        else {
            //console.log(res);
            showError(res.error);
        }
    };

    function onFileUploadSuccess(e) {

        if (e.response.success) {

            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserProfilePhoto?photoId=" + e.response.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                   //
                    $(".avatar-myProfile").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
                    $("#PhotoId").val(e.response.fileId);
                }
            });
        }
        else {

        }
        return true;
    }

    function onFileUploadSuccess1(e) {

        if (e.response.success) {
            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserSignature?photoId=" + e.response.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                    //
                    $(".avatar-mysign").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
                    $("#SignatureId").val(e.response.fileId);
                }
            });
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function uploadFile() {
        $("#iconFileUser").dmUploader({ //
            url: '/Cms/Document/SaveFile', //- controller
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                //$.ajax({
                //    url: "/user/ChangeUserProfilePhoto?photoId=" + data.fileId,
                //    type: "GET",
                //    contentType: "application/json",
                //    dataType: "JSON",
                //    success: function (id,data) {
                //        //
                        $(".avatar-myProfile").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                        $("#PhotoId").val(data.fileId);
                //    }
                //});

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }
    function uploadFile1() {
        $("#iconFileSignature").dmUploader({ //
            url: '/Cms/Document/SaveFile', //- controller
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                //$.ajax({
                //    url: "/user/ChangeUserProfilePhoto?photoId=" + data.fileId,
                //    type: "GET",
                //    contentType: "application/json",
                //    dataType: "JSON",
                //    success: function (id,data) {
                //        //
                $(".avatar-mysign").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#SignatureId").val(data.fileId);
                //    }
                //});

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }


    function onProfileDel() {

        $(".avatar-myProfile").attr("src", "/images/200.png");
        $("#PhotoId").val('');
        // var faviconupload = $("#files3").data("kendoUpload");
        //console.log(bannerupload);
        //faviconupload.clearFile(function (file) { return true; });
        $("#iconFileUser").dmUploader("reset");
    }

    function onSignatureDel() {
        $(".avatar-mysign").attr("src", "/images/200.png");
        $("#SignatureId").val('');
        // var faviconupload = $("#files3").data("kendoUpload");
        //console.log(bannerupload);
        //faviconupload.clearFile(function (file) { return true; });
        $("#iconFileSignature").dmUploader("reset");

    }

    function confirmDelete() {

        $(".avatar-myProfile").attr("src", "/images/200.png");
        $("#PhotoId").val('');
        var logoupload = $("#files").data("kendoUpload");

        logoupload.clearFile(function (file) { return true; });
    }

    function OnSave(e) {
        //
        $('#SendWelcomeEmail').val($('#SendWelEmail').is(":checked"));
        var portals = $('#Portal').val();
        if (portals.length > 0) {
            return true;
        } else {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Select Portal");
            e.preventDefault();
            window.scrollTo(0, 0);
            return false;

        }
    }
</script>

<div class="row" style="margin-left:15px;margin-bottom:60px;">
    <form asp-area="PortalAdmin" asp-controller="User" asp-action="ManagePortalUser"
          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div class="text-danger" asp-validation-summary="All" id="validation-summary"></div>


        <div class="row" style="padding:10px;">
            <div class="col-12 bold">@Resource["Profile"]</div>
            <div class="col-12 row no-gutters">

                @*<div class="col-3" style="padding-bottom:10px;">
                @if (Model.PhotoId != null)
                {
                    <img class="avatar-myProfile" src="/cms/Document/GetImageMongo?id=@Model.PhotoId" onerror='OnPhotoError(this);' />
                }
                else
                {
                    <img class="avatar-myProfile" style="background-color:gray;" src="/images/profile.jpg" />
                }

            </div>*@


                <div class="col-8" style="padding-top: 15px;">
                    @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @area = "cms" })
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccess")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".png" }).MaxFileSize(2097152))
                        .HtmlAttributes(new { @class = "hr-xx-large" })
                )*@
                    @*<div class="row">
                    <div class="col">
                        <div id="iconFileUser" class="dm-uploader">
                            <h6 class=" text-muted">Drag &amp; drop files here</h6>

                            <div class="btn btn-primary btn-block ">
                                <span>Open the file Browser</span>
                                <input type="file" title='Click to add Files' />
                            </div>
                        </div>

                    </div>
                </div>
                <button type="button" class="btn btn-light" title="@Resource["DeleteProfile"]" onclick="onProfileDel();"><i class='fa fas fa-trash'></i></button>*@
                    @{
                        await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.PhotoId), Value = Model.PhotoId });
                    }
                </div>
            </div>
            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Name" required="required" autocomplete="off" style="width:80%" />
                    <label for="Name">@SharedResource["Name"] <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input asp-for="UserId" type="text" class="form-control" placeholder="DisplayName" autocomplete="off" style="width:80%" />
                    <label for="UserId">@Resource["DisplayName"] </label>
                </div>
            </div>

            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input asp-for="Email" type="email" class="form-control" placeholder="Email" required="required" autocomplete="off" style="width:80%" />
                    <label for="Email">@SharedResource["Email"] <span class="required">*</span></label>
                </div>
            </div>
            @*@if (Model.DataAction == DataActionEnum.Edit)
        {
            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input type="password" asp-for="Password" class="form-control" placeholder="Password" value="@Model.Password" autocomplete="off" required="required" style="width:80%" />
                    <label for="Password">Password<span class="required">*</span></label>
                </div>
            </div>

            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input type="password" asp-for="ConfirmPassword" class="form-control" placeholder="Confirm Password" value="@Model.ConfirmPassword" autocomplete="off" required="required" style="width:80%" />
                    <label for="ConfirmPassword">Confirm Password<span class="required">*</span></label>
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(x => x.Password)
            @Html.HiddenFor(x => x.ConfirmPassword)
        }*@


            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input type="text" asp-for="JobTitle" class="form-control" placeholder="Job Title" autocomplete="off" style="width:80%" />
                    <label for="JobTitle">@Resource["JobTitle"]</label>
                </div>
            </div>
            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input asp-for="UserId" type="text" class="form-control" placeholder="UserId" autocomplete="off" style="width:80%" />
                    <label for="UserId">UserId</label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <label for="Users">@Resource["UserStatus"]</label>
                <br />
                @*@(Html.Kendo().DropDownListFor(x=>x.Status)
                    .Value(Convert.ToString(Model.Status))
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "StatusEnum" });
                        });
                    })
                    .HtmlAttributes(new { @class = "form-control", style = "width: 80%" })
            )*@
                <input asp-for="Status" id="Status" class="form-control" style="width: 80%;" />
            </div>

            <div class="col-12 pad-10">
                <label for="Users">Legal Entity</label>
                <br />
                @*@(Html.Kendo().MultiSelectFor(x=>x.LegalEntityIds)
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .Placeholder(ApplicationConstant.PlaceHolder_SelectOption)
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetLegalEntitiesList", "User", new { @area = "Cms" });
                        });
                    })
                    .HtmlAttributes(new { @class = "form-control", style = "width: 80%" })
            )*@

                <select asp-for="LegalEntityIds" id="LegalEntityIds" style="width:80%"></select>
            </div>


            <div class="col-12 pad-10">
                @*@Html.Kendo().CheckBoxFor(x => x.EnableRegularEmail).Label(@Resource["EnableRegularEmail"])*@
                <input type="checkbox" asp-for="EnableRegularEmail" id="EnableRegularEmail" />
                <label>@Resource["EnableRegularEmail"]</label>
            </div>
            <div class="col-12 pad-10">
                @*@Html.Kendo().CheckBoxFor(x => x.EnableSummaryEmail).Label(@Resource["EnableSummaryEmail"])*@
                <input type="checkbox" asp-for="EnableSummaryEmail" id="EnableSummaryEmail" />
                <label>@Resource["EnableSummaryEmail"]</label>
            </div>
            <div class="col-12 pad-10">
                @*@Html.Kendo().CheckBoxFor(x => x.SendWelcomeEmail).Label(@Resource["SendWelcomeEmail"])*@
                <input type="checkbox" id="SendWelEmail" />
                <label>@Resource["SendWelcomeEmail"]</label>
            </div>
            <div class="col-12 pad-10">
                @*@Html.Kendo().CheckBoxFor(x => x.IsSystemAdmin).Label(@Resource["IsSystemAdmin"])*@
                <input type="checkbox" asp-for="IsSystemAdmin" id="IsSystemAdmin" />
                <label>@Resource["IsSystemAdmin"]</label>
            </div>
            <div class="col-12 pad-10">

                <input type="checkbox" asp-for="EnableTwoFactorAuth" id="EnableTwoFactorAuth" />
                <label>Enable Two Factor Auth</label>
            </div>
            <div class="col-12 pad-10">
                <label for="Users">Two Factor Auth Type</label>
                <br />

                <input asp-for="TwoFactorAuthType" id="TwoFactorAuthType" class="form-control" style="width: 80%;" />
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="SequenceOrder" type="number" class="form-control" placeholder="Enter Sequence Order" autocomplete="off" style="width:80%" />
                    <label for="SequenceOrder">@Resource["EnterSequenceOrder"]</label>
                </div>
            </div>




            <div class="col-12 pad-10">
                <label for="Users">Portal <span class="required">*</span></label>
                <br />
                @*@(Html.Kendo().MultiSelectFor(x => x.Portal)
                                                           .AutoClose(false)
                                                           .Placeholder("Select Portal...")
                                                           .DataSource(source =>
                                                           {
                                                               source.Read(read =>
                                                               {
                                                                   read.Action("GetPortalForUser", "User", new { @area = "cms" });
                                                               });

                                                           })
                                                           .DataTextField("Name")
                                                           .DataValueField("Id")
                                                           .AutoBind(true)
                                                            .ValuePrimitive(true)
                                                            .Enable(false)

                                                           .Height(300)

                                                           .HtmlAttributes(new { @class = "hr-x-large", @style="width:80%" })
            )*@

                <select asp-for="Portal" id="Portal" style="width:80%"></select>

            </div>
            <div class="col-12 bold ">@Resource["Signature"]</div>
            <div class="col-12 row no-gutters">
                @*<div class="col-3" style="padding-bottom:10px;">
                @if (Model.SignatureId != null)
                {
                    <img class="avatar-mysign" src="/cms/Document/GetImageMongo?id=@Model.SignatureId" onerror='OnPhotoError(this);' />
                }
                else
                {
                    <img class="avatar-mysign" style="background-color:gray;" src="/images/profile.jpg" />
                }

            </div>*@

                <div class="col-8" style="padding-top: 15px;">


                    @{
                        await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.SignatureId), Value = Model.SignatureId });
                    }
                </div>

                <div class="col-12 row no-gutters">
                    <label for="Users">@Resource["LineManager"] </label>
                    <br />
                    @*@(Html.Kendo().DropDownListFor(x=>x.LineManagerId)
                      .DataTextField("Name")
                                .DataValueField("Id")

                   .DataSource(source =>
                   {
                       source.Read(read =>
                       {
                           read.Action("GetUserIdNameList", "User", new { @area = "Cms" });
                       });
                   })

                   .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                      .HtmlAttributes(new { @class = "form-control", style = "width: 80%" })
                )*@
                    <input asp-for="LineManagerId" id="LineManagerId" class="form-control" style="width: 80%;" />
                </div>

                <div class="col-12 row no-gutters">
                    <label for="Users">Sponsor</label>
                    <br />
                    @*@(Html.Kendo().DropDownListFor(x=>x.SponsorId)
                      .DataTextField("Name")
                                .DataValueField("Id")

                   .DataSource(source =>
                   {
                       source.Read(read =>
                       {
                           read.Action("GetListOfValueList", "LOV", new { @area = "Cms", type = "HR_SPONSOR" });
                       });
                   })

                   .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                      .HtmlAttributes(new { @class = "form-control", style = "width: 80%;margin-left:-13%;margin-top:7%;" })
                )*@
                    <input asp-for="SponsorId" id="SponsorId" class="form-control" style="width: 80%;margin-left:-13%;margin-top:7%;" />
                </div>

            </div>


            <div class="cms-slidebar-footer">
                <input type="button" class="btn btn-light" value="@SharedResource["Close"]" onclick="closeNavUser()" />
                <input type="submit" class="btn btn-primary" value="@SharedResource["Save"]" onclick="OnSave(event);" />
            </div>

        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.PhotoId)
        @Html.HiddenFor(x => x.SignatureId)
        @Html.HiddenFor(x => x.IsGuestUser)
        @Html.HiddenFor(x => x.LineManagerId)
        @Html.HiddenFor(x => x.PasswordChanged)
        @Html.HiddenFor(x => x.PortalId)
        @Html.HiddenFor(x => x.PortalName)
        @Html.HiddenFor(x => x.LegalEntityId)
        @Html.HiddenFor(x => x.LegalEntityIds)
        @Html.HiddenFor(x => x.SendWelcomeEmail)
    </form>
</div>



