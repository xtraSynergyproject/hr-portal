@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Kendo.Mvc.UI;

@model NtsGroupViewModel

@{
    ViewData["Title"] = "PortalAdmin - NtsGroup";
    Layout = null;
}
<script>
    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var ntsType = '@Html.Raw(EnumExtension.EnumToJson(typeof(NtsTypeEnum)))';
    var ntsTypeObj = JSON.parse(ntsType);
    var columnDefs = [
        {
            field: "Name",
        },
        { field: "Code" },
        {
            field: "NtsType",
            cellRenderer: params => {
                return ntsTypeObj[params.value]; //only for enum
            }
        },

        {
           field: "Status",
            cellRenderer: params => {
               return statusObj[params.value]; //only for enum
            }
        },

        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBinNtsGroup' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getDataNtsGroup();

        //$.contextMenu('update');
        //$('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBinNtsGroup',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OnEditNtsGroup(id);
                                        break;

                                    case 'delete':
                                        OnDeleteNtsGroup(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });
    function getDataNtsGroup() {
        document.getElementById("ntsGroupGrid").innerHTML = "";
        gridConfig(
            "ntsGroupGrid",
            "/portalAdmin/ntsGroup/ReadData",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script>
        function OnDeleteNtsGroup(id) {
        var flag = confirm('Do you really want to delete the NtsGroup?');
        //alert("..Delete");
       // e.preventDefault();
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteNtsGroup", "NtsGroup", new { @area= "PortalAdmin" })?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        getDataNtsGroup();
                        kendo.alert("NtsGroup Deleted Successfully.");
                    } else {
                        getDataNtsGroup();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    
                    getDataNtsGroup();
                }
            });
            return false;
        }
    }
    function OnCreateNtsGroup()
    {
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("CreateNtsGroup", "NtsGroup", new { @area= "PortalAdmin" })';
        win.OpenWindow({ Title: 'Manage NtsGroup', Width: 450, Height: 900 });
        return false;
    }
    function OnEditNtsGroup(id)
    {
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("EditNtsGroup", "NtsGroup", new { @area= "PortalAdmin" })?Id=' + id;
        win.OpenWindow({ Title: 'Manage NtsGroup', Width: 450, Height: 1000 });
        return false;
    }
</script>

<div>
    <h4>@ViewBag.Title</h4>

    <hr />


    <div class="row">
        <div class="col-12">
            <button type='button' class='btn btn-primary' onclick='OnCreateNtsGroup();'><i class='fa fas fa-plus'></i>&nbsp;Create NtsGroup</button>
            <br /><br />
            <div id="ntsGroupGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>

@*<div>
    <h4>@ViewBag.Title</h4>

    <hr />

    <div class="row">
        <div class="col-12">

            @(Html.Kendo().Grid<NtsGroupViewModel>
    ()
    .Name("NtsGroupgrid")
    .ToolBar(toolbar =>
    toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateNtsGroup();'><i class='fa fas fa-plus'></i>&nbsp;Create NtsGroup</button>"))

    .Columns(columns =>

    {
        columns.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditNtsGroup").HtmlAttributes(new { @class = "action-icon" });
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteNtsGroup").HtmlAttributes(new { @class = "action-icon" });
        }).Title("Action").Width(100);

        columns.Bound(c => c.Name);
        columns.Bound(c => c.Code);
        columns.Bound(c => c.NtsType);
        columns.Bound(c => c.Status);

    })
    .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                .Pageable(pageable => pageable
                .Refresh(true)

                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                .PageSize(10)
                //.Events(events => events.Error("OnError"))
                .Read(read => read.Action("ReadData", "NtsGroup", new { @area = "PortalAdmin" }))
                .Model(model => model.Id(p => p.Id))
                )
          )

        </div>
    </div>
</div>*@
