@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Kendo.Mvc.UI;
@using Newtonsoft.Json;
@{
    ViewData["Title"] = "Manage User Role";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model UserRoleViewModel

<style>

    .required {
        color: red;
    }
</style>

<div class="row" style="margin-left:15px;">

    <form asp-controller="UserRole" asp-action="ManageUserRole" class="form-horizontal" id="myForm"
          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div class="text-danger" style="width:300px;" asp-validation-summary="All"></div>

        <div class="row" style="padding:10px;margin-right:15px;">

            <div class="col-12 pad-15">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" required="required" autocomplete="off" />
                    <label for="Name">Name <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-15">
                <div class="form-label-group">
                    <input asp-for="Code" type="text" class="form-control" placeholder="Enter Code" autocomplete="off" />
                    <label for="Code">Code</label>
                </div>
            </div>

            <div class="col-12 pad-15">
                <div class="form-label-group">
                    <input asp-for="SequenceOrder" type="number" class="form-control" placeholder="Sequence Order" autocomplete="off" />
                    <label for="SequenceOrder">Sequence Order</label>
                </div>
            </div>

            @*<div class="col-12 pad-15">Status</div>*@
        <div class="col-12 pad-15">
            <label for="Users">Status</label>
            <br />
            @*@(Html.Kendo().DropDownListFor(x=>x.Status)
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
        source.Read(read =>
        {
            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "StatusEnum" });
        });
        })
        .Value(Model.Status.ToString())
        .HtmlAttributes(new { @class = "form-control" })
        )*@

            <input asp-for="Status" id="Status" class="form-control" />
        </div>
            @*<div class="col-12 pad-10">
                    <label for="Users">Users </label>
                    @(Html.Kendo().MultiSelectFor(x => x.UserIds)
                                                                                   .AutoClose(false)
                                                                                   .Placeholder("Select Users...")
                                                                                   .DataSource(source =>
                                                                                   {
                                                                                       source.Read(read =>
                                                                                       {
                                                                                           read.Action("GetUserIdNameList", "User",new { @area="Cms"});
                                                                                       });

                                                                                   })
                                                                                   .Events(x=>x.Change("OnChange"))
                                                                                   .DataTextField("Name")
                                                                                   .DataValueField("Id")
                                                                                   .AutoBind(true)
                                                                                   .HtmlAttributes(new { @class = "hr-xx-large" })
                                                                                    .ValuePrimitive(true)
                                                                                   .Height(300)
                                    )
                </div>*@
            @*<div class="col-12 pad-10">Status</div>
                        <div class="col-12 pad-10">
                            @(Html.Kendo().DropDownListFor(x=>x.UserId)
                                    .DataTextField("Name")
                                    .DataValueField("Id")
                                    .DataSource(source =>
                                    {
                                    source.Read(read =>
                                    {
                                        read.Action("GetUserIdNameList", "User", new { @area = "Cms" });
                                    });
                                    })
                                    .HtmlAttributes(new { @class = "form-control" })
                                    )
                        </div>
                        <div class="col-12 pad-10">
                            <label>Selected Users </label>
                            @(Html.Kendo().ListView<UserViewModel>()
                .Name("UserlistView")
                .TagName("div")
                .ClientTemplateId("template")
                .AutoBind(false)
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Read(read => read.Action("GetUsersList", "User",new { area="Cms"}).Data("FilterDDl"))
                    .PageSize(21)
                )
                .Pageable()
                )
                        </div>*@

        <div class="col-12 pad-15">
            <label for="Users">Portal <span class="required">*</span></label>
            <br />
            @*@(Html.Kendo().MultiSelectFor(x => x.Portal)
                                                       .AutoClose(false)
                                                       .Placeholder("Select Portal...")
                                                       .DataSource(source =>
                                                       {
                                                           source.Read(read =>
                                                           {
                                                               read.Action("GetPortalForUser", "User", new { @area = "cms" });
                                                           });

                                                       })
                                                       .DataTextField("Name")
                                                       .DataValueField("Id")
                                                       .AutoBind(true)
                                                        .ValuePrimitive(true)
                                                       .Height(300)
                                                       .Enable(false)

                                                       .HtmlAttributes(new { @class = "", @style="width:100%" })
        )*@

            <select asp-for="Portal" id="Portal" ></select>
        </div>


            <div class="col-12 pad-15" style="text-align:right;padding-right:20px;">
                <button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">@SharedResource["Close"]</button>
                <input type="submit" class="btn btn-primary" value="@SharedResource["Save"]" id="submitBtn" onclick="OnSave(event);" />
            </div>

        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.LegalEntityId)
        @Html.HiddenFor(x => x.PortalId)
    </form>
</div>
<hr />
@if (Model.DataAction == DataActionEnum.Edit)
{
<div class="" id="users">
    <div style="padding-left:10px;"><h4>Users</h4></div>
    <div class="col-md-12">
        <div class="row">
            <div class="col-10">
                @*@(Html.Kendo().DropDownListFor(x => x.UserId)
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .DataSource(source =>
                            {
                            source.Read(read =>
                            {
                                read.Action("GetUserIdNameList", "User", new { @area = "PortalAdmin" });
                            });
                            })
                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                            .HtmlAttributes(new { @class = "form-control" })
                        )*@

                <input asp-for="UserId" id="UserId" class = "form-control" />
            </div>
            <div class="col-2" style="margin-left:-10px;">
                <button class="btn btn-primary" type="button" onclick="AddUser()">Add</button>
            </div>
        </div>
    </div>
    <br />
    <div class="row-12">
        <div class="col-12">
           
            <div id="myGridUserRoleUser" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>
        @*<div class="col-md-12">
            @(Html.Kendo().Grid<UserRoleUserViewModel>().Name("kgrdUsers")
                .HtmlAttributes(new { @class = "kgrdUsers" })
                .Columns(col =>
                {
                    col.Command(command =>
                    {
                        command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteUser").HtmlAttributes(new { @class = "action-icon action-delete", title = @SharedResource["Delete"] });
                    }).Title(@SharedResource["Action"]).Width(100);
                    col.Bound(c => c.UserName).Title("Name").Width(200);

                })
                .Scrollable(x => x.Enabled(true))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                .Operators(o => o.ForString(s => s.Clear()
                .Contains("Contains")
                .IsEqualTo("Is equal to")
                )))
                .Resizable(resize => resize.Columns(true))
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                    dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    .Read(read => read.Action("GetUsersList", "User", new { Area = "PortalAdmin", userRoleId = Model.Id }))
                    .Model(model => model.Id(p => p.Id)))
                    )
        </div>*@
    
}

<script type="text/x-kendo-tmpl" id="template">
    <div class="row col-12" style="margin:5px;">
    @*<div class="col-3">
    <span>#:Id#</span>
    </div>*@
    <div class="col-9">
      <span>#:Name#</span>
    </div>
    </div>
</script>

<script type="text/javascript">
      var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [

        //{ field: "ShortName" },
        //{ field: "Prefix" },
        //{
        //    field: "Status",
        //    cellRenderer: params => {
        //        return statusObj[params.value]; //only for enum
        //    }
        //},
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBinUserRoleUser' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
         {
            field: "UserName",
        }
    ];

    function OnSave(e) {
        
        var portals = $('#Portal').val();
        if (portals.length > 0) {
            return true;
        } else {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Select Portal");
            e.preventDefault();
            return false;
            
        }
    }

    $(function () {

        getDataUserRoleUser();

        //$.contextMenu('update');
        //$('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBinUserRoleUser',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {


                                    case 'delete':
                                        OnDelete(id);
                                        break;


                                    default:
                                }
                            },
                            items: {

                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });



        function OnDelete(id) {
        var flag = confirm('Do you really want to delete the Selected User?');

        if (flag) {
            $.ajax({
                url:"/Cms/UserRole/DeleteUserFromUserRole?Id=" + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    
                    if (result.success) {
                        getDataUserRoleUser();
                        kendo.alert("User Deleted Successfully.");
                    } else {
                        getDataUserRoleUser();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    getDataUserRoleUser();
                }
            });
            return false;
        }
    }


   function getDataUserRoleUser() {
       document.getElementById("myGridUserRoleUser").innerHTML = "";
       gridConfig(
           "myGridUserRoleUser",
           "@Url.Action("GetUsersList1", "User", new { Area = "Cms", userRoleId = Model.Id })",
           columnDefs,
           false,
           true,
           true,
           true,
           1,
           true,
           10);
    }



    @*var onAjaxSuccess = function (res) {
        if (res.success) {

             ShowNotification("@SharedResource["SavedSuccessfully"]", "success");
             id = res.data;
             var win = GetMainWindow();
             win.iframeOpenUrl = "/Cms/UserRole/EditUserRole?Id=" + id;
             win.OpenWindow({ Title: 'Manage User Role', Width: 450, Height: 800, Reload: true });

            
             return false;
         }
        else {
             $(".text-danger").removeClass("validation-summary-valid");
             $(".text-danger").addClass("validation-summary-errors");
             $(".text-danger").html(res.error);
             HideLoader($('#calendar'));
        }

    };*@
    function AddUser() {

        var selUserId = $("#UserId").val();
        $.ajax({
                type: "POST",
                url: "/Cms/UserRole/AddUserToUserRole?userRoleId=" + '@Model.Id' + '&userId=' + selUserId,
                dataType: "json",
                success: function (data) {
                    if (data.success) {
                        ShowNotification("@SharedResource["SavedSuccessfully"]", "success");
                        $("#kgrdUsers").data("kendoGrid").dataSource.read({ userRoleId: '@Model.Id' });
                    }
                    else {
                        ShowNotification(data.msg, "error");
                    }

            },
            error: function (data) {

            }

            });
    }

    $(document).ready(function () {
        $("#Status").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.Status.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StatusEnum",
                    }
                }
            }
        });

        @*$("#UserId").kendoDropDownList({
        dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.UserId',
            dataSource:
            {
            transport:
                {
                read:
                    {
                        url: "/Cms/User/GetUserIdNameList",
                    }
                }
            }
        });*@

        $("#UserId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.UserId',
            dataSource:
            { transport:
                {  read:
                    {
                    url: "/PortalAdmin/User/GetUserIdNameList",
                    }
                }
            }
        });
    });
    function OnChange(e)
    {
        var search = FilterDDl();
        $("#UserlistView").data("kendoListView").dataSource.read(search)
    }

    var onAjaxSuccess = function (res) {

        if (res.success) {
             ShowNotification("@SharedResource["SavedSuccessfully"]", "success");
             id = res.data;
             var win = GetMainWindow();
             win.iframeOpenUrl = "/PortalAdmin/UserRole/EditUserRole?Id=" + id;
            win.OpenWindow({ Title: 'Manage User Role', Width: 450, Height: 800, Reload: true });

            closeUserRole();
             //win.parent.$("#UserRolegrid").data("kendoGrid").dataSource.read();

             //var win = GetMainWindow();
             //win.iframeOpenUrl = "/pay/Calendar/ManageCalendar?CalendarId=" + id;
             //win.OpenWindow({ Title: 'Manage User Role', Width: 450, Height: 700, Reload: true });
             //HideLoader($('#calendar'));

             return false;
        }
        else {
             $(".text-danger").removeClass("validation-summary-valid");
             $(".text-danger").addClass("validation-summary-errors");
             $(".text-danger").html(res.error);
             //HideLoader($('#calendar'));
        }
    };


    function FilterDDl() {
        //alert($("#Users").val());
        var multiselect = $("#UserIds").data("kendoMultiSelect");
        var multiselectvalue = multiselect.value();
        return {
            selectedValues: multiselectvalue.join()
        };
    }
    $(document).ready(function () {
        @*var search = FilterDDl();
        $("#UserlistView").data("kendoListView").dataSource.read(search)
        if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();
            if (window.parent.$("#UserRolegrid").data("kendoGrid").dataSource.read()) { }
        }*@

        $("#Portal").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/portaladmin/User/GetPortalForUser",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Portal...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.Portal)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

        $("#Status").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.Status.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StatusEnum",
                    }
                }
            }
         });

    });

    function closeUserRole() {
       
        var win = GetMainWindow();
        win.CloseWindow({ MethodName:"RefreshUserRoleGrid"});
        return false;
    }

</script>
