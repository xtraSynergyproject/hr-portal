@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@model HierarchyMasterViewModel
@{
    ViewData["Title"] = "Hierarchy";
    Layout = null;
}
<script>

     var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);
      @*var HierarchyType1 = '@Html.Raw(EnumExtension.EnumToJson(typeof(HierarchyTypeEnum)))';
    var HierarchyTypeObj1 = JSON.parse(HierarchyType1);*@
    var columnDefs = [
        {
            field: "HierarchyType",
            cellRenderer: params => {
              
                //return HierarchyTypeObj1[params.value];
                return params.value;
            }
        },
           {
            field: "Name",
           },
           {
               field: "Code",

           },
           {
               field: "Description",
           },
        {
            field: "Level1Name",
        },
        {
            field: "Level2Name",

        },
        {
            field: "Level3Name",
        },
        {
            field: "Level4Name",
        },
        {
            field: "Level5Name",
        },
        {
            field: "CreatedBy",
        },
        {
            field: "CreatedDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        {
            field: "LastUpdateBy",
        },
        {
            field: "LastUpdatedDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        {
            field: "Status",
            cellRenderer: params => {
                return statusObj[params.value]; //only for enum
            }
        },
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin11' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getHierarchyData();

       // $.contextMenu('update');
      //  $('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBin11',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');
             
                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OnEditHierarchy(id);
                                        break;

                                    case 'delete':
                                        OnDeleteHierarchy(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });

    function getHierarchyData() {
        document.getElementById("krdHierarchygrid").innerHTML = "";
        gridConfig(
            "krdHierarchygrid",
            "/cms/HierarchyMaster/ReadData",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script>
    function OnDeleteHierarchy(id) {
     
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDelete(id);
        }, function () {

        });

    }

    function OnCreateHierarchy() {

         
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("CreateHierarchy", "HierarchyMaster", new { @area="Cms"})';
        win.OpenWindow({ Title: 'Manage Hierarchy', Width: 450, Height: 550 });
        return false;

    }

    function OnEditHierarchy(id) {
     
     
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditHierarchy", "HierarchyMaster", new { @area="Cms"})?Id=' + id;
        win.OpenWindow({ Title: 'Manage Hierarchy', Width: 450, Height: 550 });
        return false;
    }


    function confirmDelete(id) {
        //
        //  var grid = $("#grd_OrderStatus").data("kendoGrid");
        // var dataItem = $(e.currentTarget).closest("tr");
        // alert(dataItem.Id);
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $.ajax({
           // url: "~/UserRole/DeleteUserRole?Id=" + id,
            url:'@Url.Action("DeleteHierarchy", "HierarchyMaster", new { @area="Cms"})?Id=' + id,
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                // $('#dlg_DeleteConfirmation').data("kendoDialog").close();
                getHierarchyData();
                ShowNotification("Deleted Successfully", "success");
                /*window.parent.$("#Usergrid").data("kendoGrid").dataSource.read();*/
            }
        });
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").close();
      

    }
</script>
<div>
    <h4>@ViewBag.Title</h4>

    <hr />


    <div class="row">
        <div class="col-12">
          
            <button type='button' class='btn btn-primary' onclick='OnCreateHierarchy();'><i class='fa fas fa-plus'></i>&nbsp;Create Hierarchy</button>
                    <br /><br />
                    <div id="krdHierarchygrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
              
            
            @*@(Html.Kendo().Grid<HierarchyMasterViewModel>
    ()
    .Name("Usergrid")
    .ToolBar(toolbar =>
    toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateHierarchy();'><i class='fa fas fa-plus'></i>&nbsp;Create Hierarchy</button>"))


    .Columns(columns =>
    {
    columns.Command(command =>
    {
    command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditHierarchy").HtmlAttributes(new { @class = "action-icon" });
    command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteHierarchy").HtmlAttributes(new { @class = "action-icon" });
    }).Title("Action").Width(150);
    columns.Bound(c => c.HierarchyType);
    columns.Bound(c => c.Name).Title("Hierarchy Name");
    columns.Bound(c => c.Code);
    columns.Bound(c => c.Description);
    columns.Bound(c => c.Level1Name);
    columns.Bound(c => c.Level2Name);
    columns.Bound(c => c.Level3Name);
    columns.Bound(c => c.Level4Name);
    columns.Bound(c => c.Level5Name);
    columns.Bound(c => c.CreatedBy);
    columns.Bound(c => c.CreatedDate);
    columns.Bound(c => c.LastUpdatedBy);
    columns.Bound(c => c.LastUpdatedDate);
    columns.Bound(c => c.Status);
    //columns.Bound(c => c.GroupPortals).ClientTemplate("#= GroupPortals.join(', ')  #").Width(140);

    })
     .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                .Pageable(pageable => pageable
                .Refresh(true)

                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                .PageSize(10)
                //.Events(events => events.Error("OnError"))
                .Read(read => read.Action("ReadData", "HierarchyMaster"))
                .Model(model => model.Id(p => p.Id))
                )
          )*@
        </div>
    </div>
 
</div>

<script>
        // $(document).ready(function () {

        //        $("#grid").data("kendoGrid").dataSource.reload()

        //});

    //function OnDeleteUser() {
    //    
    //    $('#dlg_DeleteConfirmation').data("kendoDialog").open();
    //}

  

</script>
