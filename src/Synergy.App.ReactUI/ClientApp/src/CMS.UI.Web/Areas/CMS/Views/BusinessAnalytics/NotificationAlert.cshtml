@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@{
    ViewData["Title"] = "Manage Alert Rule";
    Layout = "/Views/Shared/_Reference.cshtml";
}
@model AlertViewModel
<style>
    .card {
        margin-bottom: 5px;
    }

    .cms-footer {
        position: unset !important;
        background-color: unset !important;
    }

    .rules-group-container {
        width: 100%;
    }
</style>
<div class="container">
    <form asp-controller="BusinessAnalytics" asp-action="ManageNotificationAlert" class="form-horizontal"
          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>
        <div class="card">
            <div class="card-header">1. Rule Type</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label for="NoteSubject">Rule Name</label>
                    </div>
                    <div class="col-9">
                        <input asp-for="NoteSubject" type="text" class="form-control" placeholder="" autocomplete="off" />
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">2. Create Query</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label>Table</label>
                    </div>
                    <div class="col-9">
                        <input id="QueryTable" style="width:100%" />
                    </div>
                </div>
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label>Coulmn</label>
                    </div>
                    <div class="col-9">
                        @*<input id="QueryColumns" style="width:100%" />*@
                        @(Html.Kendo().MultiSelect()
                                       .Name("Dimensions")
                                       .Placeholder("Select columns...")
                                       .DataTextField("title")
                                       .DataValueField("name")    
                                       .AutoBind(false)
                                       .DataSource(source =>
                                       {
                                           source.Read(read =>
                                           {
                                               read.Action("GetDimensionsData", "BusinessAnalytics").Data("FilterDimDLL");
                                           })
                                           .ServerFiltering(false);
                                       })                                       
                                       .Value(Model.queryColumnArray)
                                     .HtmlAttributes(new { @class = "", @style = "width:100%"})
                                    )
                    </div>
                </div>
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label for="Query">Query Builder</label>
                    </div>
                    <div class="col-9">
                        <div id="builder"></div>
                    </div>

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label for="ConditionValue">Condition</label>
                    </div>
                    <div class="col-1">
                        <label style=" background: aliceblue; padding: 10px; color: highlight; font-weight: 400;">WHEN</label>
                    </div>
                    <div class="col-3">
                        <select class="form-control" id="ConditionFunctionName">
                            <option value="count">count()</option>
                        </select>
                    </div>
                    <div class="col-2">
                        <select class="form-control" id="ConditionTypeName">
                            <option value="isAbove">IS ABOVE</option>
                            <option value="isBelow">IS BELOW</option>
                        </select>
                    </div>
                    <div class="col-2">
                        <input asp-for="conditionValue" type="number" class="form-control" />
                    </div>
                </div>
                @if (Model.DataAction == DataActionEnum.Edit)
                {
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="cubeJsFilter">CubeJs Filter</label>
                        </div>
                        <div class="col-9">
                            <textarea asp-for="cubeJsFilter" type="text" rows="12" class="form-control"></textarea>
                        </div>

                    </div>
                }
                else
                {
                    @Html.HiddenFor(x => x.cubeJsFilter)
                }
            </div>
        </div>
        <div class="card">
            <div class="card-header">3. Evaluate</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label for="evaluateTime">Evaluate Every Cron</label>
                    </div>
                    <div class="col-2">
                        <input asp-for="evaluateTime" type="text" class="form-control" value="*/5 * * * *" />
                    </div>
                    <div class="col-6">
                        <p>(* * * * *  ->  Minute Hour DayOfTheMonth Month DayOfTheWeek) <span class="required"> Exp: */15 * * * * </span></p>
                    </div>
                    @*<div class="col-1">
            <label style=" background: aliceblue; padding: 10px; color: highlight; font-weight: 400;">FOR</label>
        </div>
        <div class="col-1">
            <input type="text" name="Evalute12" class="form-control" />
        </div>*@
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">4. Reference Column</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label>Coulmn</label>
                    </div>
                    <div class="col-9">
                        <input id="ColumnReferenceId" style="width:100%" />
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">5. Alert Format</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label for="summary">Summary</label>
                    </div>
                    <div class="col-9">
                        <textarea asp-for="summary" type="text" rows="4" class="form-control"></textarea>
                    </div>

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label for="NoteDescription">Description</label>
                    </div>
                    <div class="col-9">
                        <textarea asp-for="NoteDescription" type="text" rows="4" class="form-control"></textarea>
                    </div>

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-3">
                        <label for="ColorCode">Color Code</label>
                    </div>
                    <div class="col-9">
                        @(Html.Kendo().ColorPickerFor(m => m.colorCode)
                        .Palette(new string[] {
                        "red","blue","orange","green","#f9eb71","#ee85c1","#a7d96d","#4bc1ec","#ac8fef","#a0adbd"
                        }).TileSize(30).Value(Model.colorCode!=null ? Model.colorCode.ToString() : "#f9eb71")
                            )
                    </div>

                </div>

            </div>
        </div>
        <div class="cms-footer">
            <input type="submit" class="btn btn-primary" value="Save" onclick="SaveData()" />
        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ParentNoteId)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.NoteId)
        @Html.HiddenFor(x => x.query)
        @Html.HiddenFor(x => x.queryTableId)
        @Html.HiddenFor(x => x.conditionFunction)
        @Html.HiddenFor(x => x.conditionType)
        @Html.HiddenFor(x => x.queryColumns)
        @Html.HiddenFor(x => x.columnReferenceId)
        @Html.HiddenFor(x => x.Json)
        @Html.HiddenFor(x => x.DataJson)
        @Html.HiddenFor(x => x.CompanyId)
        @Html.HiddenFor(x => x.CreatedBy)
        @Html.HiddenFor(x => x.CreatedDate)
        @Html.HiddenFor(x => x.LastUpdatedBy)
        @Html.HiddenFor(x => x.LastUpdatedDate)
    </form>

</div>


<script>
    $(document).ready(function () {
        $("#QueryTable").kendoDropDownList({
                dataTextField: "title",
                dataValueField: "name",
                dataSource: {
                    serverFiltering: false,
                    transport: {
                        read: {
                            url: "/Cms/BusinessAnalytics/GetMeasuresData",
                            //data: { bookId: "123" },
                            dataType: "json"
                        }
                    },
                },
                change: onChangeMeasures,
                autoBind: true,
                optionLabel: "Select Table",
                filter: '@FilterType.Contains',
                value: '@Model.queryTableId'
            }).data("kendoDropDownList");
      @*var qc=  $("#QueryColumns").kendoMultiSelect({
            placeholder: "Select columns...",
            dataTextField: "title",
            dataValueField: "name",
            autoBind: true,
            dataSource: {
                serverFiltering: false,
                transport: {
                    read: {
                        url: "/Cms/BusinessAnalytics/GetDimensionsData",
                        data: { measure: '@Model.queryTableId'}
                    }
                }
            },

      });*@
      
         $("#ColumnReferenceId").kendoDropDownList({
                dataTextField: "title",
                dataValueField: "name",
                dataSource: {
                    serverFiltering: false,
                    transport: {
                        read: {
                            url: "/Cms/BusinessAnalytics/GetDimensionsData",
                            dataType: "json",
                            data: { measure: '@Model.queryTableId'}
                        }
                    },
                },
                autoBind: true,
                optionLabel: "Select column",
                filter: '@FilterType.Contains',
                value: '@Model.columnReferenceId'
         }).data("kendoDropDownList");

        if ('@Model.DataAction' == '@DataActionEnum.Edit') {
            $("#Dimensions").data("kendoMultiSelect").dataSource.read();
              $.ajax({
                url: '@Url.Action("GetDimensionsColumnData", "BusinessAnalytics", new { @area="CMS"})?measure=@Model.queryTableId',
                type: 'GET',
                success: function (result) {
                    $('#builder').queryBuilder({
                        operators: [
                            { type: 'contains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'notContains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'equals', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'notEquals', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'set', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'notSet', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'inDateRange', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'notInDateRange', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'afterDate', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'beforeDate', nb_inputs: 1, multiple: false, apply_to: ['string'] },

                        ],
                        filters: result,
                        rules: @Html.Raw(Model.query)
                    });
                },
                error: function (ert) {

                }
            });


        }

    });
    var onAjaxSuccess = function (res) {
        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                ShowNotification("Saved Successfully", "success");
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("Updated Successfully", "success");
            }

            var win = GetMainWindow();
            win.CloseWindow({ MethodName: "getDataGridNotificationAlert"});

        }
        else {
            showError(res.error);
        }
        HideLoader($('#template-content'));

    };
    var showError = function (error) {

        //#validation-summary-manageform
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }
    function onChangeMeasures() {

        var tabId = $("#QueryTable").data("kendoDropDownList").value();
        $("#Dimensions").data("kendoMultiSelect").dataSource.read();
        $("#ColumnReferenceId").data("kendoDropDownList").dataSource.read({ measure: tabId});
        var result = $('#builder').html();
        if (!$.isEmptyObject(result)) {
            $('#builder').queryBuilder('reset');
             $.ajax({
                url: '@Url.Action("GetDimensionsColumnData", "BusinessAnalytics", new { @area="CMS"})?measure=' + tabId,
                type: 'GET',
                 success: function (result) {                     
                     $('#builder').queryBuilder('setFilters', result);
                },
                error: function (ert) {

                }
            });
        }
        else {
         $.ajax({
                        url: '@Url.Action("GetDimensionsColumnData", "BusinessAnalytics", new { @area="CMS"})?measure=' + tabId,
                        type: 'GET',
             success: function (result) {                 
                 $('#builder').queryBuilder({
                     operators: [                         
                         { type: 'contains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'notContains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'equals', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'notEquals', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'set', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'notSet', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'inDateRange', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'notInDateRange', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'afterDate', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'beforeDate', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         
                     ],
                                filters: result
                            });
                        },
                        error: function (ert) {

                        }
                    });
        }




    }
    function FilterDimDLL() {         
        var tabId = $("#QueryTable").data("kendoDropDownList").value();
        return {
            measure: tabId
        };
    }
    function SaveData() {
        var result = $('#builder').queryBuilder('getRules');
        if (!$.isEmptyObject(result)) {
            var json = JSON.stringify(result, null, 2);
            $("#query").val(json);
        }
        var tableId = $("#QueryTable").data("kendoDropDownList").value();
        $("#queryTableId").val(tableId);
        $("#conditionFunction").val($("#ConditionFunctionName").val());
        $("#conditionType").val($("#ConditionTypeName").val());
        debugger;
        var colItems = $("#Dimensions").data("kendoMultiSelect").dataItems();
        var col = "";
        for (var i = 0; i < colItems.length; i++) {
            if (i == colItems.length - 1) {
                col += colItems[i].name;
            }
            else {
                col += colItems[i].name + ",";
            }

        }
        $("#queryColumns").val(col);
        $("#columnReferenceId").val($("#ColumnReferenceId").val());
    }
</script>









