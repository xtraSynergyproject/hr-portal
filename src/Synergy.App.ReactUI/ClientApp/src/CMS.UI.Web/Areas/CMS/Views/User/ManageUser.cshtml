@using Synergy.App.ViewModel
@using Synergy.App.Common
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Manage User";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model UserViewModel

<style>
    .k-switch-label-on, .k-switch-label-off {
        display: flex
    }

    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }

    .avatar-myProfile {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .avatar-mysign {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .bold {
        font: bold
    }
</style>

<div class="row" style="margin-left:15px;margin-bottom:60px;">

    <form asp-controller="User" asp-action="ManageUser" method="post" class="form-horizontal">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">
            <div class="col-12 bold">Profile</div>
            <div class="col-12 row no-gutters">

                @*<div class="col-3" style="padding-bottom:10px;">
                @if (Model.PhotoId != null)
                {
                    <img class="avatar-myProfile" src="/cms/Document/GetImageMongo?id=@Model.PhotoId" onerror='OnPhotoError(this);' />
                }
                else
                {
                    <img class="avatar-myProfile" style="background-color:gray;" src="/images/profile.jpg" />
                }

            </div>*@
                <!--<div style="width: 200px !important; margin-left: 15px !important;">-->
                @*<ejs-uploader id="uploadFiles" autoUpload="false" asyncSettings="@asyncSettings" success="onUploadSuccess" failure="onUploadFailure" allowedExtensions=".jpg" maxFileSize=2048000 multiple="false">

            </ejs-uploader>*@

                <!--</div>-->

                <div class="col-8" style="padding-top: 15px;">
                    @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @area = "cms" })
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccess")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".png" }).MaxFileSize(2097152))
                        .HtmlAttributes(new { @class = "hr-xx-large" })
                )*@
                    @*<div class="row">
                <div class="col">
                    <div id="iconFile" class="dm-uploader">
                        <h6 class=" text-muted">Drag &amp; drop files here</h6>

                        <div class="btn btn-primary btn-block ">
                            <span>Open the file Browser</span>
                            <input type="file" title='Click to add Files' />
                        </div>
                    </div>

                </div>*@
                    @*if multiple use this*@

                    @*<div class="col">
                    <div class="card h-100">
                        <div class="card-header">
                            File List
                        </div>
                        <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                            <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                        </ul>
                    </div>
                </div>*@
                    @*if multiple use this*@
                    @*</div>
                <button type="button" class="btn btn-light" title="Delete Profile" onclick="onProfileDel();"><i class='fa fas fa-trash'></i></button>*@

                    @{
                        await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.PhotoId), Value = Model.PhotoId, CallbackMethod = "onFileUploadSuccess" });
                    }
                </div>
            </div>
            <div class="col-12 pad-10">
                @*<input asp-for="Name" type="text" class="form-control" placeholder="Name" required="required" autocomplete="off" width="300" />*@
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Name" required="required" autocomplete="off" style="width:80%" />
                    <label for="Name">Name <span class="required">*</span></label>
                </div>
            </div>

            <div class="col-12 pad-10">
                @*<input asp-for="Email" type="email" class="form-control" placeholder="Email" autocomplete="off" width="300" />*@
                <div class="form-label-group">
                    <input asp-for="Email" type="email" class="form-control" placeholder="Email" required="required" autocomplete="off" style="width:80%" />
                    <label for="Email">Email <span class="required">*</span></label>
                </div>
            </div>
            @*@if (Model.DataAction == DataActionEnum.Edit)
        {
            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input type="password" asp-for="Password" class="form-control" placeholder="Password" value="@Model.Password" autocomplete="off" required="required" style="width:80%" />
                    <label for="Password">Password<span class="required">*</span></label>
                </div>
            </div>

            <div class="col-12 pad-10">

                <div class="form-label-group">
                    <input type="password" asp-for="ConfirmPassword" class="form-control" placeholder="Confirm Password" value="@Model.ConfirmPassword" autocomplete="off" required="required" style="width:80%" />
                    <label for="ConfirmPassword">Confirm Password<span class="required">*</span></label>
                </div>
            </div>
        }
        else
        {
            @Html.HiddenFor(x => x.Password)
            @Html.HiddenFor(x => x.ConfirmPassword)
        }*@


            <div class="col-12 pad-10">
                @*<input asp-for="JobTitle" type="text" class="form-control" placeholder="Job Title" autocomplete="off" width="300" />*@
                <div class="form-label-group">
                    <input type="text" asp-for="JobTitle" class="form-control" placeholder="Job Title" autocomplete="off" style="width:80%" />
                    <label for="JobTitle">Job Title</label>
                </div>
            </div>
            <div class="col-12 pad-10">
       
                <div class="form-label-group">
                    <input asp-for="UserId" type="text" class="form-control" placeholder="UserId" autocomplete="off" style="width:80%" />
                    <label for="UserId">UserId</label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <label for="Users">User Status</label>
                <br />
                @*@(Html.Kendo().DropDownListFor(x=>x.Status)
                .Value(Convert.ToString(Model.Status))
                  .DataTextField("Name")
                            .DataValueField("Id")
               // .Events(e => e.Change("change"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "StatusEnum" });
                   });
               })
               //.Value(Model.ModuleId)
              // .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                  .HtmlAttributes(new { @class = "form-control", style = "width: 80%" })
            )*@
                <input asp-for="Status" id="Status" class="form-control" style="width: 80%;" />
            </div>

            <div class="col-12 pad-10">
                <label for="Users">Legal Entity</label>
                <br />
                @*@(Html.Kendo().MultiSelectFor(x=>x.LegalEntityIds)
                  .DataTextField("Name")
                            .DataValueField("Id")
                            .Placeholder("--Select Legal Entities--")
               // .Events(e => e.Change("change"))
               .DataSource(source =>
               {
                   source.Read(read =>
                   {
                       read.Action("GetLegalEntitiesList", "User", new { @area = "Cms" });
                   });
               })

                  .HtmlAttributes(new { @class = "form-control", style = "width: 80%" })
            )*@
                <select asp-for="LegalEntityIds" id="LegalEntityIds" data-placeholder="--Select Legal Entities--" style="width:80%"></select>
            </div>

            <div class="col-12 pad-10">
                @*@Html.Kendo().CheckBoxFor(x => x.EnableRegularEmail).Label("Enable Regular Email")*@
                <input type="checkbox" asp-for="EnableRegularEmail" id="EnableRegularEmail" />
                <label>Enable Regular Email</label>
            </div>
            <div class="col-12 pad-10">
                @*@Html.Kendo().CheckBoxFor(x => x.EnableSummaryEmail).Label("Enable Summary Email")*@
                <input type="checkbox" asp-for="EnableSummaryEmail" id="EnableSummaryEmail" />
                <label>Enable Summary Email</label>
            </div>
            <div class="col-12 pad-10">
                @*@Html.Kendo().CheckBoxFor(x => x.SendWelcomeEmail).Label("Send Welcome Email")*@
                <input type="checkbox" asp-for="SendWelcomeEmail" id="SendWelcomeEmail" />
                <label>Send Welcome Email</label>
            </div>
            <div class="col-12 pad-10">
                @*@Html.Kendo().CheckBoxFor(x => x.IsSystemAdmin).Label("Is System Admin")*@
                <input type="checkbox" asp-for="IsSystemAdmin" id="IsSystemAdmin" />
                <label>Is System Admin</label>
            </div>
            <div class="col-12 pad-10">

                <input type="checkbox" asp-for="EnableTwoFactorAuth" id="EnableTwoFactorAuth" />
                <label>Enable Two Factor Auth</label>
            </div>
            <div class="col-12 pad-10">
                <label for="Users">Two Factor Auth Type</label>
                <br />

                <input asp-for="TwoFactorAuthType" id="TwoFactorAuthType" class="form-control" style="width: 80%;" />
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="SequenceOrder" type="number" class="form-control" placeholder="Enter Sequence Order" autocomplete="off" style="width:80%" />
                    <label for="SequenceOrder">Enter Sequence Order</label>
                </div>
            </div>

            @*<div class="col-12 pad-10">
            <div class="form-label-group">
                <label for="Portal">Portal</label>
                @(Html.Kendo().MultiSelectFor(x=>x.Portal)
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .DataSource(source =>
                            {
                            source.Read(read =>
                            {
                                read.Action("GetPortalForUser", "User", new { @area = "cms" });
                            });
                            })
                            .Value(Model.Portal)
                )


            </div>
        </div>*@

            <div class="col-12 pad-10">
                <label for="Users">Portal</label>
                <br />
                @*@(Html.Kendo().MultiSelectFor(x => x.Portal)
                                                           .AutoClose(false)
                                                           .Placeholder("Select Portal...")
                                                           .DataSource(source =>
                                                           {
                                                               source.Read(read =>
                                                               {
                                                                   read.Action("GetPortalForUser", "User", new { @area = "cms" });
                                                               });

                                                           })
                                                           .DataTextField("Name")
                                                           .DataValueField("Id")
                                                           .AutoBind(true)
                                                            .ValuePrimitive(true)
                                                           .Height(300)

                                                           .HtmlAttributes(new { @class = "hr-x-large", @style="width:80%" })
            )*@
                <select asp-for="Portal" id="Portal" style="width:80%"></select>
            </div>
            <div class="col-12 pad-10">
                <label for="UserRoles">UserRoles</label>
                <br />

                <select asp-for="UserRole" id="UserRole" style="width:80%"></select>
            </div>
            <div class="col-12 bold ">Signature</div>
            <div class="col-12 row no-gutters">
                @*<div class="col-3" style="padding-bottom:10px;">
                @if (Model.SignatureId != null)
                {
                    <img class="avatar-mysign" src="/cms/Document/GetImageMongo?id=@Model.SignatureId" onerror='OnPhotoError(this);' />
                }
                else
                {
                    <img class="avatar-mysign" style="background-color:gray;" src="/images/profile.jpg" />
                }

            </div>*@
                <!--<div style="width: 200px !important; margin-left: 15px !important;">-->
                @*<ejs-uploader id="uploadFiles" autoUpload="false" asyncSettings="@asyncSettings" success="onUploadSuccess" failure="onUploadFailure" allowedExtensions=".jpg" maxFileSize=2048000 multiple="false">

            </ejs-uploader>*@

                <!--</div>-->
                <div class="col-8" style="padding-top: 15px;">
                    @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @area = "cms" })
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccess1")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".png" }))
                        .HtmlAttributes(new { @class = "hr-xx-large",@id = "files2" })
                )*@

                    @*<div class="row">
                <div class="col">
                    <div id="signiconFile" class="dm-uploader">
                        <h6 class=" text-muted">Drag &amp; drop files here</h6>

                        <div class="btn btn-primary btn-block ">
                            <span>Open the file Browser</span>
                            <input type="file" title='Click to add Files' />
                        </div>
                    </div>

                </div>*@
                    @*if multiple use this*@

                    @*<div class="col">
                    <div class="card h-100">
                        <div class="card-header">
                            File List
                        </div>
                        <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                            <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                        </ul>
                    </div>
                </div>*@
                    @*if multiple use this*@
                    @*</div>
                <button type="button" class="btn btn-light" title="Delete Profile" onclick="onSignatureDel();"><i class='fa fas fa-trash'></i></button>*@

                    @{
                        await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.SignatureId), Value = Model.SignatureId });
                    }
                </div>

                <div class="col-12 pad-10 no-gutters">
                    <label for="Users">Line Manager </label>
                    <br />
                    @*@(Html.Kendo().DropDownListFor(x=>x.LineManagerId)
                      .DataTextField("Name")
                                .DataValueField("Id")
                   // .Events(e => e.Change("change"))
                   .DataSource(source =>
                   {
                       source.Read(read =>
                       {
                           read.Action("GetUserIdNameList", "User", new { @area = "Cms" });
                       });
                   })
                   //.Value(Model.ModuleId)
                   .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                      .HtmlAttributes(new { @class = "form-control", style = "width: 80%" })
                )*@

                    <input asp-for="LineManagerId" id="LineManagerId" class="form-control" style="width: 80%;" />
                </div>

                <div class="col-12 pad-10 no-gutters">
                    <label for="Users">Sponsor </label>
                    <br />
                    @*@(Html.Kendo().DropDownListFor(x=>x.SponsorId)
                      .DataTextField("Name")
                                .DataValueField("Id")
                   // .Events(e => e.Change("change"))
                   .DataSource(source =>
                   {
                       source.Read(read =>
                       {
                           read.Action("GetListOfValueList", "LOV", new { @area = "Cms", type = "HR_SPONSOR" });
                       });
                   })
                   //.Value(Model.ModuleId)
                   .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                      .HtmlAttributes(new { @class = "form-control", style = "width: 80%;margin-left:8%" })
                )*@
                    <input asp-for="SponsorId" id="SponsorId" class="form-control" style="width: 80%;" />
                </div>


            </div>




            <div class="cms-slidebar-footer">
                <input type="button" class="btn btn-light" style="margin-right:5px" value="Close" onclick="closeNavUser()" />
                <input type="submit" class="btn btn-primary" style="margin-right:20px" value="Save" />
            </div>

        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.PhotoId)
        @Html.HiddenFor(x => x.SignatureId)
        @Html.HiddenFor(x => x.IsGuestUser)
        @Html.HiddenFor(x => x.LineManagerId)
        @Html.HiddenFor(x => x.PasswordChanged)
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.Success' == "True") {
          //
            closeNavUser();
            //window.parent.$("#Usergrid").data("kendoGrid").dataSource.read();
            window.parent.GetDataUser();
        }
        $("#TwoFactorAuthType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
			value: "@Model.TwoFactorAuthType",
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=TwoFactorAuthTypeEnum",
                    }
                }
            }
        });
        $("#Status").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
			value: "@Model.Status",
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StatusEnum",
                    }
                }
            }
        });

        $("#LineManagerId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: "@Model.LineManagerId",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/User/GetUserIdNameList",
                    }
                }
            }
        });

        $("#SponsorId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: "@Model.SponsorId",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/LOV/GetListOfValueList?type=HR_SPONSOR",
                    }
                }
            }
        });

      $("#LegalEntityIds").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetLegalEntitiesList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "--Select Legal Entities--",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.LegalEntityIds)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });


        $("#Portal").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetPortalForUser",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Portal...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.Portal)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });
         $("#UserRole").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetUserRoleList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select UserRole...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.UserRole)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

     //   uploadFile();
      //  uploadSignFile();
    });

    function uploadFile() {
        $("#iconFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                //upload callback
                $.ajax({
                    url: "/user/ChangeUserProfilePhoto?photoId=" + data.fileId,
                    type: "GET",
                    contentType: "application/json",
                    dataType: "JSON",
                    success: function (response) {
                        //
                        $(".avatar-myProfile").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                        $("#PhotoId").val(data.fileId);
                    }
                });

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }

    function uploadSignFile() {
        $("#signiconFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $.ajax({
                    url: "/user/ChangeUserSignature?photoId=" + data.fileId,
                    type: "GET",
                    contentType: "application/json",
                    dataType: "JSON",
                    success: function (response) {
                        //
                        $(".avatar-mysign").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                        $("#SignatureId").val(data.fileId);
                    }
                });

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }





    function closeNavUser() {

        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function onFileUploadSuccess(e) {
        //
        if (e.success) {
            // alert(e.response.fileId);
            //console.log(e);
            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserProfilePhoto?photoId=" + e.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                   //
                    $(".avatar-myProfile").attr("src", "/cms/Document/GetImageMongo?id=" + e.fileId);
                    $("#PhotoId").val(e.fileId);
                }
            });

        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onFileUploadSuccess1(e) {
        //
        if (e.response.success) {
            // alert(e.response.fileId);
            //console.log(e);
            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserSignature?photoId=" + e.response.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                    //
                    $(".avatar-mysign").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
                    $("#SignatureId").val(e.response.fileId);
                }
            });

        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onProfileDel() {
        //
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

        if ( $("#PhotoId").val()!='') {
         //
            kendo.confirm("Are you sure that you want to proceed?").then(function () {
                confirmDelete();
            }, function () {

            });
        }

    }
    function onSignatureDel() {
        //
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

        if ($("#SignatureId").val() != '') {
            //
            kendo.confirm("Are you sure that you want to proceed?").then(function () {
                $(".avatar-mysign").attr("src", "/images/200.png");
                $("#SignatureId").val('');
                var logoupload = $("#files2").data("kendoUpload");
                //console.log(logoupload);
                logoupload.clearFile(function (file) { return true; });
            }, function () {

            });
        }

    }

    function confirmDelete() {
     //
        //        alert("Banner Delete");
        $(".avatar-myProfile").attr("src", "/images/200.png");
        $("#PhotoId").val('');
        var logoupload = $("#files").data("kendoUpload");
        //console.log(logoupload);
        logoupload.clearFile(function (file) { return true; });
    }
    //function OnSave(event) {
    //    
    //    var multiSelect = $("#UserRoles").data("kendoMultiSelect");
    //    var value = multiSelect.value();

    //   // $("#UserRoles").kendoMultiSelect.Data(Read);

    //}
</script>

