@{
    ViewData["Title"] = "Settings";
    Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
}
@using CMS.UI.ViewModel;
@model DocumentTypeViewModel
<style>
    .left {
        min-width: 200px;
        max-width: 600px;
    }

    .splitter-container {
        height: 100vh !important;
        width: 100%;
    }

    .treeview .k-in {
        width: 100% !important;
    }
</style>


<div class="splitter-container">
    <div class="left pad-l-t-15">
        <h5>Settings</h5>
        @*@(Html.Kendo().TreeView()
                .Name("documentTypeTreeView").HtmlAttributes( new {@class="treeview"})
                .Events(e=>e.Select("OnSelect"))
                .DataTextField("Name")
                .TemplateId("dt-tv-template")
                .DataSource(dataSource => dataSource
                    .Read(read => read
                        .Action("GetDocumentTypeTreeList", "Settings",new { @area="Cms"})
                    )
                )
            )*@

        <div id="documentTypeTreeView" class="demo treeview"></div>

        <script id="dt-tv-template" type="text/kendo-ui-template">
            <span style="width:100%">   #: item.Name #</span>
            <span data-id="#:item.id#" data-type="#:item.ItemType#" class="tree-menu"><i class="fa fa-ellipsis-h"></i></span>

        </script>

    </div>
    <div class="right pad-l-t-15">

    </div>
</div>
<div id="myModal" class="modal fade">
    <div class="modal-dialog modal-dialog-centered modal-login">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Create Document Type</h4>
            </div>
            <div class="modal-body">
                <form asp-controller="DocumentType" asp-action="CreateDocumentType" method="post" class="form-horizontal">
                    <div class="text-danger" asp-validation-summary="All"></div>
                    <div class="row" style="padding:10px;">
                        <div class="col-sm-12">
                            <div class="form-label-group">
                                <input asp-for="Name" class="form-control" placeholder="Name" type="text" required="required" />
                                <label for="name">Name</label>
                            </div>
                            @*<div class="form-label-group">
                                    <input type="password" asp-for="Description" class="form-control" placeholder="Description">
                                    <label for="description">Description</label>
                                </div>*@
                            <input type="text" asp-for="DataAction" id="dataaction" />
                        </div>
                        <div class="col-sm-12">
                            <button type="submit" class="btn btn-success">Save</button>
                            <button type="button" class="btn btn-light" onclick="CloseIframeModal();">Close</button>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">

            </div>
        </div>
    </div>
</div>


<script>


    $('#documentTypeTreeView')
        .jstree({
            'core': {
                'data': function (node, cb) {
                    if (node.id === "#") {
                        $.ajax({
                            async: true,
                            type: "GET",
                            url: "/cms/Settings/GetDocumentTypeTreeList",
                            //url: "/cms/template/GetNtsTemplateTreeList",
                            dataType: "json",
                            success: function (json) {
                                cb(json);
                            },

                            error: function (xhr, ajaxOptions, thrownError) {
                                alert(xhr.status);
                                alert(thrownError);
                            }
                        });
                        //cb([{ "text": "Root", "id": "1", "children": true }]);
                    }
                    else {
                        $.ajax({
                            async: true,
                            type: "GET",
                            url: "/cms/Settings/GetDocumentTypeTreeList?id=" + node.Id,
                            //url: "/cms/BusinessAnalytics/GetBusinessAnalyticsTreeList?id=" + node.id,
                            dataType: "json",
                            success: function (json) {
                                cb(json);
                            },

                            error: function (xhr, ajaxOptions, thrownError) {
                                alert(xhr.status);
                                alert(thrownError);
                            }
                        });
                    }
                }
            }
        });

    // $('.splitter-container').SplitterBar();
    var splitter = $('.splitter-container').height(200).split({
        orientation: 'vertical',
        limit: 10,
        position: '20%', // if there is no percentage it interpret it as pixels
        onDrag: function (event) {
            console.log(splitter.position());
        }
    });
    function ReloadTab() {

    }
    function SetTabControls(index, select) {
        var tabStrip = $("#tabstrip").data("kendoTabStrip");
        if (select) {
            tabStrip.select(index);
        }
    }
    function onTabSelect1(e) {
        SetTabControls($(e.item).index(), false);
    }
    function OnSelect(e) {
        e.preventDefault();

        //var data = $("#treeview").data("kendoTreeView").dataItem(e.node);


        //if (data.ItemType == "BusinessRule") {

        //    var tabStrip1 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
        //    $(".k-link:contains('BUSINESS RULE INPUT DATA')").data('contentUrl', '/businessrule/BusinessRuleInputData?ruleId=' + data.id);
        //    tabStrip1.reload("li:eq(0)");

        //    var tabStrip2 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
        //    $(".k-link:contains('BUSINESS RULE MASTER DATA')").data('contentUrl', '/businessrule/BusinessRuleMasterData?ruleId=' + data.id);
        //    tabStrip2.reload("li:eq(1)");

        //    var tabStrip3 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
        //    $(".k-link:contains('BUSINESS RULE FLOW')").data('contentUrl', '/businessRuleDiagram/businessFlowDiagram?ruleId=' + data.id);
        //    tabStrip3.reload("li:eq(2)");


        //}
    }
    function OpenIframeModal(url, title) {
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: title, Width: 700, Height: 350 });
        return false;
    }
    //$(function () {
    //    $.contextMenu({
    //        selector: '.tree-menu',
    //        trigger: 'left',

    //        items: {
    //            "edit": {
    //                name: "Edit", icon: "cut", callback: function (itemKey, opt, e) {
    //                    console.log($(this).data('id'));
    //                }
    //            },
    //            "cut": { name: "Cut", icon: "cut" },
    //            "copy": { name: "Copy", icon: "copy" },
    //            "paste": { name: "Paste", icon: "paste" },
    //            "delete": { name: "Delete", icon: "delete" },
    //            "sep1": "---------",
    //            "quit": { name: "Quit" }
    //        }
    //    });
    //});


    $(function () {
        $.contextMenu({
            selector: '.jstree-anchor',
            trigger: 'left',
            build: function ($trigger, e) {
                //var parentId = $trigger.data('id');
                //var parentType = $trigger.data('type');
                //var selectParentId = $trigger.data('parentId');
                var parentId = $trigger.attr('data_id');
                var parentType = $trigger.attr('data_type');
                var selectParentId = $trigger.attr('data_parentId');
                switch (parentId) {
                    case 'Root':
                        return {

                            callback: function (key, options) {
                                switch (key) {
                                    case 'add':
                                        //OpenIframeModal('/BusinessRule/CreateBusinessArea?parentId=' + parentId, 'Create Business Area');
                                        $('#dataaction').val('Create');
                                        $('#myModal').modal('show');
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "add": { name: "Create Document Type", icon: "fas fa-chart-area" },

                            }
                        };
                    case 'BusinessArea':
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OpenIframeModal('/BusinessRule/CreateBusinessArea?parentId=' + selectParentId + "&id=" + parentId, 'Edit Business Area');
                                        break;
                                    case 'addSec':
                                        OpenIframeModal('/BusinessRule/CreateBusinessSection?parentId=' + parentId, 'Create Business Section');
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "edit": { name: "Edit Business Area", icon: "fas fa-chart-area" },
                                "addSec": { name: "Add Business Section", icon: "fas fa-album-collection" },

                            }
                        };
                    case 'BusinessSection':
                        return {

                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OpenIframeModal('/BusinessRule/CreateBusinessSection?parentId=' + selectParentId + "&id=" + parentId, 'Edit Business Section');
                                        break;
                                    case 'addGroup':
                                        OpenIframeModal('/BusinessRule/CreateBusinessRuleGroup?parentId=' + parentId, 'Create Business Rule Group');
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "edit": { name: "Edit Business Section", icon: "fas fa-album-collection" },
                                "addGroup": { name: "Add Business Group", icon: "fas fa-ball-pile" },

                            }
                        };
                    case 'BusinessRuleGroup':
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OpenIframeModal('/BusinessRule/CreateBusinessRuleGroup?parentId=' + selectParentId + "&id=" + parentId, 'Edit Business Rule Group');
                                        break;
                                    case 'addRule':
                                        OpenIframeModal('/BusinessRule/CreateBusinessRule?parentId=' + parentId, 'Create Business Rule');
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "edit": { name: "Edit Business Group", icon: "fas fa-ball-pile" },
                                "addRule": { name: "Add Business Rule", icon: "fas fa-pencil-ruler" },

                            }
                        };
                    case 'BusinessRule':
                        return {
                            callback: function (key, options) {

                                switch (key) {
                                    case 'edit':
                                        OpenIframeModal('/BusinessRule/CreateBusinessRule?parentId=' + selectParentId + "&id=" + parentId, 'Edit Business Rule');
                                        break;
                                    case 'open':
                                        var tabStrip1 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
                                        $(".k-link:contains('BUSINESS RULE INPUT DATA')").data('contentUrl', '/businessrule/BusinessRuleInputData?ruleId=' + parentId);
                                        tabStrip1.reload("li:eq(0)");

                                        var tabStrip2 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
                                        $(".k-link:contains('BUSINESS RULE MASTER DATA')").data('contentUrl', '/businessrule/BusinessRuleMasterData?ruleId=' + parentId);
                                        tabStrip2.reload("li:eq(1)");

                                        var tabStrip3 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
                                        $(".k-link:contains('BUSINESS RULE FLOW')").data('contentUrl', '/businessRuleDiagram/businessFlowDiagram?ruleId=' + parentId);
                                        tabStrip3.reload("li:eq(2)");
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "edit": { name: "Edit Business Rule", icon: "fas fa-pencil-ruler" },
                                "open": { name: "Open Business Rule", icon: "fas fa-pencil-ruler" },

                            }
                        };
                    default:
                        return {
                            callback: function (key, options) {
                                alert(parentId);
                                alert(parentType);
                            },
                            items: {

                            }
                        };
                }


            }
        });
    });

</script>

