@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@model MenuGroupDetailsViewModel

@{
    ViewData["Title"] = "Menu Group Details";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
<script>

   
    var columnDefs = [
        
           {
            field: "SequenceOrder",
           },
      
        {
            field: "Details",
            cellRenderer: params => {
               // 
                return params.value; //only for enum
            }
        },
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    //function uploadFile() {
    //    $("#iconFile").dmUploader({ //
    //        url: '/Cms/Document/SaveFile',
    //        multiple: false,
    //        extFilter: ["jpg", "jpeg", "png", "gif"],
    //        maxFileSize: 3000000, // 3 Megs 
    //        onDragEnter: function () {
    //            // Happens when dragging something over the DnD area
    //            this.addClass('active');
    //        },
    //        onDragLeave: function () {
    //            this.removeClass('active');
    //        },
    //        onInit: function () {
    //        },
    //        onComplete: function () {
    //        },
    //        onNewFile: function (id, file) {
    //            ui_multi_add_file(id, file);
    //        },
    //        onBeforeUpload: function (id) {
    //            ui_multi_update_file_status(id, 'uploading', 'Uploading...');
    //            ui_multi_update_file_progress(id, 0, '', true);
    //        },
    //        onUploadCanceled: function (id) {
    //            ui_multi_update_file_status(id, 'warning', 'Canceled by User');
    //            ui_multi_update_file_progress(id, 0, 'warning', false);
    //        },
    //        onUploadProgress: function (id, percent) {
    //            ui_multi_update_file_progress(id, percent);
    //        },
    //        onUploadSuccess: function (id, data) {
    //            $(".style-myiconimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
    //            $("#IconFileId").val(data.fileId);

    //            ui_multi_update_file_status(id, 'success', 'Upload Complete');
    //            ui_multi_update_file_progress(id, 100, 'success', false);
    //        },
    //        onUploadError: function (id, xhr, status, message) {
    //            ui_multi_update_file_status(id, 'danger', message);
    //            ui_multi_update_file_progress(id, 0, 'danger', false);
    //        },
    //        onFallbackMode: function () {
    //        },
    //        onFileSizeError: function (file) {
    //        }
    //    });
    //}

    $(function () {
        //uploadFile();
        getMenuGroupDetailsData();

     

        $.contextMenu({
            selector: '#tree-menuBin',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OnEditMenuGroupDetails(id);
                                        break;

                                    case 'delete':
                                        OnDeleteMenuGroupDetails(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });

    function getMenuGroupDetailsData() {
        document.getElementById("kgrdMenuGroup1").innerHTML = "";
        gridConfig(
            "kgrdMenuGroup1",
            "/cms/MenuGroupDetails/ReadMenuGroupDetails?MenugroupId=@Model.MenuGroupId",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script>
    function OnDeleteMenuGroupDetails(id) {
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var flag = confirm('Do you really want to delete the Menu Group Details?');

        if (flag) {
            $.ajax({
                url: '@Url.Action("Delete", "MenuGroupDetails", new { @area="Cms"})?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        getMenuGroupDetailsData();
                       // $("#kgrdMenuGroup").data("kendoGrid").dataSource.read();
                        kendo.alert("Menu Group Deleted Successfully");
                    } else {
                        getMenuGroupDetailsData();
                       // $("#kgrdMenuGroup").data("kendoGrid").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    getMenuGroupDetailsData();
                   // $("#kgrdMenuGroup").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }

    function OnEditMenuGroupDetails(id) {
       
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditMenuGroupDetails", "MenuGroupDetails", new { @area="Cms"})?Id=' +id;
        win.OpenWindow({ Title: 'Manage Menu Group Details', Width: 450, Height: 550 });
        return false;
    }

    function OnCreateMenuGroupDetails() {


        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateMenuGroupDetails", "MenuGroupDetails", new { @area="Cms"})?MenugroupId=' + '@Model.MenuGroupId';
          win.OpenWindow({ Title: 'Manage Menu Group Detail', Width: 450, Height: 550 });
        return false;
    }

    function OnAfterCreateuser() {
        getMenuGroupDetailsData();
        //$("#kgrdMenuGroup").data("kendoGrid").dataSource.read();
    }
    function onFileUploadSuccessIcon(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-myiconimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#IconFileId").val(e.response.fileId);

        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }


    function SaveImage() {

        var Ids = '@Model.MenuGroupId';
        
        //var expandHelp = $("#ExpandHelpPanel").val();
        var expandHelp = $('#ExpandHelpPanel').is(":checked");
        var IconIds = $("#IconFileId").val();
        
        $.ajax({
                url:'@Url.Action("Saveimg", "MenuGroupDetails", new { @area="Cms"})',
            type: 'POST',
            data: { Id: Ids, IconId: IconIds, ExpanndeHelp: expandHelp },
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {

                        kendo.alert("Icon Save Successfully");
                    } else {

                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //

              }
            });

    }

    function onIconDel() {

        
        $(".style-myiconimage").attr("src", "/images/document.png");
        $("#IconFileId").val('');
        //var faviconupload = $("#files").data("kendoUpload");
        
        //faviconupload.clearFile(function (file) { return true; });
        $("#iconFile").dmUploader("reset");
    }
</script>
<div>
    <h4>@ViewBag.Title</h4>
    <hr />

    <div class="d-flex justify-content-start" style="margin-left:20px">
        <div class="d-flex justify-content-start">
            @*<div class="style-image" style="margin-left:20px">
            @if (Model.IconFileId != null)
            {
            <img class="style-myiconimage"  style="background-color:gray;width:100px;"  src="/cms/Document/GetImageMongo?id=@Model.IconFileId"  />
            }
            else
            {

                <img class="style-myiconimage" style="background-color:gray;width:100px;" src="/images/document.png" />
            }
        </div>
        <div class="style-upload" style="margin-left: 20px; margin-top:40px;">*@
            @*@(Html.Kendo().Upload().Multiple(false)
            .Name("files")
            .Async(a => a
            .Save("SaveFile", "Document", new { @Area="Cms"})
            .AutoUpload(true)
            )
            .Events(e => e.Success("onFileUploadSuccessIcon")
            )
                .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                //.MaxFileSize(2097152)
                )
                .HtmlAttributes(new { @class = "hr-large", @id = "files3" })
        )*@


            <!--<div class="row">
        <div class="col">
            <div id="iconFile" class="dm-uploader">
                <h6 class=" text-muted">Drag &amp; drop files here</h6>

                <div class="btn btn-primary btn-block ">
                    <span>Open the file Browser</span>
                    <input type="file" title='Click to add Files' />
                </div>
            </div>

        </div>-->
            @*if multiple use this*@

            @*<div class="col">
            <div class="card h-100">
                <div class="card-header">
                    File List
                </div>
                <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                    <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                </ul>
            </div>
        </div>*@
            @*if multiple use this*@
            <!--</div>-->

            @{
                    await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.IconFileId), Value = Model.IconFileId });
            }

        </div>
            @*<div style="margin-top: 40px;"> 
                <button type="button" style="height: 55px" class="btn btn-light"  title="Delete Icon" onclick="onIconDel();"><i class='fa fas fa-trash'></i></button>
            </div>*@
            <div style="margin-top:68px;margin-left:10px">

                @*@(Html.Kendo().CheckBoxFor(x=>x.ExpandHelpPanel).Label("Expand Help Panel"))*@
                <input type="checkbox" asp-for="ExpandHelpPanel" />
                <label>Expand Help Panel</label>
            </div>
            <div style="margin-left: 20px; margin-top:40px">
                <input type="button" class="btn btn-primary" style="margin-right: 10px" value="Save" onclick="SaveImage()" />
            </div>
            @Html.HiddenFor(x => x.IconFileId)
        </div>
    </div>
</div>
<div style="margin-top:15px">
    
    <hr />
    <div class="row">
        <div class="col-12">
            <button type='button' class='btn btn-primary' style="margin-left: 10px" onclick='OnCreateMenuGroupDetails();'><i class='fa fas fa-plus'></i>&nbsp;Add New Help Content</button>
            <br /><br />
            <div id="kgrdMenuGroup1" style="width: 100%;height:550px" class="ag-theme-alpine"></div>



            @*@(Html.Kendo().Grid<MenuGroupDetailsViewModel>
                ().Name("kgrdMenuGroup")
                .Columns(columns =>
                {
                    columns.Command(command =>
                    {
                        command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditMenuGroupDetails").HtmlAttributes(new { @class = "action-icon" });
                        command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteMenuGroupDetails").HtmlAttributes(new { @class = "action-icon" });
                    }).Title("Action").Width(100);

                    columns.Bound(p => p.SequenceOrder).Title("Slide Number").Width(100);
                    columns.Bound(p => p.Details).ClientTemplate("#=data.Details#");
                })
                .ToolBar(toolbar =>
                {
                    toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateMenuGroupDetails();'><i class='fa fas fa-plus'></i>&nbsp;Add New Help Content</button>");
                })
                //.Events(e => e.DataBound("OnDataBoundNot"))
                .Scrollable(x => x.Enabled(false))

          .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                  .Operators(o => o.ForString(s => s.Clear()
                                  .Contains("Contains")
                                  .IsEqualTo("Is equal to")
                                  )))
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Read(read => read.Action("ReadMenuGroupDetailsData", "MenuGroupDetails",new {@Area="Cms", @MenugroupId=Model.MenuGroupId }))
                .Model(model => model.Id(p => p.Id))
                )
          )*@
        </div>
    </div>
</div>