@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model UserHierarchyPermissionViewModel

@{
    ViewData["Title"] = "User Hierarchy Permission";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
<script>
  var hierarchyPermission = '@Html.Raw(EnumExtension.EnumToJson(typeof(HierarchyPermissionEnum)))';
    var hierarchyPermissionObj = JSON.parse(hierarchyPermission);

    var columnDefs = [
        {
            field: "HierarchyName",
        },
       
        {
           field: "HierarchyPermission",
           cellRenderer: params => {
               return hierarchyPermissionObj[params.value]; //only for enum
           }
        },
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBinUserHier' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\"><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getDataUserHierarchy();

        $.contextMenu('update');
        $('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBinUserHier',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEdit(id);
                                        break;

                                    case 'delete':
                                        OnDelete(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });
     function OnCreateUserHierarchyPermission() {

         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("ManageUserHierarchyPermission", "User", new { @area="Cms",userId=Model.UserId})';
         win.OpenWindow({ Title: 'Manage User Hierarchy Permission', Width: 450, Height: 800 });
        return false;
    }

    function onEdit(id) {
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("ManageUserHierarchyPermission", "User", new { @area = "Cms" })?pId=' + id;
        win.OpenWindow({ Title: 'Manage User Hierarchy Permission', Width: 450, Height: 800 });
        return false;
        }

        function OnDelete(id) {
        var flag = confirm('Do you really want to delete the User Hierarchy Permission?');

        if (flag) {
        $.ajax({
        url:'@Url.Action("DeleteUserHierarchyPermission", "User", new { @area = "Cms" })?Id=' + id,
        type: 'POST',
        data: {},
        dataType: 'json',
        success: function (result) {
        
        if (result.success) {
        getDataUserHierarchy();
        kendo.alert("Deleted Successfully.");
        } else {
        getDataUserHierarchy();
        var err = result.errors.BinderCountError.errors[0];
        kendo.alert(err);
        }
        },
        error: function (ert) {
        getDataUserHierarchy();
        }
        });
        return false;
        }
    }
      function CallBack() {
         $("#kgrdUserHierarchyPermission").data("kendoGrid").dataSource.read({ userId:'@Model.UserId' });
    }

        function getDataUserHierarchy() {
            document.getElementById("myGridUserHierarchy").innerHTML = "";
        gridConfig(
        "myGridUserHierarchy",
        "@Url.Action("ReadUserHierarchyPermission", "User", new { @area = "Cms", userId = Model.UserId })",
        columnDefs,
        false,
        true,
        true,
        true,
        1,
        true,
        10);
        }

</script>

        <div>
            <h4 style="margin: 10px 0 0 10px; font-size: 5vw;">@ViewBag.Title</h4>

            <hr />


            <div class="row">
                <div class="col-12">
                    <button type='button' class='btn btn-primary' style="margin-left: 10px"  onclick='OnCreateUserHierarchyPermission();'><i class='fa fas fa-plus'></i>&nbsp;Create User Hierarchy Permission</button>
                    <br /><br />
                    <div id="myGridUserHierarchy" style="width: 100%;height:550px; margin: 0 5px 0 5px;" class="ag-theme-alpine"></div>
                </div>
            </div>
        </div>


        <script>
    function OnDeleteUserHierarchyPermission(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var flag = confirm('Do you really want to delete the User Hierarchy Permission?');

        if (flag) {
            $.ajax({
                url: '@Url.Action("DeleteUserHierarchyPermission", "User", new { @area="Cms"})?Id=' + dataItem.Id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdUserHierarchyPermission").data("kendoGrid").dataSource.read();
                        kendo.alert("Deleted Successfully");
                    } else {
                        $("#kgrdUserHierarchyPermission").data("kendoGrid").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //
                    $("#kgrdUserHierarchyPermission").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }
    function OnCreateUserHierarchyPermission() {
      
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("ManageUserHierarchyPermission", "User", new { @area="Cms",userId=Model.UserId})';
         win.OpenWindow({ Title: 'Manage User Hierarchy Permission', Width: 450, Height: 800 });
        return false;
    }
    function OnEditUserHierarchyPermission(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
      
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("ManageUserHierarchyPermission", "User", new { @area="Cms"})?pId=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage User Hierarchy Permission', Width: 450, Height: 800 });
        return false;
    }
     function CallBack() {
         $("#kgrdUserHierarchyPermission").data("kendoGrid").dataSource.read({ userId:'@Model.UserId' });
    }

        <!--</script>

        @*<div>
            <h4>@ViewBag.Title</h4>
            <hr />
            <div class="row">
                <div class="col-12">
                    @(Html.Kendo().Grid<UserHierarchyPermissionViewModel>
                ().Name("kgrdUserHierarchyPermission")
                .Columns(columns =>
                {
                    columns.Command(command =>
                    {
                        command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditUserHierarchyPermission").HtmlAttributes(new { @class = "action-icon" });
                        command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteUserHierarchyPermission").HtmlAttributes(new { @class = "action-icon" });
                    }).Title("Action").Width(100);

                    columns.Bound(p => p.HierarchyName);
                    columns.Bound(p => p.HierarchyPermission);

                    //columns.Bound(p => p.NoteNotificationAction);
                })
                .ToolBar(toolbar =>
                {
                    toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateUserHierarchyPermission();'><i class='fa fas fa-plus'></i>&nbsp;Create UserHierarchyPermission</button>");
                })
                //.Events(e => e.DataBound("OnDataBoundNot"))
                .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                  .Operators(o => o.ForString(s => s.Clear()
                                  .Contains("Contains")
                                  .IsEqualTo("Is equal to")
                                  )))
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Read(read => read.Action("ReadUserHierarchyPermission", "User", new { @area = "Cms",userId = Model.UserId  }))
                .Model(model => model.Id(p => p.Id))
                )
          )
                </div>
            </div>
        </div>*@-->
        @*@Html.HiddenFor(x => x.UserId)*@