@using Synergy.App.Common
@{
    ViewBag.Title = "";
    Layout = null;
}
@inject Synergy.App.Common.IUserContext _userContext
<style>

    .category-plus {
        font-size: 17PX;
        padding-left: 5px;
        font-weight: 500;
    }

    #LeftPanel {
        height: 90vh;
        overflow: auto;
        overflow-x: hidden;
    }

    .search-header-wrapper {
        background-color: #fff;
        padding-top: 4rem;
    }

    input.form-control {
        font-family: FontAwesome, "Lato", Helvetica, sans-serif;
        font-style: normal;
        font-weight: normal;
        text-decoration: inherit;
    }

    .ais-search-box--submit {
        position: absolute;
        top: 0;
        right: 0.5rem;
        border-top-left-radius: 0 !important;
        border-bottom-left-radius: 0 !important;
    }

    .btn {
        border-radius: 5px;
    }

    .ais-search-box--input {
        background: #fff;
        padding: 1rem 10rem 1rem 1rem !important;
        font-size: 1.5rem;
        line-height: 1.3;
    }

    .form-control:focus {
        border-color: #66afe9;
        outline: 0;
    }

    textarea, textarea.form-control, input.form-control, input[type=text], input[type=password], input[type=email], input[type=number], [type=text].form-control, [type=password].form-control, [type=email].form-control, [type=tel].form-control, [contenteditable].form-control {
        padding: 0;
        border: none;
        border-radius: 0;
        -webkit-appearance: none;
        -webkit-box-shadow: inset 0 -1px 0 #007bff;
        box-shadow: inset 0 -1px 0 #007bff;
        font-size: 16px;
    }

        textarea:focus, textarea.form-control:focus, input.form-control:focus, input[type=text]:focus, input[type=password]:focus, input[type=email]:focus, input[type=number]:focus, [type=text].form-control:focus, [type=password].form-control:focus, [type=email].form-control:focus, [type=tel].form-control:focus, [contenteditable].form-control:focus {
            /* -webkit-box-shadow: inset 0 -2px 0 #ec6611; */
            box-shadow: inset 0 -2px 0 #007bff;
        }

    .mb20 {
        margin-bottom: 20px !important;
    }

    .k-listview {
        border: none;
        /* color: #212529;*/
        background-color: transparent !important
    }

    h1, h2, h3, h4, h5, h6, .h1, .h2, .h3, .h4, .h5, .h6 {
        font-family: 'Montserrat-subs', Helvetica, sans-serif;
        font-weight: 600;
        line-height: 1.2;
        color: #3c3c3b;
    }

    .card-label {
        font-size: 13px;
        line-height: 20px;
        color: #808080;
        padding-right: 3px;
    }

    .card-text {
        font-size: 13px;
        line-height: 20px;
        color: #808080;
        font-weight: 600;
    }

    .card-desc {
        font-size: 13px;
        line-height: 20px;
        color: #808080;
        text-align: justify;
    }

    .book-img {
        border: 1px solid silver;
        border-radius: 4px;
        height: 150px;
        width: 130px;
    }

    .btn-xs {
        padding: 1px 5px;
        font-size: 12px;
        line-height: 1.5;
        border-radius: 3px;
    }

    #kgrdCards {
        padding: 0px;
        min-height: 510px;
        /* Avoid cutout if font or line is bigger */
        font: inherit;
    }

    .k-listview-content {
        overflow: hidden;
    }

    .product {
        float: left;
        position: relative;
        width: 350px;
        min-height: 390px;
        margin: 0 5px;
        padding: 0;
    }

    .card {
        border-radius: 10px;
        min-height: 380px;
    }

    ul.fancytree-container {
        background-color: transparent;
        border: none;
    }


    .rating {
        width: 130px;
    }

    .rating-0 {
        background-color: #c0c0c0 !important;
        border-color: #999999 !important;
    }

        .rating-0:hover {
            background-color: #a6a6a6 !important;
            border-color: #808080 !important;
        }

    .rating-1 {
        background-color: #dc3545 !important;
        border-color: #c32232 !important;
        color: #fff;
    }

        .rating-1:hover {
            background-color: #ad1f2d !important;
            border-color: #821722 !important;
            color: #fff;
        }

    .rating-2 {
        background-color: #ff8c00 !important;
        border-color: #e67e00 !important;
    }

        .rating-2:hover {
            background-color: #e67e00 !important;
            border-color: #cc7000 !important;
        }

    .rating-3 {
        background-color: #FFBF00 !important;
        border-color: #cc9900 !important;
    }

        .rating-3:hover {
            background-color: #cc9900 !important;
            border-color: #997300 !important;
        }

    .rating-4 {
        background-color: #32CD32 !important;
        border-color: #28a428 !important;
    }

        .rating-4:hover {
            background-color: #28a428 !important;
            border-color: #1e7b1e !important;
        }

    .rating-5 {
        background-color: #388e3c !important;
        border-color: #2c6d2f !important;
        color: #fff;
    }

        .rating-5:hover {
            background-color: #2c6d2f !important;
            border-color: #1d491f !important;
            color: #fff;
        }

    .rating-star {
        color: #c0c0c0;
        font-size: 16px;
        cursor: pointer;
    }

    .rating-star-value {
        color: #808080;
        font-size: 14px;
        margin-top: -2px;
    }

    .rating-rated-1 {
        color: #dc3545;
    }

    .rating-rated-2 {
        color: #ff8c00;
    }

    .rating-rated-3 {
        color: #FFBF00;
    }

    .rating-rated-4 {
        color: #32CD32;
    }

    .rating-rated-5 {
        color: #388e3c;
    }

    .book-tag-new {
        position: absolute;
        top: 45px;
        z-index: 100;
        left: 0;
        width: 73px;
        color: #fff;
    }

    .book-tag-text-new {
        background-color: green;
        height: 18px;
        padding-left: 5px !important;
        padding-top: 1px !important;
        font-size: 11px;
        font-weight: 600;
    }

    .book-tag-tail-new {
        width: 0px;
        height: 0px;
        border-right: 9px solid transparent;
        border-top: 9px solid green;
        border-left: 9px solid green;
        border-bottom: 9px solid green;
    }

    .book-tag-updated {
        position: absolute;
        top: 45px;
        z-index: 100;
        left: 0;
        width: 73px;
        color: #000;
    }

    .book-tag-text-updated {
        background-color: orange;
        height: 18px;
        padding-left: 3px !important;
        padding-top: 2px !important;
        font-size: 11px;
        font-weight: 600;
    }

    .book-tag-tail-updated {
        width: 0px;
        height: 0px;
        border-right: 9px solid transparent;
        border-top: 9px solid orange;
        border-left: 9px solid orange;
        border-bottom: 9px solid orange;
    }

    .categ-menu {
        border-radius: 50%;
        margin-left: 15px;
        font-size: 16px !important;
        padding-left: 9px;
        padding-right: 10px;
        padding-top: 4px;
        padding-bottom: 4px;
    }

        .categ-menu:hover {
            background-color: gray;
        }

    .fancytree-title {
        margin-top: -5px !important;
    }

    span.fancytree-node {
        min-height: 35px !important;
    }

    .btn-group > .btn-group:not(:last-child) > .btn, .btn-group > .btn:not(:last-child):not(.dropdown-toggle) {
        border-top-right-radius: 5px;
        border-bottom-right-radius: 5px;
    }

    .btn-group > .btn-group:not(:first-child) > .btn, .btn-group > .btn:not(:first-child) {
        border-top-left-radius: 5px;
        border-bottom-left-radius: 5px;
    }

    #side-menu-switch {
        position: absolute;
        opacity: 0;
        cursor: pointer;
    }

        #side-menu-switch:checked + .side-menu {
            transform: translateX(-100%);
        }

            #side-menu-switch:checked + .side-menu label .fas {
                transform: scaleX(-1);
            }

    ::placeholder {
        /* Chrome, Firefox, Opera, Safari 10.1+ */
        color: #fff;
        opacity: 1; /* Firefox */
    }

    .side-menu {
        background-color: white;
        width: 368px;
        height: 100%;
        /*padding: 50px 0;*/
        box-sizing: border-box;
        /*background-image: linear-gradient(0deg,#3381b0,#87cefa);*/
        display: flex;
        flex-flow: column nowrap;
        box-shadow: 5px 0px 10px rgba(17, 26, 41, 0.6);
        position: absolute;
        transition: .5s;
        /* transform: translateX(0); */
    }

        .side-menu form {
            display: flex;
            margin: 0 10px 50px;
            border-radius: 100px;
            border: 1px solid #fff;
        }

            .side-menu form input,
            .side-menu form button {
                background-color: transparent;
                color: #fff;
                border: none;
                padding: 5px 10px;
            }

            .side-menu form input {
                width: 230px;
            }

        .side-menu label {
            cursor: pointer;
            position: absolute;
            width: 38px;
            height: 75px;
            background-color: #d0d0d0;
            color: #767575;
            right: -40px;
            top: 0;
            bottom: 0;
            margin: auto;
            line-height: 80px;
            text-align: center;
            font-size: 30px;
            border-radius: 0 10px 10px 0;
        }

        .side-menu form button {
            width: 50px;
        }

        .side-menu form input:focus::placeholder {
            color: #ccc;
        }

        .side-menu form input:focus,
        .side-menu form button:focus {
            outline: none;
        }

    .rhs .rhs-menu, .rhs .rhs-menu > button {
        border-radius: 10px 0 0 10px;
        width: 44px;
    }

    .rhs .rhs-menu {
        background-color: #fff;
        box-shadow: 0 6px 30px 0 rgb(63 79 110 / 15%);
        flex-basis: auto;
        flex-grow: 0;
        left: -44px;
        position: absolute;
        top: 135px;
    }

        .rhs .rhs-menu > button {
            background-color: transparent;
            border: none;
            box-shadow: none;
            color: #fff;
            display: block;
            height: 46px;
            outline: none;
            position: relative;
        }

        .rhs .rhs-menu, .rhs .rhs-menu > button {
            border-radius: 10px 0 0 10px;
            width: 44px;
        }

    .rhs {
        background-color: #fff;
        bottom: 0;
        position: fixed;
        right: -430px;
        top: 0;
        transition: all .5s ease;
        width: 430px;
    }

    .btn-xs {
        padding: 1px 5px;
        font-size: 12px;
        line-height: 1.5;
        border-radius: 3px;
    }

    .ic {
        color: darkgray;
        font-size: 20px;
    }

    .comment-count {
        color: #f8f8f8;
        font-weight: 900;
        background-color: red;
        border-radius: 50%;
        font-size: 14px;
        position: fixed;
        width: 19px;
        top: 19%;
        right: 0%;
    }

    .page-content {
        padding-left: 10px;
        padding-right: 5px;
        padding-top: 20px;
    }

    #menu-toggle {
        text-decoration: none;
        float: left;
        color: #000;
    }

    .toggle-btn {
        position: relative;
        left: -18px;
        top: 250px;
        padding-top: 15px;
        padding-bottom: 15px;
        background-color: silver;
        padding-left: 8px;
        padding-right: 9px;
        border-bottom-left-radius: 0px;
        border-top-left-radius: 0px;
    }

    #toggle-icon {
        font-size: 24px;
        font-weight: 600;
    }

    .toggle-btn i {
        color: #404040;
    }

    #slide-wrapper {
        padding-left: 360px;
        transition: all 0.4s ease 0s;
    }

    #sidebar-slide-wrapper {
        margin-left: -360px;
        left: 360px;
        width: 360px;
        background: silver;
        position: fixed;
        height: 100%;
        overflow-y: auto;
        z-index: 1000;
        transition: all 0.4s ease 0s;
    }

    #slide-wrapper.active {
        padding-left: 0;
    }

        #slide-wrapper.active #sidebar-slide-wrapper {
            left: 0;
        }

    @@media (max-width:767px) {

        #slide-wrapper {
            padding-left: 0;
        }

        #sidebar-slide-wrapper {
            left: 0;
        }

        #slide-wrapper.active {
            position: relative;
            left: 250px;
        }

            #slide-wrapper.active #sidebar-slide-wrapper {
                left: 250px;
                width: 250px;
                transition: all 0.4s ease 0s;
            }

        #menu-toggle {
            display: inline-block;
        }
    }
</style>

<script>
    function SetfullMargin() {
        //document.getElementById("main-div").style.marginLeft = "0px";
        if (document.getElementById("main-div").style.marginLeft == "5%") {
            document.getElementById("main-div").style.marginLeft = "30%";
            document.getElementById("main-div").style.width = "60%";

        } else {
            document.getElementById("main-div").style.marginLeft = "5%";
            document.getElementById("main-div").style.width = "90%";
        }
    }
</script>



<div id="slide-wrapper">
    <div id="sidebar-slide-wrapper">
        <div class="product col-12 pt-3">
            <div class="card">
                <div class="card-header text-center">
                    Category
                    @if (ViewBag.Permissions != null && ViewBag.Permissions.Contains("CanManageCategory") || _userContext.IsSystemAdmin)
                                                {
                    <i class="fal fa-plus-circle category-plus" title="Create New Category" onclick="onCreateCategory()"></i>
                                                }
                </div>
                <div class="card-body" id="tree-container">
                    <div id="contentTreeView" class="category-tree"></div>
                    <script type="text/x-kendo-tmpl" id="templateCategory">
                        <div class="ais-refinement-list--item">
                            <div>
                                <label for="learning-path">
                                    <input type="checkbox" id="learning-path" value="Learning Path">
                                       #:CategoryName#
                            </label>
                        </div>
                            </div>
                    </script>

                </div>
            </div>
        </div>
    </div>
    <div id="page-content-slide-wrapper">
        <button id="menu-toggle" style="" class="btn toggle-btn"><i id="toggle-icon" class="fa fa-angle-left"></i></button>
        <div id="main-div" class="page-content">

            <div class="container">
                <div class="row mb20">
                    <div class="col-12">
                        @*<form action="#" class="ng-pristine ng-valid">*@
                            <div class="row">
                                <div class="col-10">
                                    <input type="search" class="form-control ais-search-box--input" id="search-input" placeholder="Search books" aria-label="Search" autocapitalize="off" autocomplete="off" autocorrect="off" role="textbox" spellcheck="false" value="">

                                    <button class="btn btn-primary ais-search-box--submit" type="button" onclick="onSearch();">
                                        Search <i class="fal fa-search"></i>
                                    </button>
                                </div>
                                <div class="col-2">
                                    <button class="btn btn-primary" type="button" onclick="onReset();">
                                        Reset
                                    </button>
                                </div>
                            </div>
                            @*<span class="ais-search-box--reset-wrapper" style="display: none;">
                                    <button type="reset" title="Clear the search query." class="ais-search-box--reset">
                                        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" width="100%" height="100%">
                                            <path d="M8.114 10L.944 2.83 0 1.885 1.886 0l.943.943L10 8.113l7.17-7.17.944-.943L20 1.886l-.943.943-7.17 7.17 7.17 7.17.943.944L18.114 20l-.943-.943-7.17-7.17-7.17 7.17-.944.943L0 18.114l.943-.943L8.113 10z" fill-rule="evenodd">
                                            </path>
                                        </svg>
                                    </button>
                                </span>*@
                        @*</form>*@
                    </div>
                </div>
           
            </div>


            <div class="container-fluid body-content">
                <div class="row no-gutters">
                    <div class="col-12 pl-2">
                        <a href="#" class="btn btn-sm btn-primary" title="Card View"><i class="fas fa-th"></i></a>
                        <a href="javascript: void(0); onclick=OnSwitchView('scroll')" class="btn btn-sm btn-primary" title="Scroll View" view=""><i class="fas fa-arrows-h"></i></a>
                        <a href="javascript: void(0); onclick=OnSwitchView('hierarchy')" class="btn btn-sm btn-primary" title="Hierarchy View" view=""><i class="fas fa-sitemap"></i></a>
                    </div>
                    <div class="col-12 pt-2">
                        <div id="kgrdCards"></div>
                        <script type="text/x-kendo-tmpl" id="templateTask">

                                                                                                   <div class="product">
                                                                           <div class="card">
                                                                       <div class="card-header text-center">
                                           #:BookName#
                                             </div>
                                                                               <div class="card-body">


                                              #if(data.IsNew)
                              {#<div class="book-tag-new row no-gutters">
                                <div class="book-tag-text-new">NEW</div>
                             <div class="book-tag-tail-new"></div>
                            </div>
                            #}
                            if(data.IsUpdated)
                            {# <div class="book-tag-updated row no-gutters">
                                 <div class="book-tag-text-updated">UPDATED</div>
                             <div class="book-tag-tail-updated"></div>
                            </div>
                            #}#


                                                                                   <div class="row">
                                                                                       <div class="col-5" style="min-height:130px;text-align:center;">
                                                                                           <img class="book-img" src="/cms/Document/GetImageMongo?id=#:BookImage#" onerror="OnBookError(this);">
                                                                         <button type="button" class="star-popup-card btn btn-light btn-xs mt-2 rating-#:RatingRounded#" data-rating-rounded="#:RatingRounded#" data-rating-count="#:RatingCount#" data-service-id="#:ServiceId#" data-my-rating="#:MyRating#" data-rating="#:Rating#"   data-rating-id="#:MyRatingId#">#:Rating#<i class="fas fa-star pl-1" aria-hidden="true"></i></button>
                                                                                       </div>
                                                                                       <div class="col-7">
                                                                                        <div class="pb-1"><span class="card-label">Category:</span><span class="card-text">#:CategoryName#</span></div>
                                                                                        <div class="pb-1"><span class="card-label">Book No:</span><span class="card-text">#:ServiceNo#</span></div>
                                                                                        <div class="pb-1"><span class="card-label">Pages:</span><span class="card-text">#:TotalPages#</span></div>
                                                                                        <div class="pb-1"><span class="card-label">Created By:</span><span class="card-text">#:CreatedBy#</span></div>
                                                                                        <div class="pb-1"><span class="card-label">Last Updated:</span><span class="card-text">#:LastUpdatedDateDisplay#</span></div>

                                                                                       </div>
                                                                                   </div>
                                                                                   <div class="row pt-1">
                                                                        <div class="col-12">
                                                                                       <p class="#:DescriptionHoverClass# card-desc" data-content="#:BookDescription#">#if(data.BookDescription !=null){# #:BookDescriptionText# #}#</p>
                                                                                   </div>
                                                                                   </div>
                                                                                    <a href='javascript:onReadMore("#:Id#");' class="btn btn-primary float-right" >Read Book</a>
                                                                               </div>
                                                                           </div>
                                                                       </div>


                        </script>

                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<input type="hidden" id="SelectedPageId" />
<script>
    function onAfterCategoryCreate() {
        var url = "/cms/NtsService/ServiceBookList?templateCodes=@ViewBag.TemplateCodes&permissions=@ViewBag.Permissions";
        LoadPartailView(url, $('#cms-content'));

    }
    function OnSwitchView(view) {
        if (view == 'hierarchy') {
            var url = "/cms/NtsService/ServiceBookListHierarchyView?templateCodes=@ViewBag.TemplateCodes&permissions=@ViewBag.Permissions";
            //var url = "/portalAdmin/ObjectHierarchyChart/Index?hierarchyCode=USER_HIERARCHY";
            LoadPartailView(url, $('#cms-content'));
        } else if (view == 'scroll') {
            var url = "/cms/NtsService/ServiceBookListScrollView?templateCodes=@ViewBag.TemplateCodes&permissions=@ViewBag.Permissions";
            LoadPartailView(url, $('#cms-content'));

        } else {
              var url = "/cms/NtsService/ServiceBookList?templateCodes=@ViewBag.TemplateCodes&permissions=@ViewBag.Permissions";
            LoadPartailView(url, $('#cms-content'));
        }
    }

    
    var input = document.getElementById("search-input");

    // Execute a function when the user releases a key on the keyboard
    input.addEventListener("keyup", function (event) {
        var search = $("#search-input").val();
        // Number 13 is the "Enter" key on the keyboard
        if (event.keyCode === 13) {
            // Cancel the default action, if needed
            event.preventDefault();
            if (search == null && search == "") {
                onReset();
            }
            else {
                onSearch();
            }

            
        }
    });

    $(document).ready(function () {
        //view
        loadBookTree();
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/cms/NtsService/GetAllBook?templateCodes=@ViewBag.TemplateCodes&permission=@ViewBag.Permissions",

                    dataType: "json"
                }
            },
            pageSize: 20
        });

    $("#kgrdCards").kendoListView({
        dataSource: dataSource,
        template: kendo.template($("#templateTask").html()),
        dataBound: function () {
            if (this.dataSource.data().length == 0) {
                //custom logic

                $('.added').remove();
                $("#kgrdCards").append('<div class="added"><h1>No Data Found</h1></div>');
            }
            else {
                $('.added').remove();
            }
                $('.star-popup-card').webuiPopover('destroy').webuiPopover({
                    width: 300,
                    height: 80,
                    trigger: 'hover',
                    placement: 'auto',
                    delay: {
                        show: null,
                        hide: 300
                    },
                    content: function (e) {

                        var myRatingId = e.$element.data('rating-id');
                        var rating = e.$element.data('rating');
                        var ratingRounded = e.$element.data('rating-rounded');
                        var myrating = eval(e.$element.data('my-rating'));
                        var serviceId = e.$element.data('service-id');
                        var rc = e.$element.data('rating-count');
                        var ratingText = "My Rating";
                        if (myRatingId === null || myRatingId === undefined || myRatingId==='') {
                           ratingText = 'Rate Now';
                        }
                        else {
                            ratingText = 'My Rating <i class="pl-1 fa fas fa-trash" style="color:red;font-size:15px;cursor:pointer;" title="Remove My Rating" onclick="OnRemoveRating(\'' + serviceId+'\')"></i>';
                        }
                        var ratingcss1 = '';
                        var ratingcss2 = '';
                        var ratingcss3 = '';
                        var ratingcss4 = '';
                        var ratingcss5 = '';
                        switch (myrating) {
                            case 1:
                                ratingcss1 = 'rating-rated-1';
                                break;
                            case 2:
                                ratingcss1 = 'rating-rated-2';
                                ratingcss2 = 'rating-rated-2';
                                break;
                            case 3:
                                ratingcss1 = 'rating-rated-3';
                                ratingcss2 = 'rating-rated-3';
                                ratingcss3 = 'rating-rated-3';
                                break;
                            case 4:
                                ratingcss1 = 'rating-rated-4';
                                ratingcss2 = 'rating-rated-4';
                                ratingcss3 = 'rating-rated-4';
                                ratingcss4 = 'rating-rated-4';
                                break;
                            case 5:
                                ratingcss1 = 'rating-rated-5';
                                ratingcss2 = 'rating-rated-5';
                                ratingcss3 = 'rating-rated-5';
                                ratingcss4 = 'rating-rated-5';
                                ratingcss5 = 'rating-rated-5';
                                break;
                            default:
                        }

                        var html = '<div class="rating-popup row">\
                        <div class="col-5 text-center">\
            <div class="col-12 pt-2 text-center">\
                <h6 class="rating-rated-'+ ratingRounded+'">'+ rating + '<i class="far fa-star"></i></h6>\
            </div>\
            <div class="col-12 card-label text-center">\
                '+ rc + ' rating(s)\
            </div>\
        </div>\
                        <div class="col-7 text-center">\
                            <div class="col-12 card-label pt-2 pb-2">\
                               '+ ratingText +'\
                            </div>\
                            <div class="col-12 text-center">\
                                 <div class="row no-gutters rating text-center">\
        <span id="rating-star-1" class="col-2 fas fa-star rating-star rating-star-1 '+ ratingcss1 + '" onmouseout="ResetStar(' + myrating + ');" onmouseover="OnStarHover(1);" onclick="OnStarClick(1,\'' + serviceId + '\');"></span>\
        <span id="rating-star-2" class="col-2 fas fa-star rating-star rating-star-2 '+ ratingcss2 + '" onmouseout="ResetStar(' + myrating + ');" onmouseover="OnStarHover(2);" onclick="OnStarClick(2,\'' + serviceId + '\');"></span>\
        <span id="rating-star-3" class="col-2 fas fa-star rating-star rating-star-3 '+ ratingcss3 + '" onmouseout="ResetStar(' + myrating + ');" onmouseover="OnStarHover(3);" onclick="OnStarClick(3,\'' + serviceId + '\');"></span>\
        <span id="rating-star-4" class="col-2 fas fa-star rating-star rating-star-4 '+ ratingcss4 + '" onmouseout="ResetStar(' + myrating + ');" onmouseover="OnStarHover(4);" onclick="OnStarClick(4,\'' + serviceId + '\');"></span>\
        <span id="rating-star-5" class="col-2 fas fa-star rating-star rating-star-5 '+ ratingcss5 + '" onmouseout="ResetStar(' + myrating + ');" onmouseover="OnStarHover(5);" onclick="OnStarClick(5,\'' + serviceId + '\');"></span>\
        <span id="rating-star-value" class="col-2 rating-star-value"></span>\
    </div>\
                            </div>\
                        </div>\
    </div>';

                        return html;
                    },
                    onShow: function ($element) {

                    },
                });
                $('.desc-popup-card').webuiPopover('destroy').webuiPopover({
                    width: 350,
                    height: 450,
                    trigger: 'hover',
                    placement: 'auto',
                    delay: {
                        show: null,
                        hide: 300
                    },
                    content: function (e) {
                        var content = e.$element.data('content');
                        content = "<div>" + content + "</div>";
                        return content;
                    }
                });

        }
    });
         if ('@ViewBag.BookId' != '' && '@ViewBag.BookId' != 'null')
        {
            var url = '/cms/NtsService/ServiceBookBrowse?bookId=@ViewBag.BookId';
            var win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Title: 'Browse Book', Width: 1200, Height: 1000 });
        }

    });
    function getItems(type)
    {
         if (type == "Category") {
                        return {
                            @if (ViewBag.Permissions != null && ViewBag.Permissions.Contains("CanManageBook") || _userContext.IsSystemAdmin)
                            {
                               @: 'createbook': { 'name': 'Create Book', 'icon': 'fas fa-plus' },
                            }

                            @if (ViewBag.Permissions != null && ViewBag.Permissions.Contains("CanManageCategory") || _userContext.IsSystemAdmin)
                            {
                               @: 'edit': { 'name': 'Edit Category', 'icon': 'fas fa-pencil' },
                             @:'share': { 'name': 'Share Category', 'icon': 'far fa-share-alt' },
                            @:'deleteCategory': { 'name': 'Delete Category', 'icon': 'fas fa-trash' },
                            }

                        }
                    }
         else if (type == "Group") {
                        return {
                             @if (ViewBag.Permissions != null && ViewBag.Permissions.Contains("CanManageBook") || _userContext.IsSystemAdmin)
                             {
                                @: 'page': { 'name': 'Create New Page', 'icon': 'fas fa-plus' },
                             @: 'existingpage': { 'name': 'Add Existing Page', 'icon': 'fas fa-plus' },
                            @*@:'createbookbelow': { 'name': 'Create Book Below', 'icon': 'fas fa-plus' },*@
                            @:'editgroup': { 'name': 'Edit Book', 'icon': 'fas fa-pencil' },
 @:'share': { 'name': 'Share Book', 'icon': 'far fa-share-alt' },
                            @:'delete': { 'name': 'Delete Book', 'icon': 'fas fa-trash' },

                            }

                        }
                    }
                    else
                    {
                        return {
                            'editpage': { 'name': 'Edit Page', 'icon': 'fas fa-pencil' },
                            'view': { 'name': 'View Page', 'icon': 'fas fa-eye' },
                            //'createpagebelow': { 'name': 'Create Page Below', 'icon': 'fas fa-plus' },
                            'deletepage': { 'name': 'Delete Page', 'icon': 'fas fa-trash' },
                        }
                    }
    }
    $(function () {
        $.contextMenu({
            selector: '.categ-menu',
            trigger: 'left',
            build: function ($trigger, e) {



                var type = $trigger.data('type');
                var WorkflowServiceId = $trigger.data('workflowserviceid');
                var parentId = $trigger.data('parentid');
                var Count = $trigger.data('count');
                var Sequence = $trigger.data('sequence');
                var WorkspaceId = $trigger.data('workspaceid');
                var id = $trigger.data('key');
                var NodeId = $trigger.data('nodeid');
              
                switch (0) {
                    case 0:
                        var items = getItems(type);

                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'delete':
                                        OnDeleteBook(WorkflowServiceId, parentId, 2);
                                        break;
                                    case 'deleteCategory':
                                        OnDeleteCategory(WorkflowServiceId, parentId, 2);
                                        break;
                                    case 'share':
                                        var win = GetMainWindow();
                                        win.iframeOpenUrl = '/Cms/NtsServiceShared?serviceId=' + WorkflowServiceId + '&IsSharingEnabled=true';
                                        win.OpenWindow({ Title: 'Share With', Width: 1200, Height: 600 });
                                        break;
                                    case 'edit':
                                        var portalId = window.parent.$('#GlobalPortalId').val();

                                        var url = '/Cms/Page?lo=Popup&pageType=Service&cbm=OnAfterServiceCreate&source=Versioning&dataAction=Edit&templateCodes=TEC_PROCESS_CATEGORY&portalId=' + portalId + '&recordId=' + WorkflowServiceId;
                                        var win = GetMainWindow();
                                        win.iframeOpenUrl = url;
                                        win.OpenWindow({ Title: 'Edit Category', Width: 1200, Height: 600 });
                                        break;
                                    case 'createbook':
                                        if (Count == null) {
                                            Count = 0;
                                        }
                                        onCreateGroup(WorkflowServiceId, parseInt(Count) + 1);
                                        break;
                                    case 'createbookbelow':
                                        if (Sequence == null) {
                                            Sequence = 0;
                                        }
                                        onCreateGroup(parentId, Sequence + 1);
                                        break;
                                    case 'existingpage':
                                        
                                        if (Count == null) {
                                            Count = 0;
                                        }
                                        var sequence = parseInt(Count) + 1;
                                        var url = '/Cms/NtsService/AddExistingPage?categoryId=' + WorkspaceId + '&bookId=' + id + '&sequenceOrder=' + sequence+'&actualPages=true';
                                        var win = GetMainWindow();
                                        win.iframeOpenUrl = url;
                                        win.OpenWindow({ Title: 'Add Existing Page', Width: 750, Height: 450 });
                                        break;
                                    case 'editgroup':
                                        
                                        var portalId = window.parent.$('#GlobalPortalId').val();
                                        var url = '/Cms/Page?lo=Popup&pageType=Service&cbm=OnAfterServiceCreate&source=Versioning&dataAction=Edit&templateCodes=TEC_PROCESS_GROUP&portalId=' + portalId + '&recordId=' + WorkflowServiceId;
                                        var win = GetMainWindow();
                                        win.iframeOpenUrl = url;
                                        win.OpenWindow({ Title: 'Edit Book', Width: 1200, Height: 600 });
                                        break;
                                    case 'page':
                                        
                                        if (Count == null) {
                                            Count = 0;
                                        }
                                        onCreatePage(WorkflowServiceId, parseInt(Count) + 1);
                                        break;
                                    case 'editpage':
                                        
                                        var portalId = window.parent.$('#GlobalPortalId').val();
                                        var url = '/Cms/Page?lo=Popup&pageType=Service&cbm=OnAfterServiceCreate&source=Versioning&dataAction=Edit&templateCodes=TEC_PROCESS_ITEM&portalId=' + portalId + '&recordId=' + WorkflowServiceId;
                                        var win = GetMainWindow();
                                        win.iframeOpenUrl = url;
                                        win.OpenWindow({ Title: 'Edit Page', Width: 1200, Height: 600 });
                                        break;
                                    case 'view':
                                        onReadMore(WorkspaceId, NodeId)
                                        break;
                                    case 'createpagebelow':
                                        if (Sequence == null) {
                                            Sequence = 0;
                                        }
                                        onCreatePage(parentId, Sequence + 1);
                                        break;
                                    case 'deletepage':
                                        kendo.confirm("Are you sure that you want to proceed?").then(function () {
                                            $.ajax({
                                                url: '/cms/NtsService/DeleteBokPageMapping?bookId=' + WorkspaceId + '&pageId=' + NodeId,
                                                type: "GET",
                                                contentType: "application/json",
                                                dataType: "JSON",
                                                success: function (response) {
                                                    if (response.success) {
                                                        ShowNotification("Deleted Successfully");
                                                        OnAfterServiceCreate();
                                                    }

                                                }
                                            });

                                        }, function () {

                                        });
                                        break;
                                    default:
                                }

                            },
                            items: items
                        };


                }
            }
        });
    });
    @*function loadBookTree()
    {
         $("#contentTreeView").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/cms/NtsService/GetBookTreeList?templateCode=@ViewBag.TemplateCodes&permission=@ViewBag.Permissions",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/cms/NtsService/GetBookTreeList?permission=@ViewBag.Permissions",
                    data: { id: node.key }
                }

             },

            select: function (event, data) {
                var s = data.tree.getSelectedNodes().join(", ");
                var selectedNodes = data.tree.getSelectedNodes();
                var selectedNames = [];
                var selectedCategory = [];
                var selectedKey = [];
                for (var i = 0; i <= selectedNodes.length - 1; i++) {
                    if (selectedNodes[i].data.type =="Category") {
                        selectedCategory.push(selectedNodes[i].key);
                    }
                    else
                    {
                        selectedKey.push(selectedNodes[i].key);
                        selectedNames.push(selectedNodes[i].title);
                    }

                }

                //$("#ModuleId").val(selectedKey.join(","));
               // var search = FilterGrid();
                $("#kgrdCards").data("kendoListView").dataSource.read({ templateCodes: '@ViewBag.TemplateCodes', categoryIds: selectedCategory.join(","),groupIds: selectedKey.join(",")});
             },
             renderNode: function (event, data) {
                 // Optionally tweak data.node.span
                 var node = data.node;
                 var $span = $(node.span);
                 $span.find("> span.fancytree-title").html(node.title + "<i class='categ-menu fa fa-ellipsis-v book-context-menu' data-type='" + node.data.type + "' data-WorkflowServiceId='" + node.data.WorkflowServiceId + "' data-parentId='" + node.data.parentId + "' data-Count='" + node.data.Count + "' data-Sequence='" + node.data.Sequence + "' data-WorkspaceId='" + node.data.WorkspaceId + "' data-key='" + node.key + "' data-NodeId='" + node.data.NodeId +"'>").addClass("book-context-menu");
                     //$span.find("> span.fancytree-icon").css({
                     //    //                      border: "1px solid green",
                     //    backgroundImage: "url(skin-custom/customDoc2.gif)",
                     //    backgroundPosition: "0 0"
                     //});
             },
            //renderNode: function (event, data) {
            //    // Optionally tweak data.node.span
            //    var node = data.node;
            //    node.renderTitle();


            //},
            dblclick: function (event, data) {
                var node = data.node;
            }

        });
    }*@

    function loadBookTree()
    {
         $("#contentTreeView").fancytree({
             extensions: ['contextMenu'],
             checkbox: true,
            source: $.ajax({
                url: "/cms/NtsService/GetBookTreeList?templateCode=@ViewBag.TemplateCodes&permission=@ViewBag.Permissions",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/cms/NtsService/GetBookTreeList?permission=@ViewBag.Permissions",
                    data: { id: node.key }
                }

             },

            select: function (event, data) {
                var s = data.tree.getSelectedNodes().join(", ");
                var selectedNodes = data.tree.getSelectedNodes();
                var selectedNames = [];
                var selectedCategory = [];
                var selectedKey = [];
                for (var i = 0; i <= selectedNodes.length - 1; i++) {
                    if (selectedNodes[i].data.type =="Category") {
                        selectedCategory.push(selectedNodes[i].key);
                    }
                    else
                    {
                        selectedKey.push(selectedNodes[i].key);
                        selectedNames.push(selectedNodes[i].title);
                    }

                }

                //$("#ModuleId").val(selectedKey.join(","));
               // var search = FilterGrid();
                $("#kgrdCards").data("kendoListView").dataSource.read({ templateCodes: '@ViewBag.TemplateCodes', categoryIds: selectedCategory.join(","),groupIds: selectedKey.join(",")});
             },
             renderNode: function (event, data) {
                 // Optionally tweak data.node.span
                 var node = data.node;
                 var $span = $(node.span);
                 $span.find("> span.fancytree-title").html(node.title + "<i class='categ-menu fa fa-ellipsis-v book-context-menu' data-type='" + node.data.type + "' data-WorkflowServiceId='" + node.data.WorkflowServiceId + "' data-parentId='" + node.data.parentId + "' data-Count='" + node.data.Count + "' data-Sequence='" + node.data.Sequence + "' data-WorkspaceId='" + node.data.WorkspaceId + "' data-key='" + node.key + "' data-NodeId='" + node.data.NodeId +"'>").addClass("book-context-menu");
                     //$span.find("> span.fancytree-icon").css({
                     //    //                      border: "1px solid green",
                     //    backgroundImage: "url(skin-custom/customDoc2.gif)",
                     //    backgroundPosition: "0 0"
                     //});
             },
            //renderNode: function (event, data) {
            //    // Optionally tweak data.node.span
            //    var node = data.node;
            //    node.renderTitle();


            //},
            dblclick: function (event, data) {
                var node = data.node;
             },
             contextMenu: {
                menu: function (node) {

                },

            }

        });
    }
    function OnStarClick(star, serviceId) {
        var comment = '';
        ShowLoaderTarget($('.rating-popup'));
        $.ajax({
            url: '/Nts/UpdateRating?ntsType=2&ntsId=' + serviceId + '&rating=' + star + '&comment=' + comment + '&userId=@_userContext.UserId',
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                HideLoaderTarget($('.rating-popup'));
                  $("#kgrdCards").data("kendoListView").dataSource.read({ templateCodes: '@ViewBag.TemplateCodes'});
            }
        });
    }
      function OnRemoveRating(serviceId) {
        var comment = '';
        ShowLoaderTarget($('.rating-popup'));
        $.ajax({
            url: '/Nts/RemoveRating?ntsType=2&ntsId=' + serviceId +  '&userId=@_userContext.UserId',
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                HideLoaderTarget($('.rating-popup'));
                  $("#kgrdCards").data("kendoListView").dataSource.read({ templateCodes: '@ViewBag.TemplateCodes'});
            }
        });
    }
    function OnStarHover(star) {
        $('.rating-star-value').html('&nbsp;');
        $("span[id^='rating-star-']").removeClass('rating-rated-1');
        $("span[id^='rating-star-']").removeClass('rating-rated-2');
        $("span[id^='rating-star-']").removeClass('rating-rated-3');
        $("span[id^='rating-star-']").removeClass('rating-rated-4');
        $("span[id^='rating-star-']").removeClass('rating-rated-5');
        switch (star) {
            case 1:
                $('.rating-star-1').addClass('rating-rated-1');
                $('.rating-star-value').html('1/5');
                break;
            case 2:
                $('.rating-star-1').addClass('rating-rated-2');
                $('.rating-star-2').addClass('rating-rated-2');
                $('.rating-star-value').html('2/5');
                break;
            case 3:
                $('.rating-star-1').addClass('rating-rated-3');
                $('.rating-star-2').addClass('rating-rated-3');
                $('.rating-star-3').addClass('rating-rated-3');
                $('.rating-star-value').html('3/5');
                break;
            case 4:
                $('.rating-star-1').addClass('rating-rated-4');
                $('.rating-star-2').addClass('rating-rated-4');
                $('.rating-star-3').addClass('rating-rated-4');
                $('.rating-star-4').addClass('rating-rated-4');
                $('.rating-star-value').html('4/5');
                break;
            case 5:
                $('.rating-star-1').addClass('rating-rated-5');
                $('.rating-star-2').addClass('rating-rated-5');
                $('.rating-star-3').addClass('rating-rated-5');
                $('.rating-star-4').addClass('rating-rated-5');
                $('.rating-star-5').addClass('rating-rated-5');
                $('.rating-star-value').html('5/5');
                break;
            default:
        }
    }
    function ResetStar(star) {
        $('.rating-star-value').html('&nbsp;');
        $("span[id^='rating-star-']").removeClass('rating-rated-1');
        $("span[id^='rating-star-']").removeClass('rating-rated-2');
        $("span[id^='rating-star-']").removeClass('rating-rated-3');
        $("span[id^='rating-star-']").removeClass('rating-rated-4');
        $("span[id^='rating-star-']").removeClass('rating-rated-5');
        switch (star) {
            case 1:
                $('.rating-star-1').addClass('rating-rated-1');
                $('.rating-star-value').html('1/5');
                break;
            case 2:
                $('.rating-star-1').addClass('rating-rated-2');
                $('.rating-star-2').addClass('rating-rated-2');
                $('.rating-star-value').html('2/5');
                break;
            case 3:
                $('.rating-star-1').addClass('rating-rated-3');
                $('.rating-star-2').addClass('rating-rated-3');
                $('.rating-star-3').addClass('rating-rated-3');
                $('.rating-star-value').html('3/5');
                break;
            case 4:
                $('.rating-star-1').addClass('rating-rated-4');
                $('.rating-star-2').addClass('rating-rated-4');
                $('.rating-star-3').addClass('rating-rated-4');
                $('.rating-star-4').addClass('rating-rated-4');
                $('.rating-star-value').html('4/5');
                break;
            case 5:
                $('.rating-star-1').addClass('rating-rated-5');
                $('.rating-star-2').addClass('rating-rated-5');
                $('.rating-star-3').addClass('rating-rated-5');
                $('.rating-star-4').addClass('rating-rated-5');
                $('.rating-star-5').addClass('rating-rated-5');
                $('.rating-star-value').html('5/5');
                break;
            default:
        }
    }
    function onCreateCategory()
    {
        var portalId = window.parent.$('#GlobalPortalId').val();

        var url = '/Cms/Page?lo=Popup&pageType=Service&cbm=onAfterCategoryCreate&source=Create&dataAction=Create&templateCodes=TEC_PROCESS_CATEGORY&portalId=' + portalId ;
        var win = GetMainWindow();
           win.iframeOpenUrl = url;
        win.OpenWindow({ Title:  'Create Category', Width: 1200, Height: 600 });
    }
    function onCreatePage(parentServiceId, sequenceNo)
    {
        var portalId = window.parent.$('#GlobalPortalId').val();
        var prms = encodeURIComponent('parentServiceId=' + parentServiceId + '&sequenceOrder=' + sequenceNo);
        var url = '/Cms/Page?lo=Popup&pageType=Service&cbm=OnAfterServiceCreate&source=Create&dataAction=Create&templateCodes=TEC_PROCESS_ITEM&portalId=' + portalId + '&prms=' + prms;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Create Page', Width: 1200, Height: 600 });
    }
    function onCreateGroup(parentServiceId,sequenceNo)
    {
        var portalId = window.parent.$('#GlobalPortalId').val();
        var prms = encodeURIComponent('parentServiceId=' + parentServiceId+'&sequenceOrder='+sequenceNo);
        var url = '/Cms/Page?lo=Popup&pageType=Service&cbm=OnAfterServiceCreate&source=Create&dataAction=Create&templateCodes=TEC_PROCESS_GROUP&portalId=' + portalId + '&prms=' + prms;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Create Group', Width: 1200, Height: 600 });
    }
    function OnAfterServiceCreate()
    {        
        //window.location.href = window.location.href;
        $("#tree-container").empty();
        $("#tree-container").append('<div id="contentTreeView" class="category-tree"></div>');
        loadBookTree();
         $("#kgrdCards").data("kendoListView").dataSource.read({ templateCodes: '@ViewBag.TemplateCodes'});
        //var tree = $('#contentTreeView').fancytree('getTree');
        //tree.reload();
    }
    function onReadMore(id,pageId)
    {
        var url = '/cms/NtsService/ServiceBookBrowse?bookId=' + id + '&pageId=' + pageId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Read Book', Width: 1200, Height: 1000 });
        return false;
    }
    function onSearch()
    {
        var search = $("#search-input").val();
        $("#kgrdCards").data("kendoListView").dataSource.read({ templateCodes: '@ViewBag.TemplateCodes', search: search});
    }
    function onReset()
    {
        $("#search-input").val("");
        $("#kgrdCards").data("kendoListView").dataSource.read({ templateCodes: '@ViewBag.TemplateCodes' });
        loadBookTree();
    }
    function OnDeleteBook(id, pi, pt) {
        
        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDelete(id, pi, pt);
        }, function () {

        });

    }
        function OnDeleteCategory(id, pi, pt) {


            kendo.confirm("Are you sure that you want to proceed?").then(function () {
                $.ajax({

                    url: '/cms/NtsService/DeleteServiceCategory?serviceId=' + id + '&parentId=' + pi ,
                    type: "POST",
                    contentType: "application/json",
                    dataType: "JSON",
                    success: function (response) {

                        ShowNotification("Deleted Successfully", "success");
                        /// OnServicePlusItemCreate();
                        onAfterCategoryCreate();

                    }
                });
            }, function () {

            });

        }
    function FillSharingCount() {
        loadBookTree();
        $("#kgrdCards").data("kendoListView").dataSource.read({ templateCodes: '@ViewBag.TemplateCodes' });
    }

    function confirmDelete(id, pi, pt) {
        
        $.ajax({

            url: '/cms/DeleteServiceBookItems?serviceId=' + id + '&parentId=' + pi + '&parentType=2',
            type: "POST",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {

                ShowNotification("Deleted Successfully", "success");
                /// OnServicePlusItemCreate();
                OnAfterServiceCreate();
            }
        });

    }

    function onBookPageCommentClick()
    {
        var serviceId = document.getElementById("pageServiceId").innerText;
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("ServiceComments", "Cms", new { @area= "" })?serviceId=' + serviceId + '&IsAddCommentEnabled=true';
        win.OpenWindow({ Title: 'Page Comments', Width: 1200, Height: 600 });
        return false;
    }
    function onRelatedPageClick() {
        $('.desc-popup-card').webuiPopover('destroy').webuiPopover({
            width: 350,
            height: 350,
            trigger: 'hover',
            placement: 'left',
            delay: {
                show: null,
                hide: 300
            },
            content: function (e) {
                // var content = e.$element.data('content');
                content = "<div id='related-page'></div>";
                   @*var dataSource1 = new kendo.data.DataSource({
                    transport: {
                        read: {
                            url: "/cms/NtsService/GetRelatedBooks?bookId=@Model.BookDetails.Id",
                            dataType: "json",
                        }
                    },
                });*@

                return content;
            }
        });

    }

    function onBookDownload(page)
     {
         var pageId = '';
         if (page==='page') {
             pageId = $('#SelectedPageId').val();
         }
         @*url = '/cms/NtsService/onBookDownload?bookId=@Model.BookDetails.Id&pageId=' + pageId;
         window.open(url, '_blank');*@
         return false;
    }
    $("#menu-toggle").click(function (e) {
        e.preventDefault();
        $("#slide-wrapper").toggleClass("active");
        $("#toggle-icon").toggleClass("fa-angle-right");

    });
</script>
