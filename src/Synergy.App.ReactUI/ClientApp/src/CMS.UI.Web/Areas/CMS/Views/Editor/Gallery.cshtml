@*@inject IStringLocalizer<CMS.UI.Web.Areas.DMS.Controllers.DocumentController> Resource*@
@inject IStringLocalizer<CMS.UI.Web.Controllers.CmsController> Resource
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@using Synergy.App.ViewModel;
@using Synergy.App.Common
@{
    ViewData["Title"] = "Gallery";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
<script src="~/js/clipboard.min.js"></script>
<script>
     @{
            string baseurl = ApplicationConstant.AppSettings.ApplicationBaseUrl(Configuration);

        }
    window.OnDocError = (obj) => {

        obj.style.display = "none"
        //obj.onerror = null;
        //obj.src = '';
        //obj.width = 50;
        //obj.height = 50;
        //obj.style.marginTop = "35%";
        //obj.className = "e-list-icon e-fe-pdf"
        var dis = document.getElementById(obj.id.split("_")[1]);
        dis.style.display = "block";
        var ext = obj.id.substring(obj.id.lastIndexOf(".") + 1);
        if (ext.toLowerCase().includes("pdf")) {
            dis.className = "fal fa-file-pdf";
            dis.style.color = "red";
        } else if (ext.toLowerCase().includes("xlsx") || ext.toLowerCase().includes("Xls")) {
            dis.className = "fal fa-file-excel";
            dis.style.color = "green";
        } else if (ext.toLowerCase().includes("doc")) {
            dis.className = "fal fa-file-word";
            dis.style.color = "darkblue";
        } else if (ext.toLowerCase().includes("pptx") || ext.toLowerCase().includes("ppt")) {
            dis.className = "fal fa-file-powerpoint";
            dis.style.color = "orange";
        }

        //dis.width = 50;
        //dis.height = 50;
        dis.style.paddingTop = "75px";
        dis.style.fontSize = "40px";

    };
    $("p").hide();
    $(document).ready(function () {
        var menu = $("#menu"),
        original = menu.clone(true);
        original.find(".k-state-active").removeClass("k-state-active");
        uploadImage();
        $("#apply").click(function (e) {
            e.preventDefault();
            var clone = original.clone(true);

            menu.getKendoContextMenu().destroy();
            clone.appendTo("#example");

            initMenu();
        });
        var initMenu = function () {
            menu = $("#menu").kendoContextMenu({
                target: "#listview-context-menu",
                filter: ".product",
                animation: {
                    open: { effects: "fadeIn" },
                    duration: 500
                },
                select: function (e) {
                    // Do something on select
                }
            });
        };
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Cms/Editor/GetImages?referenceId=@ViewBag.Id",
                    dataType: "json"
                }
            },
        });
        $("#listView").kendoListView({
            dataSource: dataSource,
            scrollable: "endless",
            selectable: '@ListViewSelectionMode.Single',
            template: kendo.template($("#template").html())
        });
    });
    var url = "";
    function onOpen(e) {
         url = "@baseurl" + "Cms/document/getimagemongo?enc=" + EncryptParams('id=' + e.target.id);
        console.log(url);
        $(".k-i-link").parent().parent()[0].id="cb_link";
    }
    function select(e) {
        menu = $(e.item).children(".k-link").text();
        //dataItem = $("#listView").data("kendoListView").dataItem($(e.targViewBagt));
        if (menu == "Preview") {
            var win = GetMainWindow();
            win.iframeOpenUrl = '@Url.Action("PreviewAttachment", "Cms", new { @area = "" })?ntsType=NTS_Service&Id=' + e.target.id + "&canEdit=false";
            win.OpenWindow({ Title: '@Html.Raw(Resource["PreviewAttachment"])', Width: 1000, Height: 700 });
            return false;
        } else if (menu == "Copy Link") {
            //window.location.href = "/cms/Document/GetFileMongo?fileId=" + e.target.id;
            @*var url = "@baseurl" + "Cms/document/getimagemongo?enc=" + EncryptParams('id=' + e.target.id);
            console.log(url);
            var win = GetMainWindow();
            win.iframeOpenUrl = '@Url.Action("CopyLink", "Editor", new { @area = "Cms" })?url=' + url;
            win.OpenWindow({ Title: 'Copy Link', Width: 1000, Height: 200 });
            return false;*@
            //navigator.clipboard.writeText(url);
        }

    }
    var clipboard = new ClipboardJS('#cb_link', {
        text: function () {
            alert("Link Copied.")
            return url;
        },
    });
    function setZoom(zoom, el) {

        transformOrigin = [0, 0];
        el = el || instance.getContainer();
        var p = ["webkit", "moz", "ms", "o"],
            s = "scale(" + zoom + ")",
            oString = (transformOrigin[0] * 2) + "% " + (transformOrigin[1] * 120) + "%";

        for (var i = 0; i < p.length; i++) {
            el.style[p[i] + "Transform"] = s;
            el.style[p[i] + "TransformOrigin"] = oString;
        }

        el.style["transform"] = s;
        el.style["transformOrigin"] = oString;

    }



    //setZoom(5,document.getElementsByClassName('container')[0]);

    function showVal(a) {
        var zoomScale = Number(a) / 2;
              var cols = document.getElementsByClassName('product');
        for (i = 0; i < cols.length; i++) {
            setZoom(zoomScale, cols[i])
        }

    }
    function EncryptParams(prm) {
        var key = CryptoJS.enc.Utf8.parse('8080808080808080');
        var iv = CryptoJS.enc.Utf8.parse('8080808080808080');
        var ecp = CryptoJS.AES.encrypt(CryptoJS.enc.Utf8.parse(prm), key,
            {
                keySize: 128 / 8,
                iv: iv,
                mode: CryptoJS.mode.CBC,
                padding: CryptoJS.pad.Pkcs7
            });
        return ecp;
    }

</script>

<script type="text/x-kendo-tmpl" id="template">
    <div class="product" title="#:FileName#" id="#:Id#">
        <div class="preview">


                    <img id="img_#:Id#_#:FileName#" width="200" height="200"  src="/Cms/document/getimagemongo/#:Id#" onerror="OnDocError(this)">
    <div id="#:Id#" style="display:none"></div>
    </div>

        <span id="text_#:Id#" class="span_text">#:FileName#</span>
    </div>
</script>
<div class="row">
    <div class="col">
        <p style="text-align:center">Paste your image here…(crtl + v)</p>
        <img id="paste-image" />
    </div>
</div>
<div class="row">
    <div class="col">
        <div id="image-file" class="dm-uploader">
            <h6 class=" text-muted">Drag &amp; drop files here</h6>

            <div class="btn btn-primary btn-block ">
                <span>Open the file Browser</span>
                <input type="file" title='Click to add Files' />
            </div>
        </div>

    </div>
</div>
<div id="listView"></div>

@(Html.Kendo().ContextMenu()
        .Name("menu")
        .Target("#listView")
        .Filter(".product")
        .Animation(animation =>
        {
            animation.Open(open =>
            {
                open.Fade(FadeDirection.In);
                open.Duration(500);
            });
        })
        .Events(e=>e.Select("select").Open("onOpen"))
        .Items(items =>
        {


            items.Add()
                 .Text(@Resource["Preview"]).SpriteCssClasses("k-icon k-i-eye");

            items.Add().Separator(true);

            items.Add()
                 .Text("Copy Link").SpriteCssClasses("k-icon k-i-link");


        })
    )
<style>

    .svg-inline--fa {
        height: unset !important;
    }

    .k-sprite.k-icon {
        font-size: 16px;
        padding-top: 6%;
    }

    .dateText {
        color: grey;
        font-size: 10px;
    }

    .span_text {
        font-size: 12px;
    }

    #listView {
        padding: 10px 5px;
        margin-bottom: -1px;
        min-height: 510px;
    }

    .k-listview-content {
        overflow: hidden;
    }

    #fileName {
        word-wrap: break-word;
    }

    .preview {
        height: 80%;
        text-align: center;
        border-bottom: 1px solid #dee2e6;
    }


    .product {
        float: left;
        position: relative;
        width: 200px;
        height: 250px;
        margin: 10px;
        padding: 0;
        border-style: solid;
        border-width: 1px;
        border-color: #dee2e6;
        word-wrap: break-word;
    }

    .k-listview {
        border-color: #ffffff;
        color: #212529;
        background-color: #fff;
    }

    .preview img {
        /*  width: 100%;
        height: 100%;*/
    }

    .product h3 {
        margin: 0;
        padding: 3px 5px 0 0;
        max-width: 96px;
        overflow: hidden;
        line-height: 1.1em;
        font-size: .9em;
        font-weight: normal;
        text-transform: uppercase;
        color: #999;
    }

    .product p {
        visibility: hidden;
    }

    .product:hover p {
        visibility: visible;
        position: absolute;
        width: 110px;
        height: 110px;
        top: 0;
        margin: 0;
        padding: 0;
        line-height: 110px;
        vertical-align: middle;
        text-align: center;
        color: #fff;
        background-color: rgba(0,0,0,0.75);
        transition: background .2s linear, color .2s linear;
        -moz-transition: background .2s linear, color .2s linear;
        -webkit-transition: background .2s linear, color .2s linear;
        -o-transition: background .2s linear, color .2s linear;
    }

    .k-listview:after {
        content: ".";
        display: block;
        height: 0;
        clear: both;
        visibility: hidden;
    }
</style>
<script>
    function uploadImage() {
        $("#image-file").dmUploader({ //
            url: '/Cms/Document/SaveFileWithReference?referenceType=0&referenceId=@ViewBag.Id', //- controller
            multiple: true,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $("#listView").data("kendoListView").dataSource.read();
                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }
    document.onpaste = function (pasteEvent) {
        // consider the first item (can be easily extended for multiple items)
        var item = pasteEvent.clipboardData.items[0];

        if (item.type.indexOf("image") === 0) {
            var blob = item.getAsFile();

            var reader = new FileReader();
            reader.onload = function (event) {
                //document.getElementById("paste-image").src = event.target.result;
                var base64str = event.target.result;
                $.ajax({
                    url: '@Url.Action("SaveImageBase64StringWithReference", "Document")',
                                    type: 'POST',
                                    data: { ContentBase64: base64str, ReferenceTypeCode: 0, ReferenceTypeId: '@ViewBag.Id'},
                                    dataType: 'json',
                                    success: function (result) {
                                        if (result.success) {
                                            $("#listView").data("kendoListView").dataSource.read();
                                        }
                                        else {
                                            kendo.alert(result.errors);
                                        }
                                    },
                                    error: function (ert) {

                                    }
                                });

            };

           reader.readAsDataURL(blob);
        }
    }
</script>