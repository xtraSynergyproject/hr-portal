@using Synergy.App.ViewModel
@using Synergy.App.Common
@using Kendo.Mvc.UI
@model GrantAccessViewModel
@{
    ViewBag.Title = "Manage User Hierarchy Permission";
    Layout = "/Views/Shared/_PopupLayout.cshtml";

}
<style>
    #AssignedTo-list .k-item {
        width: 100%;
        background-color: #fff;
        padding-top: 3px;
        padding-bottom: 3px;
        border-bottom: 1px solid #f2f2f2;
        border-collapse: collapse;
    }

        #AssignedTo-list .k-item:hover {
            background-color: rgb(182,189,202);
        }

    #AssignedTo-list .k-state-selected, #SwitchToUserId-list .k-state-selected:hover {
        background-color: #1984c8;
        border-color: #1984c8;
    }
</style>
<form asp-controller="GrantAccess" asp-action="Manage" method="post" class="form-horizontal" data-ajax="true" data-ajax-success="onAjaxSuccess">
    <div class="text-danger" asp-validation-summary="All"></div>
    <div id="appWrapper">
        <div class="row" style="padding:10px;">
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div class="col-3 label-div">
                        <span class="required">*</span>
                        @Html.LabelFor(m => m.UserId,"User", new { @class = "control-label" })
                    </div>
                    <div class="col-9">
                        <script>

                        function UserValueMapper(options) {
                        $.ajax({
                        url: "@Url.Action("GetUserValueMapper", "User", new { @area = "cms" })",
                        data: {
                            value: $("#UserId").val() || 0
                        },
                        success: function (data) {
                        options.success(data);
                        }
                        });
                        }
                        </script>

                        @*@(Html.Kendo().DropDownListFor(x => x.UserId)
                                        .OptionLabel("Select")
                                        .Filter(FilterType.Contains)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        .TemplateId("drp-user-template")
                                        //.ValueTemplateId("drp-user-value-template")
                                        .Height(300)
                                        .HtmlAttributes(new { @class = "form-control hr-xxx-large drp-user" })
                                        .DataSource(source =>
                                        {
                                            source.Custom()
                                            .ServerFiltering(true)
                                            .ServerPaging(true)
                                            .PageSize(100)
                                            .Type("aspnetmvc-ajax")
                                            .Transport(transport => transport.Read(r => r.Action("GetUserListVirtualData", "User", new { @area = "cms" })))
                                            .Schema(schema =>
                                            {
                                                schema.Data("Data")
                                            .Total("Total");
                                            });
                                        })
                                        .Virtual(v => v.ItemHeight(100).ValueMapper("UserValueMapper"))
        )*@

                        <input asp-for="UserId" id="UserId" class="form-control hr-xxx-large drp-user" style="width: 100%" />
                        <div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div class="col-3 label-div">
                        <span class="required">*</span>
                        @Html.LabelFor(m => m.StartDate, new { @class = "control-label" })
                    </div>
                    <div class="col-9">
                        <input asp-for="StartDate" id="StartDate"  class="form-control hr-x-large" />
                        @*@Html.Kendo().DatePickerFor(m => m.StartDate).HtmlAttributes(new { @class = "form-control hr-x-large" })*@
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div class="col-3 label-div">
                        <span class="required">*</span>
                        @Html.LabelFor(m => m.EndDate, new { @class = "control-label" })
                    </div>
                    <div class="col-9">
                        @*@Html.Kendo().DatePickerFor(m => m.EndDate).HtmlAttributes(new { @class = "form-control hr-x-large" })*@
                        <input asp-for="EndDate" id="EndDate" class="form-control hr-x-large" />
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div class="col-3 label-div">
                        @Html.LabelFor(m => m.GrantStatus, new { @class = "control-label" })
                    </div>
                    <div class="col-9">
                        @*@(Html.Kendo().DropDownListFor(x=>x.GrantStatus)
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
        source.Read(read =>
        {
            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "GrantStatusEnum" });
        });
        })
        .Value(Model.GrantStatus.ToString())
        .HtmlAttributes(new { @class = "form-control hr-xx-large" })
        )*@

                        <input asp-for="GrantStatus" id="GrantStatus" class="form-control hr-xx-large" />

                    </div>
                </div>
            </div>
            <div class="cms-slidebar-footer">
                @*@Html.Kendo().Button().Name("btnCancel").Content("Cancel").Icon("cancel").Events(x => x.Click("closeNavMemberGroup")).HtmlAttributes(new { @type = "button" })
                @Html.Kendo().Button().Name("btnSubmit").Content("Save").Icon("check-outline").HtmlAttributes(new { @class = "k-primary" })*@
                <button type="button" class="btn btn-light" id="btnCancel" onclick="closeNavMemberGroup();" icon="cancel">Cancel</button>
                <input type="submit" class="btn btn-primary" id="btnSubmit" value="Save" icon="check-outline"/>
            </div>
        </div>
           <br />
           <br />
           
        </div>
        <hr />       
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.Id)
        @*@Html.HiddenFor(x => x.GrantedByUserId)*@
        @Html.HiddenFor(x => x.GrantStatus)
    
</form>

<script type="text/javascript">

    $(document).ready(function () {
        $("#EndDate").kendoDatePicker();
      
        $("#GrantStatus").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
           
            value:'@Model.GrantStatus.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=GrantStatusEnum",
                    }
                }
            }
        });


        $("#UserId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "Select",
            value: '@Model.UserId',
            filter: "contains",
            template: kendo.template($("#drp-user-template").html()),
            virtual: {
                itemHeight: 100,
                valueMapper: UserValueMapper,
            },
            height: 300,
            dataSource: {
                serverFiltering: true,
                custom: true,
                pageSize: 100,
                serverPaging: true,
                transport: {
                    read: {
                        url: "/Cms/User/GetUserListVirtualDataNew",
                    }
                }
            }
        });

        $("#StartDate").kendoDatePicker();

       
    });

    var onAjaxSuccess = function (res) {
        if (res.success) {
            closeNavMemberGroup()

            return false;
        }
        else {

            ShowErrors(res.error);
        }
    };

    function closeNavMemberGroup() {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function ShowErrors(err) {
        $(".hr-v-summary").removeClass("validation-summary-valid");
        $(".hr-v-summary").addClass("validation-summary-errors");
        var msg = ExtractError(err);
        $(".hr-v-summary ul").html(msg);
    }
</script>
