@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Business Diagram";
    Layout = null;
}


<script>

    function OnCreateBusinessDiagram() {
        window.location.href = "/cms/BusinessDiagram/manageBusinessDiagram";

        //window.open("")
    }
</script>

<div>

    <button type='button' class='btn btn-primary' onclick='OnCreateBusinessDiagram();'><i class='fa fas fa-plus'></i>&nbsp;Create Diagram</button>
    <h4>@ViewBag.Title</h4>

    <hr />


    <div class="row">
        <div class="col-12">

            @*@(Html.Kendo().Grid<UserRoleViewModel>
    ()
    .Name("BusinessDiagramgrid")
    .ToolBar(toolbar =>
    toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateBusinessDiagram();'><i class='fa fas fa-plus'></i>&nbsp;Create Diagram</button>"))

    .Columns(columns =>
    {
        columns.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditUserRole").HtmlAttributes(new { @class = "action-icon"});
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteUserRole").HtmlAttributes(new { @class = "action-icon"});
        }).Title("Action").Width(100);
        columns.Bound(c => c.Name);
    })
     .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                .Pageable(pageable => pageable
                .Refresh(true)

                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                .PageSize(10)
                .Read(read => read.Action("ReadData", "UserRole", new { area = "cms"}))
                .Model(model => model.Id(p => p.Id))
                )
          )*@
        </div>
    </div>

</div>