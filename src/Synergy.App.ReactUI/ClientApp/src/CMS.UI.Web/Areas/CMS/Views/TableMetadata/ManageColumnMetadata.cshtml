@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Portal";
    Layout = null;
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
@inject Synergy.App.Common.IUserContext _userContext
@model Synergy.App.ViewModel.ColumnMetadataViewModel

<style>
    .cms-manageportal-footer {
        /*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }

    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }

    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }

    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }

    .k-checkbox-label {
        margin-top: -10px;
        margin-left: 10px;
    }
    /*    k-colorpicker {
        width: 100px;
    }

    .k-colorpicker .k-selected-color {
            width: 100px;
    }*/
</style>
<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">
    @*<h1 class="cms-panel-header-name">@ViewBag.Title</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNavPortal()" title="Close">&times;</a>
        <hr />*@
    <form asp-controller="TableMetadata" asp-action="ManageColumnMetadata" method="post" class="form-horizontal">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input type="text" asp-for="Name" class="form-control" placeholder="Name" autocomplete="off" required="required" />
                    <label for="name">Name <span class="required" style="color:red;">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="LabelName" type="text" class="form-control" placeholder="Label Name" required="required" autocomplete="off" />
                    <label for="labelname">Label Name <span class="required" style="color:red;">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input type="text" asp-for="Alias" class="form-control" placeholder="Alias / Short Name" autocomplete="off" required="required" />
                    <label for="name">Alias / Short Name <span class="required" style="color:red;">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @* @(Html.Kendo().CheckBoxFor(x=>x.IsDefaultDisplayColumn).Label("Is Default Display Column"))*@
                    
                    <div>
                        <input type="checkbox" asp-for="IsDefaultDisplayColumn" id="IsDefaultDisplayColumn"  />
                        <label>Is Default Display Column</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsNullable).Label("Is Nullable"))*@
                    <div>
                        <input type="checkbox" asp-for="IsNullable" id="IsNullable"  />
                        <label>Is Nullable</label>
                    </div>
                </div>
            </div>
            <div class="col-12">Data Type<span class="required" style="color:red;">*</span></div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(x=>x.DataType)
        .DataTextField("Name")
        .DataValueField("Id")
        //.Events(e => e.Change("OnPageTypechange"))
        .DataSource(source =>
            {
            source.Read(read =>
                {
                    read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "DataColumnTypeEnum" });
            });
        })
        .Value(Model.DataType.ToString())
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
        .HtmlAttributes(new { style = "width: 100%" })
        )*@
                <input asp-for="DataType" id="DataType" style="width: 100%" />
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsForeignKey).Label("IsForeignKey"))*@
                    <div>
                        <input type="checkbox" asp-for="IsForeignKey" id="IsForeignKey"  />
                        <label>Is ForeignKey</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsVirtualColumn).Label("IsVirtualColumn"))*@
                    <div>
                        <input type="checkbox" asp-for="IsVirtualColumn" id="IsVirtualColumn"  />
                        <label>Is Virtual Column</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsVirtualForeignKey).Label("IsVirtualForeignKey"))*@
                    <div>
                        <input type="checkbox" asp-for="IsVirtualForeignKey" id="IsVirtualForeignKey"  />
                        <label>Is Virtual ForeignKey</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsPrimaryKey).Label("IsPrimaryKey"))*@
                    <div>
                        <input type="checkbox" asp-for="IsPrimaryKey" id="IsPrimaryKey"  />
                        <label>Is PrimaryKey</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsSystemColumn).Label("IsSystemColumn"))*@
                    <div>
                        <input type="checkbox" asp-for="IsSystemColumn" id="IsSystemColumn"  />
                        <label>Is SystemColumn</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsUniqueColumn).Label("IsUniqueColumn"))*@
                    <div>
                        <input type="checkbox" asp-for="IsUniqueColumn" id="IsUniqueColumn"  />
                        <label>Is UniqueColumn</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                   @* @(Html.Kendo().CheckBoxFor(x=>x.IsLogColumn).Label("IsLogColumn"))*@
                    <div>
                        <input type="checkbox" asp-for="IsLogColumn" id="IsLogColumn"  />
                        <label>Is LogColumn</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsUdfColumn).Label("IsUdfColumn"))*@
                    <div>
                        <input type="checkbox" asp-for="IsUdfColumn" id="IsUdfColumn"  />
                        <label>Is UdfColumn</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsHiddenColumn).Label("IsHiddenColumn"))*@
                    <div>
                        <input type="checkbox" asp-for="IsHiddenColumn" id="IsHiddenColumn"  />
                        <label>Is HiddenColumn</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.HideForeignKeyTableColumns).Label("HideForeignKeyTableColumns"))*@
                    <div>
                        <input type="checkbox" asp-for="HideForeignKeyTableColumns" id="HideForeignKeyTableColumns"  />
                        <label>Hide ForeignKey TableColumns</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().CheckBoxFor(x=>x.IsReferenceColumn).Label("IsReferenceColumn"))*@
                    <div>
                        <input type="checkbox" asp-for="IsReferenceColumn" id="IsReferenceColumn"  />
                        <label>Is Reference Column</label>
                    </div>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ReferenceTableName" type="text" class="form-control" placeholder="ReferenceTableName" autocomplete="off" />
                    <label for="referencetablename">Reference Table Name</label>
                </div>
            </div>
            <div class="col-12">Reference Table Schema Name</div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(model => model.ReferenceTableSchemaName)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetSchemaList", "TableMetadata", new {@area="Cms"});
                                            });
                                        })
                                        //.AutoBind(true)
                                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        //.Value(Model.Schema.ToString())
                                        .Height(100)
                                        //.Filter(FilterType.Contains)
                                        .HtmlAttributes(new { @class = "form-control" }))*@

                <input asp-for="ReferenceTableSchemaName" id="ReferenceTableSchemaName" style="width: 100%" />
            </div>
            <div class="col-12">ForeignKeyTable</div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(model => model.ForeignKeyTableId)
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetForeignKeyTableList", "TableMetadata", new {@area="Cms"});
            });
        })
        //.AutoBind(true)
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
        .DataTextField("Name")
        .DataValueField("Id")
        //.Value(Model.Schema.ToString())
        .Height(100)
        //.Filter(FilterType.Contains)
        .HtmlAttributes(new { @class = "form-control" }))*@

                <input asp-for="ForeignKeyTableId" id="ForeignKeyTableId" style="width: 100%" />
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ForeignKeyTableName" type="text" class="form-control" placeholder="ForeignKeyTableName" autocomplete="off" />
                    <label for="foreignkeytablename">Foreign Key Table Name</label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ForeignKeyTableAliasName" type="text" class="form-control" placeholder="ForeignKeyTableAliasName" autocomplete="off" />
                    <label for="foreignkeytablealiasname">Foreign Key Table Alias Name</label>
                </div>
            </div>
            <div class="col-12">ForeignKeyTableSchemaName</div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(model => model.ForeignKeyTableSchemaName)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetSchemaList", "TableMetadata", new {@area="Cms"});
                                            });
                                        })
                                        //.AutoBind(true)
                                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        //.Value(Model.Schema.ToString())
                                        .Height(100)
                                        //.Filter(FilterType.Contains)
                                        .HtmlAttributes(new { @class = "form-control" }))*@

                <input asp-for="ForeignKeyTableSchemaName" id="ForeignKeyTableSchemaName" style="width: 100%" />
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ForeignKeyDisplayColumnReferenceId" type="text" class="form-control" placeholder="ForeignKeyDisplayColumnReferenceId" autocomplete="off" />
                    <label for="foreignkeydisplaycolumnreferenceid">ForeignKeyDisplayColumnReferenceId</label>
                </div>
            </div>
            <div class="col-12">ForeignKeyColumn</div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(model => model.ForeignKeyColumnId)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetForeignKeyColumnList", "TableMetadata", new {@area="Cms", @tableId=Model.TableMetadataId });
                                            });
                                        })
                                        //.AutoBind(true)
                                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        //.Value(Model.Schema.ToString())
                                        .Height(100)
                                        //.Filter(FilterType.Contains)
                                        .HtmlAttributes(new { @class = "form-control" }))*@

                <input asp-for="ForeignKeyColumnId" id="ForeignKeyColumnId" style="width: 100%" />
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ForeignKeyColumnName" type="text" class="form-control" placeholder="ForeignKeyColumnName" autocomplete="off" />
                    <label for="foreignkeycolumnname">Foreign Key Column Name</label>
                </div>
            </div>
            <div class="col-12">ForeignKeyDisplayColumn</div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(model => model.ForeignKeyDisplayColumnId)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetForeignKeyDisplayColumnList", "TableMetadata", new {@area="Cms", @tableId=Model.TableMetadataId });
                                            });
                                        })
                                        //.AutoBind(true)
                                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        //.Value(Model.Schema.ToString())
                                        .Height(100)
                                        //.Filter(FilterType.Contains)
                                        .HtmlAttributes(new { @class = "form-control" }))*@

                <input asp-for="ForeignKeyDisplayColumnId" id="ForeignKeyDisplayColumnId" style="width: 100%" />
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ForeignKeyDisplayColumnName" type="text" class="form-control" placeholder="ForeignKeyDisplayColumnName" autocomplete="off" />
                    <label for="foreignkeydisplaycolumnname">Foreign Key Display Column Name</label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ForeignKeyDisplayColumnLabelName" type="text" class="form-control" placeholder="ForeignKeyDisplayColumnLabelName" autocomplete="off" />
                    <label for="ForeignKeyDisplayColumnLabelName">Foreign Key Display Column LabelName</label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ForeignKeyDisplayColumnAlias" type="text" class="form-control" placeholder="ForeignKeyDisplayColumnAlias" autocomplete="off" />
                    <label for="ForeignKeyDisplayColumnAlias">Foreign Key Display Column Alias</label>
                </div>
            </div>
            <div class="col-12">ForeignKeyDisplayColumnDataType</div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(x=>x.ForeignKeyDisplayColumnDataType)
                    .DataTextField("Name")
                    .DataValueField("Id")
                    //.Events(e => e.Change("OnPageTypechange"))
                    .DataSource(source =>
                        {
                        source.Read(read =>
                            {
                                read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "DataColumnTypeEnum" });
                        });
                    })
                    .Value(Model.DataType.ToString())
                    .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                    .HtmlAttributes(new { style = "width: 100%" })
                    )*@

                <input asp-for="ForeignKeyDisplayColumnDataType" id="ForeignKeyDisplayColumnDataType" style="width: 100%" />
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ForeignKeyConstraintName" type="text" class="form-control" placeholder="ForeignKeyConstraintName" autocomplete="off" />
                    <label for="ForeignKeyConstraintName">Foreign Key Constraint Name</label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <label for="EditableBy">EditableBy</label>
                @*@(Html.Kendo().MultiSelectFor(x => x.EditableBy)
                                                                   .AutoClose(false)
                                                                   .Placeholder("Select Users...")
                                                                   .DataSource(source =>
                                                                   {
                                                                       source.Read(read =>
                                                                       {
                                                                           read.Action("GetUserIdNameList", "User",new { @area="Cms"});
                                                                       });

                                                                   })
                                                                   //.Events(x=>x.Change("OnChange"))
                                                                   .DataTextField("Name")
                                                                   .DataValueField("Id")
                                                                   .AutoBind(true)
                                                                   .HtmlAttributes(new { @class = "hr-xx-large" })
                                                                    .ValuePrimitive(true)
                                                                   .Height(300)
                    )*@

                <select asp-for="EditableBy" id="EditableBy" data-placeholder="Select Users..." style="width:80%"></select>
            </div>
            <div class="col-12 pad-10">
                <label for="ViewableBy">ViewableBy</label>
                @*@(Html.Kendo().MultiSelectFor(x => x.ViewableBy)
                                                       .AutoClose(false)
                                                       .Placeholder("Select Users...")
                                                       .DataSource(source =>
                                                       {
                                                           source.Read(read =>
                                                           {
                                                               read.Action("GetUserIdNameList", "User",new { @area="Cms"});
                                                           });

                                                       })
                                                       //.Events(x=>x.Change("OnChange"))
                                                       .DataTextField("Name")
                                                       .DataValueField("Id")
                                                       .AutoBind(true)
                                                       .HtmlAttributes(new { @class = "hr-xx-large" })
                                                        .ValuePrimitive(true)
                                                       .Height(300)
        )*@

                <select asp-for="ViewableBy" id="ViewableBy" data-placeholder="Select Users..." style="width:80%"></select>

            </div>
            <div class="col-12 pad-10">
                <label for="EditableContext">EditableContext</label>
                @*@(Html.Kendo().MultiSelectFor(x => x.EditableContext)
                                                       .AutoClose(false)
                                                       .Placeholder("Select Users...")
                                                       .DataSource(source =>
                                                       {
                                                           source.Read(read =>
                                                           {
                                                               read.Action("GetUserIdNameList", "User",new { @area="Cms"});
                                                           });

                                                       })
                                                       //.Events(x=>x.Change("OnChange"))
                                                       .DataTextField("Name")
                                                       .DataValueField("Id")
                                                       .AutoBind(true)
                                                       .HtmlAttributes(new { @class = "hr-xx-large" })
                                                        .ValuePrimitive(true)
                                                       .Height(300)
        )*@

                <select asp-for="EditableContext" id="EditableContext" data-placeholder="Select Users..." style="width:80%"></select>

            </div>
            <div class="col-12 pad-10">
                <label for="ViewableContext">ViewableContext</label>
                @*@(Html.Kendo().MultiSelectFor(x => x.ViewableContext)
                                                       .AutoClose(false)
                                                       .Placeholder("Select Users...")
                                                       .DataSource(source =>
                                                       {
                                                           source.Read(read =>
                                                           {
                                                               read.Action("GetUserIdNameList", "User",new { @area="Cms"});
                                                           });

                                                       })
                                                       //.Events(x=>x.Change("OnChange"))
                                                       .DataTextField("Name")
                                                       .DataValueField("Id")
                                                       .AutoBind(true)
                                                       .HtmlAttributes(new { @class = "hr-xx-large" })
                                                        .ValuePrimitive(true)
                                                       .Height(300)
        )*@

                <select asp-for="ViewableContext" id="ViewableContext" data-placeholder="Select Users..." style="width:80%"></select>

            </div>


            <div class="col-12 pad-15">
                &nbsp;
            </div>
            <div class="cms-manageportal-footer">
                <input type="button" class="btn btn-link" value="Close" onclick="closeNavColumn()" />
                <input type="submit" class="btn btn-primary" value="Save" onclick="OnSave(event);" />
            </div>
            @*<div class="col-sm-12">
                    <button type="submit" class="btn btn-success">Save</button>
                    <button type="button" class="btn btn-light" onclick="CloseIframeModal();">Close</button>
                </div>*@
        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.TableMetadataId)
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.Success' == "True") {
            //alert("1");
            closeNavColumn();
            if (window.parent.$("#kgrdColumnMetadata").data("kendoGrid").dataSource.read()) { }
        }

        $("#DataType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.DataType.ToString()',            
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=DataColumnTypeEnum",
                    }
                }
            }
        });

        $("#ReferenceTableSchemaName").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ReferenceTableSchemaName',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/TableMetadata/GetSchemaList",
                    }
                }
            }
        });

        $("#ForeignKeyTableId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ForeignKeyTableId',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/TableMetadata/GetForeignKeyTableList",
                    }
                }
            }
        });

        $("#ForeignKeyTableSchemaName").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ForeignKeyTableSchemaName',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/TableMetadata/GetSchemaList",
                    }
                }
            }
        });

        $("#ForeignKeyColumnId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ForeignKeyColumnId',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/TableMetadata/GetForeignKeyColumnList?tableId=" +'@Model.TableMetadataId',
                    }
                }
            }
        });

        $("#ForeignKeyDisplayColumnId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ForeignKeyDisplayColumnId',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/TableMetadata/GetForeignKeyDisplayColumnList?tableId=" +'@Model.TableMetadataId',
                    }
                }
            }
        });

        $("#ForeignKeyDisplayColumnDataType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ForeignKeyDisplayColumnDataType.ToString()',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=DataColumnTypeEnum",
                    }
                }
            }
        });
    
        $("#EditableBy").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetUserIdNameList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Users",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.EditableBy)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

        $("#ViewableBy").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetUserIdNameList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Users",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.ViewableBy)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

        
        $("#EditableContext").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetUserIdNameList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Users",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.EditableContext)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });


        $("#ViewableContext").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetUserIdNameList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Users",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.ViewableContext)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

    });
    function closeNavColumn() {
     
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    //$("#DisplayName").on('input', function () {
    //    var txt = $("#DisplayName").val();
    //    var txt2 = $("#DisplayName").val();
    //    var t = capitalizeTheFirstLetterOfEachWord(txt);
    //    txt = t.replace(/[^A-Z0-9]/ig, "");
    //    //$("#Name").html(txt);
    //    var t2 = getcapitalizeTheFirstLetter(txt2);
    //    txt2 = t2.replace(/[^A-Z0-9]/ig, "");
    //    $("#Name").val(txt);
    //    $("#Alias").val(txt2);

    //});

    //function capitalizeTheFirstLetterOfEachWord(words) {
    //    var separateWord = words.toLowerCase().split(' ');
    //    for (var i = 0; i < separateWord.length; i++) {
    //        separateWord[i] = separateWord[i].charAt(0).toUpperCase() +
    //            separateWord[i].substring(1);
    //    }
    //    return separateWord.join(' ');
    //}

    //function getcapitalizeTheFirstLetter(words) {
    //
    //    var separateWord = words.toLowerCase().split(' ');
    //    var myword = "";
    //    for (var i = 0; i < separateWord.length; i++) {
    //        var num = separateWord[i].match(/\d+/);
    //        var wrd = separateWord[i].match(/[a-zA-Z]+/);
    //        if (num == null) {
    //            myword += separateWord[i].charAt(0).toUpperCase();
    //        } else {
    //            if (wrd != null) {
    //                myword += wrd[0].charAt(0).toUpperCase();
    //            }
    //            myword += num;
    //        }
    //    }
    //    return myword;
    //}

    function OnSave(evt) {
        //var msg = "";
        //var msgcount = 0;
        //var schema = $("#Schema").val();
        //if (schema=='') {
        //    msg = msg + "<li>Schema field is required.</li>"
        //    msgcount = msgcount + 1;
        //}
        //var templatetype = $("#TemplateType").val();
        //if (templatetype == '') {
        //    msg = msg + "<li>Template Type field is required.</li>"
        //    msgcount = msgcount + 1;
        //}
        //var displayname = $("#DisplayName").val();
        //if (displayname == '') {
        //    msg = msg + "<li>Display Name field is required.</li>"
        //    msgcount = msgcount + 1;
        //}
        //var name = $("#Name").val();
        //if (name == '') {
        //    msg = msg + "<li>Name field is required.</li>"
        //    msgcount = msgcount + 1;
        //}
        //var alias = $("#Alias").val();
        //if (alias == '') {
        //    msg = msg + "<li>Alias/Short Name field is required.</li>"
        //    msgcount = msgcount + 1;
        //}
        //if (msgcount > 0) {
        //    $(".text-danger").html(msg);
        //    $(".text-danger").css("display", "block");
        //    e.preventDefault();
        //    return false;
        //}
    }
</script>