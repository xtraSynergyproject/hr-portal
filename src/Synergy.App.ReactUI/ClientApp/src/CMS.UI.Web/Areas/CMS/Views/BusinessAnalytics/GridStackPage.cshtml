@{
    ViewData["Title"] = "Page";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
@using Synergy.App.ViewModel;
@using Synergy.App.Common;


@model DashboardMasterViewModel

<style>
    .cms-footer {
        position: unset !important;
        background-color: unset !important;
    }
</style>
<script>


    var builder;
    $(document).ready(function () {
        $.ajax({
            type: "GET",
            url: "/Cms/BusinessAnalytics/GetDashboardJson?noteId=@Model.NoteId",
            success: function (response) {

                if (response != "" && response != null) {
                    
                    var obj = JSON.parse(response);
                    builder = new Formio.FormBuilder(document.getElementById("builder"), obj,
                        {
                            builder: {
                               
                                custom: {
                                    title: 'Chart',
                                    weight: 10,
                                    components: {
                                        chartjs: {
                                            title: 'Chart JS',
                                            key: 'chartJS',
                                            icon: 'terminal',
                                            schema: {
                                                label: 'Chart JS',
                                                type: 'htmlelement',
                                                key: 'chartJs',
                                                input: true
                                            }
                                        },
                                        

                                    }
                                },

                            }
                        });
                }
                else {
                    builder = new Formio.FormBuilder(document.getElementById("builder"), {
                        "display": "form",
                        "components": [{
                            "title": "Page",
                            "theme": "primary",
                            "collapsible": false,
                            "hideLabel": true,
                            "key": "panel",
                            "type": "panel",
                            "label": "Page",
                            "input": false,
                            "tableView": false,
                            "components": []

                        }]
                    },
                        {
                            builder: {                                
                                custom: {
                                    title: 'Chart',
                                    weight: 10,
                                    components: {
                                        chartjs: {
                                            title: 'Chart JS',
                                            key: 'chartJS',
                                            icon: 'terminal',
                                            schema: {
                                                label: 'Chart JS',
                                                type: 'htmlelement',
                                                key: 'chartJs',
                                                input: true
                                            }
                                        },
                                       

                                    }
                                },

                            }
                        }
                    );
                }

            },
            error: function (response) {
                alert("error");
            },
             });
        
    });
    function SaveData() {        
        $("#layoutMetadata").val(JSON.stringify(builder.instance.schema, null, 4).replace(/'/g, "%27"));        
        return true;
    }
    var onAjaxSuccess = function (res) {

        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                ShowNotification("Saved Successfully", "success");               
                var id = res.result.NoteId;
                var page = $("#layoutMetadata").val();
                var win = GetMainWindow();                
                win.CloseWindow({ MethodName: "createdPage", Prms: { id } });
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("Updated Successfully", "success");
                var id = res.result.NoteId;
                var page = $("#layoutMetadata").val();
                var win = GetMainWindow();
                win.CloseWindow({ MethodName: "editPage", Prms: { id } });
            }
        }
        else {
            showError(res.error);
        }        
    };
    var showError = function (error) {        
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }
</script>


<div class="row  pad-10 no-gutters">
    <div class="container card-header" style="padding:10px;">
        <div class="tab-content">
            <div id="general" class="tab-pane  in active" role="tabpanel" aria-labelledby="design-tab">

                <div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

                    <form asp-controller="BusinessAnalytics" asp-action="ManageGridStackPage" class="form-horizontal"
                          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
                          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
                          data-ajax="true" data-ajax-method="POST">
                        <div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>



                        <div class="row" style="padding:10px;">

                           

                            <div class="row col-12 pad-10">
                                <div class="col-3">
                                    <label for="Name">Name<span class="required" style="color:red;">*</span></label>
                                </div>
                                <div class="col-9">

                                    <input asp-for="NoteSubject" type="text" class="form-control" placeholder="Name" autocomplete="off" />

                                </div>
                            </div>
                            <div class="row col-12 pad-10">
                                <div class="pad-b-15 card col-12 page" data-mode="@Model.DataAction" id="@Model.Id" data-page-content-type="Page"
                                     data-sequence="@Model.SequenceOrder">
                                    <div class="card-header page-header bg-info">
                                        <span id="page-name" class="page-title content-editable" data-placeholder="Page Name" style="padding-left:3px" contenteditable="true">

                                        </span>
                                        <span class="cms-settings-box" onclick="OpenPageSettings(this)">
                                            <i class="cursor-p fa fa-cog" title="Settings"></i>
                                        </span>

                                    </div>
                                    <div class="card-body" id="component-container">
                                        <div id="builder"></div>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="cms-footer">
                            <input type="submit" class="btn btn-primary" value="Save" onclick="SaveData()" />
                        </div>

                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.ParentNoteId)
                        @Html.HiddenFor(x => x.DataAction)
                        @Html.HiddenFor(x => x.NoteId)
                        @Html.HiddenFor(x => x.layoutMetadata)
                        @Html.HiddenFor(x => x.Json)
                        @Html.HiddenFor(x => x.DataJson)
                        @Html.HiddenFor(x => x.CompanyId)
                        @Html.HiddenFor(x => x.CreatedBy)
                        @Html.HiddenFor(x => x.CreatedDate)
                        @Html.HiddenFor(x => x.LastUpdatedBy)
                        @Html.HiddenFor(x => x.LastUpdatedDate)

                    </form>
                </div>
            </div>
        </div>

    </div>
</div>










