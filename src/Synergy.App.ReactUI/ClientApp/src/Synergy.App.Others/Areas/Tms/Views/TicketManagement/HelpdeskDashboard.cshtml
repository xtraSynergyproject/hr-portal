@inject IStringLocalizer<CMS.UI.Web.Areas.TMS.Controllers.TicketManagementController> Resource
@using Synergy.App.ViewModel;
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.Common;
@{
    ViewBag.Title = @Resource["HelpdeskDashboard"];
    Layout = null;
}

<script>
    function FilterService() {
        return {
            type: $("#openRequests").data("kendoDropDownList").value()
        }
    }
    function onOPenRequestChange(e) {
        var search = FilterService();
        $("#openrequestPieChart").html("Open Request by " + $("#openRequests").data("kendoDropDownList").value())
        $("#openRequestChart").data("kendoChart").dataSource.read(search);
    }
    function onD1Change() {
        var val = $("#D1").data("kendoDropDownList").value();
        $("#GridRequest").data("kendoGrid").dataSource.read();
        document.getElementById("RequestsByType").innerText = val;
    }

    function onslaViolationChange() {
        var val = $("#slaViolation").data("kendoDropDownList").value();
        $("#GridRequestViolation").data("kendoGrid").dataSource.read();
        document.getElementById("RequestsByTypeViolation").innerText = val;
    }

    function OnSummarychange() {
        var val = $("#summary").data("kendoDropDownList").value();
        $("#chart1").data("kendoChart").dataSource.read();

    }

    function filterBox1() {
        return {
            type: $("#D1").data("kendoDropDownList").value()
        };
    }

    function filterBox2() {
        return {
            type: $("#D1").data("kendoDropDownList").value()
        };
    }

    function filterChart1() {
        return {
            type: $("#summary").data("kendoDropDownList").value()
        };
    }

    $(document).ready(function () {
        getDataGridRequest();
        getDataRequestViolation();

         $("#slaViolation").kendoDropDownList({
                                    dataTextField: "Text",
                                    dataValueField: "Value",
                                change: onslaViolationChange,
                                    value:'@Resource["Category"]',
                                    dataSource: [
                                        { Text: "@Resource["Category"]", Value: "Category" },
                                        { Text: "@SharedResource["Owner"]", Value: "Owner" },
                                        { Text: "@SharedResource["Priority"]", Value: "Priority" },
                                        { Text: "@SharedResource["Service"]", Value: "Service" },

                                        ],

         });

        $("#D1").kendoDropDownList({
                                    dataTextField: "Text",
                                    dataValueField: "Value",
            change: onD1Change,
                                    value:'@Resource["Category"]',
                                    dataSource: [
                                        { Text: "@Resource["Category"]", Value: "Category" },
                                        { Text: "@SharedResource["Owner"]", Value: "Owner" },
                                        { Text: "@SharedResource["Priority"]", Value: "Priority" },
                                        { Text: "@SharedResource["Service"]", Value: "Service" },

                                        ],

        });

        $("#summary").kendoDropDownList({
                                    dataTextField: "Text",
                                    dataValueField: "Value",
                                     change: OnSummarychange,
                                    value:'@Resource["thisweek"]',
                                    dataSource: [
                                        { Text: "@Resource["ThisWeek"]", Value: "thisweek" },
                                        { Text: "@Resource["LastWeek"]", Value: "lastweek" },
                                        { Text: "@Resource["ThisMonth"]", Value: "thismonth" },
                                        { Text: "@Resource["LastMonth"]", Value: "lastMonth" },

                                        ],

        });

        $("#openRequests").kendoDropDownList({
                                    dataTextField: "Text",
                                    dataValueField: "Value",
            change: onOPenRequestChange,
                                    value:'@Resource["Category"]',
                                    dataSource: [
                                        { Text: "@Resource["Category"]", Value: "Category" },

                                        { Text: "@SharedResource["Priority"]", Value: "Priority" },
                                        { Text: "@SharedResource["Service"]", Value: "Service" },

                                        ],

        });

    });
     var columnDefs = [


         { headerName: "@Resource["Name"]", field: "Name" },
         { headerName: "@Resource["InProgress"]", field: "InProgress" },
         { headerName: "@Resource["Draft"]", field: "Draft" },
         { headerName: "@Resource["OverDue"]", field: "OverDue" },

         { headerName: "@Resource["Completed"]", field: "Completed" }
    ];

    function getDataGridRequest() {
        
        var type = $("#D1").data("kendoDropDownList").value();
        document.getElementById("GridRequest").innerHTML = "";
        gridConfig(
            "GridRequest",
            "/tms/TicketManagement/ReadHelpDeskBox1?type=" + type,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
    var columnDefs1 = [


         { headerName: "@Resource["Name"]", field: "Name" },
         { headerName: "@Resource["InProgress"]", field: "InProgress" },
         { headerName: "@Resource["Draft"]", field: "Draft" },
         { headerName: "@Resource["OverDue"]", field: "OverDue" },

         { headerName: "@Resource["Completed"]", field: "Completed" }
    ];

    function getDataRequestViolation() {
        
        var type = $("#D1").data("kendoDropDownList").value();
        document.getElementById("GridRequestViolation").innerHTML = "";
        gridConfig(
            "GridRequestViolation",
            "/tms/TicketManagement/ReadHelpeskSLAViolation?type=" + type,
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>

<div class="row">
    <div class="col">
        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;">

            <div class="row">
                <div class="col" style="padding: 15px">Requests By <span id="RequestsByType">@Resource["Category"]</span></div>
                <div class="col">
                    <div style="text-align:right;margin-top: 1.5%;margin-right:1%">
                        <input id="D1" style="width: 100%;" />
                        @*@(Html.Kendo().DropDownList()
              .Name("D1")
              .DataTextField("Text")
              .DataValueField("Value")
              .Events(x=>x.Change("onD1Change"))
              .BindTo(new List<SelectListItem>() {
                  new SelectListItem() {
                      Text = @Resource["Category"],
                      Value = "Category"
                  },
                  new SelectListItem() {
                      Text = @SharedResource["Owner"],
                      Value = "Owner"
                  },

                  new SelectListItem() {
                      Text = @SharedResource["Priority"],
                      Value =  "Priority"
                  },

                  new SelectListItem() {
                      Text = @SharedResource["Service"],
                      Value = "Service"
                  },
              })
              .Value(@Resource["Category"])
              .HtmlAttributes(new { style = "width: 100%" })
        )*@
                    </div>
                </div>
            </div>

        </div>
        <div style="height:400px;background-color:white;text-align:left;">
            <div class="row">
                <div class="col-12">
               

                    <div style="padding-top:20px;">
                        <div id="GridRequest" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                    </div>
                    @*@(Html.Kendo().Grid<HelpDeskViewModel>()
                .Name("GridRequest")
                .Columns(columns =>
                {
                    columns.Bound(c => c.Name).Title(@SharedResource["Name"]);
                    columns.Bound(c => c.InProgress).Title(@SharedResource["InProgress"]);
                    columns.Bound(c => c.Draft).Title(@SharedResource["Draft"]);
                    columns.Bound(c => c.OverDue).Title(@SharedResource["Overdue"]);
                    columns.Bound(c => c.Completed).Title(@SharedResource["Completed"]);
                })
                            .HtmlAttributes(new { style = "height:400px" })
                        .Scrollable(x => x.Enabled(true))
                        .Sortable(srt => srt.Enabled(true))
                        .Selectable(select => select.Enabled(false))
                        .Filterable(f => f.Extra(false)
                        .Operators(o => o.ForString(s => s.Clear()
                        .Contains("Contains")
                        .IsEqualTo("Is equal to")
                        )))
                        .Pageable(pageable => pageable
                        .Refresh(true)

                        .PageSizes(true)
                        .ButtonCount(5))
                        .AutoBind(true)
                        .DataSource(
                        dataSource => dataSource
                        .Ajax()
                        .PageSize(10)
                        .Batch(true)
                        .ServerOperation(false)

                        .Read(read => read.Action("ReadHelpDeskBox1", "TicketManagement", new { area="tms" }).Data("filterBox1"))
                        )
                        )*@

                </div>

            </div></div></div>

            <div class="col">
                <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;">

                    <div class="row">
                        <div class="col" style="padding: 15px">@Resource["RequestsSummary"]</div>
                        <div class="col">
                            <div style="text-align:right;margin-top: 1.5%;margin-right:1%">
                                <input id="summary" style="width: 100%;" />
                                @*@(Html.Kendo().DropDownList()
                                  .Name("summary")
                                  .DataTextField("Text")
                                  .DataValueField("Value")
                                  .Events(x=>x.Change("OnSummarychange"))
                                  .BindTo(new List<SelectListItem>() {
                                      new SelectListItem() {
                                          Text = @Resource["ThisWeek"],
                                          Value = "thisweek"
                                      },
                                      new SelectListItem() {
                                          Text = @Resource["LastWeek"],
                                          Value = "lastweek"
                                      },
                                      new SelectListItem() {
                                          Text = @Resource["ThisMonth"],
                                          Value = "thismonth"
                                      },
                                      new SelectListItem() {
                                          Text = Resource["LastMonth"],
                                          Value = "lastMonth"
                                      },
                                  })
                                  .Value(@Resource["Category"])
                                  .HtmlAttributes(new { style = "width: 100%" })
                            )*@
                            </div>
                        </div>
                    </div>
                    <div style="height:400px;background-color:white;text-align:left;">


                        @*@(Html.Kendo().Chart<HelpDeskViewModel>()
                    .Name("chart1")
                    .Title("")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top)
                    )
                    .DataSource(ds => ds.Read(read => read.Action("ReadHelpDeskBox2", "TicketManagement").Data("filterChart1")))
                    .Series(series => {
                        series.Column(model => model.Draft).Name(@SharedResource["Draft"]).Color("#219ebc");
                        series.Column(model => model.InProgress).Name(@SharedResource["InProgress"]).Color("#fb8500");
                        series.Column(model => model.OverDue).Name(@SharedResource["Overdue"]).Color("#e63946");
                        series.Column(model => model.Completed).Name(@SharedResource["Completed"]).Color("#38b000");
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(-90))
                        .MajorGridLines(lines => lines.Visible(false))
                    .Categories(x =>x.Day)
                    )
                )*@

                    </div>
                </div>
            </div>
        </div>
<br />
<div class="row">
    <div class="col">
        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;padding:15px">@Resource["TaskSummary"]</div>
        <div style="height:400px;background-color:white;text-align:left;">
            @*@(Html.Kendo().Grid<HelpDeskViewModel>()
    .Name("GridPendingTask")
    .Columns(columns =>
    {
        columns.Bound(c => c.Name).Title(@SharedResource["Name"]);
        columns.Bound(c => c.InProgress).Title(@SharedResource["InProgress"]);
        columns.Bound(c => c.Draft).Title(@SharedResource["Draft"]);
        columns.Bound(c => c.OverDue).Title(@SharedResource["Overdue"]);
        columns.Bound(c => c.Completed).Title(@SharedResource["Completed"]);
    })
                .HtmlAttributes(new { style = "height:400px" })
            .Scrollable(x => x.Enabled(true))
            .Sortable(srt => srt.Enabled(true))
            .Selectable(select => select.Enabled(false))
            .Filterable(f => f.Extra(false)
            .Operators(o => o.ForString(s => s.Clear()
            .Contains("Contains")
            .IsEqualTo("Is equal to")
            )))
            .Pageable(pageable => pageable
            .Refresh(true)

            .PageSizes(true)
            .ButtonCount(5))
            .AutoBind(true)
            .DataSource(
            dataSource => dataSource
            .Ajax()
            .PageSize(10)
            .Batch(true)
            .ServerOperation(false)

            .Read(read => read.Action("ReadPendingTaskCounts", "TicketManagement", new { area="tms" }))
            )
            )*@

        </div>

    </div>
    <div class="col">
        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;">

            <div class="row">
                <div class="col" style="padding: 15px" id="openrequestPieChart">@Resource["OpenRequestsbyCategory"]</div>
                <div class="col">
                    <div style="text-align:right;margin-top: 1.5%;margin-right:1%">
                        <input id="openRequests" style="width: 100%;" />
                        @*@(Html.Kendo().DropDownList()
          .Name("openRequests")
          .DataTextField("Text")
          .DataValueField("Value")
          .Events(x=>x.Change("onOPenRequestChange"))
          .BindTo(new List<SelectListItem>() {
               new SelectListItem() {
                  Text = @Resource["Category"],
                  Value = "Category"
              },
              //new SelectListItem() {
              //    Text = "Assignee",
              //    Value = "Assignee"
              //},

              new SelectListItem() {
                  Text = @SharedResource["Priority"],
                  Value = "Priority"
              },

              new SelectListItem() {
                  Text = @SharedResource["Service"],
                  Value = "Service"
              },
          })
          .Value(@Resource["Category"])
          .HtmlAttributes(new { style = "width: 100%" })
    )*@
                    </div>
                </div>
            </div>
            <div style="height:400px;background-color:white;text-align:left;">
                @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                            .Name("openRequestChart")
                            .Legend(legend => legend
                                .Position(ChartLegendPosition.Bottom)
                            )
                            .DataSource(ds => ds
                             .Read(read => read.Action("GetRequestChartStatus", "TicketManagement", new { @area = "TMS" }).Data("FilterService"))
                            //.Read(read => read.Action("GetProjectTaskChartByStatus", "Project", new { @area = "PJM", projectId = Model.Id }))
                            )
                            .SeriesColors(new string[] { "#ff9800", "#fad84a", "#4caf50", "#03a9f4" })
                            .Series(series =>
                            {
                                series.Donut(model => model.Value, model => model.Type)
                                .Labels(labels => labels
                                    .Visible(true)
                                    .Position(ChartPieLabelsPosition.Center)
                                    //.Template("#= category # - #= kendo.format(' {0:n0}', value) # ")
                                    .Background("transparent")

                                );

                            }).HtmlAttributes(new { @style = "height:300px;" })
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                            .Template("#= category # - #= kendo.format('{0:P}', percentage) #")
                            //.Template("#= category # ")
                            )
        //.Events(events => events
        //   // .SeriesClick("onTaskSeriesClick")
        //    //.DataBound("OnTaskStatusChartDataBound")
        //    )
        )*@
                @*@(Html.Kendo().Chart()
                        .Name("chart")
                                .Title(title => title
                                    .Text("")
                                    .Position(ChartTitlePosition.Bottom))
                        .Legend(legend => legend
                            .Visible(false)
                        )
                        .ChartArea(chart => chart
                            .Background("transparent")
                         )
                        .HtmlAttributes(new { style="background: center no-repeat url(" + @Url.Content("~/Content/shared/styles/world-map.png")})
                        .Series(series => {
                            series.Pie(new dynamic[] {
                                new {category="Not Assigned",value=53.8,color="#9de219"},
                                new {category="HR/Payroll data request",value=16.1,color="#90cc38"},
                                new {category="Sick and Personal Leave Request",value=11.3,color="#068c35"},
                                new {category="Insurance and Benifits Program ",value=9.6,color="#006634"},
                                new {category="Temprory Staffing and Contract Labor staffing",value=5.2,color="#004d38"},
                            })
                            .Labels(labels => labels
                                .Template("#= category #: \n #= value#%")
                                .Background("transparent")
                                .Visible(true)
                            )
                            .StartAngle(150);
                        })
                        .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Format("{0}%")
                        )
                    )*@

            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col">

        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;">

            <div class="row">
                <div class="col" style="padding: 15px">@Resource["SLAViolationBy"] <span id="RequestsByTypeViolation">@Resource["Category"]</span></div>
                <div class="col">
                    <div style="text-align:right;margin-top: 1.5%;margin-right:1%">
                        <input  id="slaViolation"  style="width: 100%;" />
                        @*@(Html.Kendo().DropDownList()
              .Name("slaViolation")
              .DataTextField("Text")
              .DataValueField("Value")
              .Events(e=>e.Change("onslaViolationChange"))
              .BindTo(new List<SelectListItem>() {
                  new SelectListItem() {
                      Text = @Resource["Category"],
                      Value = "Category"
                  },
                  new SelectListItem() {
                      Text = @SharedResource["Owner"],
                      Value = "Owner"
                  },

                  new SelectListItem() {
                      Text = @SharedResource["Priority"],
                      Value = "Priority"
                  },

                  new SelectListItem() {
                      Text = @SharedResource["Service"],
                      Value = "Service"
                  },
              })
              .Value(@Resource["Category"])
              .HtmlAttributes(new { style = "width: 100%" })
        )*@
                    
                    
                    </div>
                </div>
            </div>
            <div style="height:400px;background-color:white;text-align:left;">
                <div class="row">
                    <div class="col-12">


                        <div style="padding-top:20px;">
                            <div id="GridRequestViolation" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        </div>
                        @*@(Html.Kendo().Grid<HelpDeskViewModel>()
                .Name("GridRequestViolation")
                .Columns(columns =>
                {
                    columns.Bound(c => c.Name).Title(@SharedResource["Name"]);
                    columns.Bound(c => c.InProgress).Title(@SharedResource["InProgress"]);
                    columns.Bound(c => c.Draft).Title(@SharedResource["Draft"]);
                    columns.Bound(c => c.OverDue).Title(@SharedResource["Overdue"]);
                    columns.Bound(c => c.Completed).Title(@SharedResource["Completed"]);
                })
                            .HtmlAttributes(new { style = "height:400px" })
                        .Scrollable(x => x.Enabled(true))
                        .Sortable(srt => srt.Enabled(true))
                        .Selectable(select => select.Enabled(false))
                        .Filterable(f => f.Extra(false)
                        .Operators(o => o.ForString(s => s.Clear()
                        .Contains("Contains")
                        .IsEqualTo("Is equal to")
                        )))
                        .Pageable(pageable => pageable
                        .Refresh(true)

                        .PageSizes(true)
                        .ButtonCount(5))
                        .AutoBind(true)
                        .DataSource(
                        dataSource => dataSource
                        .Ajax()
                        .PageSize(10)
                        .Batch(true)
                        .ServerOperation(false)

                        .Read(read => read.Action("ReadHelpeskSLAViolation", "TicketManagement", new { area="tms" }).Data("filterBox2"))
                        )
                        )*@

                    </div>
                </div>
            </div></div></div>
    <div class="col">
        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;padding:15px">@Resource["OpenRequests"]</div>
        <div style="height:400px;background-color:white;text-align:left;">
            @*@(Html.Kendo().RadialGauge()
          .Name("gauge")
             .Pointer(pointer => pointer.Value(ViewBag.OpenRequestCount))
          //.Pointer(pointer =>

          //    pointer.Value(ViewBag.OpenRequestCount).Color("#c20000").Length(0.5)/*.Cap(c => c.Size(0.15))*/

          //)
          .Scale(scale => scale
              .MinorUnit(10)
              .StartAngle(0)
              .EndAngle(180)
              //.Max(180)
              .Labels(labels => labels
                  .Position(GaugeRadialScaleLabelsPosition.Outside)
              )

         .Ranges(ranges =>
         {
             ranges.Add().From(0).To(ViewBag.OpenRequestCount).Color("#ffc700");
             //ranges.Add().From(120).To(150).Color("#ff7a00");
             //ranges.Add().From(150).To(180).Color("#c20000");
         })
         )
    )*@
            <div class="row" style="text-align:center;padding-top:70px">
                <div class="col-12">
                    <span style="font-weight:bold;color:black;">@Resource["Open"]</span><br />
                    <span style="font-weight:bold;color:red;">@ViewBag.OpenRequestCount</span>

                </div>

            </div>
        </div>
    </div>
</div>
<br />

<div class="row">
    <div class="col-6">
        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;padding:15px">@Resource["SLAViolatedRequests"]</div>
        <div style="height:400px;background-color:white;text-align:left;">
            @*@(Html.Kendo().RadialGauge()
          .Name("SlaViolatedgauge")
             .Pointer(pointer => pointer.Value(ViewBag.SLAViolated))
          //.Pointer(pointer =>

          //    pointer.Value(ViewBag.OpenRequestCount).Color("#c20000").Length(0.5)/*.Cap(c => c.Size(0.15))*/

          //)
          .Scale(scale => scale
              .MinorUnit(10)
              .StartAngle(0)
              .EndAngle(180)
              //.Max(180)
              .Labels(labels => labels
                  .Position(GaugeRadialScaleLabelsPosition.Outside)
              )

         .Ranges(ranges =>
         {
             ranges.Add().From(0).To(ViewBag.SLAViolated).Color("#ffc700");
             //ranges.Add().From(120).To(150).Color("#ff7a00");
             //ranges.Add().From(150).To(180).Color("#c20000");
         })
         )
    )*@
            <div class="row" style="text-align:center;padding-top:70px">
                <div class="col-6">
                    <span style="font-weight:bold;color:black;"> @Resource["SLAViolated"]</span><br />
                    <span style="font-weight:bold;color:red;">@ViewBag.SLAViolated</span>

                </div>
                <div class="col-6">
                    <span style="font-weight:bold;color:black;">@Resource["Open"]</span><br />
                    <span style="font-weight:bold;color:#008ddd;">@ViewBag.OpenRequestCount</span>
                </div>
            </div>
        </div>

    </div>
    <div class="col-6">
        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;padding:15px">@Resource["RequestsApprochingSLAViolations"]</div>
        <div style="height:400px;background-color:white;text-align:left;">
            @*@(Html.Kendo().RadialGauge()
      .Name("SlaApproachingViolationgauge")
      // .Pointer(pointer => pointer.Value(ViewBag.SLAViolated))
      .Pointers(pointer =>
      {
          pointer.Add().Value(ViewBag.ServiceApproachingViolationInaMin).Color("#c20000").Length(0.5)/*.Cap(c => c.Size(0.15))*/;
          pointer.Add().Value(ViewBag.ServiceApproachingViolation).Color("#ffc700").Length(0.5)/*.Cap(c => c.Size(0.15))*/;
      }


      )
          .Scale(scale => scale
              .MinorUnit(10)
              .StartAngle(0)
              .EndAngle(180)
              //.Max(180)
              .Labels(labels => labels
                  .Position(GaugeRadialScaleLabelsPosition.Outside)
              )

         .Ranges(ranges =>
         {
             ranges.Add().From(0).To(180).Color("#ff7a00");
             //ranges.Add().From(120).To(150).Color("#ff7a00");
             //ranges.Add().From(150).To(180).Color("#c20000");
         })
         )
    )*@
            <div class="row" style="text-align:center;padding-top:70px">
                <div class="col-6">
                    <span style="font-weight:bold;color:black;">@Resource["60Min"]</span><br />
                    <span style="font-weight:bold;color:red;">@ViewBag.ServiceApproachingViolationInaMin</span>

                </div>
                <div class="col-6">
                    <span style="font-weight:bold;color:black;">@Resource["Other"]</span><br />
                    <span style="font-weight:bold;color:#008ddd;">@ViewBag.ServiceApproachingViolation</span>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col">
        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;padding:15px">@Resource["RequestsReceivedInLast20Days"]</div>
        <div style="height:400px;background-color:white;text-align:left;">
            @*@(Html.Kendo().Chart<HelpDeskViewModel>()
                    .Name("Recieved")
                    .Title("")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top)
                    )
                    .DataSource(ds => ds.Read(read => read.Action("ReadHelpDeskRequestRecieved", "TicketManagement").Data("filterChart1")))
                    .Series(series => {
                        series.Column(model => model.Violated).Name(@Resource["Violated"]);
                        series.Column(model => model.NonViolated).Name(@Resource["NonViolated"]);
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(-90))
                        .MajorGridLines(lines => lines.Visible(false))
                    .Categories(x =>x.Day)
                    )
                )*@
        </div>

    </div>
    <div class="col">
        <div style="height:50px;background-color:lightgrey;text-align:left;font-weight:600;padding:15px">@Resource["RequestsClosedInLast20Days"]</div>
        <div style="height:400px;background-color:white;text-align:left;">

            @*@(Html.Kendo().Chart<HelpDeskViewModel>()
                    .Name("Completed")
                    .Title("")
                    .Legend(legend => legend
                        .Position(ChartLegendPosition.Top)
                    )
                    .DataSource(ds => ds.Read(read => read.Action("ReadHelpDeskRequestClosed", "TicketManagement").Data("filterChart1")))
                    .Series(series => {
                        series.Column(model => model.Violated).Name(@Resource["Violated"]);
                        series.Column(model => model.NonViolated).Name(Resource["NonViolated"]);
                    })
                    .CategoryAxis(axis => axis
                        .Labels(labels => labels.Rotation(-90))
                        .MajorGridLines(lines => lines.Visible(false))
                    .Categories(x =>x.Day)
                    )
                )*@
        </div>
    </div>
</div>
