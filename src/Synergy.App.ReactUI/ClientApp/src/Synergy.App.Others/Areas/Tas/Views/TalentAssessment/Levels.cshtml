@using Synergy.App.ViewModel;
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.Common;
@{
    ViewBag.Title = "Topics";
    Layout = null;
}

<style>

    em {
        background-color: yellow;
    }

    .left {
        min-width: 300px;
        max-width: 600px;
    }

    .splitter-container {
        height: 90vh !important;
        width: 100%;
    }

    .treeview .k-in {
        width: 100% !important;
    }
    /*Portal Start*/
    .sidenav {
        height: 100vh; /* 100% Full-height */
        width: 0; /* 0 width - change this with JavaScript */
        position: fixed; /* Stay in place */
        z-index: 100; /* Stay on top */
        top: 0; /* Stay at the top */
        right: 0;
        background-color: #fff; /* Black*/
        border-left: 1px solid silver;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 30px; /* Place content 60px from the top */
        transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    }

        /* Position and style the close button (top right corner) */
        .sidenav .closebtn {
            position: absolute;
            top: 0;
            right: 15px;
            font-size: 30px;
            font-weight: bold;
            margin-left: 20px;
            color: gray;
            border: none;
            text-decoration: none;
        }

            .sidenav .closebtn:hover {
                color: red;
            }

    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 92% !important;
    }

    #portal-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #overlay {
        position: fixed;
        background: rgba(0,0,0,.5);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
        width: 100%;
        height: 100%;
        z-index: 99;
        right: 100%;
        top: 0;
        /*  transition: right .5s ease;*/
    }

    .overlay {
        right: 0 !important;
        /* transition: right .5s ease !important;*/
    }

    .cms-panel-header-name {
        font-size: 16px;
        font-weight: 700;
        padding: 0 10px;
        width: 80%;
    }

    .k-listview {
        background: transparent;
    }
    /*Portal End*/
    .watchlist-menu {
        background: #f8f8f7;
        border-bottom: 1px solid #9e9e9e;
        width: 100%;
        padding: 6px;
    }

    #watchlist li:hover {
        background: #808080;
        cursor: pointer;
    }

    .active {
        background: #808080;
    }

    /*    #topicTreeView .k-state-selected {
        background-color: white;
        color: black;
    }*/

</style>

<script>

    var selectdItem = null;
    var selectedType = null;
    var selectedParentId = null;

    var splitter = $('.splitter-container').height(200).split({
        orientation: 'vertical',
        limit: 10,
        position: '20%', // if there is no percentage it interpret it as pixels
        onDrag: function (event) {
            console.log(splitter.position());
        }
    });
    function OnSelectTopic1(e) {

       // e.preventDefault();
    }
    function OnSelectTopic(/*e*/Id, Type, ParentId) {

        // var id = e.node.children[0].lastElementChild.lastElementChild.getAttribute("data-id");
        // var type = e.node.children[0].lastElementChild.lastElementChild.getAttribute("data-type");
        // var parentId = e.node.children[0].lastElementChild.lastElementChild.getAttribute("data-parent-id");
        //var id = e.getAttribute("data-id");
        //var type = e.getAttribute("data-type");
        //var parentId = e.getAttribute("data-parent-id");

        var id =Id;
        var type = Type ;
        var parentId = ParentId ;

        selectedItem = id;
        selectedParentId = parentId;
        selectedType = type;

        if (selectedType != "Root") {
            if (selectedType == "level") {
            } else if (selectedType == "topic") {
                selectedParentId = null;
            }
            getLevelsData();
          //  $("#kgrdQuestion").data("kendoGrid").dataSource.read();
        }
        return true;
    }

   

    var portalId = $('#GlobalPortalId').val();

    function createLevel() {
        //var prms = encodeURIComponent('parentNoteId=' + id);
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterNoteCreate&source=Create&dataAction=Create&templateCodes=TAS_COMPETENCY_LEVEL&portalId=' + portalId;
        openPopup(url, "Add Competency Level");
    }

    function createIndicator(id) {
        selectdItem = id;
        var udf = encodeURIComponent('CompetencyLevelId=' + id);
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterNoteCreate&source=Create&dataAction=Create&templateCodes=INDICATOR&portalId=' + portalId + '&udfs='+udf;
        openPopup(url, "Add Indicator");
    }

    function OnAfterNoteCreate() {   
        //ShowLoader($("#spl-container"));
       // $("#topicTreeView").data("kendoTreeView").dataSource.read();      
        $('#topicTreeView').jstree(true).refresh();
        ShowNotification("Saved Successfully", "success");
        refresh();
        //setTimeout(function () {
        //    HideLoader($("#spl-container"));
        //    refresh();
        //}, 8000);
        
    }

    function refresh() {
       // $("#kgrdQuestion").data("kendoGrid").dataSource.read({ level: selectdItem });
        getLevelsData();
    }

    function openPopup(url, title) {
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: title, Width: 1200, Height: 600 });
        return false;
    }
        

    function Filter() {
        if (selectedType == "level") {
            return {                
                level: selectedItem
            };
        } else {
            return {                
                level: ""
            };
        }
    }

    function OnView(id) {        
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterNoteCreate&source=View&dataAction=View&templateCodes=INDICATOR&portalId=' + portalId + '&recordId=' + id;
        openPopup(url, "View Indicator");
    }
    
   
</script>
<script id="fileTemplate" type="text/x-kendo-template">
    <span class='k-progress'></span>
    <div class='file-wrapper'>
        <h8 class='file-heading file-name-heading'>Name: #=name#</h8>
        <strong class="k-upload-status">
            <button type='button' class='k-upload-action'></button>
            <button type='button' class='k-upload-action'></button>
        </strong>
    </div>
</script>


<div class="splitter-container" id="spl-container">
    <div class="left">

        <div id="topic">

            <div style="height:600px;overflow:scroll; margin-left:5px;">


                @*@(Html.Kendo().TreeView()
            .Name("topicTreeView").HtmlAttributes( new {@class="treeview"})
            .Events(e=>e.Select("OnSelectTopic1"))
            .DataTextField("Name")
            .TemplateId("ct-tv-template")
            .DataSource(dataSource => dataSource
                .Read(read => read
                    .Action("GetLevelsTreeList", "TalentAssessment",new { @area= "Tas" })
                )
            )
        )*@
                <div id="topicTreeView" class="demo treeview"></div>
            </div>
            <script>
                $('#topicTreeView')
                    .on('changed.jstree', function (e, data) {
                        var i, j, r = [];
                        for (i = 0, j = data.selected.length; i < j; i++) {
                            
                            nodetext = data.instance.get_node(data.selected[i]).text;
                            Type = data.instance.get_node(data.selected[i]).original.Type;
                            Id = data.instance.get_node(data.selected[i]).original.id;
                            ParentId = data.instance.get_node(data.selected[i]).original.ParentId;
                            OnSelectTopic(Id, Type, ParentId);
                        }

                    })
                    .jstree({
                        'core': {
                            'data': function (node, cb) {
                                if (node.id === "#") {
                                    $.ajax({
                                        async: true,
                                        type: "GET",
                                        url: "/Tas/TalentAssessment/GetLevelsTreeList",
                                        dataType: "json",
                                        success: function (json) {
                                            cb(json);
                                        },

                                        error: function (xhr, ajaxOptions, thrownError) {
                                            alert(xhr.status);
                                            alert(thrownError);
                                        }
                                    });
                                    //cb([{ "text": "Root", "id": "1", "children": true }]);
                                }
                                else {
                                    $.ajax({
                                        async: true,
                                        type: "GET",
                                        url: "/Tas/TalentAssessment/GetLevelsTreeList?id=" + node.id,
                                        dataType: "json",
                                        success: function (json) {
                                            cb(json);
                                        },

                                        error: function (xhr, ajaxOptions, thrownError) {
                                            alert(xhr.status);
                                            alert(thrownError);
                                        }
                                    });
                                }
                            }
                        }
                    });


                $(function () {
                    
        $.contextMenu({
            selector: '.jstree-anchor',
            trigger: 'left',
            build: function ($trigger, e) {
                //alert($("#contentTreeView").jstree('get_selected').attr('id'));

                //var id = e.target.id;
                
                var id = $trigger.attr('data_id');
                var type = $trigger.attr('data_type');
                switch (type) {
                                case 'Root':
                                    return {
                                        callback: function (key, options) {
                                            switch (key) {

                                                case 'addlevel':
                                                    createLevel();
                                                    break;

                                                default:
                                            }
                                        },
                                        items: {
                                            "addlevel": { name: "Add Competency Level", icon: "fas fa-plus" },
                                        }
                                    };
                                case 'level': return {
                                    callback: function (key, options) {
                                        switch (key) {

                                            case 'addIndicator':
                                                createIndicator(id);
                                                break;

                                            default:
                                        }
                                    },
                                    items: {
                                        "addIndicator": { name: "Add Indicator", icon: "fas fa-plus" },
                                    }
                                };
                                default:
                            }
                




            }
        });



    });



            </script>
            <script id="ct-tv-template" type="text/kendo-ui-template">
                <span style="width:100%" data-id="#:item.id#" data-template-type="#:item.TemplateType#" data-type="#:item.Type#" data-portal-name="#:item.Name#" data-parent-id="#:item.ParentId#" data-level="#:item.Level#" onclick="OnSelectTopic(this)">
                # if (item.Type == 'Root') { #
                <span class='fas fa-folder' style='margin-right:5%'></span>
                # } #               

                # if (item.Type == 'level') { #
                <span class='fal fa-layer-group' style='margin-right:5%;font-size:11px'></span>
                # } #
                        <span style="width:100%">   #: item.DisplayName #   (#: item.Count #)</span>
                        <span style="float:right;" data-id="#:item.id#" data-template-type="#:item.TemplateType#" data-type="#:item.Type#" data-portal-name="#:item.Name#" data-parent-id="#:item.ParentId#" class="tree-menu" data-level="#:item.Level#" ><i class="fa fa-ellipsis-h"></i></span>
                </span>
            </script>
        </div>

    </div>
    <div class="right" id="template-content">
        <div id="kgrdQuestion" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        @*@(Html.Kendo().TabStrip()
        .Name("tabstrip")
        .Animation(animation =>
            animation.Open(effect =>
                effect.Fade(FadeDirection.In)))
        .Items(tabstrip =>
        {
            tabstrip.Add().Text("Indicators")
                .Selected(true)
                .Content(@<text>*@
        <script>
            var columnDefs = [
                {
                    field: "Id",
                    headerName: "View",
                    cellRenderer: params => {
                        return "<span onclick='OnView(\"" + params.data.NtsNoteId + "\")' class='fas fas fa-pencil' > </span>";
                    }


                },
                {
                    field: "IndicatorName",
                    headerName: "Indicator",
                    cellRenderer: params => {
                        return "<div class='text-justify' >" + params.data.IndicatorName + "</div>";
                    }
                },
                {
                    field: "CompetencyLevelId_CompetencyLevel",
                    headerName: "Competency Level",
                    cellRenderer: params => {
                        return "<div class='text-justify' >" + params.data.CompetencyLevelId_CompetencyLevel + "</div>";
                    }

                },

            ];

            $(function () {

                getLevelsData();

                // $.contextMenu('update');
                //  $('.context-menu-list').trigger('contextmenu:refresh');




            });

            function getLevelsData() {
                document.getElementById("kgrdQuestion").innerHTML = "";
                var param = Filter();
                gridConfig(
                    "kgrdQuestion",
                    "/tas/TalentAssessment/ReadIndicators?level=" + param.level,
                    columnDefs,
                    false,
                    true,
                    true,
                    true,
                    1,
                    true,
                    10);
            }
        </script>


    </div>
</div>
