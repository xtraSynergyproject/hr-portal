@model EmailViewModel
@using System.Text;
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewBag.Title = "Send Calendar Invite";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

<br />
<br />

<script>
    function OnChange(e) {
        var templateId = $("#CalendarNotificationTemplate").data("kendoDropDownList").value();
        $.ajax({
            type: "GET",
            url: "/Cms/notificationtemplate/GetNotificationTemplateData?templateId=" + templateId,

            success: function (data) {

                $("#Subject").val(data.subject);
                $("#Body").data("kendoEditor").value(data.body);
                //$("#Body").html(data.body);
            },
            dataType: "json",
        });
    }

    function OnCheck(type) {
        if ($("#Subject").val() == '' || $("#Body").val() == '') {
            kendo.alert("Please Enter The Subject And Body")
            return false;
        }
        else {
            if (type == '@CalendarInvitationTypeEnum.Create') {
                $("#CalendarInvitationType").val(type);
                ShowLoader($('#divSendEmail'));
            }
            else if (type == '@CalendarInvitationTypeEnum.Cancel') {
                var flag = confirm('Do you really want to cancel the Calender?');
                if (flag) {
                    $("#CalendarInvitationType").val(type);
                    ShowLoader($('#divSendEmail'));
                }
                else {
                    return false;
                }
            }
            else if (type == '@CalendarInvitationTypeEnum.Update') {
                $("#CalendarInvitationType").val(type);
                ShowLoader($('#divSendEmail'));
            }
            return true;
        }
    }

    var showError = function (err) {
        $(".text-danger").removeClass("validation-summary-valid");
        $(".text-danger").addClass("validation-summary-errors");
        $(".text-danger").html(err);
    }

    var onAjaxSuccess = function (res) {
        if (res.success) {
            HideLoader($('#divSendEmail'));
            kendo.alert("Email Sent Successfully");
        }
        else {
            HideLoader($('#divSendEmail'));
            showErrors(res.errors);
        }
        HideLoader($('#divSendEmail'));
    }

    function ShowLoader(target) {
        // target.loadingOverlay();
        kendo.ui.progress(target, true);
    }
    function HideLoader(target) {
        //target.loadingOverlay('remove');
        kendo.ui.progress(target, false);
    }

    $(document).ready(function () {
        $("#StartDate").kendoDateTimePicker({value:new Date('@Model.StartDate'),dateInput:true});
        $("#EndDate").kendoDateTimePicker({value:new Date('@Model.EndDate'),dateInput:true});

        $("#CalendarNotificationTemplate").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            change: OnChange,
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/NotificationTemplate/GetNotificationIdNameList?groupCode=CALENDAR",
                    }
                }
            }
        });

    });
</script>

<div id="Email">
    <div class="row-12" style="margin-left:15px;">

        <form asp-area="Tas" asp-controller="TalentAssessment" asp-action="SendEmail" class="form-horizontal" id="myForm" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
              data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
              data-ajax="true" data-ajax-method="POST">
            <div class="text-danger" asp-validation-summary="All" style="font-size:14px;"></div>
            <div id="divSendEmail">
                <div class="row-12 no-gutter">
                    <div class="col-md-12" style="text-align:right">

                        @if (Model.DataAction == DataActionEnum.Create)
                        {
                        @*@Html.Kendo().Button().Name("btnSubmit").Content("Send").Icon("check-outline").HtmlAttributes(new { @class = "k-primary", @onclick = "return OnCheck('Create')" })*@
                        <button type="submit" id="btnSubmit" class="btn btn-primary" onclick="return OnCheck('Create')">Send</button>
                        }
                        @if (Model.DataAction == DataActionEnum.Edit)
                        {
                        @*@Html.Kendo().Button().Name("btncanel").Content("Cancel").Icon("check-outline").HtmlAttributes(new { @class = "k-primary", @onclick = "return OnCheck('Cancel')" })
                        @Html.Kendo().Button().Name("btnupdate").Content("Update").Icon("check-outline").HtmlAttributes(new { @class = "k-primary", @onclick = "return OnCheck('Update')" })*@
                        
                    <button type="submit" id="btncanel" class="btn btn-primary" onclick="return OnCheck('Cancel')">Cancel</button>
                        <button type="submit" id="btnupdate" class="btn btn-primary" onclick="return OnCheck('Update')">Update</button>
                        }
                    </div>
                </div>

                @if (Model.DataAction == DataActionEnum.Edit)
                {
                    <div class="row pad-l-30">
                        <div class="col-3">Email Sent On</div>
                        <div class="col-9">
                            @Html.DisplayFor(x => x.LastUpdatedDate)
                        </div>
                    </div>
                    <br />
                    <div class="row pad-l-30">
                        <div class="col-3">@Html.LabelFor(x => x.CalendarInvitationType, new { @class = "control-label" })</div>
                        <div class="col-9">
                            @Html.DisplayFor(x => x.CalendarInvitationType)
                        </div>
                    </div>
                    <br />
                }

                <div class="row pad-l-30">
                    <div class="col-3">To</div>
                    <div class="col-9">
                        @Html.DisplayFor(x => x.To)
                    </div>
                </div>
                <br />
                <div class="row pad-l-30">
                    <div class="col-3">Start Date</div>
                    <div class="col-9">
                        @*@Html.Kendo().DateTimePickerFor(x => x.StartDate).DateInput().HtmlAttributes(new { @class = "hr-large" })*@
                        <input asp-for="StartDate" id="StartDate" class="hr-large" />
                    </div>
                </div>
                <br />
                <div class="row pad-l-30">
                    <div class="col-3">End Date</div>
                    <div class="col-9">
                        @*@Html.Kendo().DateTimePickerFor(x => x.EndDate).DateInput().HtmlAttributes(new { @class = "hr-large" })*@
                        <input asp-for="EndDate" id="EndDate" class = "hr-large" />

                    </div>
                </div>
                <br />
                <div class="row pad-l-30">
                    <div class="col-3">CC</div>
                    <div class="col-9">
                        @Html.TextAreaFor(m => m.CC, new { @class = "k-textbox", rows = "3", style = "height:80px;;width:80%" })
                        <p style="color:brown;">[Separate multiple email addresses using the semicolon(;) character]</p>
                    </div>
                </div>
                <br />
                <div class="row pad-l-30">
                    <div class="col-3">BCC</div>
                    <div class="col-9">
                        @Html.TextAreaFor(m => m.BCC, new { @class = "k-textbox", rows = "3", style = "height:80px;width:80%" })
                        <p style="color:brown;">[Separate multiple email addresses using the semicolon(;) character]</p>
                    </div>
                </div>
                <br />
                <div class="row pad-l-30">
                    <div class="col-3">Email Template</div>
                    <div class="col-9">
                        @*@(Html.Kendo().DropDownList()
                    .Name("CalendarNotificationTemplate")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetNotificationIdNameList", "NotificationTemplate", new { area = "Cms", groupCode="CALENDAR" });
                        });
                    })
                    .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .Events(x=>x.Change("OnChange"))
                    .Filter(FilterType.Contains)
                    .HtmlAttributes(new { @style="width:80%;" }))*@

                        <input id="CalendarNotificationTemplate" style="width: 80%;" />

                    </div>
                </div>
                <br />
                <div class="row pad-l-30">
                    <div class="col-3">Subject</div>
                    <div class="col-9">
                        @Html.TextAreaFor(m => m.Subject, new { @class = "k-textbox", rows = "3", style = "height:80px;;width:80%" })
                    </div>
                </div>
                <br />
                <div class="row-12" style="padding-left:10px;">
                    <div class="col-3">Body</div>
                    <div class="col-12">
                        @*@(Html.Kendo().EditorFor(m => m.Body)
                      .HtmlAttributes(new { style = "width: 100%;height:500px" })
                      .Tools(tools => tools
                      .Clear()
                      .Bold().Italic().Underline().Strikethrough()
                      .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                      .InsertUnorderedList().InsertOrderedList()
                      .Outdent().Indent()
                      .CreateLink().Unlink()
                      .TableEditing()
                      .ViewHtml()
                      .Formatting()
                      .CleanFormatting()
                      .BackColor()
                        )
                    )*@
                    </div>
                </div>

                <hr />
            </div>
            @Html.HiddenFor(x => x.DataAction)
            @Html.HiddenFor(x => x.Operation)
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.EmailUniqueId)
            @Html.HiddenFor(x => x.SlotId)
            @Html.HiddenFor(x => x.To)
            @Html.HiddenFor(x => x.ReferenceId)
            @* @Html.HiddenFor(x => x.ReferenceNode)*@
            @Html.HiddenFor(x => x.CalendarInvitationType)
            @Html.HiddenFor(x => x.SequenceNo)
            @*@Html.HiddenFor(x => x.EmailUniqueId)*@
        </form>
    </div>    

</div>
