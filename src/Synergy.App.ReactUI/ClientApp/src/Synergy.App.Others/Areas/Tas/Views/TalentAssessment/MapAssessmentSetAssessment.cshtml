

@using Synergy.App.ViewModel;
@using Synergy.App.Common;


@model AssessmentSetAssessmentViewModel
@{
    ViewBag.Title = "Permission";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    // Layout = null;
}




<style>

    ul li {
        list-style: none;
    }

    a, a:hover, a:focus {
        text-decoration: none;
        outline: none;
        outline: 0;
    }

    .nav-tabs > li.active > a, .nav-tabs > li.active > a:focus, .nav-tabs > li.active > a:hover {
        color: #fff;
        cursor: default;
        background-color: #007bff;
        border: 1px solid #ddd;
        border-bottom-color: transparent;
    }

    .nav-tabs > li > a {
        margin-right: 2px;
        line-height: 1.42857143;
        border: 1px solid transparent;
        border-radius: 4px 4px 0 0;
    }

    .nav > li > a {
        position: relative;
        display: block;
        padding: 10px 15px;
    }

    a {
        color: #337ab7;
        text-decoration: none;
    }

    a {
        background-color: transparent;
    }

    .form-group {
        padding-bottom: 0px !important;
    }

        .form-group:last-child {
            margin-bottom: 15px !important;
        }

    .k-widget {
        font-size: 14px;
    }


    .card-tile {
        border: 0;
        /* margin-bottom: 30px; */
        /* margin-top: 30px; */
        margin: 10px;
        border-radius: 6px;
        color: #333;
        background: #fff;
        width: 30%;
        box-shadow: 0 4px 20px 0 rgba(0,0,0,.14), 0 7px 10px -5px #fff;
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #eee;
        min-height: 80px;
        cursor: pointer;
    }

    .ic {
        margin-top: 10px;
        font-size: 15px;
        color: white;
    }

    .span-c {
        margin-top: 6px;
        color: white;
        margin-bottom: 10px;
    }

    .announcement {
        background-color: #f7e6be;
        border: 2px solid white;
        color: #373e4c;
        padding: 10px 30px 15px 15px;
    }

    .iconwithtextan {
        display: flex;
        align-items: center;
    }
</style>

<form asp-controller="TalentAssessment" asp-action="SaveAssessmentSetAssessment" class="form-horizontal" id="myForm" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
      data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
      data-ajax="true" data-ajax-method="POST">
    <div class="text-danger" asp-validation-summary="All" style="font-size:14px;"></div>
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.NoteId)
    @Html.HiddenFor(x => x.Ids)
    @Html.HiddenFor(x => x.AssessmentSetId)
    @Html.HiddenFor(x => x.DataAction)

    <div class="form-group col-xs-12 col-lg-12" id="UserDiv">


        <div class="row">
            <div class="form-group col-xs-12 col-lg-12" @*id="UserGroupDiv" style="display:none"*@>
                <div class="col-lg-12 label-div" style="padding-bottom: 5px;">
                    Select Assessment Type
                </div>
                <div class="col-md-6">


                    @*@(Html.Kendo().DropDownListFor(x => x.AssessmentType)
                               //.Name("LegalEntity")
                               .OptionLabel("--Select---")
                               .DataSource(source =>
                               {
                                   source.Read(read =>
                                   {

                                       read.Action("GetListOfValueList", "LOV", new { @area = "Cms", type = "ASSESSMENT_TYPE" });
                                   });
                               })
                               .DataTextField("Name")
                               .DataValueField("Id")
                               .Filter(FilterType.Contains)
                               .AutoBind(true)
                               .Events(e =>
                                   e.Change("onLegalEnityChanged")
                               )
                                       .HtmlAttributes(new { @class = "form-control", @style = "width:100%" })
            )*@
                    <input asp-for="AssessmentType" id="AssessmentType" class="form-control" style="width: 100%;" />

                </div>
            </div>
        </div>
        <div class="col-lg-12 label-div" style=" padding-bottom: 5px;">
            Select Assessment
        </div>
        <div class="col-md-6">
            @*@(Html.Kendo().DropDownListFor(x=>x.AssessmentId)
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetAssessmentListToSet", "TalentAssessment", new { area = "Tas",@AssessmentType=Model.AssessmentType });
                                 });
                             })

                             .OptionLabel("---Select---").Height(300)
                             .Filter(FilterType.Contains)
                             .DataTextField("Name")
                             .DataValueField("Id")
                             .HtmlAttributes(new { @class = "form-control", @style = "width:100%" })
            )*@

            <input asp-for="AssessmentId" id="AssessmentId" class="form-control" style="width: 100%;" />
        </div>


        <div class="col-lg-12 label-div" style=" padding-bottom: 5px;">
            Sequence Number
        </div>
        <div class="col-lg-12">
            @*@(Html.Kendo().TextBoxFor(x=>x.SequenceOrder).Placeholder("Enter Sequence No.").HtmlAttributes(new { @style = "width:100%;" }))*@
            <input asp-for="SequenceOrder" type="text"  placeholder="Enter Sequence No." class="form-control" style="width:100%" />

        </div>
    </div>








    <div class="form-group col-xs-12 col-sm-6">
        <div class="col-lg-3 label-div">
            &nbsp;
        </div>
        <div class="col-lg-9" style="text-align:right;">
            @*@Html.Kendo().Button().Name("btnCancel").Content("Cancel" +
           "").Icon("cancel").Events(x => x.Click("OnCancel")).HtmlAttributes(new { @type = "button" })*@
            @*@Html.Kendo().Button().Name("btnSubmit").Content("Submit").Icon("check-outline").Events(x => x.Click("return OnSubmit")).HtmlAttributes(new { @class = "k-primary" })*@
            <button type="button" id="btnCancel" class="btn btn-primary" onclick="OnCancel()">Cancel</button>
            <input id="btnSubmit" type="submit" value="Save" class="btn btn-primary" onclick="OnSave(event);" />

        </div>
    </div>



</form>


<script type="text/javascript">
    $('li > a').click(function () {
        $('li').removeClass();
        $(this).parent().addClass('active');
    });

    function OnSave(evt) {
       // var categoryType = $("#TagCategoryType").data("kendoDropDownList").value();

        ShowLoader($('.form-horizontal'));

    }

    var onAjaxSuccess = function (res) {

        HideLoader($('.form-horizontal'));
        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                window.parent.ShowNotification("Save Successfully", "success");
            }
            if ('@Model.DataAction' == '@DataActionEnum.Edit')
            {
                window.parent.ShowNotification("Update Successfully", "success");
            }
            var id ='@Model.NoteId';
           var Status = {
               noteId: id,
        };
            //window.parent.$("#kgrdPermisstion").data("kendoGrid").dataSource.read(Status);
            Close();

            var win = GetMainWindow();
            win.CloseWindow({ MethodName: 'OnAfterServiceCreate' });
            return false;


        }
        else {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html(res.error);

            HideLoader($('.form-horizontal'));
        }
    };


    function OnCancel() {
        Close();
    }

    function Close() {

        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }


   function FilterUser() {
        var a = {
            assignToType: '@AssignToTypeEnum.User',
            legalEntity: $("#LegalEntityId").val()
        };
        return a;
    }

    function onLegalEnityChanged() {
        var search = DataFilter();
        /*$("#AssessmentId").data("kendoDropDownList").dataSource.read({ AssessmentType: $("#AssessmentType").val(), });*/
        $("#AssessmentId").data("kendoDropDownList").dataSource.read(search);
    }

    function DataFilter() {
        var assessmentType = $("#AssessmentType").val();
        return {
            AssessmentType: assessmentType,
        }
    }

    $(document).ready(function () {

    $("#AssessmentType").kendoDropDownList({
        optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
        dataTextField: "Name",
        dataValueField: "Id",
        value: "@Model.AssessmentType",
        height: 250,
        filter: "contains",
        autoBind: true,
        change: onLegalEnityChanged,
        dataSource: {
            transport: {
                read: {
                    url: "/Cms/LOV/GetListOfValueList?type=ASSESSMENT_TYPE",
                }
            }
        }
    });

    $("#AssessmentId").kendoDropDownList({
        optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
        dataTextField: "Name",
        dataValueField: "Id",
        value: "@Model.AssessmentId",
        height: 250,
        filter: "contains",
        autoBind: true,
        dataSource: {
            transport: {
                read: {
                    dataType:"json",
                    url: "/Tas/TalentAssessment/GetAssessmentListToSet",
                    data: DataFilter,
                }
            }
        }
    });



        //$("#btnSubmit").click(function (e) {



      /*  document.getElementById('listViewTM').style.border = "none";*/

    });
    //function filter() {
    //    return {
    //        Id: $("#WorkspacePermissionGroupId").val(),
    //    };
    //}
    function OnChange(e) {
        var grid = $("#listViewTM").data("kendoListView");
        var search = filter();
        grid.dataSource.read(search);
        return true;
    }
    //function hideLoader() {
    //    document.getElementById('speach-load').style.display = "none";
    //}

    //function showLoader() {
    //    document.getElementById('speach-load').style.display = "unset";
    //    document.getElementById('speech-srch').innerText = "Loading...";
    //    $(".main-menu").css("z-index", '2');
    //    $(".skitt-ui").css("z-index", '2');
    //}
    //function OnSuccess(response) {
    //    if (response.success) {
    //        var pop2 = window.parent.GetIframePopup();
    //        pop2.CloseSuccess(true);
    //    }
    //    else {

    //        ShowErrors(response.errors);
    //    }
    //    kendo.ui.progress($(document.body), false);
    //}


    //function ShowErrors(err) {
    //    $(".hr-v-summary").removeClass("validation-summary-valid");
    //    $(".hr-v-summary").addClass("validation-summary-errors");
    //    var msg = ExtractError(err);
    //    $(".hr-v-summary ul").html(msg);


    //}

</script>
