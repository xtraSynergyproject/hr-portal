@inject IStringLocalizer<CMS.UI.Web.Areas.Pay.Controllers.SalaryInfoController> Resource
@using Kendo.Mvc.UI;
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model SalaryElementInfoViewModel
@{
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

<script type="text/javascript">
    function OnDataBound(arg) {
        var grid = $("#kgrdSalaryElementInfo").data("kendoGrid").dataItems();

        if (grid.length == 0) {
            $("#total").show();
        }
        else {
            $("#total").hide();
        }
    }


    function filter() {
        return {
            PersonId: $("#PersonId").val()
        };
    }
    function PaymentModeChange(e) {
        
        var dataItem = this.dataItem(e.item);
        var tit = $("#PaymentMode").val();

        if (dataItem.Code == 'BANK_TRANSFER') {
            $("#bank").show();
            $('#BankBranchId').prop('required', true);
            $('#BankAccountNo').prop('required', true);
            $("#PaymentModeCode").val(dataItem.Code);
        }
        else {
            $("#bank").hide();
            $('#BankBranchId').prop('required', false);
            $('#BankAccountNo').prop('required', false);
        }
    }
    function OnCalendarChange(element) {
        var cal = $("#PayCalendarId").val();

        if (cal != null && cal != '') {
            $("#calendar").show();
        }
        else {
            $("#calendar").hide();
        }
    }
    function OnClickCalendar() {
        var cal = $("#PayCalendarId").val();
       
        var url = "/pay/Calendar/Correct?rs=PersionView&layoutMode=Iframe&id=" + cal;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(Resource["Calendar"])', Width: 1200, Height: 600 });
        return false;
    }

</script>
<script type="text/javascript">
    $(document).ready(function () {

        $("#EffectiveStartDate").kendoDatePicker({ value: "@Model.EffectiveStartDate"});
        $("#EffectiveEndDate").kendoDatePicker({ value: "@Model.EffectiveEndDate"});

        $("#ElementId").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataTextField: "Name",
            dataValueField: "Id",
            value: "@Model.ElementId",
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/Pay/payrollBatch/GetSalaryElementList",
                    }
                }
            }
        });

    });




    function OnCancel(e) {

        win = GetMainWindow();
        win.CloseWindow({ MethodName: "OnAfterNoteCreate" });
    }
    function Next() {
        var rs = $("#RequestSource").val();

        if (rs == "WorkStructure") {
            var layout = $("#LayoutMode").val();
            var person = $("#PersonId").val();
            window.location.href = "/admin/user/create?empId=" + person + "&rs=" + rs + "&layoutMode=" + layout;
        }
        else {
            window.location.href = "/pay/SalaryInfo";
        }
        return true;
    }

    function ShowErrors(err) {
        $(".hr-v-summary").removeClass("validation-summary-valid");
        $(".hr-v-summary").addClass("validation-summary-errors");
        var msg = ExtractError(err);
        $(".hr-v-summary ul").html(msg);
    }

      function Close(dorefresh, mode) {
          var win = GetMainWindow();
          win.CloseWindow();
          return false;


        if (dorefresh) {

            if (mode == "Create") {
                $("#kgrdSalaryElementInfo").data("kendoTreeList").dataSource.read();
                @*ShowNotification('@ERP.Translation.Message.InsertSuccess');*@
            }
            else if (mode == "Correct") {
                $("#kgrdSalaryElementInfo").data("kendoTreeList").dataSource.read();
                @*ShowNotification('@ERP.Translation.Message.CorrectionSuccess');*@
            }
             else if (mode == "Update") {
                $("#kgrdSalaryElementInfo").data("kendoTreeList").dataSource.read();
                @*ShowNotification('@ERP.Translation.Message.UpdateSuccess');*@
            }
        }
    }

    function OnEdit(source, id) {
      OnManage(source, id)
    }
    function OnManage(source, id) {
        //alert('@ViewBag.Layout');

        var url = "/pay/SalaryElementInfo/" + source + "?SalaryInfoId=@Model.Id" + (id == null ? "" : "&id=" + id);
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: "@Html.Raw(Resource["ManageSalaryElementInfo"])", Width: 1200, Height: 500 });
        return false;
    }


     var onAjaxSuccess = function (res) {
        if (res.success) {
            win = GetMainWindow();
            win.CloseWindow({ MethodName: "OnAfterNoteCreate" });

         }
        else {
            showError(res.error);
        }

    };

</script>
<form asp-area="Pay" asp-controller="SalaryInfo" asp-action="ManageSalaryElementInfo" class="form-horizontal"
      data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
      data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
      data-ajax="true" data-ajax-method="POST">
    <div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>

    <div id="appWrapper">

        <div class="row no-gutter hr-pad-top-15">
            <div class="form-group col-xs-12 col-sm-12">
                <div class="col-lg-3 label-div">
                    <span class="required">*</span>
                    @Resource["ElementName"]
                    @*@Html.LabelFor(m => m.ElementId, new { @class = "control-label" })*@
                </div>
                <div class="col-lg-9">
                    @*@(Html.Kendo().DropDownListFor(x => x.ElementId)
                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetSalaryElementList", "payrollBatch",new { area="Pay"});
                                });
                            })
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Filter(FilterType.Contains)
                            .AutoBind(true)
                            .HtmlAttributes(new { @class="form-Control",@Style="width:100%"})

                             )*@

                    <input asp-for="ElementId" id="ElementId" class="form-control" style="width:100%;" />

                </div>
            </div>

            <div class="form-group col-xs-12 col-sm-12">
                <div class="col-lg-3 label-div">
                    <span class="required">*</span>
                    @Resource["Amount"]
                    @*@Html.LabelFor(m => m.Amount, new { @class = "control-label" })*@
                </div>
                <div class="col-lg-9">
                    <input asp-for="Amount" type="number" class="form-control" placeholder="Amount" autocomplete="off" />
                    @*@Html.Kendo().NumericTextBox().Name("Amount").HtmlAttributes(new { @class = "form-control " }).Value(Model.Amount)*@
                </div>
            </div>
            <div class="form-group  col-xs-12 col-sm-12">
                <div class="col-lg-3 label-div">
                    <span class="required">*</span>
                    @Resource["EffectiveStartDate"]
                    @*@Html.LabelFor(m => m.EffectiveStartDate, new { @class = "control-label" })*@
                </div>
                <div class="col-lg-9">
                    @*<input type="date" asp-for="EffectiveStartDate" class="form-control" placeholder="Effective Start Date" autocomplete="off" required />*@
                    @*@Html.Kendo().DatePicker().Name("EffectiveStartDate").HtmlAttributes(new { @class = "form-control" }).Value(Model.EffectiveStartDate)*@
                    <input asp-for="EffectiveStartDate" id="EffectiveStartDate" class="form-control" />
                </div>
            </div>

            <div class="form-group  col-sm-12 col-lg-12">
                <div class="col-lg-3 label-div">
                    <span class="required">*</span>
                    @Resource["EffectiveEndDate"]
                    @*@Html.LabelFor(m => m.EffectiveEndDate, new { @class = "control-label" })*@
                </div>
                <div class="col-lg-9">
                    @*@Html.Kendo().DatePicker().Name("EffectiveEndDate").HtmlAttributes(new { @class = "form-control" }).Value(Model.EffectiveEndDate)*@
                    <input asp-for="EffectiveEndDate" id="EffectiveEndDate" class="form-control" />
                </div>
            </div>

        </div>
        <hr />
        <div class="row no-gutter">
            <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-3 label-div">
                    * @SharedResource["RequiredFields"]
                </div>
                <div class="col-lg-9">
                    &nbsp;
                </div>
            </div>
            <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-3 label-div">
                    &nbsp;
                </div>
                <div class="col-lg-9">
                    @*@Html.Kendo().Button().Name("btnCancel").Content(@SharedResource["Cancel"]).Icon("cancel").Events(x => x.Click("OnCancel")).HtmlAttributes(new { @type = "button" })*@
                    <button type="button" id="btnCancel" onclick="OnCancel();" class="btn btn-light">@SharedResource["Cancel"]</button>
                    <input type="submit" value="@SharedResource["Submit"]" class="btn btn-primary" id="btnSubmit" />
                </div>
            </div>

        </div>
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ParentNoteId)
        @Html.HiddenFor(x => x.NoteId)
        @Html.HiddenFor(x => x.Json)
        @Html.HiddenFor(x => x.DataJson)
        @Html.HiddenFor(x => x.CompanyId)
        @Html.HiddenFor(x => x.CreatedBy)
        @Html.HiddenFor(x => x.CreatedDate)
        @Html.HiddenFor(x => x.LastUpdatedBy)
        @Html.HiddenFor(x => x.LastUpdatedDate)

    </div>







</form>


