@using Synergy.App.ViewModel
@using Synergy.App.Common
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Manage Direct Sales";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model DirectSalesViewModel

<style>
    .k-switch-label-on, .k-switch-label-off {
        display: flex
    }


    .avatar-myProfile {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .avatar-mysign {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .bold {
        font: bold
    }
</style>
<div style="width: 100%;" class="p-3">
    <form asp-controller="InventoryManagement" asp-action="ManageDirectSales" class="form-horizontal" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div class="text-danger" asp-validation-summary="All"></div>
        <fieldset class="fieldset">
            <legend class="fs-legend">Customer Information</legend>
            <div class="row">
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>Customer</label>
                    </div>
                    <input type="text" asp-for="Customer" id="Customer" class="form-control" required />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>Contact Person</label>
                    </div>
                    <input type="text" asp-for="ContactPerson" id="ContactPerson" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Designation</label>
                    </div>
                    <input type="text" asp-for="Designation" id="Designation" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Mobile No</label>
                    </div>
                    <input type="text" asp-for="MobileNo" id="MobileNo" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Contact No</label>
                    </div>
                    <input type="text" asp-for="ContactNo" id="ContactNo" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Email</label>
                    </div>
                    <input type="text" asp-for="EmailId" id="Email" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Customer GST No.</label>
                    </div>
                    <input type="text" asp-for="CustomerGSTNo" class="form-control" disabled />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Customer Ref. Number</label>
                    </div>
                    <input type="text" asp-for="CustomerRefNo" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>Country</label>
                    </div>
                    <input type="text" asp-for="Country" class="form-control" required />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>State</label>
                    </div>
                    <input type="text" asp-for="State" class="form-control" required />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>City</label>
                    </div>
                    <input type="text" asp-for="City" class="form-control" required />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>Shipping Address</label>
                    </div>
                    <input type="text" asp-for="ShippingAddress" class="form-control" />
                </div>
            </div>
        </fieldset>
        <fieldset class="fieldset">
            <legend class="fs-legend">Project Information</legend>
            <div class="row">
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>Proposal Type</label>
                    </div>
                    <input type="text" asp-for="ProposalType"  class="form-control" required />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>Proposal Source</label>
                    </div>
                    <input type="text" asp-for="ProposalSource"  class="form-control" required />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>Proposal Date</label>
                    </div>
                    <input type="text" asp-for="ProposalDate" class="form-control" />
                </div>

                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>Competition With</label>
                    </div>
                    <input type="text" asp-for="CompetitionWith" id="CompetitionWith" class="form-control" required />
                </div>
                <div class="col-6 form-group">
                    <div class="col-form-label required">
                        <label>Summary</label>
                    </div>
                    <input type="text" asp-for="Summary"  class="form-control" required />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Next Follow-up Date</label>
                    </div>
                    <input type="text" asp-for="NextFollowUpDate" id="NextFollowUpDate" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label required">
                        <label>&nbsp;</label>
                    </div>
                    <input type="submit" class="btn btn-primary" value="Save" style="margin:5px;" onclick="OnSubmit(event)" />
                    <input type="button" class="btn btn-secondary" value="Close" style="margin:5px;" onclick="closeNav()" />
                </div>
            </div>
        </fieldset>
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.ServiceId)
    </form>
</div>
<script type="text/javascript">

    function OnSubmit(e)
    {
        var Customer = $("#Customer").data("kendoDropDownList").value();
        var ContactPerson = $("#ContactPerson").data("kendoDropDownList").value();
        var Country = $("#Country").data("kendoDropDownList").value();
        var State = $("#State").data("kendoDropDownList").value();
        var City = $("#City").data("kendoDropDownList").value();
        var ProposalType = $("#ProposalType").data("kendoDropDownList").value();
        var ProposalSource = $("#ProposalSource").data("kendoDropDownList").value();
        var CompetitionWith = $("#CompetitionWith").val();
        var ProjectSummary = $("#Summary").val();
        if (ContactPerson == null || ContactPerson == '' || ContactPerson == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Contact Person is required");
            e.preventDefault();
            return false;
        }
        if (ProposalType == null || ProposalType == '' || ProposalType == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Proposal Type is required");
            e.preventDefault();
            return false;
        }
        if (ProposalSource == null || ProposalSource == '' || ProposalSource == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Proposal Source is required");
            e.preventDefault();
            return false;
        }
        if (Customer == null || Customer == '' || Customer == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Customer is required");
            e.preventDefault();
            return false;
        }
        if (Country == null || Country == '' || Country == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Country is required");
            e.preventDefault();
            return false;
        }
        if (State == null || State == '' || State == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("State is required");
            e.preventDefault();
            return false;
        }
        if (City == null || City == '' || City == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("City is required");
            e.preventDefault();
            return false;
        }
        if (ProjectSummary == null || ProjectSummary == '' || ProjectSummary == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Summary is required");
            e.preventDefault();
            return false;
        }
        if (CompetitionWith == null || CompetitionWith == '' || CompetitionWith == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Competition With is required");
            e.preventDefault();
            return false;
        }
    }
    $(document).ready(function () {
        $("#ProposalType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--All--",
			@* value: "@Model.Status",*@
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/LOV/GetListOfValueList?type=LOV_IMS_PROPOSAL_TYPE",
                    }
                }
            }
        });
        $("#ProposalSource").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--All--",
			@* value: "@Model.Status",*@
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/LOV/GetListOfValueList?type=IMS_PROPOSAL_SOURCE",
                    }
                }
            }
        });
        $("#NextFollowUpDate").kendoDatePicker({

        });
        $("#ProposalDate").kendoDatePicker({
            value: new Date(),
            format: 'yyyy-MM-dd'
        });
        $("#Country").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            value: "@Model.Country",
            optionLabel: "--All--",
            filter: "contains",
            change: function (e)
            {
                //debugger
                $("#State").data("kendoDropDownList").dataSource.read();
            },
            dataSource: {
                //serverFiltering: true,
                transport: {
                    read: {
                        url: "/IMS/InventoryManagement/GetCountryList",
                    }
                }
            }
        });

        $("#State").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--All--",
            value: "@Model.State",
            filter: "contains",
            autoBind: false,
           // cascadeFrom: "Country",

            change: function (e)
            {
                $("#City").data("kendoDropDownList").dataSource.read();
            },
            dataSource: {
               // serverFiltering: true,
                transport: {
                    read: {
                        url: "/IMS/InventoryManagement/GetStateList",//+ $("#Country").data("kendoDropDownList").value(),
                        data: filterState,
                    },
                }
            }
        });
         $("#City").kendoDropDownList({
            dataTextField: "Name",
             dataValueField: "Id",
            optionLabel: "--All--",
            value: "@Model.City",
             filter: "contains",
             autoBind: false,
            // cascadeFrom: "State",
             dataSource: {
                 //serverFiltering: true,
                transport: {
                    read: {
                        url: "/IMS/InventoryManagement/GetCityList",
                        data: filterCity,
                    }
                }
            }
         });

         $("#ContactPerson").kendoDropDownList({
             dataTextField: "ContactPersonName",
             dataValueField: "Id",
            optionLabel: "--All--",
            value: "@Model.ContactPerson",
             filter: "contains",
            change: onSelect
             //dataSource: {
             //    transport: {
             //        read: {
             //            url: "/IMS/InventoryManagement/GetCustomerList",
             //        }
             //    }
             //}
         });
        function filterState()
        {
            debugger
            return {
                countryId: $("#Country").data("kendoDropDownList").value()
            };
        }
        function filterCity() {
            debugger
            return {
                stateId: $("#State").data("kendoDropDownList").value()
            };
        }
        function onSelect(e) {
            console.log(e.sender.value());
            var id = e.sender.value();
            var customerId = $("#Customer").val();
            $.ajax({
                url:'@Url.Action("GetCustomerContactDetails", "InventoryManagement", new { @area= "IMS" })?CustomerContactId=' + id + '&CustomerId=' + customerId,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    console.log(result);
                    $("#Designation").val(result[0].Designation);
                    $("#MobileNo").val(result[0].MobileNo1);
                    $("#ContactNo").val(result[0].ContactNo1);
                    $("#Email").val(result[0].Email);
                   // $("#Country").data("kendoDropDownList").value(result[0].Email)
                   // $("#State").data("kendoDropDownList").value()
                   // $("#City").data("kendoDropDownList").value()
                },
                error: function (ert) {

                }
            });
        }




        $("#Customer").kendoDropDownList({
            dataTextField: "CustomerName",
            dataValueField: "Id",
            optionLabel: "--All--",
            value: "@Model.Customer",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/IMS/InventoryManagement/GetCustomerList",
                    }
                }
            }
        });

         if ('@Model.Customer' != 'null' && '@Model.Customer' != '') {

             var dropdownlist = $("#Customer").data("kendoDropDownList");
             // makes dropdownlist readonly
             dropdownlist.readonly();
             var id = $("#Customer").val();

             @*$.ajax({
                url:'@Url.Action("GetSingleCustomerDetails", "InventoryManagement", new { @area= "IMS" })?id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    console.log(result);
                    $("#Country").data("kendoDropDownList").value(result[0].Country);
                    $("#State").data("kendoDropDownList").value(result[0].State);
                    $("#City").data("kendoDropDownList").value(result[0].City);
                    $("#ShippingAddress").val(result[0].Address);
                },
                error: function (ert) {

                }
            });*@


             var contactDataSource = new kendo.data.DataSource({
                 transport: {
                     read: {
                         url: "/IMS/InventoryManagement/GetCustomerContacts?customerId=" + id,
                         dataType: "json"
                     }
                 },
             });

             var dropdownlist = $("#ContactPerson").data("kendoDropDownList");
             dropdownlist.setDataSource(contactDataSource);
             dropdownlist.dataSource.read();

        }
      @*$("#LegalEntityIds").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetLegalEntitiesList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "--Select Legal Entities--",
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });*@


        @*$("#Portal").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetPortalForUser",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Portal...",
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });
         $("#UserRole").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetUserRoleList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select UserRole...",
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });*@


    });


        var onAjaxSuccess = function (res) {
            if (res.success) {
                closeNav()
        }
        else {
            alert(res)
            showError(res.error);
        }
    };


    function closeNav() {

        var win = GetMainWindow();
        win.CloseWindow({ MethodName:"getDirectSalesData"});
        return false;
    }

    function onFileUploadSuccess(e) {
        //
        if (e.response.success) {
            // alert(e.response.fileId);
            //console.log(e);
            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserProfilePhoto?photoId=" + e.response.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                   //
                    $(".avatar-myProfile").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
                    $("#PhotoId").val(e.response.fileId);
                }
            });

        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onFileUploadSuccess1(e) {
        //
        if (e.response.success) {
            // alert(e.response.fileId);
            //console.log(e);
            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserSignature?photoId=" + e.response.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                    //
                    $(".avatar-mysign").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
                    $("#SignatureId").val(e.response.fileId);
                }
            });

        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onProfileDel() {
        //
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

        if ( $("#PhotoId").val()!='') {
         //
            kendo.confirm("Are you sure that you want to proceed?").then(function () {
                confirmDelete();
            }, function () {

            });
        }

    }
    function onSignatureDel() {
        //
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

        if ($("#SignatureId").val() != '') {
            //
            kendo.confirm("Are you sure that you want to proceed?").then(function () {
                $(".avatar-mysign").attr("src", "/images/200.png");
                $("#SignatureId").val('');
                var logoupload = $("#files2").data("kendoUpload");
                //console.log(logoupload);
                logoupload.clearFile(function (file) { return true; });
            }, function () {

            });
        }

    }

    function confirmDelete() {
     //
        //        alert("Banner Delete");
        $(".avatar-myProfile").attr("src", "/images/200.png");
        $("#PhotoId").val('');
        var logoupload = $("#files").data("kendoUpload");
        //console.log(logoupload);
        logoupload.clearFile(function (file) { return true; });
    }
    //function OnSave(event) {
    //
    //    var multiSelect = $("#UserRoles").data("kendoMultiSelect");
    //    var value = multiSelect.value();

    //   // $("#UserRoles").kendoMultiSelect.Data(Read);

    //}
</script>

