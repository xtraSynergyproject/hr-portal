@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@using Synergy.App.Common;
@*@using Kendo.Mvc.UI*@
@using System.Text.RegularExpressions;
@{
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    //Layout = null;
}
@model NotificationSearchViewModel


<style>
    .notification-title {
        background-color: #c1972a;
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
        height: 40px;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
        display: flex;
        align-content: center;
        text-align: center;
    }
</style>

<style>
    .arrow_box {
        position: relative;
        background: #f2f2f2;
        border: 1px solid #808080;
    }

        .arrow_box:after, .arrow_box:before {
            bottom: 100%;
            left: 50%;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
        }

        .arrow_box:after {
            border-color: rgba(242, 242, 242, 0);
            border-bottom-color: #f2f2f2;
            border-width: 15px;
            margin-left: -15px;
        }

        .arrow_box:before {
            border-color: rgba(128, 128, 128, 0);
            border-bottom-color: #808080;
            border-width: 16px;
            margin-left: -16px;
        }

    .notification-item {
        padding: 0px;
        border: 1px solid silver;
        margin-bottom: 10px !important;
    }

    .notification-heading {
        padding: 0px !important;
        /* height: 75px;*/
        border-left-style: solid;
        border-left-width: 20px;
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
    }

    .notification-user {
        width: 60px;
        height: 60px;
        border-radius: 50%;
        cursor: default;
    }



    #content_popup {
        font-family: "Segoe UI",Verdana,Helvetica,Sans-Serif;
    }

    .panel {
        margin-top: 0px !important;
    }

        .panel .panel-heading {
            line-height: unset !important;
        }

    h5 {
        color: #797979 !important;
    }
</style>
@*@if (ViewBag.IframeMode != "Iframe")
    {*@
<div class="p-3">
    <div id="content_popup">

        <div class="panel-group" id="accordion">

            @if (Model.Notifications != null && Model.Notifications.Any())
            {
                @foreach (var item in Model.Notifications)
                {
                    string pattern = @$"<a id='ext_url'.+?</a>";
                    var r = new Regex(pattern, RegexOptions.Singleline);
                    string body = item.Body.IsNotNullAndNotEmpty()?r.Replace(item.Body, ""):"";
                    <div class="panel notification-item">
                        <div data-toggle="collapse" data-target="#collapse-@(item.Id)" id="dynbutton-@(item.Id)" class="panel-heading notification-heading row no-gutters" style="border-left:8px solid @(@item.ReadStatusString == "NotRead" ? "#0066ff" : "#008000");">
                            <div class="col-xs-2 p-1">
                                <img class="notification-user" src="/cms/Document/GetImageMongo?id=@item.PhotoId" onerror='OnPhotoError(this,"@item.From");' />
                            </div>
                            <div class="col-10 row p-1">
                                <div class="col-12" style="font-size:.9eM;color:#004d99;">Reference: @item.ReferenceTypeNo</div>
                                <div class="col-12" style="font-size: .9eM;color:#004d99;">From : @item.From</div>
                                <div class="col-12" style="font-size: .9eM;color:#004d99;">Subject : @item.Subject </div>
                                <div class="col-12" style="font-size: .9eM;color:#004d99;">Date : @item.CreatedDate.Humanize() </div>
                            </div>
                        </div>
                        <div id="collapse-@(item.Id)" class="panel-collapse collapse" style="border-left:8px solid @(@item.ReadStatusString == "NotRead" ? "#0066ff" : "#008000");">
                            <div class="panel-body p-2" style="font-size:0.85em;">
                                <p> From : @item.From</p>
                                <p> Date : @item.CreatedDate</p>
                                <p> Subject : @item.Subject</p>
                                <p> Description : @Html.Raw(body)</p>
                                <a href="javascript:OnTakeAction('@item.Id','@item.ReferenceType','@item.ReferenceTypeId','@item.TemplateCode');">Click here to know more</a>
                            </div>
                        </div>
                    </div>

                }
                <div class="list-group-item mb-1" style="text-align:center;">
                    <a style="font: bolder;" title="View All" href="#" onclick="clearAllNotification(); return false;">
                        Mark all as read
                    </a>
                </div>
            }
            else
            {
                <div class="list-group-item mb-1" style="text-align:center;">
                    <san style="font: bolder;">
                        No new notifications!
                    </san>
                </div>
            }



            <div class="list-group-item" style="text-align:center;">
                <a style="font: bolder" title="View All" href="#" onclick="showNotification(); return false;">
                    View all notifications
                </a>

            </div>



        </div>

    </div>
</div>

<script type="text/javascript">

    function OnTakeAction(id, refType, refId, templateCode)
    {
        
        MarkNotificationAsRead(id);
        if (refType === 'NtsNote' || refType === 'NtsTask' || refType === 'NtsService' ) {
               var url = '/Cms/Page?lo=Popup&popup=true&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=@ViewBag.PortalId&recordId=' + refId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(SharedResource["ViewService"])', Width: 1200, Height: 600  });
        return false;
        }
        else {
            var win = GetMainWindow();
            // var portalId = $('#GlobalPortalId').val();
            // var url = '/Cms/Page?lo=Popup&cbm=OnAfterNoteCreate&source=Create&dataAction=Create&pageName=SalaryInfo&portalId=' + portalId /*+ '&prms=' + prms*/;
            win.iframeOpenUrl = "/Cms/NotificationDetails?notificationId="+id;
            win.OpenWindow({ Title: 'Notification Details', Width: 450, Height: 700 });
            return false;
        }

    }
    function hideLoader() {
        document.getElementById('speach-load').style.display = "none";
    }

    function showLoader() {
        document.getElementById('speach-load').style.display = "unset";
        document.getElementById('speech-srch').innerText = "Loading...";
        $(".main-menu").css("z-index", '2');
        $(".skitt-ui").css("z-index", '2');
    }
    function MarkNotificationAsRead(id) {
        $.ajax({
            url: "/cms/MarkNotificationAsRead?id=" + id,
            contentType: "application/json",
            type:"POST",
            cache: false,
            success: function (result) {
            },
            error: function (xhr, textStatus, errorThrown) {
                // alert(errorThrown);
            }
        });
    }
    function UpdateNotification(id) {
        $.ajax({
            url: "/Recruitment/notification/UpdateReadNotification?Id=" + id,
            contentType: "application/json",
            cache: false,
            success: function (result) {
            },
            error: function (xhr, textStatus, errorThrown) {
                // alert(errorThrown);
            }
        });
    }

    function loadCollapsible() {
        var coll = document.getElementsByClassName("collapsible");
        var i;

        for (i = 0; i < coll.length; i++) {
            coll[i].addEventListener("click", function () {
                this.classList.toggle("active");
                var content = this.nextElementSibling;
                if (content.style.display === "block") {
                    content.style.display = "none";
                } else {
                    content.style.display = "block";
                }
            });
        }
        if (i < 10) {
            $('#content_popup').removeClass('slide_scroll');
        }
    }
    function showNotification() {
        //window.location.href = "/general/notification/index?layout=@ViewBag.Layout";

        var win = GetMainWindow();        
        win.iframeOpenUrl = "/Cms/Notifications";
        win.OpenWindow({ Title: 'Notifications', Width: 1200, Height: 700 });
        return false;
    }

    function showNotificationParent() {

        window.parent.location.href = "/general/notification/";
    }

    $(document).ready(function () {
        //loadCollapsible();
        //$('.panel-body').find('a').attr('target', '_blank');
    });
    function clearAllNotification() {
        $.ajax({
            url: "/Recruitment/notification/UpdateAllReadNotification",
            contentType: "application/json",
            cache: false,
            success: function (result) {
                //window.parent.RefreshNotification();
                RefreshNotification();
              
                var win = GetMainWindow();
                win.CloseWindow();
                return false;
            },
            error: function (xhr, textStatus, errorThrown) {
                // alert(errorThrown);
            }
        });
        }
        function openNotificationAction(url)
        {

             var win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Title: 'Notification', Width: 1200, Height: 1200 });
        return false;
        }
        function openHMBatch() {
            window.parent.LoadPartailView1("/Recruitment/CandidateShortList/CandidateShortlistByHR", 'cms-content');
        }
        function RefreshNotification() {
            var win = GetMainWindow().GetParentWindow();
            win.RefreshNotification();
        }
</script>

