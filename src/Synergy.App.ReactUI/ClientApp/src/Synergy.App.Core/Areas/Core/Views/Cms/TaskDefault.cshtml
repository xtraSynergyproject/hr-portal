@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using System.Web;
<script src="~/lib/formio/js/formio.full.js" asp-append-version="true"></script>
@model TaskTemplateViewModel;
@{
    //Layout = string.Concat("~/Areas/Core/Views/Shared/Themes/", Model.Page.Portal.Theme.ToString(), "/_Layout.cshtml");
    Layout = ViewBag.Layout;// "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
}

<style>
    div > ul > li > .row {
        width: 100% !important;
    }
    table tr th {
        color: #212529!important;
    }
    .btn-group-left {
        float: left;
        border-top-right-radius: 0px;
        border-bottom-right-radius: 0px;
        border-right-width: 0px;
    }

    .btn-group-right {
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
    }

    .btn-drp-item {
        padding-bottom: 12px;
        padding-top: 12px;
        cursor: pointer;
    }
    .btn-block {
        display: block;
        width: 80%;
    }
    .post-btn {
        color: #fff;
        background-color: #007bff;
        border-color: #007bff;
    }
    .div-readonly {
        font-size: 13px;
        padding-bottom: 5px;
    }
    .header-readonly {
        text-align: center;
        font-size:16px;
        color:gray;
    }
    .icon_comment {
        font-size: 20px !important;
        color: #097ee2fa;
        padding-top: 6px;
    }

    .comment-text {
        font-size: 16px !important;
        color: #097ee2fa;
    }

    .drp-btn {
        width: 100%;
    }
    .drp-btn .k-dropdown-wrap{
        background-color: #007bff !important;
        border:1px solid #007bff !important;
        color:#fff !important;
    }
        .drp-btn .k-dropdown-wrap:hover {
            color: #fff !important;
        }

    .action-section {

        border: 1px solid #d3d8de;
        border-radius: 5px;
        padding: 10px;
    }
    .k-maskedtextbox.form-control .k-textbox, .k-textbox.form-control, .k-widget.form-control {
      /*  width:90%*/
    }
    .k-listview-content {
        height: 100% !important;
        overflow-y: auto !important;

    }
    .top-header {
        height: 40px;
    }

    .img {
        object-fit: cover;
        border-radius: 50%;
        width: 40px;
        height: 40px;
    }

    .border-color {
        border-color: #8f8f8f !important;
    }

    .k-editable-area {
      height: 107px;
        background-color:#fff;
    }

    .task-title {
        padding: 10px;
        background-color: #fafafa;
        /* font-weight: bold; */
        text-align: left;
        color: #0b0b0b;
        margin-left: 11px;
        margin-right: 50px;
        border-style: solid;
        border-width: 2px;
        border-color: #dbdbdb;
        font-size: 15px;
        border-radius: 6px;
    }

    .sub-div {
        /*overflow-y: scroll;*/
        height: 100%;
        /*overflow-x: hidden;*/
    }

    table.k-editor {
        width: 100% !important;
        display: table !important;
        vertical-align: top !important;
        table-layout: fixed !important;
        border-collapse: separate !important;
        border-spacing: 0 !important;
        height: 100px !important;
    }

    .card {
        position: relative;
        display: -ms-flexbox;
        display: flex;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #eff4f8;
        background-clip: border-box;
        border: 1px solid rgba(0, 0, 0, 0.125);
        border-radius: 0.25rem;
        margin: 10px;
        font-size: 13px;
    }

        /* On mouse-over, add a deeper shadow */
        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
        }

    .k-listview {
        border: none;
    }

    .detail-box {
        width: 100%;
        margin: 5px;
        font-size: 13px
    }

    .msg-box {
        border-radius: 5px 5px 0px 0px;
        margin-left: 15px;
        margin-right: 15px;
        background-color: #219db9;
        width: 100%;
        height: 40px;
        color: white;
        padding: 10px;
    }

    .border-color {
        border-color: #dddddd !important;
    }

    .no-data {
        text-align: center;
        margin-top: 5%;
        font-size: 16px;
        font-weight: 500;
        display: none;
    }

    .no-data-icon {
        color: #c8aa4d;
        font-size: 40px;
    }

    .treeview {
        margin: 0;
        padding: 0px 0 0 0x;
        font-size: .8125rem;
        list-style: none inside;
        display: block;
        position: relative;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .b-title {
        font-weight: bold;
    }
     @*@Model.Page.Css*@
    @@media screen and (max-width: 768px) {
        .ribbon-static {
            display: none !important;
        }
    }

    /*.page {
        border: 1px solid #a5acb5;
        margin: 20px;
        padding: 15px;
        -webkit-box-shadow: #000000 0px 0px 10px;
        -moz-box-shadow: #000000 0px 0px 10px;
        box-shadow: #000000 0px 0px 10px;
        background: #FFF;
    }*/

    .ribbon-static {
        display: block;
        float: right;
        margin-right: 10px;
        margin-top: -70px;
        text-align: center;
        font-size: 12px;
    }

    #ribbon {
        cursor: default;
        font-size: 8pt;
        padding-top:0px;
    /*    margin-top: -10px;*/
        background-color: aliceblue;
  /*      border-bottom: 1px solid #8b9097;*/
        -webkit-box-shadow: #8b9097 0px 1px 3px;
        -moz-box-shadow: #8b9097 0px 1px 3px;
        box-shadow: #8b9097 0px 1px 3px;
        overflow: inherit;
       /* z-index: 25;*/
        top: 0;
        left: 0;
        right: 0;
    /*    height: 142px;*/
        position: relative;
    }
    .ribbon-content {
        padding: 3px;
        text-align: center;
      min-width:60px;
    }
    .text-status{
        background-color:red;
        border-radius:8px;

    }
    .text-title {
        font-size: 16px;
        padding: 5px;
        color: #1c88e3;
    }
    .text-label{
    }
    .back-icon {
        font-size: 24px !important;
        color: #1c88e3;
        /* color: dimgray;*/
    }
    .reply-icon {
        font-size: 24px !important;
        color: #1c88e3;
    }
    .attachment-icon {
        font-size: 20px !important;
        color: #a11247;
        padding-top:6px;
    }
    .attachment-text {
        font-size: 16px !important;
        color: #a11247;
    }
    .notification-icon {
        font-size: 20px !important;
        color: #800080;
        padding-top: 6px;
    }

    .notification-text {
        font-size: 16px !important;
        color: #800080;
    }
    .share-icon {
        font-size: 20px !important;
        color: #f4501d;
        padding-top: 6px;
    }
    .share-text {
        font-size: 16px !important;
        color: #f4501d;
    }


    #ribbon.backstage {
        height: auto;
        bottom: 0;
    }

    #ribbon .ribbon-window-title {
    }

    #ribbon #ribbon-tab-header-strip {
        /*margin: 10px 0 0 10px;
            white-space: nowrap;*/
    }

    #ribbon .ribbon-tab-header {
        display: inline;
        margin: 0 5px;
        padding: 5px 10px;
        font-size: 8pt;
        color: #444; /*border: 1px solid #eaedf1;*/
        border-bottom: 1px solid #b6babf;
        -webkit-border-radius: 4px 4px 0px 0px;
        -moz-border-radius: 4px 4px 0px 0px;
        border-radius: 4px 4px 0px 0px;
        position: relative;
        /* z-index: 40;*/
    }

    #ribbon.backstage .ribbon-tab-header {
        border-bottom: 1px solid #1f48a1;
    }

    #ribbon .ribbon-tab-header:hover {
        background: #f1f3f4;
        border: 1px solid #b6babf;
        margin: -1px 4px;
        cursor: pointer;
    }

    #ribbon.backstage .ribbon-tab-header {
        border-bottom: 1px solid #1f48a1;
    }

    #ribbon .ribbon-tab-header.sel, #ribbon .ribbon-tab-header.sel:hover {
        background: #fff;
        margin: -1px 4px;
        border: 1px solid #b6babf;
        border-bottom: 1px solid #fff;
        cursor: default;
        /*     z-index: 45;*/
    }

    #ribbon .ribbon-tab-header.file {
        padding: 5px 20px;
        background: #2860b3;
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#4488e5), to(#2860b3));
        background: -moz-linear-gradient(#4488e5, #2860b3);
        -pie-background: linear-gradient(#4488e5, #2860b3);
        border: 1px solid #1f48a1;
        margin: -1px 4px;
        border-bottom: 1px solid #4488e5;
        cursor: default;
        color: #fff;
    }


        #ribbon .ribbon-tab-header.file:hover {
            background: #3870c3;
            background: -webkit-gradient(linear, 0 0, 0 bottom, from(#5498f5), to(#3870c3));
            background: -moz-linear-gradient(#5498f5, #3870c3);
            -pie-background: linear-gradient(#5498f5, #3870c3);
            border: 1px solid #1f48a1;
            cursor: pointer;
            border-bottom: 1px solid #4488e5;
            /*     z-index: 55;*/
            position: relative;
        }

        #ribbon .ribbon-tab-header.file.sel {
            background: #4488e5;
            background: -webkit-gradient(linear, 0 0, 0 bottom, from(#2860b3), to(#4488e5));
            background: -moz-linear-gradient(#2860b3, #4488e5);
            -pie-background: linear-gradient(#2860b3, #4488e5);
            border: 1px solid #1f48a1;
            cursor: pointer;
            border-bottom: 1px solid #4488e5;
            /*      z-index: 55;*/
            position: relative;
        }

    #ribbon .ribbon-tab {
        overflow: inherit;
        /* height: 60px;*/
        padding: 5px;
        border-top: 1px solid #b6babf;
        background: #FFF url(rib-back.png) repeat-x bottom;
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#ffffff), to(#cde3ff));
        background: -moz-linear-gradient(#ffffff, #eaedf1);
        /*   overflow: hidden;*/
        min-width: 500px;
        behavior: url(/PIE.htc);
        /*       z-index: 30;*/
        -pie-watch-ancestors: 2;
    }

        #ribbon .ribbon-tab.file {
            padding: 0;
            margin-top: 5px;
            border-top: 1px solid #1f48a1;
            background-color: #4488e5;
            filter: progid:DXImageTransform.Microsoft.gradient(GradientType=1,startColorstr=#4488e5, endColorstr=#ffffff);
            background-image: -moz-linear-gradient(left, #4488e5 15%, #ffffff 100%);
            background-image: -webkit-linear-gradient(left, #4488e5 15%, #ffffff 100%);
            background-image: -ms-linear-gradient(left, #4488e5 15%, #ffffff 100%);
            background-image: linear-gradient(left, #4488e5 15%, #ffffff 100%);
            background-image: -o-linear-gradient(left, #4488e5 15%, #ffffff 100%);
            background-image: -webkit-gradient(linear, left bottom, right bottom, color-stop(15%,#4488e5), color-stop(100%,#ffffff));
            overflow: hidden;
            min-width: 500px;
            /*       z-index: 30;*/
        }

    #ribbon .ribbon-backstage {
        display: none;
    }


    #ribbon.backstage .ribbon-backstage {
        display: block;
        position: absolute;
        top: 60px;
        left: 0;
        right: 0;
        bottom: 0;
        padding: 10px;
        background-color: #FFF;
    }

    #ribbon .section-title {
        color: #5B626C;
        text-align: center;
        clear: left;
        display: block;
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
    }

    #ribbon .ribbon-section {
        float: left;
        position: relative;
        height: 50px;
        border-right: 1px solid #fff;
    }

    #ribbon .ribbon-section-sep {
        display: none;
        border-left: 1px solid #E0E0E0;
        border-right: 1px solid #fff;
        margin: 0 5px;
        height: 45px;
        position: relative;
        width: 0;
        float: left;
    }

    #ribbon .ribbon-button {
        /* padding: 4px 6px;
            border: 1px solid transparent;*/
        -webkit-border-radius: 3px 3px 3px 3px;
        -moz-border-radius: 3px 3px 3px 3px;
        border-radius: 3px 3px 3px 3px;
    }

    #ribbon .ribbon-button-large {
        text-align: center;
        height: 58px;
        min-width: 50px;
        float: left;
    }

    #ribbon .ribbon-button-small {
        height: 14px;
        padding: 3px 4px;
        text-align: left;
    }

    #ribbon .ribbon-button .button-help {
        display: none;
    }

    #ribbon .ribbon-button .button-title {
        color: #444;
        font-size: 12px;
    }

    #ribbon .ribbon-button-large .button-title {
        clear: left;
        display: block;
    }

    #ribbon .ribbon-button-large .ribbon-icon {
        margin: auto;
    }

    #ribbon .ribbon-button-small .ribbon-icon {
        width: 16px;
        height: 16px;
        float: left;
        clear: left;
        margin: -1px 5px 0px 1px;
    }

    #ribbon .ribbon-button .ribbon-icon.ribbon-hot, #ribbon .ribbon-button .ribbon-icon.ribbon-disabled {
        display: none;
    }

    #ribbon .ribbon-button-large .ribbon-icon.ribbon-normal {
        display: block;
    }

    #ribbon .ribbon-button:hover .ribbon-icon.ribbon-normal {
        display: none;
    }

    #ribbon .ribbon-button-large:hover .ribbon-icon.ribbon-hot {
        display: block;
    }

    #ribbon .ribbon-button-small .ribbon-icon.ribbon-normal {
        display: inline;
    }

    #ribbon .ribbon-button-small:hover .ribbon-icon.ribbon-hot {
        display: inline;
    }

    #ribbon .ribbon-button:hover, #ribbon .ribbon-button.sel {
        border: 1px solid #219db9;
        background: #219db9;
        cursor: pointer;
    }

    #ribbon .ribbon-button:active {
        border: 1px solid #219db9;
        background: #219db9;
        cursor: pointer;
    }

    #ribbon .ribbon-button.disabled .ribbon-icon, #ribbon .ribbon-button.disabled:hover .ribbon-icon {
        display: none;
    }

        #ribbon .ribbon-button.disabled .ribbon-icon.ribbon-disabled {
            display: block;
            opacity: 0.8;
        }

        #ribbon .ribbon-button.disabled .ribbon-icon.ribbon-implicit-disabled {
            opacity: 0.4;
        }

    #ribbon .ribbon-button.disabled:hover {
        border: 1px solid #219db9;
        background: transparent;
        cursor: default;
    }

    #ribbon .ribbon-button.disabled:active {
        border: 1px solid transparent;
        background: transparent;
        cursor: default;
    }

    #ribbon .ribbon-button.disabled .button-title {
        color: #888;
        font-size: 15px;
    }

    .ribbon-tooltip {
        font-family: "Segoe UI", Verdana, Tahoma, Helvetica, sans-serif;
        font-size: 10pt;
        position: fixed;
        z-index: 5000;
        border: 1px solid #8b9097;
        background-color: #e5e5f0;
        background: -webkit-gradient(linear, 0 0, 0 bottom, from(#ffffff), to(#e5e5f0));
        background: -moz-linear-gradient(#ffffff, #e5e5f0);
        -pie-background: linear-gradient(#ffffff, #e5e5f0);
        padding: 5px;
        -webkit-box-shadow: #c6c9cd 1px 1px 3px;
        -moz-box-shadow: #c6c9cd 1px 1px 3px;
        box-shadow: #c6c9cd 1px 1px 3px;
        -webkit-border-radius: 2px 2px 2px 2px;
        -moz-border-radius: 2px 2px 2px 2px;
        border-radius: 2px 2px 2px 2px;
        width: 200px;
        top: 150px !important;
    }

    .dropbtn {
        background-color: #3498DB;
        color: white;
        padding: 16px;
        font-size: 16px;
        border: none;
        cursor: pointer;
    }

        .dropbtn:hover, .dropbtn:focus {
            background-color: #2980B9;
        }

    .dropdown {
        position: relative;
        display: inline-block;
    }

    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f1f1f1;
        min-width: 160px;
        overflow: auto;
        box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2);
     /*   z-index: 1;*/
    }

        .dropdown-content a {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
        }

    .dropdown a:hover {
        background-color: #ddd;
    }

    .show {
        display: block;
    }
    .form-horizontal .form-group {
        border-bottom: 0px solid #eff2f7;
        padding-bottom: 0px;
        margin-bottom: 15px;
    }
    .error-summary ul {
        padding-left: 5px !important;
    }
    canvas {
        box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%), 0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);
        border-radius: 4px;
    }

    h4 {
        font-size: larger;
        color: black;
        font-weight: bold;
        text-align: center;
    }

    .form-check-label {
        color: black;
    }

    .SERVICE_STATUS_INPROGRESS, .TASK_STATUS_INPROGRESS, .TASK_STATUS_PLANNED {
        color: white !important;
        background-color: #007bff !important;
    }

    .SERVICE_STATUS_OVERDUE, .TASK_STATUS_OVERDUE {
        color: white !important;
        background-color: #ffc107 !important;
    }

    .SERVICE_STATUS_COMPLETE, .TASK_STATUS_COMPLETE, .SERVICE_STATUS_CLOSE {
        color: white !important;
        background-color: #28a745 !important;
    }

    .SERVICE_STATUS_CANCEL, .TASK_STATUS_CANCEL, .TASK_STATUS_REJECT, .TASK_STATUS_CLOSE {
        background-color: #dc3545 !important;
        color: white !important;
    }

    .dropdown-menu > ul > li > a, .dropdown-menu > li > a {
        padding: 5px 10px !important;
    }
    .nts-d-none {
        display: none;
    }
</style>


<script>
    function onFileUploadSuccess(e) {

        if (e.response.success) {
            $("#NextTaskAttachmentId").val(e.response.fileId);

        }
        else {

        }
        return true;
    }
    function SetTeamOwner() {
        //
        var assignedToDdl = $("#AssignedToTeamUserId").data("kendoDropDownList");

        var link = "/cms/Team/GetTeamOwner?teamId=" + $("#AssignedToTeamId").val();
            $.ajax({
                url: link,
                success: function (data) {
                    assignedToDdl.enable(true);
                    assignedToDdl.value(data);
                }
            });



    }
    function SetNextTeamOwner() {

        var assignedToDdl = $("#NextTaskAssignedToTeamUserId").data("kendoDropDownList");

        var link = "/cms/Team/GetTeamOwner?teamId=" + $("#NextTaskAssignedToTeamId").val();
        $.ajax({
            url: link,
            success: function (data) {
                assignedToDdl.value(data);
            }
        });



    }

    function onTag()
    {
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("TagCategoryByTemplateType", "TagCategory", new { @area = "Cms" })?templateId=@Model.TemplateId&Id=@Model.TaskId&TemplateType=Task';
        win.OpenWindow({ Title: 'Tags', Width: 1200, Height: 600 });
        return false;
    }


    function onLog()
    {
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("GetServiceLogsDetails", "NtsService", new { @area = "Cms" })?ServiceId=@Model.TaskId&templateCode=@Model.TemplateCode&UdfNoteId=@Model.UdfNoteId&TemplateType=Task';
        win.OpenWindow({ Title: 'Logs', Width: 1200, Height: 600 });
        return false;
    }
    function OnViewService(id, pageid, templateCode) {
        var prms = encodeURIComponent('hideStpTaskDetails=true');
        var portalId = "";
        if (window.parent == "" || window.parent == undefined) {
            portalId = $("#GlobalPortalId").val();
        }
        else {
            portalId = window.parent.$("#GlobalPortalId").val();
        }
        var url = '/Cms/Page?lo=Popup&pageType=Service&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId +'&recordId=' + id  + '&prms=' + prms;
        LoadCmsPartialView(url, 'Service', true, 1000, 600, 'Service');
        return false;
    }
    function OnViewTask(id, pageid, tempCode) {
        var portalId = "";
        if (window.parent == "" || window.parent == undefined) {
            portalId = $("#GlobalPortalId").val();
        }
        else {
            portalId = window.parent.$("#GlobalPortalId").val();
        }
        var prms = encodeURIComponent('hideStpTaskDetails=true');
        var url = '/Cms/Page?lo=Popup&pageType=Task&source=View&dataAction=View&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + id + '&prms=' + prms;
        LoadCmsPartialView(url, 'Task', true, 1000, 600, 'Task');
        return false;
    }
    var actionName;
    function htmlDecode(value) {
        return value.replace(/&lt;/g, "<").replace(/&gt;/g, ">");
    }



    function FillSharingCount() {
         var openUrl = "/cms/GetTaskSharedCount?taskId=@Model.TaskId" ;
        $.ajax({
            url: openUrl,
            type: 'GET',
            cache: false,
            success: function (data) {
                $('#sharedCount').html(data);
            },
            error: function (errData) {
                OnError(errData);
            }
        });
    }
    function FillCommentCount() {
        var openUrl = "/cms/GetTaskCommentCount?taskId=@Model.TaskId" ;
        $.ajax({
            url: openUrl,
            type: 'GET',
            cache: false,
            success: function (data) {
                $('#commentCount').html(data);
            },
            error: function (errData) {
                OnError(errData);
            }
        });
    }
     function FillAttachmentCount()
    {
        $.ajax({
            type: "Get",
            url: '/cms/GetTaskAttachmentCount?taskId=@Model.TaskId',
            success: function (data) {
                $("#attchmentCount").html(data);
            },
            dataType: "json",
        });
    }
      function FillNotificationCount()
    {
        $.ajax({
            type: "Get",
            url: '/cms/GetTaskNotificationCount?taskId=@Model.TaskId',
            success: function (data) {
                $("#notificationCount").html(data);
            },
            dataType: "json",
        });
    }
    function SaveAsDraft() {
        if ($("#AssignedToTypeCode").data("kendoDropDownList").value() == "DIRECT_EMAIL") {
            var testEmail = /^[A-Z0-9._%+-]+@@([A-Z0-9-]+\.)+[A-Z]{2,4}$/i;
            if ($("#AssignedToEmail").val() == "") {
                $("#validation-summary-manageform").html("Email Address is required");
                $("#validation-summary-manageform").css("display", "block")
                e.preventDefault();
                return false;
            }
            if (!testEmail.test($("#AssignedToEmail").val())) {
                $("#validation-summary-manageform").html("Assign to email is not valid");
                $("#validation-summary-manageform").css("display", "block")
                e.preventDefault();
                return false;
            }
        }
        $("#TaskStatusCode").val('TASK_STATUS_DRAFT');
        console.log($("#TaskStatusCode"));
        var json = $('#formio-container').html();
        if (json === null || json === '' || json == undefined) {
            $("#Json").val(JSON.stringify({}));
        }
        else {
            $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
        }
        return true;
    }
    
    function Reject() {
        if ('@Model.IsRejectReasonRequired'=='True')
        {
            actionName = "SubmitReject";
            var dialogue = $('#reason').data("kendoDialog");
            dialogue.title('Reject Reason');
            $("#commentReq").html('Reject Reason is required');
            $("#commentReq").hide();
            $("#CommentTemp").val(null);
            dialogue.open();
            return false;
        }
        else
        {
            $("#CommentTemp").val(null);
            return SubmitReject();
        }

    }
    function SubmitReject() {
        $("#TaskStatusCode").val('TASK_STATUS_REJECT');
        $("#RejectionReason").val($("#CommentTemp").val());
        var json = $('#formio-container').html();
        var isValid = json === null || json === '' || frm.checkValidity(frm.submission.data);
        if (true) {
            if (json === null || json === '' || json == undefined) {
                $("#Json").val(JSON.stringify({}));
            }
            else {
                $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
            }
            return true;
        }
        else {
            frm.submit();
        }
       // $("#Json").val(JSON.stringify(frm.submission.data, null, 4));

        return false;
    }
    function SubmitReturn() {
        $("#TaskStatusCode").val('TASK_STATUS_CANCEL');
        $("#IsReturned").val(true);
        var json = $('#formio-container').html();
        var isValid = json === null || json === '' || frm.checkValidity(frm.submission.data);
        if (isValid) {
            if (json === null || json === '' || json == undefined) {
                $("#Json").val(JSON.stringify({}));
            }
            else {
                $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
            }
            return true;
        }
        else {
            frm.submit();
        }
        // $("#Json").val(JSON.stringify(frm.submission.data, null, 4));

        return false;
    }
    function Return() {
        actionName = "SubmitReturn";
        var dialogue = $('#reason').data("kendoDialog");
        dialogue.title('Return Reason');
        $("#commentReq").html('Return Reason is required');
        $("#commentReq").hide();
        $("#CommentTemp").val(null);
        dialogue.open();
        return false;

        //$("#TaskStatusCode").val('TASK_STATUS_CANCEL');
        //$("#IsReturned").val(true);
        //var json = $('#formio-container').html();
        //var isValid = json === null || json === '' || frm.checkValidity(frm.submission.data);
        //if (isValid) {
        //    if (json === null || json === '' || json == undefined) {
        //        $("#Json").val(JSON.stringify({}));
        //    }
        //    else {
        //        $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
        //    }
        //    return true;
        //}
        //else {
        //    frm.submit();
        //}
        //return false;
    }
    function ReOpen() {
        $("#TaskStatusCode").val('TASK_STATUS_INPROGRESS');
        var version = $("#VersionNo").val()+1;
        $("#VersionNo").val(version);
        var json = $('#formio-container').html();
        //var isValid = json === null || jsonModel=== '' || frm.checkValidity(frm.submission.data);

            if (json === null || json === '' || json == undefined) {
                $("#Json").val(JSON.stringify({}));
            }
            else {
                $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
            }
            return true;


    }
      function Complete() {
        if ('@Model.IsCompleteReasonRequired'=='True')
        {
            actionName = "SubmitComplete";
            var dialogue = $('#reason').data("kendoDialog");
            dialogueTaskIdaskIdtitle('Comment');
            $("#commentReq").html('Comment is required');
            $("#commentReq").hide();
            $("#CommentTemp").val(null);
            dialogue.open();
            return false;
        }
        else
        {
            $("#CommentTemp").val(null);
            return SubmitComplete();
        }

    }
    function SubmitComplete() {
        $("#TaskStatusCode").val('TASK_STATUS_COMPLETE');
        $("#CompleteReason").val($("#CommentTemp").val());
        var json = $('#formio-container').html();
        var isValid = json === null || json === '' || frm.checkValidity(frm.submission.data);
        if (isValid) {
            if ('@Model.EnableDynamicStepTaskSelection' == 'True') {
                var win = GetMainWindow();
                win.iframeOpenUrl = '@Url.Action("StepComponent", "Cms", new { @area = "" })?serviceId=@Model.ParentServiceId&taskId=@Model.TaskId';
                win.OpenWindow({ Title: 'Service Step', Width: 800, Height: 500 });
                return false;
            }
            else {
                if (json === null || json === '' || json == undefined) {
                    $("#Json").val(JSON.stringify({}));
                }
                else {
                    $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
                }
                return true;
            }
        }
        else {
            frm.submit();
        }
       // $("#Json").val(JSON.stringify(frm.submission.data, null, 4));

        return false;
    }
     function SaveChanges() {
         $("#TaskStatusCode").val('TASK_STATUS_SAVECHAGES');
        var json = $('#formio-container').html();
        //var isValid = json === null || json === '' || frm.checkValidity(frm.submission.data);
        if (true) {

                if (json === null || json === '' || json == undefined) {
                    $("#Json").val(JSON.stringify({}));
                }
                else {
                    $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
                }
                return true;

        }
        else {
            frm.submit();
        }
       // $("#Json").val(JSON.stringify(frm.submission.data, null, 4));

        return false;
    }
    function FillNextStepId(id) {
        var win = GetMainWindow();
        win.CloseWindow();
        var json = $('#formio-container').html();

        $("#NextStepTaskComponentId").val(id);
        if (json === null || json === '' || json == undefined) {
            $("#Json").val(JSON.stringify({}));
        }
        else {
            $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
        }
        $("#frmManageTask").submit();
        return true;
    }
    function Submit(e) {
        if ($("#AssignedToTypeCode").data("kendoDropDownList").value()=="DIRECT_EMAIL")
        {
            var testEmail = /^[A-Z0-9._%+-]+@@([A-Z0-9-]+\.)+[A-Z]{2,4}$/i;
            if ($("#AssignedToEmail").val() == "")
            {
                $("#validation-summary-manageform").html("Email Address is required");
                $("#validation-summary-manageform").css("display", "block")
                e.preventDefault();
                return false;
            }
            if (!testEmail.test($("#AssignedToEmail").val()))
            {
                $("#validation-summary-manageform").html("Assign to email is not valid");
                $("#validation-summary-manageform").css("display", "block")
                e.preventDefault();
                return false;
            }
        }
        var json = $('#formio-container').html();
        var isValid = json === null || json === '' || frm.checkValidity(frm.submission.data);
        if (isValid || '@Model.ActiveUserType' == '@NtsActiveUserTypeEnum.Owner') {
            if ('@Model.EnablePlanning' == 'True') {
                $("#TaskStatusCode").val('TASK_STATUS_PLANNED');
            }
            else {
                $("#TaskStatusCode").val('TASK_STATUS_INPROGRESS');
            }
            if (json === null || json === '' || json == undefined) {
                $("#Json").val(JSON.stringify({}));
            }
            else {
                $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
            }
            return true;
        }
        else {
            frm.submit();
        }
        //var isValid = frm.checkValidity(frm.submission.data);
        //if (isValid) {
        //    $("#TaskStatusCode").val('TASK_STATUS_INPROGRESS');
        //    $("#Json").val(JSON.stringify(frm.submission.data, null, 4));
        //    return Modelrue;
        //}
        //else {
        //    frm.submit();
        //}
        return false;
    }
    var onAjaxSuccess = function (res) {
        if (res.success) {
            ShowNotification(res.msg, 'success');
            if (res.mode === 'Popup') {
                var win = GetMainWindow();
                var cb = null;
                if (res.cbm !== null && res.cbm !== undefined && res.cbm !== '') {
                    cb = { MethodName: res.cbm, Prms: res.vm };
                }
                win.CloseWindow(cb);
                return false;
            }
            if (res.mode === 'Iframe') {
                if (res.cbm !== null && res.cbm !== undefined && res.cbm !== '') {
                    window.parent[res.cbm](res.vm);
                    return false;
                }
            }
            if (res.mode === 'Div') {
                if (res.cbm !== null && res.cbm !== undefined && res.cbm !== '') {
                    window[res.cbm](res.vm);
                    return false;
                }

            }
             if (res.reload) {
                LoadPageById(res.pageId, res.pageType, res.source, res.dataAction, res.recordId);
            }
            else if (res.ru !== null && res.ru !== '' && res.ru !== undefined && res.ru !== 'undefined') {
                window.location.href = res.ru;
            }
        }
        else {
            ResetDate();
            ShowTaskError(res.error);
        }
    };
    function ShowTaskError(error) {
        $("#validation-summary-manageform").html(error);
        $("#validation-summary-manageform").css("display", "block")
    }


    function myFunction() {
        document.getElementById("myDropdown").classList.toggle("show");
    }



    function onchangetype() {
        /*var assigneeType = $("#AssignedToTypeCode").data("kendoDropDownList").value();*/
        var assigneeTypeDDL = $("#AssignedToTypeCode").data("kendoDropDownList");
        var assigneeType = assigneeTypeDDL.value();
        if (assigneeType == "DIRECT_EMAIL") {
            /*assigneeTypeDDL.enable(false);*/
            assigneeTypeDDL.readonly();
        }
        SetAssignee(assigneeType);

    }
    function onNextchangetype() {
        try {
            var assigneeType = $("#NextTaskAssignedToTypeCode").data("kendoDropDownList").value();
            SetNextAssignee(assigneeType);

        } catch (e) {

        }


    }
    function SetAssignee(assigneeType) {
        if (assigneeType == "TASK_ASSIGN_TO_USER") {
            $("#users").show();
            $("#teams").hide();
            $("#teamusers").hide();
            $("#hm").hide();
            $("#hmlevel").hide();
            $("#directEmail").hide();
        }
        else if (assigneeType == "TASK_ASSIGN_TO_TEAM") {
            $("#users").hide();
            $("#teams").show();
            $("#teamusers").show();
            $("#hm").hide();
            $("#hmlevel").hide();
            $("#directEmail").hide();
        }
        else if (assigneeType == "TASK_ASSIGN_TO_USER_HIERARCHY") {
            $("#users").hide();
            $("#teams").hide();
            $("#teamusers").hide();
            $("#hm").show();
            $("#hmlevel").show();
            $("#directEmail").hide();
        }
        else if (assigneeType == "DIRECT_EMAIL") {
            $("#users").hide();
            $("#teams").hide();
            $("#teamusers").hide();
            $("#hm").hide();
            $("#hmlevel").hide();
            $("#directEmail").show();
        }
        else {
            $("#users").hide();
            $("#teams").hide();
            $("#teamusers").hide();
            $("#hm").hide();
            $("#hmlevel").hide();
        }
    }
    function SetNextAssignee(assigneeType) {
        if (assigneeType == "TASK_ASSIGN_TO_USER") {
            $("#nextusers").show();
            $("#nextteams").hide();
            $("#nextteamusers").hide();
            $("#nexthm").hide();
            $("#nexthmlevel").hide();
        }
        else if (assigneeType == "TASK_ASSIGN_TO_TEAM") {
            $("#nextusers").hide();
            $("#nextteams").show();
            $("#nextteamusers").show();
            $("#nexthm").hide();
            $("#nexthmlevel").hide();
        }
        else if (assigneeType == "TASK_ASSIGN_TO_USER_HIERARCHY") {
            $("#nextusers").hide();
            $("#nextteams").hide();
            $("#nextteamusers").hide();
            $("#nexthm").show();
            $("#nexthmlevel").show();
        }
        else {
            $("#nextusers").hide();
            $("#nextteams").hide();
            $("#nextteamusers").hide();
            $("#nexthm").hide();
            $("#nexthmlevel").hide();
        }
    }
    function PostComment(e)
    {
        //
        //alert($("#comment").val());
        if ($("#comment").val() == "") {
            alert("Please add any Comment ");
        }
        else {
            $.ajax({
                type: "POST",
                url: "/cms/PostTaskComment",
                data: {
                    NtsTaskId: "@Model.TaskId",
                    Comment: $("#comment").val(),
                    CommentToUserId: $("#CommentToUserId").data("kendoDropDownList").value()
                    // FileId: $("#FileId").val(),
                },
                success: function (data) {

                    if (data.success) {
                        ShowNotification("Commented successfully", "success");
                        $("#drpAction").data("kendoDropDownList").value('');
                        $(".action-section").hide();
                        $("#action-add-comment").hide();
                        //var editor = $("#comment").data("kendoEditor");
                        //// set value
                        //editor.value("");
                        $(".richText-editor").text('');
                        $("#CommentToUserId").data("kendoDropDownList").value('');
                        $("#listViewMsg").data("kendoListView").dataSource.read();

                        FillCommentCount();

                    }
                    else {
                        ShowNotification("Please try again!", "error");
                        ShowErrors(data.errors);
                    }
                },
                error: function (err) {

                }

            });
        }
        e.preventDefault();
    }
    function OnActionChange() {
        var code = $("#drpAction").data("kendoDropDownList").value();
        $("#action-add-comment").hide();
        $("#action-complete-task").hide();
        $("#action-change-sla").hide();
        $("#action-close-task").hide();
        $(".action-section").show();
        if (code == "ADD_COMMENT") {
            $(".k-editor-toolbar-wrap").hide();
            $("#action-add-comment").show();
            $(".richText-editor").text('');
           // $('.content1').richText();
        }
        else if (code == "COMPLETE_TASK") {
            $("#action-complete-task").show();
        }
        else if (code == "REOPEN_TASK") {

            var portalId = "";
            if (window.parent == "" || window.parent == undefined) {
                portalId = $("#GlobalPortalId").val();
            }
            else {
                portalId = window.parent.$("#GlobalPortalId").val();
            }
            var url = '/Cms/Page?lo=Popup&pageType=Task&source=Versioning&dataAction=Edit&templateCodes=@Model.TemplateCode&recordId=@Model.TaskId&portalId=' + portalId;
            location.href = url;

           // $("#action-reopen-task").show();
        }
        else if (code == "CHANGE_SLA") {
            $("#action-change-sla").show();
        }
        else if (code == "CLOSE_TASK") {
            $("#action-close-task").show();
        }
        else {
            $(".action-section").hide();
        }
    }

    function Filter() {
        var value = $("#AssignedToHierarchyMasterId").val();
        return {
            Id: value
        }
    }
    function TeamFilter() {
        var value = $("#AssignedToTeamId").val();
        return {
            Id: value
        }
    }
    function NextTeamFilter() {
        var value = $("#NextTaskAssignedToTeamId").val();
        return {
            Id: value
        }
    }

    function OnStartDateDueDateChange() {

        var sd = kendo.toString($("#StartDate").data("kendoDateTimePicker").value(), 'yyyy/MM/dd HH:mm');
        var ed = kendo.toString($("#DueDate").data("kendoDateTimePicker").value(), 'yyyy/MM/dd HH:mm');
        if (new Date(ed) > new Date(sd)) {
            var sec = GetSLAInSeconds(sd, ed);
            $('#TaskSLASeconds').data('durationPicker').setValue(sec);
        }
    }

    function GetSLAInSeconds(startDate, endDate) {
        var query = "startDate=" + startDate + "&endDate=" + endDate;
        var diff = UtilityAjax("GetSLAInSeconds", query);
        return diff;
    }
    function GetAddSeconds(startDate, seconds) {
        var query = "date=" + startDate + "&seconds=" + seconds;
        var diff = UtilityAjax("AddSeconds", query);
        return diff;
    }
   function onclickShare() {

          var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("NtsTaskShared", "Cms", new { @area = "" })?TaskId=@Model.TaskId&IsSharingEnabled=@Model.IsSharingEnabled';
       win.OpenWindow({ Title: 'Share With', Width: 800, Height: 700 });
        return false;
    }
     function onTimeEntry() {

          var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("AddTaskTimeEntry", "Cms", new { @area = "" })?TaskId=@Model.TaskId&assignTo=@Model.AssignedToUserId&serviceId=@Model.ParentServiceId';
         win.OpenWindow({ Title: 'Time Entries', Width: 1200, Height: 700 });
        return false;
    }
    function onPredecessor() {

         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("AddPredecessor", "Cms", new { @area = "" })?TaskId=@Model.TaskId';
        win.OpenWindow({ Title: 'Relationship', Width: 1200, Height: 700 });
        return false;

    }
      function onCommentClick()
    {

           var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("TaskComments", "Cms", new { @area = "" })?taskId=@Model.TaskId&IsAddCommentEnabled=@Model.IsAddCommentEnabled';
          win.OpenWindow({ Title: 'Task Comments', Width: 1200, Height: 800 });
        return false;
    }
      function AddAttachment(e)
{

           var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("AddTaskAttachment", "Cms", new { @area= "" })?TaskId=@Model.TaskId&IsAddAttachmentEnabled=@Model.IsAddAttachmentEnabled';
          win.OpenWindow({ Title: 'Task Attachment', Width: 800, Height: 700 });
        return false;
    }

    function ViewNotification()
    {
        var win = GetMainWindow();
        win.iframeOpenUrl = "/PortalAdmin/NotificationTemplate/NotificationIndex?lo=Popup&refTypeId=" + '@Model.TaskId';
        win.OpenWindow({ Title: 'Notifications', Width: 1200, Height: 700 });
        return false;
    }
    function closeNavMemberGroup()
    {
        if ('@Convert.ToString(Model.LayoutMode)' === 'Popup')
        {
            var win = GetMainWindow();
            win.CloseWindow();
            return false;
        }
        var id = '@Model.Page.Id';
        var type = '@Model.Page.PageType.ToString()';
        var source = '@RequestSourceEnum.Main.ToString()';
        var action = '@DataActionEnum.None.ToString()';
        LoadPageById(id, type, source, action,'','','','','');
    }
     function OnReply(e) {
            var id = '@Model.Page.Id';
            var portalId = '@Model.Page.PortalId';
            var type = '@Model.Page.PageType.ToString()';
            var source = '@RequestSourceEnum.Edit.ToString()';
            var action = '@RequestSourceEnum.Edit.ToString()';
         var templateCodes = '@Model.Page.TemplateCodes';
         if ('@Convert.ToString(Model.ViewMode)' === '@NtsViewTypeEnum.Book.ToString()') {
             var win = GetMainWindow();
             win.iframeOpenUrl = '/Cms/Page?lo=Popup&pageType=' + type + '&source=' + source + '&dataAction=' + action + '&templateCodes=' + templateCodes + '&portalId=' + portalId + '&recordId=@Model.TaskId';
             win.OpenWindow({ Title: 'Manage Task', Width: 1200, Height: 700 });
             return false;
         }
         else {
             LoadPageById(id, type, source, action, '@Model.TaskId', true, 1200, 700, 'Manage Task', '@Model.PopupCallbackMethod', true, templateCodes, portalId);
             return false;
         }
         //LoadPageById(id, type, source, action, '@Model.TaskId', true, 1200, 600, 'Manage Task', '@Model.PopupCallbackMethod', true, templateCodes, portalId);
            return false;
    }

    function OnReasonSave(e) {
        var comment = $("#CommentTemp").val();
        if (comment == null || comment == '') {
            $("#commentReq").show();
            return false;
        }
        else {

            $("#Comment").val(comment);
            $("#frmManageTask").submit();
            window[actionName]();
            var dialogue = $('#reason').data("kendoDialog");
            dialogue.close();
        }
    }
    var tempOwnerId;
    function OnChangeOwner() {
        $('#from-display').hide('slow');
        $('#from-edit').show('slow');
        tempOwnerId=  $("#OwnerUserId").val();
        $("#OwnerUserId").val(null);
        return false;
    }
    function OnChangeOwnerCancel() {
        $('#from-display').show('slow');
        $('#from-edit').hide('slow');
        $("#OwnerUserId").val(tempOwnerId);
        return false;
    }
    function OnChangeOwnerSave() {
        var owner = $("#owner").data("kendoDropDownList");
        var dataItem = owner.dataItem();
        $("#OwnerUserId").val(dataItem.Id);
        $("#o-img").attr('src', '/Cms/document/getimagemongo/' + dataItem.PhotoId);
        $("#o-name").html( dataItem.Name);
        $("#o-email").html( dataItem.Email);
        $('#from-display').show('slow');
        $('#from-edit').hide('slow');
        $('#user-popup-card').data('user-id', dataItem.Id);
        SetOwnerAndRequesterVisibility();
        return false;
    }
    function SetOwnerAndRequesterVisibility() {
        var owner = $("#OwnerUserId").val();
        var requester = $("#RequestedByUserId").val();
        if (owner !== requester) {
            $('#div-requested-by').show('slow');
        }
        else {
            $('#div-requested-by').hide('slow');
        }
        return false;
    }



    function onEmail()
    {
        url = '@Url.Action("NtsEmail", "Cms", new { @area = "" })?refId=@Model.TaskId' + '&refType=@ReferenceTypeEnum.NTS_Task';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Email', Width: 1200, Height: 600 });
    }

    function ViewVersionDetails() {
        var portalId = window.parent.$('#GlobalPortalId').val();
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("NtsVersion", "Cms", new { @area = "" })?recordId=@Model.TaskId&type=' + '@NtsTypeEnum.Task' + '&portalId=' + portalId;
        win.OpenWindow({ Title: 'Version Details', Width: 1200, Height: 600 });
        return false;
    }

     function OnTaskLock()
    {
        var result = "Success";
        $.ajax({
            type: "POST",
            url: "/cms/LockTask?taskId=@Model.TaskId",
             contentType: "application/json; charset=utf-8",
             dataType: "json",
            success: function (data) {
                result = data;
            },
             error: function () { alert('Problem in Locking, Please Contact Administrator'); }
        });
        window.location.reload();
        return false;
    }

    function OnReassignLock(userId)
    {
        var result = "Success";
        $.ajax({
             type: "POST",
            url: "/cms/LockTask?taskId=@Model.TaskId&userId="+userId,
             contentType: "application/json; charset=utf-8",
             dataType: "json",
            success: function (data) {
                result = data;
            },
             error: function () { alert('Problem in Reassign, Please Contact Administrator'); }
        });
        window.location.reload();
        return false;
    }

    function OnTaskRelease()
    {
        var result = "Success";
        $.ajax({
             type: "POST",
            url: "/cms/ReleaseTask?taskId=@Model.TaskId",
             contentType: "application/json; charset=utf-8",
             dataType: "json",
            success: function (data) {
                result = data;
            },
             error: function () { alert('Problem in Reassign, Please Contact Administrator'); }
        });
        window.location.reload();
        return false;
    }
    function StartTask()
    {
        $.ajax({
            type: "POST",
            url: "/cms/StartTask?taskId=@Model.TaskId",
            success: function (data) {

                ShowNotification("Task Started Successfully", "success");
                window.location.href = window.location.href;
                    //$("#btnStart").hide();
                    //$("#drpDiv").show();

            },
            error: function (err) {

            }

        });
        return false;
    }
</script>
<div>
    @if (Model.ViewMode != NtsViewTypeEnum.Book)
    {
        @if (Model.BannerFileId != null || Model.IconFileId != null)
        {
            <div class="row">
                @if (Model.IconFileId != null)
                {
                    <div class="col-md-10" style="padding:0px;">
                        <img class="template-banner" style="height:100px;border-radius:1px;width:100%" src="/cms/Document/GetImageMongo?id=@Model.BannerFileId" />
                        <div class="@(Model.BannerFileId.IsNullOrEmpty()?"nts-banner-text-dark":"nts-banner-text-white")">@Model.TemplateDisplayName</div>
                    </div>
                }
                else
                {
                    <div class="col-md-12" style="padding:0px;">
                        <img class="template-banner" style="height:100px;border-radius:1px;width:100%" src="/cms/Document/GetImageMongo?id=@Model.BannerFileId" />
                        <div class="@(Model.BannerFileId.IsNullOrEmpty()?"nts-banner-text-dark":"nts-banner-text-white")">@Model.TemplateDisplayName</div>
                    </div>
                }
                @if (Model.IconFileId != null)
                {
                    <div class="col-md-2" style="padding:0px;">
                        <img style="height:100px;border-radius:1px;width:100%;" src="/cms/Document/GetImageMongo?id=@Model.IconFileId" />
                    </div>
                }
            </div>
        }
        else
        {
            <div class="col-md-12" style="height:60px;border-radius:1px;width:100%">
                <div class="nts-banner-text-small">@Model.TemplateDisplayName</div>
            </div>
        }
    }

    <form asp-controller="Cms" asp-action="ManageTask" asp-area="" method="post" class="form-parse-date form-horizontal"
          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess" onsubmit="ConvertDate()"
          data-ajax="true" data-ajax-method="POST" id="frmManageTask">
        <div id="ribbon" class="row">
            <div class="ribbon-window-title"></div>
            <div class="ribbon-tab" id="format-tab">

                @if (Model.EnableBackButton && Model.LayoutMode != LayoutModeEnum.Iframe)
                {
                    <div class="ribbon-button ribbon-section" onclick="closeNavMemberGroup();">
                        <div class="ribbon-content">
                            @if (Model.LayoutMode == LayoutModeEnum.Popup)
                            {
                                <div class="back-icon fal fa-times-circle"></div>
                                <div class="text-label">Close</div>
                            }
                            else
                            {
                                <div class="back-icon fal fa-arrow-circle-left"></div>
                                <div class="text-label">@Model.BackButtonText.ToDefaultBackButtonText()</div>
                            }
                        </div>
                    </div>
                }
                @if (Model.IsReplyButtonVisible)
                {
                    <div class="ribbon-button ribbon-section" onclick="OnReply();">
                        <div class="ribbon-content">
                            <div class="reply-icon fa fa-reply"></div>
                            <div class="text-label">Reply</div>
                        </div>
                    </div>
                }
                @if (!Model.IsInEditMode || Model.NumberGenerationType == NumberGenerationTypeEnum.SystemGenerated)
                {
                    <div class="ribbon-section">
                        <div class="ribbon-content">
                            <div class="text-title">@Model.TaskNo</div>
                            <div class="text-label">Task No</div>
                            @Html.HiddenFor(x => x.TaskNo)

                        </div>
                    </div>
                }
                <div class="ribbon-section">
                    <div class="ribbon-content">
                        <div class="text-title @Model.TaskStatusFontCss">@Model.TaskStatusName</div>
                        <div class="text-label">Status</div>
                        @Html.HiddenFor(x => x.TaskStatusCode)
                        @Html.HiddenFor(x => x.IsReturned)
                    </div>
                </div>
                @if (Model.IsLogRecord)
                {
                    <div class="ribbon-section">
                        <div class="ribbon-content">
                            <div class="text-title">@Model.VersionNo</div>
                            <div class="text-label">Version No</div>
                            @Html.HiddenFor(x => x.VersionNo)
                        </div>
                    </div>
                }
                else
                {
                    <div class="ribbon-section ribbon-button" onclick="ViewVersionDetails();">
                        <div class="ribbon-content">
                            <div class="text-title">@Model.VersionNo</div>
                            <div class="text-label">Version No</div>
                            @Html.HiddenFor(x => x.VersionNo)
                        </div>
                    </div>
                }
                @if (!Model.IsInEditMode)
                {

                    <div class="ribbon-section">
                        <div class="ribbon-content">
                            <div class="text-title">@Model.TaskPriorityName</div>
                            <div class="text-label">Priority</div>
                            @Html.HiddenFor(x => x.TaskPriorityId)
                            @Html.HiddenFor(x => x.TaskPriorityCode)
                        </div>
                    </div>
                    <div class="ribbon-section duedate-popup-card  ribbon-button">
                        <div class="ribbon-content">
                            <div class="text-title">@Model.DueDate.ToDefaultDateTimeFormat()</div>
                            <div class="text-label">Plan End Date</div>
                            @Html.HiddenFor(x => x.DueDate)
                            @Html.HiddenFor(x => x.StartDate)
                            @Html.HiddenFor(x => x.TaskSLA)
                        </div>
                    </div>
                    @if (Model.ReminderDate != null)
                    {
                        <div class="ribbon-section">
                            <div class="ribbon-content">
                                <div class="text-title">@Model.ReminderDate.ToDefaultDateTimeFormat()</div>
                                <div class="text-label">Reminder Date</div>
                                @Html.HiddenFor(x => x.ReminderDate)
                            </div>
                        </div>

                    }
                    <div class="ribbon-section ribbon-button" onclick="ViewNotification()">
                        <div class="ribbon-content">
                            <span class="notification-icon far fa-bell"></span>
                            <span class="notification-text" id="notificationCount">0</span>
                            <div class="text-label">Notifications</div>
                        </div>
                    </div>
                    <div class="ribbon-section ribbon-button" onclick="onCommentClick();">
                        <div class="ribbon-content">
                            <span class="icon_comment far fa-comment-alt"></span>
                            <span class="comment-text" id="commentCount">0</span>
                            <div class="text-label">Comment</div>
                        </div>
                    </div>
                    <div class="ribbon-section ribbon-button" onclick="onclickShare();">
                        <div class="ribbon-content">
                            <span class="share-icon far fa-share-alt"></span>
                            <span class="share-text" id="sharedCount">0</span>
                            <div class="text-label">Share</div>
                        </div>
                    </div>
                    <div class="ribbon-section ribbon-button" onclick="onTimeEntry();">
                        <div class="ribbon-content">
                            <span class="share-icon far fa-clock"></span>
                            @*<span class="share-text" id="sharedCount">0</span>*@
                            <div class="text-label" style="margin-top:4px">Time Entries</div>
                        </div>
                    </div>
                    <div class="ribbon-section ribbon-button" onclick="onEmail();">
                        <div class="ribbon-content">
                            <span class="share-icon far fa-envelope-open-text"></span>
                            <span class="share-text" id="emailCount"></span>
                            <div class="text-label" style="margin-top:4px">Email</div>
                        </div>
                    </div>

                }

                <div class="ribbon-section ribbon-button" onclick="AddAttachment();">
                    <div class="ribbon-content">
                        <span class="attachment-icon far fa-paperclip"></span>
                        <span class="attachment-text" id="attchmentCount">0</span>
                        <div class="text-label">Attachment</div>
                    </div>
                </div>
                @if (Model.IsVersioningButtonVisible)
                {
                    <div class="ribbon-section ribbon-button" onclick="onPredecessor();">
                        <div class="ribbon-content">
                            <span class="share-icon far fa-sitemap"></span>
                            @*<span class="share-text" id="sharedCount">0</span>*@
                            <div class="text-label" style="margin-top:4px">Relationship</div>
                        </div>
                    </div>
                }


                <div class="ribbon-section ribbon-button" onclick="onTag();">
                    <div class="ribbon-content">
                        <span class="share-icon far fa-tag"></span>
                        @*<span class="share-text" id="sharedCount"></span>*@
                        <div class="text-label" style="margin-top:4px">Tags</div>
                    </div>
                </div>

                <div class="ribbon-section ribbon-button" onclick="onLog();">
                    <div class="ribbon-content">
                        <span class="share-icon far fa-tasks"></span>
                        @*<span class="share-text" id="sharedCount"></span>*@
                        <div class="text-label" style="margin-top:4px">Log</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="pad-15" style="background-color:#fff;">
            @Html.HiddenFor(x => x.Json)
            @Html.HiddenFor(x => x.DataJson)
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.TaskId)
            @Html.HiddenFor(x => x.TaskTableId)
            @Html.HiddenFor(x => x.UdfNoteTableId)
            @Html.HiddenFor(x => x.TemplateId)
            @Html.HiddenFor(x => x.UdfTemplateId)
            @Html.HiddenFor(x => x.UdfTableMetadataId)
            @Html.HiddenFor(x => x.UdfNoteId)
            @Html.HiddenFor(x => x.TemplateCode)
            @Html.HiddenFor(x => x.PageId)
            @Html.HiddenFor(x => x.DataAction)
            @Html.HiddenFor(x => x.RecordId)
            @Html.HiddenFor(x => x.PortalName)
            @Html.HiddenFor(x => x.CreateReturnType)
            @Html.HiddenFor(x => x.EditReturnType)
            @Html.HiddenFor(x => x.RejectionReason)
            @Html.HiddenFor(x => x.CompleteReason)
            @Html.HiddenFor(x => x.CloseComment)
            @Html.HiddenFor(x => x.TaskSequenceOrder)
            @Html.HiddenFor(x => x.ParentServiceId)
            @Html.HiddenFor(x => x.ParentTaskId)
            @Html.HiddenFor(x => x.ActiveUserType)
            @Html.HiddenFor(x => x.ActiveUserId)
            @Html.HiddenFor(x => x.TableMetadataId)
            @Html.HiddenFor(x => x.RequestedByUserId)
            @Html.HiddenFor(x => x.OwnerUserId)
            @Html.HiddenFor(x => x.LayoutMode)
            @Html.HiddenFor(x => x.ReturnUrl)
            @Html.HiddenFor(x => x.CustomUrl)
            @Html.HiddenFor(x => x.PopupCallbackMethod)
            @Html.HiddenFor(x => x.IsSubjectMandatory)
            @Html.HiddenFor(x => x.IsSubjectUnique)
            @Html.HiddenFor(x => x.AllowPastStartDate)
            @Html.HiddenFor(x => x.TaskTemplateType)
            @Html.HiddenFor(x => x.StepTaskComponentId)
            @Html.HiddenFor(x => x.CreatedBy)
            @Html.HiddenFor(x => x.LastUpdatedBy)
            @Html.HiddenFor(x => x.PlanDate)
            @Html.HiddenFor(x => x.LegalEntityId)
            @Html.HiddenFor(x => x.CompanyId)
            @Html.HiddenFor(x => x.ReferenceType)
            @Html.HiddenFor(x => x.ReferenceId)
            @Html.HiddenFor(x => x.SequenceOrder)
            @Html.HiddenFor(x => x.ParentNoteId)
            @Html.HiddenFor(x => x.ServicePlusId)
            @Html.HiddenFor(x => x.NotePlusId)
            @Html.HiddenFor(x => x.TaskPlusId)
            @Html.HiddenFor(x => x.NextStepTaskComponentId)
            @Html.HiddenFor(x => x.TaskAssignedToTypeId)
            <div id="validation-summary-manageform" class="pt-2 pb-2 error-summary alert alert-danger" asp-validation-summary="All" style="display:none;"></div>
            <div class="row">
                <div class="col-lg-8">
                    @if (Model.IsDraftButtonVisible)
                    {
                        <button type="submit" class="btn btn-info" onclick="return SaveAsDraft();">@Model.SaveAsDraftText.ToDefaultSaveAsDraftButtonText()</button>}
                    @if (Model.IsSubmitButtonVisible)
                    {
                        <button type="submit" class="btn btn-primary" onclick="return Submit(event);">@Model.SubmitButtonText.ToDefaultSubmitButtonText()</button>}
                    @if (Model.IsVersioningButtonVisible)
                    {
                        <button type="submit" class="btn btn-primary" onclick="return Submit(event);">@Model.CompleteButtonText.ToDefaultSubmitButtonText()</button>}
                    @if (Model.IsLockVisible)
                    {

                        <button type="submit" class="btn btn-danger" onclick="return OnTaskLock();">Lock Team Task</button>
                    }
                    @if (Model.IsReleaseVisible)
                    {

                        <button type="submit" class="btn btn-primary" onclick="return OnTaskRelease();">Release Lock</button>
                    }
                    @if (Model.IsTaskTeamOwner)
                    {
                        <div class="btn-group" style="flex-wrap:nowrap;display:inline-block;margin-left:5px;">
                            <button type="button" class="btn btn-primary btn-task dropdown-toggle btn-card" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                Reassign

                            </button>
                            <ul class="dropdown-menu">
                                @{
                                    if (Model.TeamMembers.Any())
                                    {
                                        foreach (var members in Model.TeamMembers)
                                        {
                                            <li onclick="OnReassignLock('@members.Id');"><a style="cursor:pointer; text-align:left;font-size:15px; font-family: Sans-Serif;">@members.Name</a></li>
                                        }
                                    }
                                    else
                                    {
                                        <li><a style="cursor:pointer; text-align:left;font-size:15px; font-family: Sans-Serif;">No Team Members Found</a></li>
                                    }

                                }

                            </ul>
                        </div>

                    }

                </div>
            </div>
            <br />

            <div class="row">
                @if (Model.IsInEditMode)
                {
                    <div class="col-xs-12 col-md-10">
                        @if (Model.NumberGenerationType == NumberGenerationTypeEnum.UserEntry)
                        {
                            <div class="form-group">
                                <label class="col-form-label">
                                    @Model.TaskNo.ToDefaultTaskNumberText()
                                </label>
                                <div>
                                    @*@Html.Kendo().TextBoxFor(x => x.TaskNo).HtmlAttributes(new { @style = "width:100%;" })*@
                                    <input asp-for="TaskNo" type="text" class="form-control" style="width:100%" />
                                </div>
                            </div>
                        }
                        @if (!Model.HideHeader)
                        {
                            <div class="form-group">
                                @if (Model.SubjectText.IsNullOrEmptyOrWhiteSpace())
                                {
                                    <label class="col-form-label">
                                        Subject
                                    </label>
                                }
                                else
                                {
                                    <label class="col-form-label">
                                        @Model.SubjectText
                                    </label>
                                }
                                <div>
                                    @*@Html.Kendo().TextBoxFor(x => x.TaskSubject).HtmlAttributes(new { @style = "width:100%;" })*@
                                    <input asp-for="TaskSubject" type="text" class="form-control" style="width:100%" />
                                </div>
                            </div><div class="form-group">
                                <label class="col-form-label">
                                    @if (Model.DescriptionText.IsNullOrEmptyOrWhiteSpace())
                                    {
                                        <span>Description</span>
                                    }
                                    else
                                    {
                                        <span>@Model.DescriptionText</span>
                                    }

                                    @*<span style="float:right;">
                                            @(Html.Kendo().CheckBox().Name("enableHtml2").HtmlAttributes(new { @class = "enableHtml" }).Label("Enable HTML"))
                                        </span>*@
                                </label>
                                <div>
                                    @*@(Html.Kendo().EditorFor(x => x.TaskDescription).Value(Html.Raw(Model.TaskDescription.HtmlDecode()).ToString())
                                        .HtmlAttributes(new { style = "width: 100%;", aria_label = "editor" })
                                        .StyleSheets(css => css.Add(Url.Content("~/css/editorStyles.css"))
                                        )
                                        .Tools(tools => tools
                                        .Clear()
                                        .Formatting()
                                        .Bold().Italic().Underline().Strikethrough()
                                        .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                                        .InsertUnorderedList().InsertOrderedList()
                                        //.Outdent().Indent()
                                        .CreateLink().Unlink()
                                        //.TableEditing()
                                        .ViewHtml()
                                        .FontName()
                                        .FontSize()
                                        .ForeColor().BackColor()

                                        )
                                                            )*@

                                    <div class="page-wrapper box-content">
                                        <textarea class="content" asp-for="TaskDescription" id="TaskDescription"></textarea>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="div-requested-by" style="display:none;">
                                <label class="col-form-label">
                                    Requested By
                                </label>
                                <div class="alert-light">
                                    <img class="user-photo rounded-circle" src="/Cms/document/getimagemongo/@Model.RequestedByUserPhotoId" onerror="OnPhotoError(this);">
                                    <span class="user-popup-card" data-user-id="@Model.RequestedByUserId">
                                        <span class="pl-2">@Model.RequestedByUserName</span>
                                        <span>&lt;<a>@Model.RequestedByUserEmail</a>&gt;</span>
                                    </span>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-form-label">
                                    From
                                </label>
                                <div class="alert-light" id="from-display">
                                    <img id="o-img" class="user-photo rounded-circle" src="/Cms/document/getimagemongo/@Model.OwnerUserPhotoId" onerror="OnPhotoError(this);">
                                    <span id="user-popup-card" class="user-popup-card" data-user-id="@Model.OwnerUserId">
                                        <span id="o-name" class="pl-2">@Model.OwnerUserName</span>
                                        <span>&lt;<a id="o-email">@Model.OwnerUserEmail</a>&gt;</span>
                                    </span>
                                    <i title="Change Owner" class="pl-2 fa fa-pencil pt-1" style="font-size:22px;cursor:pointer;" onclick="return OnChangeOwner()"></i>
                                </div>
                                <div id="from-edit" class="row no-gutters" style="display:none;">
                                    <div class="col-11">  @await Html.PartialAsync("~/Areas/Core/Views/Shared/_UserDropdown.cshtml", new Tuple<string, string, string, string>(Model.OwnerUserId, "owner", null, "form-control"))</div>
                                    <div class="1">
                                        <i class="fa fa-check-circle" style="font-size:30px;cursor:pointer;padding-left:5px;padding-top:7px;color:green;" title="Save" onclick="return OnChangeOwnerSave()"></i>
                                        <i class="fa fa-times-circle" style="font-size:30px;cursor:pointer;padding-left:5px;padding-top:7px;color:red;" title="Cancel" onclick="return OnChangeOwnerCancel()"></i>
                                    </div>

                                </div>
                            </div>

                            <div class="row">

                                <div class="form-group col-6">
                                    <label class="col-form-label">
                                        Priority
                                    </label>
                                    <div>
                                        @*@(Html.Kendo().DropDownListFor(x => x.TaskPriorityId)
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetLOVIdNameList", "LOV", new { @area = "Cms", lovType = "TASK_PRIORITY" });
                                                });
                                            })
                                            //.Filter(FilterType.Contains)
                                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                            .DataTextField("Name")
                                            .DataValueField("Id")
                                            .HtmlAttributes(new { @class = "form-control", @style = "width:100%;" })
                                                                )*@

                                        <input asp-for="TaskPriorityId" id="TaskPriorityId" class="form-control" style="width: 100%;" />
                                        <script>
                                                    $(document).ready(function(){
                                                        $("#TaskPriorityId").kendoDropDownList({
                                                                    optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                                    dataTextField: "Name",
                                                                    dataValueField: "Id",
			                                                        value: "@Model.TaskPriorityId",
                                                                    autoBind: true,
                                                                    dataSource: {
                                                                        transport: {
                                                                            read: {
                                                                                url: "/Cms/LOV/GetLOVIdNameList?lovType=TASK_PRIORITY",
                                                                            }
                                                                        }
                                                                    }
                                                                });
                                                    });
                                        </script>

                                    </div>
                                </div>
                                <div class="form-group col-6">
                                    <label class="col-form-label">
                                        Assign To Type
                                    </label>
                                    <div>
                                        @*@(Html.Kendo().DropDownListFor(x => x.AssignedToTypeCode)
                                            .DataSource(source =>
                                            {
                                                source.Read(read =>
                                                {
                                                    read.Action("GetLOVIdNameList", "LOV", new { @area = "Cms", lovType = "TASK_ASSIGN_TO_TYPE" });
                                                });
                                            })
                                            //.Filter(FilterType.Contains)
                                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                            .DataTextField("Name")
                                            .DataValueField("Code").Events(e => e.Change("onchangetype"))
                                            .HtmlAttributes(new { @class = "form-control"/*, @style="width:90%;"*/})
                                                                        )*@

                                        <input asp-for="AssignedToTypeCode" id="AssignedToTypeCode" class="form-control" />
                                        <script>
                                                    $(document).ready(function(){
                                                        $("#AssignedToTypeCode").kendoDropDownList({
                                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                                dataTextField: "Name",
                                                                dataValueField: "Code",
			                                                    value: "@Model.AssignedToTypeCode",
                                                                autoBind: true,
                                                            change: onchangetype,
                                                            dataBound: function (e)
                                                            {
                                                                //
                                                                if ('@Model.EnableDirectEmailAssignee' != 'True' && '@Model.EnableDirectEmailAssignee' != 'true')
                                                                {
                                                                    var ddl = $("#AssignedToTypeCode").data("kendoDropDownList");
                                                                    var oldData = ddl.dataSource.data();
                                                                    ddl.dataSource.remove(oldData[3]);
                                                                }
                                                                onchangetype();
                                                            },
                                                                dataSource: {
                                                                   transport: {
                                                                       read: {
                                                                           url: "/Cms/LOV/GetLOVIdNameList?lovType=TASK_ASSIGN_TO_TYPE",
                                                                       }
                                                                   }
                                                               }
                                                        });
                                                    });
                                        </script>
                                    </div>
                                </div>
                            </div>
                            <div class="form-group" id="directEmail" style="display:none">
                                <label class="col-form-label">
                                    Assign To
                                </label>
                                <div>

                                    <input asp-for="AssignedToEmail" id="AssignedToEmail" type="email" class="form-control" />


                                </div>
                            </div>
                            <div class="form-group" id="users" style="display:none">
                                <label class="col-form-label">
                                    Assign To
                                </label>
                                <div>
                                    @*@(Html.Kendo().DropDownListFor(x => x.AssignedToUserId)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("ReadUserData", "User", new { @area = "Cms" });
                                            });
                                        })
                                        .Filter(FilterType.Contains)
                                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        .HtmlAttributes(new { @class = "form-control"/*, @style = "width:90%;"*/ })
                                                                    )*@

                                    <input asp-for="AssignedToUserId" id="AssignedToUserId" class="form-control" />
                                    <script>
                                        $(document).ready(function(){
                                            $("#AssignedToUserId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.AssignedToUserId",
                                                filter: "contains",
                                                dataSource: {
                                                    transport: {
                                                        read: {
                                                            url: "/Cms/User/ReadUserData",
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                    </script>

                                </div>
                            </div>
                            <div class="form-group" id="teams" style="display:none">
                                <label class="col-form-label">
                                    Assign To Team
                                </label>
                                <div>
                                    @*@(Html.Kendo().DropDownListFor(x => x.AssignedToTeamId)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("ReadTeamData", "ProcessDesign", new { @area = "Cms" });
                                            });
                                        })
                                        .Filter(FilterType.Contains)
                                         .Events(e => e.Change("SetTeamOwner"))
                                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        .HtmlAttributes(new { @class = "form-control", @style = "width:100%;" })
                                                                    )*@

                                    <input asp-for="AssignedToTeamId" id="AssignedToTeamId" class="form-control" style="width:100%;" />
                                    <script>
                                        $(document).ready(function(){
                                            $("#AssignedToTeamId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.AssignedToTeamId",
                                                filter: "contains",
                                                change: SetTeamOwner,
                                                dataSource: {
                                                    transport: {
                                                        read: {
                                                            url: "/Cms/ProcessDesign/ReadTeamData",
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                    </script>

                                </div>
                            </div>
                            <div class="form-group" id="teamusers" style="display:none">
                                <label class="col-form-label">
                                    Assign To Team User
                                </label>
                                <div>
                                    @*@(Html.Kendo().DropDownListFor(x => x.AssignedToTeamUserId)
                                           .DataSource(source =>
                                           {
                                               source.Read(read =>
                                               {
                                                   read.Action("ReadUserTeamData", "User", new { @area = "Cms" }).Data("TeamFilter");
                                               }).ServerFiltering(true);
                                           })
                                           .Filter(FilterType.Contains)
                                           .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                           .DataTextField("Name")
                                           .DataValueField("Id")
                                           .HtmlAttributes(new { @class = "form-control", @style = "width:100%;" })
                                           .Enable(false)
                                           .AutoBind(false)
                                           .CascadeFrom("AssignedToTeamId")
                                        )*@
                                    <input asp-for="AssignedToTeamUserId" id="AssignedToTeamUserId" class="form-control" style="width:100%;" />
                                    <script>
                                        /*$(document).ready(function(){*/
                                            $("#AssignedToTeamUserId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.AssignedToTeamUserId",
                                                filter: "contains",
                                                autoBind: false,
                                                enable: false,
                                                cascadeFrom: "AssignedToTeamId",
                                                dataSource: {
                                                    transport: {
                                                        read: {
                                                            dataType: "json",
                                                            url: "/Cms/User/ReadUserTeamData",
                                                            data: TeamFilter
                                                        }
                                                    }
                                                }
                                            });
                                        /*});*/
                                    </script>

                                    @*@await Html.PartialAsync("~/Areas/Core/Views/Shared/_UserDropdown.cshtml", new Tuple<string, string, string, string>(Model.AssignedToTeamUserId, nameof(Model.AssignedToTeamUserId), null, "form-control"))*@

                                </div>
                            </div>
                            <div class="form-group" id="hm" style="display:none">
                                <label class="col-form-label">
                                    Assign To Hierarchy
                                </label>
                                <div>
                                    @*@(Html.Kendo().DropDownListFor(x => x.AssignedToHierarchyMasterId)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("ReadHierarchyMasterData", "ProcessDesign", new { @area = "Cms" });
                                            });
                                        })
                                        .Filter(FilterType.Contains)
                                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        .HtmlAttributes(new { @class = "form-control", @style = "width:100%;" })
                                                                    )*@

                                    <input asp-for="AssignedToHierarchyMasterId" id="AssignedToHierarchyMasterId" class="form-control" style="width:100%;" />
                                    <script>
                                        $(document).ready(function(){
                                        $("#AssignedToHierarchyMasterId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.AssignedToHierarchyMasterId",
                                                filter: "contains",
                                                dataSource: {
                                                    transport: {
                                                        read: {
                                                            url: "/Cms/ProcessDesign/ReadHierarchyMasterData",
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                    </script>
                                </div>
                            </div>
                            <div class="form-group" id="hmlevel" style="display:none">
                                <label class="col-form-label">
                                    Assign To Hierarchy Level
                                </label>
                                <div>
                                    @*@(Html.Kendo().DropDownListFor(x => x.AssignedToHierarchyMasterLevelId)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("ReadHierarchyMasterLevelDataById", "ProcessDesign", new { @area = "Cms" })
                                                .Data("Filter");
                                            })
                                        .ServerFiltering(true);
                                        })
                                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("ID")
                                        .HtmlAttributes(new { style = "width:100%" })
                                        .Enable(false)
                                        .AutoBind(false)
                                        .CascadeFrom("AssignedToHierarchyMasterId")
                                                                    )*@
                                    <input asp-for="AssignedToHierarchyMasterLevelId" id="AssignedToHierarchyMasterLevelId" class="form-control" style="width:100%;" />
                                    <script>
                                        $(document).ready(function(){
                                        $("#AssignedToHierarchyMasterLevelId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.AssignedToHierarchyMasterLevelId",
                                                filter: "contains",
                                                autoBind: false,
                                                enable: false,
                                            cascadeFrom: "AssignedToHierarchyMasterId",
                                            dataSource: {
                                                serverFiltering: true,
                                                    transport: {
                                                        read: {
                                                            dataType: "json",
                                                            url: "/Cms/ProcessDesign/ReadHierarchyMasterLevelDataById",
                                                            data: Filter
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                    </script>
                                </div>
                            </div>
                            @if (!Model.HideStartDate)
                            {
                                <div class="row">
                                    <div class="form-group col-6">
                                        <label class="col-form-label">
                                            Plan Start Date
                                        </label>
                                        <div>
                                            @*@Html.Kendo().DateTimePickerFor(x => x.StartDate).Format(ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormat).HtmlAttributes(new { @style = "width:100%;" }).Events(e => e.Change("OnStartDateDueDateChange"))*@
                                            <input asp-for="StartDate" id="StartDate" style="width:100%" />
                                        </div>
                                    </div>
                                    <div class="form-group col-6">
                                        <label class="col-form-label">
                                            Plan End Date
                                        </label>
                                        <div>
                                            @*@Html.Kendo().DateTimePickerFor(x => x.DueDate).Format(ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormat).HtmlAttributes(new { @style = "width:100%;" }).Events(e => e.Change("OnStartDateDueDateChange"))*@
                                            <input asp-for="DueDate" id="DueDate" style="width:100%" />
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="form-group col-6">
                                        <label class="col-form-label">
                                            SLA
                                        </label>
                                        <div>
                                            @*@Html.Kendo().TextBoxFor(x => x.TaskSLASeconds).HtmlAttributes(new { @style = "width:100%;" })*@
                                            <input asp-for="TaskSLASeconds" type="text" class="form-control" style="width:100%" />

                                        </div>
                                    </div>
                                    <div class="form-group col-6">
                                        <label class="col-form-label">
                                            Reminder Date
                                        </label>
                                        <div>
                                            @*@Html.Kendo().DateTimePickerFor(x => x.ReminderDate).Format(ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormat).HtmlAttributes(new { @style = "width:100%;" })*@
                                            <input asp-for="ReminderDate" id="ReminderDate" style="width:100%" />
                                        </div>
                                    </div>
                                </div>
                            }
                            else
                            {
                                @Html.HiddenFor(x => x.StartDate)
                                @Html.HiddenFor(x => x.DueDate)
                                @Html.HiddenFor(x => x.SLA)
                                @*@Html.HiddenFor(x => x.TaskSLASeconds)*@
                                @Html.HiddenFor(x => x.ReminderDate)
                            }
                        }
                        else
                        {
                            @Html.HiddenFor(x => x.Subject)
                            @Html.HiddenFor(x => x.Description)
                            @Html.HiddenFor(x => x.RequestedByUserId)
                            @Html.HiddenFor(x => x.OwnerUserId)
                            @Html.HiddenFor(x => x.AssignedToTypeCode)
                            @Html.HiddenFor(x => x.AssignedToUserId)
                            @Html.HiddenFor(x => x.AssignedToTeamId)
                            @Html.HiddenFor(x => x.AssignedToTeamUserId)
                            @Html.HiddenFor(x => x.AssignedToHierarchyMasterId)
                            @Html.HiddenFor(x => x.AssignedToHierarchyMasterLevelId)
                            @Html.HiddenFor(x => x.TaskPriorityId)
                            @Html.HiddenFor(x => x.StartDate)
                            @Html.HiddenFor(x => x.DueDate)
                            @Html.HiddenFor(x => x.SLA)
                            @Html.HiddenFor(x => x.ReminderDate)}
                        <div id="formio-container"></div>
                    </div> }

                else
                {

                    <div class="col-xs-12 col-sm-8">
                        @{ var list = new List<SelectListItem>();
                            if (Model.IsAddCommentEnabled)
                            {
                                list.Add(new SelectListItem()
                                {
                                    Text = "Add Comment",
                                    Value = "ADD_COMMENT",

                                });
                            }
                            if (Model.IsCloseButtonVisible)
                            {
                                list.Add(new SelectListItem()
                                {
                                    Text = "Close Task",
                                    Value = "CLOSE_TASK"
                                });
                            }
                            if (Model.IsCompleteButtonVisible)
                            {
                                list.Add(new SelectListItem()
                                {
                                    Text = "Complete/Reject Task",
                                    Value = "COMPLETE_TASK",
                                });
                            } }
                        @if (Model.DataAction == DataActionEnum.Edit)
                        {
                            <div class="col-xs-12 pb-3">
                                @*@(Html.Kendo().DropDownList().Name("drpAction")
                                    .Events(e => e.Change("OnActionChange"))
                                      .Filter(FilterType.Contains)
                                       .OptionLabel("Select a response")

                                             .HtmlAttributes(new { @class = "drp-btn" })
                                              .BindTo(list)

                                                )*@


                                <button id="btnStart" class="btn btn-success" onclick="return StartTask();" style="display:none;">Start Task</button>


                                <div id="drpDiv"><input id="drpAction" class="drp-btn" /></div>
                                <script>
                                $("#drpAction").kendoDropDownList({
                                    optionLabel: "Select a response",
                                    filter: "contains",
                                    dataTextField: "Text",
                                    dataValueField: "Value",
                                    change: OnActionChange,
                                    dataSource: [
                                        @if (Model.IsAddCommentEnabled)
                                            {
                                                @:{ Text: "Add Comment", Value: "ADD_COMMENT" },
                                            }
                                        @if (Model.IsCloseButtonVisible)
                                            {
                                                @:{ Text: "Close Task", Value: "CLOSE_TASK"},
                                            }
                                        @if (Model.IsCompleteButtonVisible)
                                            {
                                                @:{ Text: "Save/Complete/Reject Task", Value: "COMPLETE_TASK" },
                                            }
                                         @if (Model.IsReOpenButtonVisible)
                                            {
                                                @:{ Text: "Re Open Task", Value: "REOPEN_TASK"},
                                            }
                                        ],

                                });

                                </script>
                            </div>
                            <div class="col-xs-12 action-section mb-2" style="display:none;">
                                <div id="action-add-comment" class="col-xs-12" style="display:none;">
                                    <div class="form-group">
                                        <label class="col-form-label">
                                            Comment
                                            @*<span style="float:right;">
                                                    @(Html.Kendo().CheckBox().Name("enableHtml3").HtmlAttributes(new { @class = "enableHtml" }).Label("Enable HTML"))

                                                </span>*@
                                        </label>

                                        <div>

                                            @*@(Html.Kendo().Editor().Name("comment")
                                                    .HtmlAttributes(new { @class = "add-comment-editor", aria_label = "editor" })
                                                    .StyleSheets(css => css.Add(Url.Content("~/css/editorStyles.css"))
                                                    )
                                                       .Tools(tools => tools
                                                .Clear()
                                                .Formatting()
                                                .Bold().Italic().Underline().Strikethrough()
                                                .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                                                .InsertUnorderedList().InsertOrderedList()
                                                //.Outdent().Indent()
                                                .CreateLink().Unlink()
                                                //.TableEditing()
                                                .ViewHtml()
                                                .FontName()
                                                .FontSize()
                                                .ForeColor().BackColor()

                                                )
                                                                    )*@

                                            <div class="page-wrapper box-content">
                                                <textarea class="content1" id="comment"></textarea>
                                            </div>

                                        </div>
                                        <div class="pt-2">
                                            @*@(Html.Kendo().DropDownList().Name("CommentToUserId")
                                                .OptionLabel("All")
                                                .Filter(FilterType.Contains)
                                                .DataTextField("Name")
                                                .DataValueField("Id")
                                                .Height(400)


                                                .HtmlAttributes(new { @class = "form-control" })
                                                .AutoBind(true)
                                                .DataSource(source =>
                                                {

                                                    source.Read(read =>
                                                    {
                                                        read.Action("GetTaskSharedUsersIdNameList", "NtsTask", new { @area = "Cms", taskId = Model.TaskId });
                                                        ///read.Action("GetUsersIdNameList", "User", new { @area = "Cms" });
                                                        // .Data("Filter");
                                                    });

                                                })

                                                                        )*@

                                            <input id="CommentToUserId" class="form-control" />
                                            <script>
                                                $(document).ready(function () {
                                                    $("#CommentToUserId").kendoDropDownList({
                                                        optionLabel: "All",
                                                        dataTextField: "Name",
                                                        dataValueField: "Id",
                                                        filter: "contains",
                                                        height: 400,
                                                        autoBind: true,
                                                        dataSource: {
                                                            transport: {
                                                                read: {
                                                                    url: "/Cms/NtsTask/GetTaskSharedUsersIdNameList?taskId=@Model.TaskId",
                                                                }
                                                            }
                                                        }
                                                    });
                                                });
                                            $(".content1").richText();
                                            </script>
                                        </div>
                                    </div>
                                    <button class="btn post-btn" onclick="PostComment(event)">Add Comment</button>
                                </div>
                                <div id="action-complete-task" class="col-xs-12" style="display:none;">
                                    <div id="formio-container"></div>
                                    <div class="pt-4">
                                        @if (Model.EnableChangingNextTaskAssignee)
                                        {
                                            <div class="col-xs-12 col-md-10">
                                                <div class="form-group">
                                                    <label class="col-form-label">
                                                        Assign To Type
                                                    </label>
                                                    <div>
                                                        @*@(Html.Kendo().DropDownListFor(x => x.NextTaskAssignedToTypeCode)
                                                             .DataSource(source =>
                                                             {
                                                                 source.Read(read =>
                                                                 {
                                                                     read.Action("GetLOVIdNameList", "LOV", new { @area = "Cms", lovType = "TASK_ASSIGN_TO_TYPE" });
                                                                 });
                                                             })
                                                             //.Filter(FilterType.Contains)
                                                             .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                             .DataTextField("Name")
                                                             .DataValueField("Code").Events(e => e.Change("onNextchangetype"))
                                                            // .HtmlAttributes(new { @class = "form-control"/*, @style="width:90%;"*/})
                                                            .HtmlAttributes(Model.DisableNextTaskTeamChange == true ? (object)new { @readonly = "readonly", @class = "form-control" } : new { @class = "form-control" })                          )*@


                                                        <input asp-for="NextTaskAssignedToTypeCode" id="NextTaskAssignedToTypeCode" class="form-control" />
                                                        <script>
                                        $(document).ready(function(){
                                            $("#NextTaskAssignedToTypeCode").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Code",
                                                value: "@Model.NextTaskAssignedToTypeCode",
                                                filter: "contains",
                                                change: onNextchangetype,
                                                dataSource: {
                                                    transport: {
                                                        read: {
                                                            url: "/Cms/LOV/GetLOVIdNameList?lovType=TASK_ASSIGN_TO_TYPE",
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                                        </script>

                                                        @Html.HiddenFor(x => x.NextTaskAssignedToTypeId)
                                                    </div>
                                                </div>

                                                <div class="form-group" id="nextusers" style="display:none">
                                                    <label class="col-form-label">
                                                        Assign To
                                                    </label>
                                                    <div>
                                                        @*@(Html.Kendo().DropDownListFor(x => x.NextTaskAssignedToUserId)
                                                            .DataSource(source =>
                                                            {
                                                                source.Read(read =>
                                                                {
                                                                    read.Action("ReadUserData", "User", new { @area = "Cms" });
                                                                });
                                                            })
                                                            .Filter(FilterType.Contains)
                                                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                            .DataTextField("Name")
                                                            .DataValueField("Id")
                                                            .HtmlAttributes(new { @class = "form-control"/*, @style = "width:90%;"*/ })
                                                                                        )*@

                                                        <input asp-for="NextTaskAssignedToUserId" id="NextTaskAssignedToUserId" class="form-control" />
                                                        <script>
                                        $(document).ready(function(){
                                            $("#NextTaskAssignedToUserId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.NextTaskAssignedToUserId",
                                                filter: "contains",
                                                dataSource: {
                                                    transport: {
                                                        read: {
                                                            url: "/Cms/User/ReadUserData",
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                                        </script>

                                                    </div>
                                                </div>
                                                <div class="form-group" id="nextteams" style="display:none">
                                                    <label class="col-form-label">
                                                        Assign To Team
                                                    </label>
                                                    <div>
                                                        @*@(Html.Kendo().DropDownListFor(x => x.NextTaskAssignedToTeamId)
                                                            .DataSource(source =>
                                                            {
                                                                source.Read(read =>
                                                                {
                                                                    read.Action("ReadTeamData", "ProcessDesign", new { @area = "Cms" });
                                                                });
                                                            })
                                                            .Filter(FilterType.Contains)
                                                             .Events(e => e.Change("SetNextTeamOwner"))
                                                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                            .DataTextField("Name")
                                                            .DataValueField("Id")
                                                              //.HtmlAttributes(new { @class = "form-control", @style = "width:100%;" })
                                                              .HtmlAttributes(Model.DisableNextTaskTeamChange == true ? (object)new { @readonly = "readonly", @class = "form-control" } : new { @class = "form-control" })
                                                                                        )*@

                                                        <input asp-for="NextTaskAssignedToTeamId" id="NextTaskAssignedToTeamId" class="form-control" />
                                                        <script>
                                        $(document).ready(function(){
                                            $("#NextTaskAssignedToTeamId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.NextTaskAssignedToTeamId",
                                                filter: "contains",
                                                change: SetNextTeamOwner,
                                                dataSource: {
                                                    transport: {
                                                        read: {
                                                            url: "/Cms/ProcessDesign/ReadTeamData",
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                                        </script>
                                                    </div>
                                                </div>
                                                <div class="form-group" id="nextteamusers" style="display:none">
                                                    <label class="col-form-label">
                                                        Assign To Team User
                                                    </label>
                                                    <div>
                                                        @*@(Html.Kendo().DropDownListFor(x => x.NextTaskAssignedToTeamUserId)
                                                               .DataSource(source =>
                                                               {
                                                                   source.Read(read =>
                                                                   {
                                                                       read.Action("ReadUserTeamData", "User", new { @area = "Cms" }).Data("NextTeamFilter");
                                                                   }).ServerFiltering(true);
                                                               })
                                                               .Filter(FilterType.Contains)
                                                               .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                               .DataTextField("Name")
                                                               .DataValueField("Id")
                                                               .HtmlAttributes(new { @class = "form-control", @style = "width:100%;" })
                                                               .Enable(false)
                                                               .AutoBind(false)
                                                               .CascadeFrom("NextTaskAssignedToTeamId")
                                                            )*@
                                                        @*@await Html.PartialAsync("~/Areas/Core/Views/Shared/_UserDropdown.cshtml", new Tuple<string, string, string, string>(Model.AssignedToTeamUserId, nameof(Model.AssignedToTeamUserId), null, "form-control"))*@

                                                        <input asp-for="NextTaskAssignedToTeamUserId" id="NextTaskAssignedToTeamUserId" class="form-control" />
                                                        <script>
                                        $(document).ready(function(){
                                            $("#NextTaskAssignedToTeamUserId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.NextTaskAssignedToTeamUserId",
                                                filter: "contains",
                                                autoBind: false,
                                                enable: false,
                                                cascadeFrom: "NextTaskAssignedToTeamId",
                                                dataSource: {
                                                    serverFiltering: true,
                                                    transport: {
                                                        read: {
                                                            dataType: "json",
                                                            url: "/Cms/User/ReadUserTeamData",
                                                            data: NextTeamFilter
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                                        </script>
                                                    </div>
                                                </div>
                                                <div class="form-group" id="nexthm" style="display:none">
                                                    <label class="col-form-label">
                                                        Assign To Hierarchy
                                                    </label>
                                                    <div>
                                                        @*@(Html.Kendo().DropDownListFor(x => x.NextTaskAssignedToHierarchyMasterId)
                                                            .DataSource(source =>
                                                            {
                                                                source.Read(read =>
                                                                {
                                                                    read.Action("ReadHierarchyMasterData", "ProcessDesign", new { @area = "Cms" });
                                                                });
                                                            })
                                                            .Filter(FilterType.Contains)
                                                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                            .DataTextField("Name")
                                                            .DataValueField("Id")
                                                            .HtmlAttributes(new { @class = "form-control", @style = "width:100%;" })
                                                                                        )*@

                                                        <input asp-for="NextTaskAssignedToHierarchyMasterId" id="NextTaskAssignedToHierarchyMasterId" class="form-control" />
                                                        <script>
                                        $(document).ready(function(){
                                            $("#NextTaskAssignedToHierarchyMasterId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "Id",
                                                value: "@Model.NextTaskAssignedToHierarchyMasterId",
                                                filter: "contains",
                                                dataSource: {
                                                    serverFiltering: true,
                                                    transport: {
                                                        read: {
                                                            url: "/Cms/ProcessDesign/ReadHierarchyMasterData",
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                                        </script>
                                                    </div>
                                                </div>
                                                <div class="form-group" id="nexthmlevel" style="display:none">
                                                    <label class="col-form-label">
                                                        Assign To Hierarchy Level
                                                    </label>
                                                    <div>
                                                        @*@(Html.Kendo().DropDownListFor(x => x.NextTaskAssignedToHierarchyMasterLevelId)
                                                            .DataSource(source =>
                                                            {
                                                                source.Read(read =>
                                                                {
                                                                    read.Action("ReadHierarchyMasterLevelDataById", "ProcessDesign", new { @area = "Cms" })
                                                                    .Data("Filter");
                                                                })
                                                            .ServerFiltering(true);
                                                            })
                                                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                            .DataTextField("Name")
                                                            .DataValueField("ID")
                                                            .HtmlAttributes(new { style = "width:100%" })
                                                            .Enable(false)
                                                            .AutoBind(false)
                                                            .CascadeFrom("NextTaskAssignedToHierarchyMasterId")
                                                                                        )*@

                                                        <input asp-for="NextTaskAssignedToHierarchyMasterLevelId" id="NextTaskAssignedToHierarchyMasterLevelId" class="form-control" />
                                                        <script>
                                        $(document).ready(function(){
                                            $("#NextTaskAssignedToHierarchyMasterLevelId").kendoDropDownList({
                                                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                                                dataTextField: "Name",
                                                dataValueField: "ID",
                                                value: "@Model.NextTaskAssignedToHierarchyMasterLevelId",
                                                filter: "contains",
                                                autoBind: false,
                                                enable: false,
                                                cascadeFrom: "NextTaskAssignedToHierarchyMasterId",
                                                dataSource: {
                                                    serverFiltering: true,
                                                    transport: {
                                                        read: {
                                                            dataType: "json",
                                                            url: "/Cms/ProcessDesign/ReadHierarchyMasterLevelDataById",
                                                            data: Filter
                                                        }
                                                    }
                                                }
                                            });
                                        });
                                                        </script>
                                                    </div>
                                                </div>
                                                @if (Model.EnableNextTaskAttachment)
                                                {
                                                    <div class="form-group">
                                                        <label class="col-form-label">
                                                            Supporting Document
                                                        </label>
                                                        <div>
                                                            @*@(Html.Kendo().Upload().Multiple(false)
                                                                    .Name("files")
                                                                    .Async(a => a
                                                                    .Save("SaveFile", "Document", new { @area = "cms" })
                                                                    .AutoUpload(true)
                                                                    )
                                                                    .Events(e => e.Success("onFileUploadSuccess")
                                                                    )
                                                                .HtmlAttributes(new { @class = "hr-xx-large" })
                                                                )*@


                                                            @*<div class="row">
                                                                <div class="col">
                                                                    <div id="iconFile" class="dm-uploader">
                                                                        <h6 class=" text-muted">Drag &amp; drop files here</h6>

                                                                        <div class="btn btn-primary btn-block ">
                                                                            <span>Open the file Browser</span>
                                                                            <input type="file" title='Click to add Files' />
                                                                        </div>
                                                                    </div>

                                                                </div>*@
                                                            @*if multiple use this*@

                                                            @*<div class="col">
                                                                    <div class="card h-100">
                                                                        <div class="card-header">
                                                                            File List
                                                                        </div>
                                                                        <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                                                                            <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                                                                        </ul>
                                                                    </div>
                                                                </div>*@
                                                            @*if multiple use this*@
                                                            @*</div>*@

                                                            @{
                                                                await Html.RenderPartialAsync("~/Areas/Core/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.NextTaskAttachmentId), Value = Model.NextTaskAttachmentId });
                                                            }

                                                            @Html.HiddenFor(x => x.NextTaskAttachmentId)
                                                        </div>
                                                    </div>
                                                }
                                            </div>
                                        }
                                        @if (Model.IsSaveChangesVisible)
                                        {
                                            <button type="submit" class="btn btn-success" onclick="return SaveChanges();">Save Changes</button>}
                                        @if (Model.IsCompleteButtonVisible)
                                        {
                                            <button type="submit" class="btn btn-success" onclick="return Complete();">@Model.CompleteButtonText.ToDefaultCompleteButtonText()</button>}

                                        @if (Model.IsRejectButtonVisible)
                                        {
                                            <button type="submit" class="btn btn-danger" onclick="return Reject();">@Model.RejectButtonText.ToDefaultRejectButtonText()</button>}
                                        @if (Model.EnableReturnTask)
                                        {
                                            <button type="submit" class="btn btn-danger" onclick="return Return();">@Model.ReturnTaskButtonText.ToDefaultReturnButtonText()</button>}
                                    </div>
                                </div>
                                <div id="action-reopen-task" class="col-xs-12" style="display:none;">
                                    @if (Model.IsReOpenButtonVisible)
                                    {
                                        <button type="submit" class="btn btn-danger" onclick="return ReOpen();">Re Open</button>
                                    }
                                </div>
                                <div id="action-change-sla" class="col-xs-12" style="display:none;">
                                    Request SLA
                                </div>
                                <div id="action-close-task" class="col-xs-12" style="display:none;">
                                    <div class="form-group">
                                        <label class="col-form-label">
                                            Rating
                                        </label>
                                        <div>
                                            @*@(Html.Kendo().Rating()
                                                .Name("closeRating")
                                                .Min(1)
                                                .Max(5)
                                                .Precision("half")
                                                    )*@

                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <label class="col-form-label">
                                            Comments
                                            @*<span style="float:right;">
                                                    @(Html.Kendo().CheckBox().Name("enableHtml2").HtmlAttributes(new { @class = "enableHtml" }).Label("Enable HTML"))

                                                </span>*@
                                        </label>

                                        <div>

                                            @*@(Html.Kendo().Editor().Name("ratingComment")
                                                    .HtmlAttributes(new { @class = "add-comment-editor", aria_label = "editor" })
                                                    .StyleSheets(css => css.Add(Url.Content("~/css/editorStyles.css"))
                                                    )
                                                       .Tools(tools => tools
                                                .Clear()
                                                .Formatting()
                                                .Bold().Italic().Underline().Strikethrough()
                                                .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                                                .InsertUnorderedList().InsertOrderedList()
                                                //.Outdent().Indent()
                                                .CreateLink().Unlink()
                                                //.TableEditing()
                                                .ViewHtml()
                                                .FontName()
                                                .FontSize()
                                                .ForeColor().BackColor()

                                                )
                                                                    )*@

                                            <div class="page-wrapper box-content">
                                                <textarea class="content" id="ratingComment"></textarea>
                                            </div>

                                        </div>
                                    </div>
                                    <button class="btn btn-dark">Close Task</button>
                                </div>
                            </div>}

                        <div class="div-readonly">
                            <strong>From:</strong>
                            <span class="pl-1 user-popup-card" data-user-id="@Model.OwnerUserId">
                                <span>
                                    @Model.OwnerUserName
                                </span>
                                <a>&lt;@Model.OwnerUserEmail&gt;</a>
                            </span>
                        </div>
                        <div class="div-readonly">
                            <strong>Sent:</strong>
                            <span class="pl-1">
                                @Model.SubmittedDate.Humanize()
                            </span>
                        </div>
                        <div class="div-readonly">
                            <strong>To:</strong>
                            <span class="pl-1 user-popup-card" data-user-id="@Model.AssignedToUserId">
                                <span>
                                    @Model.AssignedToUserName
                                </span>
                                <a>&lt;@Model.AssignedToUserEmail&gt;</a>
                            </span>
                        </div>
                        @if (Model.SharedList != null && Model.SharedList.Count() > 0)
                        {
                            <div class="div-readonly">
                                <strong>Cc:</strong>


                                @foreach (var item in Model.SharedList)
                                {
                                    <span class="pl-1  user-popup-card" data-user-id="@item.Id">
                                        <span>@item.UserName</span><a>&lt;@item.Email&gt;;</a>
                                    </span>}
                            </div>}
                        <div class="div-readonly">
                            <strong>Subject:</strong>
                            <span class="pl-1">
                                @Model.TaskSubject
                            </span>
                        </div>
                        <div class="div-readonly">
                            <span class="pl-1">
                                @Html.Raw(Model.TaskDescription.HtmlDecode())
                            </span>
                        </div>
                        <hr style="height:1px;background-color: silver;" />
                        <div>
                            @*@(Html.Kendo().ListView<NTSMessageViewModel>()
                                .Name("listViewMsg")
                                .TagName("div")
                                .Scrollable(ListViewScrollableMode.Endless)
                                .ClientTemplateId("templateListReplies")
                                .DataSource(dataSource => dataSource
                                .Ajax()
                                .PageSize(1000)
                                .Read(read => read.Action("GetTaskMessageList", "Cms", new { taskId = Model.TaskId }))
                                )
                                .Events(events => events.DataBound("OnMsgDatabound"))
                                )*@

                            <div id="listViewMsg"></div>
                        </div><div class="accordion" allowMultipleSectionsOpen=true id="accordionExample1"></div>
                        <div id="formio-container"></div>

                        @if ((Model.TaskTemplateType == TaskTypeEnum.StepTask && Model.HideStepTaskDetails == false && Model.ViewMode != NtsViewTypeEnum.Book) || (Model.TaskTemplateType == TaskTypeEnum.AdhocTask && Model.ParentServiceId.IsNotNull()))
                        {
                            <hr style="height:1px;background-color: silver;" />
                            <div class="accordion" allowMultipleSectionsOpen=true id="accordionExample1">
                                <div class="card" style=" border: 1px solid var(--pbc); margin-bottom: 5px;">
                                    <div class="card-header @Model.ParentService.ServiceStatusCode" id="heading_@Model.ParentServiceId" style="padding: 2px !important;">
                                        <h2 class="row mb-0">
                                            <button class="btn btn-link btn-block text-left" type="button" style="margin-left: 24px;width:88%;color: white !important" data-toggle="collapse" data-target="#collapse_@Model.ParentServiceId" aria-expanded="true" aria-controls="collapse_@Model.ParentServiceId">
                                                @Model.ParentService.ServiceNo- @Model.ParentService.ServiceSubject
                                            </button>
                                            <i class="fas fa-eye" style="font-size:20px;padding-top: 9px;" onclick="OnViewService('@Model.ParentServiceId', '@Model.ParentService.PageId', '@Model.ParentService.TemplateCode')"></i>
                                        </h2>
                                    </div>

                                    <div id="collapse_@Model.ParentServiceId" class="collapse show" aria-labelledby="heading_@Model.ParentServiceId" data-parent="#accordionExample1">
                                        <div class="card-body">
                                            <div class="div-readonly">
                                                <strong>Subject:</strong>
                                                <span class="pl-1">
                                                    @Model.ParentService.ServiceSubject
                                                </span>
                                            </div>
                                            <div class="div-readonly">
                                                <strong>ServiceNo:</strong>
                                                <span class="pl-1">
                                                    @Model.ParentService.ServiceNo
                                                </span>
                                            </div>
                                            <div class="div-readonly">
                                                <strong>DueDate:</strong>
                                                <span class="pl-1">
                                                    @Model.ParentService.DueDate
                                                </span>
                                            </div>
                                            <div class="div-readonly">
                                                <strong>Status:</strong>
                                                <span class="pl-1">
                                                    @Model.ParentService.ServiceStatusName
                                                </span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            @if (Model.StepTasksList != null && Model.StepTasksList.Count() > 0)
                            {
                                foreach (var item in Model.StepTasksList.OrderBy(x => x.StepTaskSequenceOrder))
                                {
                                    <div class="accordion" allowMultipleSectionsOpen=true id="accordionExample_@item.Id">
                                        <div class="card" style=" border: 1px solid var(--pbc); margin-bottom: 5px;">
                                            @if (item.Id != Model.TaskId)
                                            {
                                                <div class="card-header @item.TaskStatusCode" id="heading_@item.Id" style="color:white!important;padding: 2px !important;">
                                                    <h2 class="row mb-0">

                                                        <button class="btn btn-link btn-block text-left" type="button" data-toggle="collapse" data-target="#collapse_@item.Id" aria-expanded="true" aria-controls="collapse_@item.Id" style="margin-left: 24px;width:88%;color: white !important">
                                                            @item.TaskNo - @item.TaskSubject
                                                        </button>

                                                        <i class="fas fa-eye" style="font-size:20px;padding-top: 9px;" onclick="OnViewTask('@item.Id','@item.PageId','@item.TemplateMasterCode')"></i>



                                                    </h2>
                                                </div>
                                            }
                                            else
                                            {
                                                <div class="card-header" id="heading_@item.Id" style="padding: 2px !important;">
                                                    <h2 class="row mb-0">

                                                        <button class="btn btn-link btn-block text-left" type="button" data-toggle="collapse" data-target="#collapse_@item.Id" aria-expanded="true" aria-controls="collapse_@item.Id" style="margin-left: 24px;width:88%;">
                                                            @item.TaskNo - @item.TaskSubject
                                                        </button>
                                                        @*@if (item.Id != Model.TaskId)
                                                            {
                                                                <i class="fas fa-eye" style="font-size:20px;padding-top: 9px;" onclick="OnViewTask('@item.Id', '@item.PageId', '@item.TemplateMasterCode')"></i>
                                                            }*@
                                                    </h2>
                                                </div>

                                            }







                                            <div id="collapse_@item.Id" class="collapse " aria-labelledby="heading_@item.Id" data-parent="#accordionExample_@item.Id">
                                                <div class="card-body">

                                                    <div class="div-readonly">
                                                        <strong>Subject:</strong>
                                                        <span class="pl-1">
                                                            @item.TaskSubject
                                                        </span>
                                                    </div>
                                                    <div class="div-readonly">
                                                        <strong>TaskNo:</strong>
                                                        <span class="pl-1">
                                                            @item.TaskNo
                                                        </span>
                                                    </div>
                                                    <div class="div-readonly">
                                                        <strong>DueDate:</strong>
                                                        <span class="pl-1">
                                                            @item.DueDate
                                                        </span>
                                                    </div>
                                                    <div class="div-readonly">
                                                        <strong>Status:</strong>
                                                        <span class="pl-1">
                                                            @item.TaskStatusName
                                                        </span>
                                                    </div><br />

                                                    @*@(Html.Kendo().ListView<NTSMessageViewModel>()
                                                        .Name("listViewMsg_"+item.Id)
                                                        .TagName("div")
                                                        .Scrollable(ListViewScrollableMode.Endless)
                                                        .ClientTemplateId("templateListReplies")
                                                        .DataSource(dataSource => dataSource
                                                        .Ajax()
                                                        .PageSize(1000)
                                                        .Read(read => read.Action("GetTaskMessageList", "Cms", new { taskId = item.Id }))
                                                        )
                                                        .Events(events => events.DataBound("OnMsgDatabound"))
                                                        )*@

                                                    <div id="listViewMsg_@item.Id"></div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>}

                            }


                        }
                    </div>
                }
            </div>

        </div>
        <script type="text/x-kendo-tmpl" id="templateListReplies">
            <div class="col header-readonly">#=Type#</div>
            <div class="div-readonly">
                <strong>From:</strong>
                <span class="pl-1 user-popup-card" data-user-id="#=FromId#">
                   <span>#=From#</span><span><a>&lt;#=FromEmail#&gt;</a></span>
                </span>
            </div>
            <div class="div-readonly">
                <strong>Sent:</strong>
                <span class="pl-1">
                    #=SentDateDisplay#

                </span>
            </div>
            #if(To!=null){#
                <div class="div-readonly">
                    <strong>To:</strong>
                    <span class="pl-1 user-popup-card" data-user-id="#=ToId#">
                        <span>#=To#</span><span><a>&lt;#=ToEmail#&gt;</a></span>
                    </span>
                </div>
             #}#
             #if(Subject!=null){#
                <div class="div-readonly">
                    <strong>Subject:</strong>
                    <span class="pl-1">
                           #=Subject#
                    </span>
                </div>
             #}#
             #if(Body!=null){#
                <div class="div-readonly">
                    <span class="pl-1">
            #= htmlDecode(Body) #
                    </span>
                </div>
             #}#
                 <hr/>
        </script>
        <script>
        (function ($) {
            $('#TaskSLASeconds').durationPicker({
                showSeconds: false,
                onChanged: function (newVal, init) {
                    if (!init) {
                        var sd = kendo.toString($("#StartDate").data("kendoDateTimePicker").value(), 'yyyy/MM/dd HH:mm');
                        var ed = GetAddSeconds(sd, newVal);
                        var f = new Date(ed);
                        console.log(f);
                        $("#DueDate").data("kendoDateTimePicker").value(f)
                    }

                }
            });
            $.fn.ribbon = function (id) {

                if (!id) {
                    if (this.attr('id')) {
                        id = this.attr('id');
                    }
                }

                var that = function () {
                    return thatRet;
                };

                var thatRet = that;

                that.selectedTabIndex = -1;

                var tabNames = [];

                that.goToBackstage = function () {
                    ribObj.addClass('backstage');
                }

                that.returnFromBackstage = function () {
                    ribObj.removeClass('backstage');
                }
                var ribObj = null;

                that.init = function (id) {
                    if (!id) {
                        id = 'ribbon';
                    }

                    ribObj = $('#' + id);
                    ribObj.find('.ribbon-window-title').after('<div id="ribbon-tab-header-strip"></div>');
                    var header = ribObj.find('#ribbon-tab-header-strip');

                    ribObj.find('.ribbon-tab').each(function (index) {
                        var id = $(this).attr('id');
                        if (id == undefined || id == null) {
                            $(this).attr('id', 'tab-' + index);
                            id = 'tab-' + index;
                        }
                        tabNames[index] = id;

                        var title = $(this).find('.ribbon-title');
                        var isBackstage = $(this).hasClass('file');
                        //header.append('<div id="ribbon-tab-header-' + index + '" class="ribbon-tab-header"></div>');
                        var thisTabHeader = header.find('#ribbon-tab-header-' + index);
                        thisTabHeader.append(title);
                        if (isBackstage) {
                            thisTabHeader.addClass('file');

                            thisTabHeader.click(function () {
                                that.switchToTabByIndex(index);
                                that.goToBackstage();
                            });
                        } else {
                            if (that.selectedTabIndex == -1) {
                                that.selectedTabIndex = index;
                                thisTabHeader.addClass('sel');
                            }

                            thisTabHeader.click(function () {
                                that.returnFromBackstage();
                                that.switchToTabByIndex(index);
                            });
                        }
                        $(this).hide();
                    });

                    ribObj.find('.ribbon-button').each(function (index) {
                        var title = $(this).find('.button-title');
                        title.detach();
                        $(this).append(title);

                        var el = $(this);

                        this.enable = function () {
                            ServiceIdl.removeClass('disabled');
                        };

                        this.disable = function () {
                            el.addClass('disabled');
                        };

                        this.isEnabled = function () {
                            return !el.hasClass('disabled');
                        };

                        if ($(this).find('.ribbon-hot').length == 0) {
                            $(this).find('.ribbon-normal').addClass('ribbon-hot');
                        };

                        if ($(this).find('.ribbon-disabled').length == 0) {
                            $(this).find('.ribbon-normal').addClass('ribbon-disabled');
                            $(this).find('.ribbon-normal').addClass('ribbon-implicit-disabled');
                        };

                        $(this).tooltip({
                            bodyHandler: function () {
                                if (!$(this).isEnabled()) {
                                    $('#tooltip').css('visibility', 'hidden');
                                    return '';
                                }

                                var tor = '';

                                if (jQuery(this).children('.button-help').size() > 0)
                                    tor = (jQuery(this).children('.button-help').html());
                                else
                                    tor = '';

                                if (tor == '') {
                                    $('#tooltip').css('visibility', 'hidden');
                                    return '';
                                }

                                $('#tooltip').css('visibility', 'visible');

                                return tor;
                            },
                            left: 0,
                            extraClass: 'ribbon-tooltip'
                        });
                    });

                    ribObj.find('.ribbon-section').each(function (index) {
                        $(this).after('<div class="ribbon-section-sep"></div>');
                    });

                    ribObj.find('div').attr('unselectable', 'on');
                    ribObj.find('span').attr('unselectable', 'on');
                    ribObj.attr('unselectable', 'on');

                    that.switchToTabByIndex(that.selectedTabIndex);
                }

                that.switchToTabByIndex = function (index) {
                    var headerStrip = $('#ribbon #ribbon-tab-header-strip');
                    headerStrip.find('.ribbon-tab-header').removeClass('sel');
                    headerStrip.find('#ribbon-tab-header-' + index).addClass('sel');

                    $('#ribbon .ribbon-tab').hide();
                    $('#ribbon #' + tabNames[index]).show();
                }

                $.fn.enable = function () {
                    if (this.hasClass('ribbon-button')) {
                        if (this[0] && this[0].enable) {
                            this[0].enable();
                        }
                    }
                    else {
                        this.find('.ribbon-button').each(function () {
                            $(this).enable();
                        });
                    }
                }




                $.fn.disable = function () {
                    if (this.hasClass('ribbon-button')) {
                        if (this[0] && this[0].disable) {
                            this[0].disable();
                        }
                    }
                    else {
                        this.find('.ribbon-button').each(function () {
                            $(this).disable();
                        });
                    }
                }

                $.fn.isEnabled = function () {
                    if (this[0] && this[0].isEnabled) {
                        return this[0].isEnabled();
                    } else {
                        return true;
                    }
                }


                that.init(id);

                $.fn.ribbon = that;
            };
        })(jQuery);
         $('.user-popup-card').webuiPopover('destroy').webuiPopover(userPopoverSettings);
      $('.duedate-popup-card').webuiPopover('destroy').webuiPopover({
        width: 350,
        height: 320,
        trigger: 'hover',
        placement: 'auto',
        delay: {
            show: null,
            hide: 300
        },
        content: '<div class="row pt-2 pb-2 pl-2"><div class="col-12 alert-light mb-3"><span class="text-label">Planned Start Date</span><span class="text-title">@Model.StartDate.ToDefaultDateTimeFormat()</span></div><div class="col-12 alert-light mb-3"><span class="text-label">Planned End Date:</span><span class="text-title">@Model.DueDate.ToDefaultDateTimeFormat()</span></div><div class="col-12 alert-light"><span class="text-label">Planned SLA:</span><span class="text-title">@Model.TaskSLA</span></div><div class="col-12 alert-light mb-3"><span class="text-label">Actual Start Date:</span><span class="text-title">@Model.ActualStartDate.ToDefaultDateTimeFormat()</span></div><div class="col-12 alert-light mb-3"><span class="text-label">Actual End Date:</span><span class="text-title">@Model.ActualEndDate.ToDefaultDateTimeFormat()</span></div><div class="col-12 alert-light"><span class="text-label">Actual SLA:</span><span class="text-title">@Model.ActualSLA</span></div></div>',
      });
        function OnMsgDatabound() {
            $('.user-popup-card').webuiPopover('destroy').webuiPopover(userPopoverSettings);
        }
        function FillFormIo(json,datajson) {
            var formio = $('#formio-container').html();
            if (formio != undefined) {
                var formio = document.getElementById('formio-container');
                LoadFormIo({ uiJson: json, dataJson: datajson }, formio);
            }
            }



            $(document).ready(function () {
                $('#reason').kendoDialog({
                    width: "450px",
                    title: "Reason",
                    closable: true,
                    modal: true,
                    visible:false,
                    content: "<textarea id='CommentTemp' rows='5' class='form-control'></textarea><div style='display:none;color:red;' id='commentReq'></div>",
                    actions: [
                        { text: 'Cancel' },
                        {
                            text: 'Submit', primary: true,  action: function(e) {
                                OnReasonSave(e);
                                return false;
                            }  }
                    ],
                });

                   if ('@Model.IsSubmitButtonVisible'=='True') {
            $("#StartDate").kendoDateTimePicker({ value: '@Model.StartDate', format: '@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormat', change: OnStartDateDueDateChange});
        $("#DueDate").kendoDateTimePicker({ value: '@Model.DueDate', format: '@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormat', change: OnStartDateDueDateChange});
        $("#ReminderDate").kendoDateTimePicker({value:'@Model.ReminderDate',format:'@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormat'});

        }


               $('.content').richText();
            var json = $('#Json').val();
                var datajson = $('#DataJson').val();
                FillFormIo(json, datajson);

                $('[data-toggle="popover"]').popover();

            FillAttachmentCount();
            FillSharingCount();
            FillNotificationCount();
            FillCommentCount();
                $(".k-editor-toolbar-wrap").hide();
                onNextchangetype();
                SetAssignee('TASK_ASSIGN_TO_USER');

                SetOwnerAndRequesterVisibility();

                if ('@Model.EnableStartButton' == 'True') {
                    $("#btnStart").show();
                    $("#drpDiv").hide();
                }
                else {
                    $("#drpDiv").show();
                }
            $('#ribbon').ribbon();

            $('#enable-btn').click(function () {
                $('#del-table-btn').enable();
                $('#del-page-btn').enable();
                $('#save-btn').enable();
                $('#other-btn-2').enable();

                $('#enable-btn').hide();
                $('#disable-btn').show();
            });
            $('#disable-btn').click(function () {
                $('#del-table-btn').disable();
                $('#del-page-btn').disable();
                $('#save-btn').disable();
                $('#other-btn-2').disable();

                $('#disable-btn').hide();
               $('#enable-btn').show();
            });
            $(".enableHtml").click(function () {
                if (this.checked) {
                    $(".k-editor-toolbar-wrap").show();
                }
                else {
                    $(".k-editor-toolbar-wrap").hide();
                }
            });

        //Listview
       var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/cms/GetTaskMessageList?taskId=" + '@Model.TaskId',
                    dataType: "json"
                }
            },
            pageSize: 1000
        });

        $("#listViewMsg").kendoListView({
            dataSource: dataSource,
            dataBound: OnMsgDatabound,
            scrollable: "endless",
            template: kendo.template($("#templateListReplies").html())
        });

        var dataSource = [];
        var i = 1;
        var list = '@Model.StepTasksList';
        for (let li of list) {
            dataSource[i] = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/cms/GetTaskMessageList?taskId="+li.Id,
                    dataType: "json"
                }
                },
                pageSize: 1000
            });

            $("#listViewMsg_" + li.Id).kendoListView({
            dataSource: dataSource[i],
                dataBound: OnMsgDatabound,
                scrollable: "endless",
                template: kendo.template($("#templateListReplies").html())
            });
            i++;
                }
              //  uploadFile();
            });

            function uploadFile() {
                $("#iconFile").dmUploader({ //
                    url: '/Cms/Document/SaveFile',
                    multiple: false,
                    extFilter: ["jpg", "jpeg", "png", "gif"],
                    maxFileSize: 3000000, // 3 Megs
                    onDragEnter: function () {
                        // Happens when dragging something over the DnD area
                        this.addClass('active');
                    },
                    onDragLeave: function () {
                        this.removeClass('active');
                    },
                    onInit: function () {
                    },
                    onComplete: function () {
                    },
                    onNewFile: function (id, file) {
                        ui_multi_add_file(id, file);
                    },
                    onBeforeUpload: function (id) {
                        ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                        ui_multi_update_file_progress(id, 0, '', true);
                    },
                    onUploadCanceled: function (id) {
                        ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                        ui_multi_update_file_progress(id, 0, 'warning', false);
                    },
                    onUploadProgress: function (id, percent) {
                        ui_multi_update_file_progress(id, percent);
                    },
                    onUploadSuccess: function (id, data) {
                        $("#NextTaskAttachmentId").val(data.fileId);

                        ui_multi_update_file_status(id, 'success', 'Upload Complete');
                        ui_multi_update_file_progress(id, 100, 'success', false);
                    },
                    onUploadError: function (id, xhr, status, message) {
                        ui_multi_update_file_status(id, 'danger', message);
                        ui_multi_update_file_progress(id, 0, 'danger', false);
                    },
                    onFallbackMode: function () {
                    },
                    onFileSizeError: function (file) {
                    }
                });
            }
function allSynergyCharts() {
        @Html.Raw(Model.ChartItems);
    }
        @Html.Raw(Model.ChartItems);

        </script>

        @*@(Html.Kendo().Dialog()
                .Name("reason")
                .Title("Reason")
                .Content( @"<textarea id='CommentTemp' rows='5' class='form-control'></textarea><div style='display:none;color:red;' id='commentReq'></div>")
                .Animation(a=>a.Open(o=>o.Zoom(ZoomDirection.In)).Close(c=>c.Zoom(ZoomDirection.Out)))
                .Width(450)
                .Height(300)
                .Modal(true)
                .Visible(false)
                .Actions(actions =>
                {
                actions.Add().Text("Cancel");
                actions.Add().Text("Save").Primary(true).Action("OnReasonSave");
                })

            )*@
        <div id="reason">
        </div>

    </form>


</div>




