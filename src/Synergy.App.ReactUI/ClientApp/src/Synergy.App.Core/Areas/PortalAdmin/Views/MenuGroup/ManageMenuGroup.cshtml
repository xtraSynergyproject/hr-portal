@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@*@using Kendo.Mvc.UI;*@

@{
    ViewData["Title"] = "Menu Group";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model MenuGroupViewModel

    <style>
        .form-control {
            width: unset;
        }
        .required {
            color: red;
        }

        .style-myiconimage {
            /*border-radius: 50%;*/
            height: 100px;
            width: 100px;
        }

        .style-image {
            width: 30%;
            float: left;
        }

        .style-upload {
            width: 70%;
            float: left;
        }
    </style>

<div class="row" style="margin-left:15px;">
   
    <form asp-controller="MenuGroup" asp-action="ManageMenuGroup" method="post" class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">
            <div class="col-12">Name <span class="required">*</span></div>
            <div class="row col-12 pad-15" style="padding-left: 26px;">
                @*<div class="form-label-group">*@

                <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" required="required" autocomplete="off" style="width:80%" />

                @*<label for="Name">Name <span class="required">*</span></label>*@
                <span class="fa fal fa-2x fa-language  language-icon" onclick="OnLanguageClick();" style="cursor:pointer;"></span>

                @*</div>*@
            </div>
            <div class="col-12">ShortName <span class="required">*</span></div>
            <div class="row col-12 pad-15" style="padding-left: 26px;">
                @*<div class="form-label-group">*@
                <input asp-for="ShortName" type="text" class="form-control" placeholder="Enter Short Name" required="required" autocomplete="off" style="width:80%" />
                @*<label for="ShortName">Short Name <span class="required">*</span></label>*@
                @*</div>*@
            </div>

            <div class="col-12">SequenceOrder <span class="required">*</span></div>
            <div class="row col-12 pad-15" style="padding-left: 26px;">

                <input asp-for="SequenceOrder" type="number" class="form-control" placeholder="Enter Sequence Order" autocomplete="off" style="width:80%" />
                @*<label for="SequenceOrder">Enter Sequence Order</label>*@
            </div>

            <div class="col-12">Parent @*<span class="required">*</span>*@</div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(model=>model.ParentId)
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetMenuGroupList", "MenuGroup", new {@area="PortalAdmin", Id=Model.Id});
            });
        })
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
        .Filter(FilterType.Contains)
        .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
        )*@
                <input asp-for="ParentId" id="ParentId" class="form-control" style="width:80%" />
            </div>

            @*<div class="col-12">Sub Module <span class="required">*</span></div>
            <div class="col-12 pad-15">
                
                <input asp-for="SubModuleId" id="SubModuleId" class="form-control" style="width:80%" />
            </div>*@
            <div class="col-12">Portal <span class="required">*</span></div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(model=>model.PortalId)
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetPortalList", "MenuGroup");
            });
        })
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
        .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
        )*@
                <input asp-for="PortalId" id="PortalId" class="form-control" style="width:80%" />
            </div>

            <div class="col-12">Status</div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(x=>x.Status)
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
        source.Read(read =>
        {
            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "StatusEnum" });
        });
        })
        .Value(Model.Status.ToString())
        .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
        )*@

                <input asp-for="Status" id="Status" class="form-control" style="width:80%" />
            </div>
            <div class="col-12">Menu Group Details</div>
            <div class="row col-12 pad-15" style="padding-left: 26px;">

                <textarea asp-for="MenuGroupDetails" id="MenuGroupDetails" name="MenuGroupDetails" style="margin-top: 0px;margin-bottom: 0px;height: 73px;width: 80%;border-color: lightgray;"></textarea>
            </div>





            <div class="col-12">File Icon</div>
            <div class="col-12 pad-15" style="min-height:130px;">
                @*<div class="style-image">
                    @if (Model.MenuGroupIconFileId != null)
                    {
                    <img class="style-myiconimage" src="/cms/Document/GetImageMongo?id=@Model.MenuGroupIconFileId" onerror='OnPhotoError(this);' />
                    }
                    else
                    {
                    <img class="style-myiconimage" style="background-color:gray;" src="~/images/200.png" />
                    }

                </div>*@
                <div @*class="style-upload"*@>
                    @*@(Html.Kendo().Upload().Multiple(false)
            .Name("files")
            .Async(a => a
            .Save("SaveFile", "Document", new { @Area="Cms"})
            .AutoUpload(true)
            )
            .Events(e => e.Success("onFileUploadSuccessIcon")
            )
                .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                //.MaxFileSize(2097152)
                )
                .HtmlAttributes(new { @class = "hr-large", @id = "files3" })
        )*@
                    @*<div class="row">
            <div class="col">
                <div id="iconFileMenuGroup" class="dm-uploader">
                    <h6 class=" text-muted">Drag &amp; drop files here</h6>

                    <div class="btn btn-primary btn-block ">
                        <span>Open the file Browser</span>
                        <input type="file" title='Click to add Files' />
                    </div>
                </div>

            </div>
        </div>
        <button type="button" class="btn btn-light" title="Delete Icon" onclick="onIconDel();"><i class='fa fas fa-trash'></i></button>*@

                    @{
                        await Html.RenderPartialAsync("~/Areas/Core/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.MenuGroupIconFileId), Value = Model.MenuGroupIconFileId });
                    }
                </div>

            </div>

            <div class="cms-slidebar-footer" style="position: relative !important;">
                <button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">Close</button>
                <input type="submit" class="btn btn-primary" value="Save" id="submitBtn" />
            </div>

        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.MenuGroupIconFileId)
        @Html.HiddenFor(x => x.PortalId)
        @Html.HiddenFor(x => x.LegalEntityId)
        @Html.HiddenFor(x => x.RequestSource)
    </form>
</div>


<script type="text/javascript">
    function OnLanguageClick()
    {
        var defaultValue = $("#Name").val();
        var win = GetMainWindow();
        win.iframeOpenUrl = "/cms/ResourceLanguage/Create?lo=Popup&cbm=OnMenuGroupNameCallBack&templateType=ApplicationCustom&defaultValue=" + defaultValue + "&templateId=@Model.Id&code=MenuGroupName";
        win.OpenWindow({ Title: 'Manage Language', Width: 500, Height: 400 });
    }
    function OnMenuGroupNameCallBack(Prms) {
        var english = Prms.item.English;
        $("#Name").val(english)

    }
    $(document).ready(function () {
     //   uploadFile();
        if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();
            if ('@Model.RequestSource' == 'Portal') {
                window.parent.$("#pagetreelist").data("kendoTreeList").dataSource.read();
            }
            else {
                window.parent.getMenuGroupData();
                //window.parent.$("#kgrdMenuGroup").data("kendoGrid").dataSource.read();
            }

        }

          $("#ParentId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
           optionLabel:"@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.ParentId',
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/MenuGroup/GetMenuGroupList?Id=@Model.Id",
                    }
                }
            }
        });

        $("#SubModuleId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
          optionLabel:"@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.SubModuleId',
           // filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/SubModule/GetSubModuleList",
                    }
                }
            }
        });

        $("#PortalId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
          optionLabel:"@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.PortalId',
           // filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/MenuGroup/GetPortalList",
                    }
                }
            }
        });

        $("#Status").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.Status.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StatusEnum",
                    }
                }
            }
        });

    });

    function closeNavMemberGroup() {
       
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function onFileUploadSuccessIcon(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-myiconimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#MenuGroupIconFileId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function uploadFile() {
        $("#iconFileMenuGroup").dmUploader({ //
            url: '/Cms/Document/SaveFile', //- controller
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs 
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-myiconimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#MenuGroupIconFileId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }


    function onIconDel() {
        $(".style-myiconimage").attr("src", "/images/200.png");
        $("#MenuGroupIconFileId").val('');
        // var faviconupload = $("#files3").data("kendoUpload");
        //console.log(bannerupload);
        //faviconupload.clearFile(function (file) { return true; });
        $("#iconFileMenuGroup").dmUploader("reset");
        ////        alert("Banner Delete");
        //$(".style-myiconimage").attr("src", "/images/200.png");
        //$("#MenuGroupIconFileId").val('');
        //var faviconupload = $("#files3").data("kendoUpload");
        ////console.log(bannerupload);
        //faviconupload.clearFile(function (file) { return true; });
    }
</script>