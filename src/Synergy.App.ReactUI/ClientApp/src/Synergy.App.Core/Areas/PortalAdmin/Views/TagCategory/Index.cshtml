@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@*@using Kendo.Mvc.UI;*@
@model TagCategoryViewModel

@{
    ViewData["Title"] = "PortalAdmin - Tag Category";
    Layout = null;
}

<style>
    .kgrdPDM {
        width: 100% !important;
    }
</style>
<script>
    function OnCreateTagCategory() {
        var win = GetMainWindow();
        win.iframeOpenUrl = "/PortalAdmin/TagCategory/TagCategory";
        win.OpenWindow({ Title: 'Create Tag Category', Width: 450, Height: 700 });
        return false;
    }
    function onEditOnCreateTagCategory(id) {
        
       // e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        var win = GetMainWindow();
        var portalId = $('#GlobalPortalId').val();

        win.iframeOpenUrl = "/PortalAdmin/TagCategory/TagCategory?TagId=" + id;
        win.OpenWindow({ Title: 'Edit Tag Category', Width: 450, Height: 700 });
    }

    function OnDeleteTagCategory(id) {
        var flag = confirm('Do you really want to delete the Tag Category?');
        //alert("..Delete");
        e.preventDefault();
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url: '@Url.Action("Delete", "TagCategory", new { @area= "PortalAdmin" })?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        getTagCatData();
                       // $("#kgrdTagCategory").data("kendoGrid").dataSource.read();
                        kendo.alert("Tag Category Deleted Successfully.");
                    } else {
                        getTagCatData();
                        //$("#kgrdTagCategory").data("kendoGrid").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //
                    $("#kgrdTagCategory").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }


    function onDataBound(arg) {
        $("#kgrdTagCategory tbody tr").each(function () {

            var currentDataItem = $("#kgrdTagCategory").data("kendoGrid").dataItem($(this));
            var Tag = $(this).find(".k-grid-Tag");


            //if (currentDataItem.TagCategoryType == "Master") {
            //    Tag.remove();
            //}

        });
    }

    function OnTagView(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var Id = dataItem.NtsNoteId;
        var Name = dataItem.TagCategoryName;
        var Type = dataItem.TagCategoryType;

        var win = GetMainWindow();

        if (Type == "Static") {
            win.iframeOpenUrl = "/PortalAdmin/TagCategory/Tag?TagCategoryId=" + Id;
        } else {
            win.iframeOpenUrl = "/PortalAdmin/TagCategory/TagMaster?TagCategoryId=" + Id;
        }
        win.OpenWindow({ Title: 'Manage Tag- ' + Name, Width: 1200, Height: 700 });
    }



</script>
<script>
    var columnDefs = [
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuTagCat' data-idvalue='" + params.value + "' data-noteid='" + params.data.NtsNoteId + "'data-tcname='" + params.data.TagCategoryName + "' data-type='" + params.data.TagCategoryType + "'><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
        { headerName: "Tag Category Type", field: "TagCategoryType" },
        { headerName: "Tag Category Code", field: "TagCategoryCode" },
        { headerName: "Tag Category Name", field: "TagCategoryName" },
        { headerName: "Enable Auto Tag", field: "EnableAutoTag" },
    ];

    function getTagCatData() {
        document.getElementById("kgrdTagCategory").innerHTML = "";
        gridConfig(
            "kgrdTagCategory",
            "/portalAdmin/TagCategory/ReadTagCategoryData",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    $(function () {

        $.contextMenu({
            selector: '#tree-menuTagCat',
            trigger: 'left',
            build: function ($trigger, e) {
                
                var id = $trigger.data('idvalue');
                var noteid = $trigger.data('noteid');
                var tname = $trigger.data('tcname');
                var type = $trigger.data('type');


                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEditOnCreateTagCategory(id);
                                        break;

                                    case 'delete':
                                        OnDeleteTagCategory(id);
                                        break;
                                    case 'tag':
                                        OnTagView(noteid, tname, type);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },
                                "tag": { name: "Tag", icon: "fas fa-cog" },

                            }
                        };
                }
            }
        });


    });
</script>

<div>
    <h4>@ViewBag.Title</h4>

    <hr />

    <div class="row">



        <div class="col-md-12">
            <button type='button' class='btn btn-primary' onclick='OnCreateTagCategory();'><i class='fa fas fa-plus'></i>&nbsp;Create</button>
            <br /><br />
            <div id="kgrdTagCategory" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            @*@(Html.Kendo().Grid<dynamic>
    ().Name("kgrdTagCategory").HtmlAttributes(new { @class = "kgrdPDM" })
    .Columns(col =>
    {
        col.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("onEditOnCreateTagCategory").HtmlAttributes(new { @class = "action-icon", @title = "Edit" });
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteTagCategory").HtmlAttributes(new { @class = "action-icon", @title = "Delete" });
            command.Custom("Tag").Text("<i class='fa fas fa-cog'></i>").Click("OnTagView").HtmlAttributes(new { @class = "action-icon", @title = "Tag" });

        }).Title("Action").Width(150);
        //col.Bound(c => c.Id);
        col.Bound("TagCategoryType").Title("Tag Category Type").Width(220);
        col.Bound("TagCategoryCode").Title("Tag Category Code").Width(220);
        col.Bound("TagCategoryName").Title("Tag Category Name").Width(220);
        col.Bound("EnableAutoTag").Title("Enable Auto Tag").Width(220);




    })
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Text("Create").Name("btnAdd").IconClass("fa fas fa-plus").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnCreateTagCategory();" });
    })
    .Scrollable(x => x.Enabled(true))

    .Sortable(srt => srt.Enabled(true))
    .Selectable(select => select.Enabled(false))
    .Filterable(f => f.Extra(false)
    .Operators(o => o.ForString(s => s.Clear()
    .Contains("Contains")
    .IsEqualTo("Is equal to")
    )))
    .Events(e => e.DataBound("onDataBound"))
      .Resizable(resize => resize.Columns(true))
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .AutoBind(true)
    .DataSource(
    dataSource => dataSource
    .Ajax()
    .PageSize(10)
    .Read(read => read.Action("ReadTagCategoryData", "TagCategory", new { Area= "PortalAdmin" }))
    .Model(model => model.Id("Id")))
    )*@
        </div>

    </div>
</div>
