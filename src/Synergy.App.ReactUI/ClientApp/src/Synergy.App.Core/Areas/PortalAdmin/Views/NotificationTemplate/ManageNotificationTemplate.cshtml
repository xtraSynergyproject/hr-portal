@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Manage Notification Template";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model NotificationTemplateViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
</style>
<script>

</script>

<div class="row" style="margin-left:15px;">
    <form asp-area="PortalAdmin" asp-controller="NotificationTemplate" asp-action="ManageNotification" method="post" class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">

            <div class="col-12">Company <span class="required">*</span></div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(x=>x.CompanyId)
        .DataTextField("Name")
        .DataValueField("Id")
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetCompanyIdNameList", "NotificationTemplate", new { @area = "cms"});
            });
        })
        .Value(Model.CompanyId)
        .HtmlAttributes(new { @class = "form-control", @style = "width:80%"})
        )*@

                <input asp-for="CompanyId" id="CompanyId" class="form-control" style="width:80%" />
            </div>
            <div class="col-12">Type <span class="required">*</span></div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(x=>x.NtsType)
         .DataTextField("Name")
         .DataValueField("Id")
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
         .DataSource(source =>
         {
             source.Read(read =>
             {
                 read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsTypeEnum" });
             });
         })
         .Value(Model.NtsType.ToString())
         .HtmlAttributes(new { @class = "form-control", @style = "width:80%"})
         .Events(e=>
             { e.Change("onChange"); })
         )*@
                <input asp-for="NtsType" id="NtsType" class="form-control" style="width:80%" />
            </div>
            <div class="col-12">Notification To <span class="required">*</span></div>
            <div class="col-12 pad-10">
                @*id="noteTo">*@
                @*@(Html.Kendo().DropDownListFor(x=>x.NotificationTo)
        .DataTextField("Name")
        .DataValueField("EnumId")
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
        .DataSource(source =>
        {
            source.Read(read =>
            {
                read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsActiveUserTypeEnum" });
            });
        })
        .HtmlAttributes(new {  @style = "width:80%"})
        )*@
                <input asp-for="NotificationTo" id="NotificationTo" class="form-control" style="width:80%" />
            </div>

            @*<div class="col-12 pad-10" id="taskTo" style="display:none;">
            @(Html.Kendo().DropDownListFor(x=>x.NotificationTo)
                .DataTextField("Name")
                .DataValueField("Id")
                .OptionLabel("--Select notification to--")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsActiveUserTypeEnum" });
                    });
                })
                .HtmlAttributes(new { @class = "form-control", @style = "width:80%"})
                )
        </div>


        <div class="col-12 pad-10" id="serviceTo" style="display:none;">
            @(Html.Kendo().DropDownListFor(x => x.NotificationTo)
                .DataTextField("Name")
                .DataValueField("Id")
                .OptionLabel("--Select notification to--")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsActiveUserTypeEnum" });
                    });
                })
                .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                )
        </div>*@

            <div class="col-12">Notification Action <span class="required">*</span></div>
            <div class="col-12 pad-10" id="noteAction">
                @*@(Html.Kendo().DropDownListFor(x=>x.NotificationActionId)
         .DataTextField("Name")
         .DataValueField("Id")
        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
         .DataSource(source =>
         {
             source.Read(read =>
             {

                 // read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NoteActionEnum" });

                 read.Action("GetListOfValueList", "LOV", new { @area = "Cms" }).Data("filtertype");

             }).ServerFiltering(true);
         })
         .HtmlAttributes(new { @class = "form-control", @style = "width:80%"})
         .CascadeFrom("NtsType")
         )*@

                <input asp-for="NotificationActionId" id="NotificationActionId" class="form-control" style="width:80%" />
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="GroupCode" type="text" class="form-control" placeholder="Enter GroupCode" autocomplete="off" style="width:80%" />
                    <label for="GroupCode">GroupCode</label>
                </div>
            </div>
            @*<div class="col-12 pad-10" id="taskAction">
            @(Html.Kendo().DropDownListFor(x => x.NotificationActionId)
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .OptionLabel("--Select notification action--")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                           // read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "TaskActionEnum" });
                            read.Action("GetListOfValueList", "LOV", new { @area = "Cms", type = "LOV_TASK_STATUS" });
                        });
                    })
                    .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                    //.CascadeFrom("NtsType")
                    )
        </div>


        <div class="col-12 pad-10" id="serviceAction">
            @(Html.Kendo().DropDownListFor(x => x.NotificationActionId)
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .OptionLabel("--Select notification action--")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            // read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "ServiceActionEnum" });
                            read.Action("GetListOfValueList", "LOV", new { @area = "Cms", type = "LOV_SERVICE_STATUS" });
                        });
                    })
                    .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                    //.CascadeFrom("NtsType")
                    )
        </div>*@

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" required="required" autocomplete="off" style="width:80%" />
                    <label for="Name">Name <span class="required">*</span></label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Code" type="text" class="form-control" placeholder="Enter Code" required="required" autocomplete="off" style="width:80%" />
                    <label for="Code">Code <span class="required">*</span></label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Subject" type="text" class="form-control" placeholder="Enter Subject" required="required" autocomplete="off" style="width:80%" />
                    <label for="Subject">Subject <span class="required">*</span></label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    @*@(Html.Kendo().EditorFor(x=>x.Body)
            .HtmlAttributes(new { style = "width: 80%; height:300px" })


        )*@

                    <div class="page-wrapper box-content">
                        <textarea class="content" asp-for="Body" id="Body"></textarea>
                    </div>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="SmsText" type="text" class="form-control" placeholder="Enter Sms Text" autocomplete="off" style="width:80%" />
                    <label for="SmsText">Sms Text</label>
                </div>
            </div>

            <div class="col-12 pad-10" style="margin-top:-10px;">
                @*@(Html.Kendo().CheckBoxFor(x => x.NotifyByEmail).Label("Notify By Email"))*@
                <input type="checkbox" asp-for="NotifyByEmail" id="NotifyByEmail"  />
                <label>Notify By Email</label>
            </div>

            <div class="col-12 pad-10">
                @*@(Html.Kendo().CheckBoxFor(x => x.NotifyBySms).Label("Notify By SMS"))*@
                <input type="checkbox" asp-for="NotifyBySms" id="NotifyBySms"  />
                <label>Notify By Sms</label>
            </div>

            <div class="col-12 pad-10">
                @*@(Html.Kendo().CheckBoxFor(x => x.SendAlways).Label("Send Always"))*@
                <input type="checkbox" asp-for="SendAlways" id="SendAlways"  />
                <label>Send Always</label>
            </div>


            <div class="col-12 pad-10">
                @*@(Html.Kendo().CheckBoxFor(x => x.AutoApplyOnAllTemplates).Label("Auto Apply On All Templates"))*@
                <input type="checkbox" asp-for="AutoApplyOnAllTemplates" id="AutoApplyOnAllTemplates"  />
                <label>Auto Apply On All Templates</label>
            </div>

            <div class="col-12 pad-10"></div>
            <br /><br />
            <div class="cms-slidebar-footer">
                <button type="button" class="btn btn-light" onclick="closeNavNote();">Close</button>
                <input type="submit" class="btn btn-primary" value="Save" @*id="submitBtn"*@ onclick="OnSave(event);" />
            </div>
        </div>

        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.IsTemplate)
    </form>
</div>


<script type="text/javascript">



    $(document).ready(function () {
        $('.content').richText();
        if ('@ViewBag.Success' == "True") {
            closeNavNote();
           // if (window.parent.$("#kgrdNotificationTemplate").data("kendoGrid").dataSource.read()) { }
            window.Parent.getNotificatioTempData();
        }
        //var ntstype = $("#NtsType").val();
        //if (ntstype == "Note") {
        //    //document.getElementById("noteTo").style.display = "block";
        //    document.getElementById("noteAction").style.display = "block";
        //}
        //else if (ntstype == "Task") {
        //    //document.getElementById("taskTo").style.display = "block";
        //    document.getElementById("taskAction").style.display = "block";
        //    //document.getElementById("noteTo").style.display = "none";
        //    //document.getElementById("noteAction").style.display = "none";
        //    //document.getElementById("serviceAction").style.display = "none";
        //}
        //else if (ntstype == "Service") {
        //    //document.getElementById("serviceTo").style.display = "block";
        //    document.getElementById("serviceAction").style.display = "block";
        //    //document.getElementById("noteTo").style.display = "none";
        //    //document.getElementById("noteAction").style.display = "none";
        //}
        @*var ntsType = $("#NtsType").val(); '@Model.AssignedToType';
        if (ntsType == "Note") {

            $("#noteAction").show();
            $("#taskAction").hide();
            $("#serviceAction").hide();
        }
        else if (ntsType == "Task") {

            $("#noteAction").hide();
            $("#taskAction").show();
            $("#serviceAction").hide();
        }
        else if (ntsType == "Service") {

            $("#noteAction").hide();
            $("#taskAction").hide();
            $("#serviceAction").show();
        }*@

         $("#CompanyId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
          optionLabel:"@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.CompanyId',
           // filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/PortalAdmin/NotificationTemplate/GetCompanyIdNameList",
                    }
                }
            }
        });

        $("#NtsType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            //filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.NtsType.ToString()',
            change: onNtsTypeDataBound,
           dataBound: onNtsTypeDataBound,
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=NtsTypeEnum",
                    }
                }
            }
        });


        $("#NotificationTo").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            //filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.NotificationTo.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=NtsActiveUserTypeEnum",
                    }
                }
            }
         });



    });

      function onNtsTypeDataBound() {
        var type = filtertype();
        $("#NotificationActionId").kendoDropDownList({

            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.NotificationActionId',
            dataSource: {
                transport: {
                    read: {
                       url: "/cms/LOV/GetListOfValueList?type=" + type,

                    }
                }
            }
        });


    }


    function closeNavNote() {
      
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }
    function filtertype() {
        var ntsType = $("#NtsType").data("kendoDropDownList").value();
        var type = "";
       // var type = $("#NotificationActionId").data("kendoDropdownList").Value();
        if (ntsType == "Note") {
            type = "LOV_NOTE_STATUS";
        }
           else if (ntsType == "Task") {
            type = "LOV_TASK_STATUS";
        }
        else if (ntsType == "Service") {
            type = "LOV_SERVICE_STATUS";
        }

        return type;

        //return {
        //    type: type
        //};
    }

    function onChange() {
        var search = filtertype()
        $("#NotificationActionId").data("kendoDropDownList").dataSource.read(search);
        //var ntsType = $("#NtsType").val();
        @* '@Model.AssignedToType';*@
      //
      //  if (ntsType == "Note") {

      //      $("#noteAction").show();
      //      $("#taskAction").hide();
      //      $("#serviceAction").hide();
      //  }
      // else if (ntsType == "Task") {

      //      $("#noteAction").hide();
      //      $("#taskAction").show();
      //      $("#serviceAction").hide();
      //  }
      //else if (ntsType == "Service") {

      //      $("#noteAction").hide();
      //      $("#taskAction").hide();
      //      $("#serviceAction").show();
      //  }
        //if ($("#NtsType").val() == "Note") {
        //   // document.getElementById("noteTo").style.display = "block";
        //    document.getElementById("noteAction").style.display = "block";
        //    //document.getElementById("taskTo").style.display = "none";
        //    document.getElementById("taskAction").style.display = "none";
        //    //document.getElementById("serviceTo").style.display = "none";
        //    document.getElementById("serviceAction").style.display = "none";
        //}
        //else if ($("#NtsType").val() == "Task") {
        //   // document.getElementById("noteTo").style.display = "none";
        //    document.getElementById("noteAction").style.display = "none";
        //    //document.getElementById("taskTo").style.display = "block";
        //    document.getElementById("taskAction").style.display = "block";
        //   // document.getElementById("serviceTo").style.display = "none";
        //    document.getElementById("serviceAction").style.display = "none";
        //}
        //else if ($("#NtsType").val() == "Service") {
        //    //document.getElementById("noteTo").style.display = "none";
        //    document.getElementById("noteAction").style.display = "none";
        //    //document.getElementById("taskTo").style.display = "none";
        //    document.getElementById("taskAction").style.display = "none";
        //   // document.getElementById("serviceTo").style.display = "block";
        //    document.getElementById("serviceAction").style.display = "block";
        //}
    }

    function OnSave(evt) {

        if ($("#NtsType").val() == "") {
            //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Type is required");
            evt.preventDefault();
            return false;
        }
        else if ($("#NoteNotificationTo").val() == "") {
                //
                $(".text-danger").removeClass("validation-summary-valid");
                $(".text-danger").addClass("validation-summary-errors");
                $(".text-danger").html("Notification To is required");
                evt.preventDefault();
                return false;
            }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }
        //if ($("#NtsType").val() == "Note") {


        //     if ($("#NoteNotificationAction").val() == "") {
        //        //
        //        $(".text-danger").removeClass("validation-summary-valid");
        //        $(".text-danger").addClass("validation-summary-errors");
        //        $(".text-danger").html("Notification Action is required");
        //        evt.preventDefault();
        //        return false;
        //    }
        //    else {
        //        $(".text-danger").removeClass("validation-summary-errors");
        //        $(".text-danger").addClass("validation-summary-valid");
        //    }
        //    } else if ($("#NtsType").val() == "Task") {

        //         if ($("#TaskNotificationAction").val() == "") {
        //            //
        //            $(".text-danger").removeClass("validation-summary-valid");
        //            $(".text-danger").addClass("validation-summary-errors");
        //            $(".text-danger").html("Notification Action is required");
        //            evt.preventDefault();
        //            return false;
        //        }
        //        else {
        //            $(".text-danger").removeClass("validation-summary-errors");
        //            $(".text-danger").addClass("validation-summary-valid");
        //        }
        //    }
        //    else if ($("#NtsType").val() == "Service") {

        //         if ($("#ServiceNotificationAction").val() == "") {
        //            //
        //            $(".text-danger").removeClass("validation-summary-valid");
        //            $(".text-danger").addClass("validation-summary-errors");
        //            $(".text-danger").html("Notification Action is required");
        //            evt.preventDefault();
        //            return false;
        //        }
        //        else {
        //            $(".text-danger").removeClass("validation-summary-errors");
        //            $(".text-danger").addClass("validation-summary-valid");
        //        }
        //    }
    }
</script>