@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@{
    ViewData["Title"] = "Workboard Invite";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}
@model WorkBoardInviteViewModel
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
<style>
    .titlebar {
        color: #6d6e70;
        font-weight: 700;
        font-size: 14pt;
        line-height: 30px;
        margin-left: 40px;
        margin-right: 40px;
        margin-top: 15px;
    }

    .name-section {
        font-family: proxima-nova,"Tikal Sans",Helvetica,Arial,sans-serif;
        color: #6d6e70
    }

    p {
        font-family: proxima-nova,"Tikal Sans",Helvetica,Arial,sans-serif;
        color: #6d6e70
    }


    .button-space {
        width: 30%;
        padding: 4px 6px;
        margin-left: 30px;
    }

    .my-section, .name-section {
        margin-left: 40px;
        margin-right: 40px;
    }

    /* .dropdown-width {
            max-width: 10%;
        }*/

    .height {
        height: 100px;
        width: 500px;
        background-color: powderblue;
    }

    .SYN-list-box {
        width: 95%;
        padding: 0;
        margin: 4px auto;
        border-radius: 6px;
        border: 1px solid #CBD0CE;
    }

    .SYN-ico-pdf {
        width: 100%;
        padding: 10px 0 10px 14px;
        margin: 0 auto;
    }

    .SYN-txt-field {
        padding: 0;
        margin: 0;
        font-size: larger;
        font-weight: 400;
    }

    .SYN-row-gap {
        padding: 0;
        margin: 12px 0;
    }

    .SYN-ico-action {
        padding: 10px 4px;
        margin: 4px;
        float: left;
        color: red;
        cursor: pointer;
    }

    .listStyle {
        border: none;
        border-top: 1px solid #dee2e6;
        border-bottom: 1px solid #dee2e6;
        margin-bottom: 15px;
    }

    .li-fal:hover {
        transform: scale(1.3);
    }

    .emailStyle {
        margin: 5px;
        width: 70%;
        border: none;
    }

        .emailStyle:hover, .emailStyle:focus, .emailStyle:active {
            border: none;
        }


    .formStyle {
        width: 70%;
        height: 60px;
    }

    .divStyle {
        background-color: #fff;
        border: 1px solid #ccc;
        box-shadow: inset 0 1px 1px rgb(0 0 0 / 8%);
        display: inline-block;
        padding: 4px 6px;
        color: #6d6e70;
        vertical-align: middle;
        border-radius: 4px;
        width: 100%;
        line-height: 40px;
        cursor: text;
        min-height: 90px;
    }

    /* multiple email styling*/
    .container {
        display: inline-block;
        margin-top: 1rem;
    }

    .tag-container {
        /*border: 2px solid rgb(102,199,255);
            padding: 10px;
            border-radius: 45px;*/
        display: flex;
    }

        .tag-container .tag {
            padding: .5rem 1rem;
            border: 1px solid rgb(102,199,255);
            margin: 5px;
            display: flex;
            align-items: center;
            border-radius: 15px;
            background: #fff;
            cursor: default;
            height: 30px;
        }

            .tag-container .tag:hover {
                background: rgb(151, 217,255);
            }

    .tag i {
        font-size: 16px;
        margin-left: 5px;
    }

    .tag-container input {
        flex: 1;
        font-size: 16px;
        padding: 5px;
        outline: none;
        border: 0;
    }

    .material-icons {
        padding-bottom: .1rem;
        padding-left: .5rem;
    }

        .material-icons:hover {
            color: red;
            cursor: pointer;
        }

    #myInput {
        display: inline-block;
        grid-area: 1/2;
        min-width: 150px;
        width: 100%;
        border: none;
        box-shadow: none;
        outline: 0;
        padding: 0;
        margin: 0;
    }

    .tag-container .wrap {
        position: relative;
        display: inline-grid;
        align-items: flex-start;
        -webkit-box-align: start;
    }
    .row {
  display: flex;
}
   .column {
    float: left;
    }

    /* Set width length for the left, right and middle columns */
    .left {
    width: 65%;
    margin-left:20px;
    }

    .middle {
    width: 10%;
    }
    
    .right {
    width: 15%;
    }
    .first{
        width: 20%;
    }
    .second
    {
        width: 20%;
    }
    .third
    {
        width: 20%;
    }
    .fourth
    {
        width: 20%;
    }
    .fifth
    {
        width: 20%;
    }
</style>



<div class="row-12">
    @* ManageWorkBoardInvite - action , WorkBoard - controller *@
    <form asp-controller="WorkBoard" asp-action="ManageWorkBoardInvite" method="post" class="form-horizontal" id="myForm" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">


        <div class="titlebar">
            <span>Index</span>
        </div>

        <div class="main-content">
            <div class="text-danger" asp-validation-summary="All"></div>
            <div class="name-section">
                <p>Select one of the methods below to invite people to join you in the Storm.</p>
            </div>


            <section class="my-section">

                <ul class="nav nav-tabs" id="myTab" role="tablist" style="margin-bottom: 20px;">
                    <li class="nav-item waves-effect waves-light">
                        <a class="nav-link" id="share-with" data-toggle="tab" href="#shareWith" role="tab" aria-controls="shareWith" aria-selected="true">Share With</a>
                    </li>
                    <li class="nav-item waves-effect waves-light">
                        <a class="nav-link active" id="invitetab-link" data-toggle="tab" href="#invitelink" role="tab" aria-controls="invitelink" aria-selected="true">Invite Via Link</a>
                    </li>
                    <li class="nav-item waves-effect waves-light">
                        <a class="nav-link" id="invitetab-key" data-toggle="tab" href="#invitekey" role="tab" aria-controls="invitekey" aria-selected="false">Invite Via Strome ID and Key</a>
                    </li>
                    <li class="nav-item waves-effect waves-light">
                        <a class="nav-link " id="invitetab-email" data-toggle="tab" href="#inviteemail" role="tab" aria-controls="inviteemail" aria-selected="false">Invite Via Email</a>
                    </li>
                </ul>
                <div class="tab-content" id="myTabContent">
                    <div class="tab-pane fade" id="shareWith" role="tabpanel" aria-labelledby="share-with">
                        <span style="margin: 15px 15px;">Choose users</span>
                        <input type="search" id="userList" class="form-control" style="width:90%; margin:15px 15px;" />
                        @*<a class="btn btn-outline-primary" onclick="onShare()" style="float:right;">Share!!!</a>*@
                        <div id="listViewTM" class="listStyle"></div>

                        <script type="text/x-kendo-tmpl" id="templateTM">
                                <div class="SYN-list-box">
                                <div class="row">
                                    <div class="col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                                        <div class="SYN-ico-pdf">
                                            #if(PhotoId!=null && data.PhotoId!=""){
                                            if(Type=="User"){#
                                            <img src="/user/profilephoto?id=#:PhotoId#" /> #}
                                            else{#
                                            <img src="/cms/Document/GetImageMongo?id=#:PhotoId#" /># }}
                                            else{if(Type=="User"){#<img style="background-color:gray; width: 35px; border-radius: 100%;" src="~/images/profile.jpg" />#}
                                            else{#<img style="background-color:gray; width: 35px; border-radius: 100%;" src="~/images/icon-team64.png" />#}}#
                            </div>
                                    </div>
                                    <div class="col-10 col-sm-10 col-md-10 col-lg-10 col-xl-10" style="padding-left: 0px;">
                                        <div class="row">
                                            <div class="col-7 col-sm-7 col-md-7 col-lg-7 col-xl-7"><label class="col-form-label SYN-txt-field SYN-row-gap">#:Name#<br></label></div>
                                            <div class="col-3 col-sm-3 col-md-3 col-lg-3 col-xl-3"><label class="col-form-label SYN-txt-field SYN-row-gap">#:Type#<br></label></div>
                                            <div class="col-2 col-sm-2 col-md-2 col-lg-2 col-xl-2">
                                            <div class="SYN-ico-action">
                                            <i class='fal fa-trash-alt li-fal' title="Click to delete" onclick="onDeleteClick('#=Id#')"></i>
                                            </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </script>
                        <a class="btn btn-outline-primary" onclick="onShare()" style="float:right;">Share</a>

                    </div>

                    <div class="tab-pane fade active show" id="invitelink" role="tabpanel" aria-labelledby="invitetab-link">
                        <h4> Invite Via Link</h4>
                        @if (Model.Invites.IsNotNull())
                        {
                            foreach (var invite in Model.Invites)
                            {
                                <div class="row">
                                <div class="column left">
                                     <label id="@invite.WorkBoardUniqueId">@ApplicationConstant.AppSettings.ApplicationBaseUrl(Configuration)WorkBoard/Invite/@invite.WorkBoardUniqueId/@invite.ShareKey </label>
                                 </div>
                                
                                 <div class="column middle">
                                     <i class="fa fa-copy" onclick="copyToClipboard($('#@invite.WorkBoardUniqueId'))"></i>
                                     </div>
                                 <div class="column right">
                                     <label>@invite.WorkBoardContributionType.ToString()</label>

                                      </div>
                                     </div>     
                            }
                        }


                    </div>


                    <div class="tab-pane fade" id="invitekey" role="tabpanel" aria-labelledby="invitetab-key">
                        <h4> Invite Via Strome ID and Key</h4>

                        @if (Model.Invites.IsNotNull())
                        {
                            foreach (var invite in Model.Invites)
                            {
        
                                <div class="row">
                                <div class="column first">
                                  <label id="Id_@invite.WorkBoardUniqueId">@invite.WorkBoardUniqueId</label>
                                    </div>
                                    <div class="column second">
                                   <i class="fa fa-copy" onclick="copyToClipboard($('#Id_@invite.WorkBoardUniqueId'))"></i>
                                    </div>
                                    <div class="column third">
                                   <label id="Key_@invite.ShareKey">@invite.ShareKey</label>
                                    </div>
                                    <div class="column fourth">
                                   <i class="fa fa-copy" onclick="copyToClipboard($('#Key_@invite.ShareKey'))"></i>
                                    </div>
                                    <div class="column fifth">
                                  <label>@Enum.GetName(typeof(WorkBoardContributionTypeEnum), invite.WorkBoardContributionType)</label>
                                    </div>
                                </div>

                   
                                    }
                                    }
                                </div>

                           


                    <div class="tab-pane fade" id="inviteemail" role="tabpanel" aria-labelledby="invitetab-email" @*style="margin-left: 40px"*@>
                        <h4> Invite Via Email</h4>
                        @if (Model.Invites.IsNotNull())
                        {
                            foreach (var invite in Model.Invites)
                            {
                                <div class="input-group">
                                    <div class="col-8">
                                        <input type="radio" asp-for="WorkBoardContributionType" value=" @invite.WorkBoardContributionType" style="margin-top:5px; margin-right:5px;">
                                        <label id="txt_@invite.WorkBoardUniqueId">@ApplicationConstant.AppSettings.ApplicationBaseUrl(Configuration)WorkBoard/Invite/@invite.WorkBoardUniqueId/@invite.ShareKey</label>
                                        
                                    </div>
                                    <div class="col-2">
                                        <i class="fa fa-copy" onclick="copyToClipboard($('#txt_@invite.WorkBoardUniqueId'))" style="margin-left:150px;"></i>
                                    </div>
                                    <div class="col-2">
                                        <label style="margin-left: 50px;"> @invite.WorkBoardContributionType.ToString()</label>
                                    </div>
                                   

                                </div>
                                
                            }
                        }

                        <div class="row" style="margin-left:0px;">
                            <div class="col-8 divStyle" id="divStyle">
                                @*<input asp-for="EmailAddress" type="text" class="emailStyle" id="emailValue" placeholder=" enter an email address..." multiple>*@

                                <div class="container" style="margin:0px;padding:0px;">
                                    <div id="tag-container" class="tag-container" style="flex-wrap: wrap;">
                                        <div class="wrap">
                                            <input type="email" id="myInput" multiple>
                                            <input asp-for="EmailAddress" type="text" multiple hidden />
                                        </div>
                                    </div>
                                </div>

                            </div>
                            @*<div class="col-4"><div id="WorkBoardContributionType2"></div></div>*@

                        </div>
                        @*<div id="WorkBoardContributionType2"></div>*@
                        <div style="margin-top: 20px">
                            <textarea asp-for="OptionalMessage" class="form-control formStyle" placeholder="Add a Message (optional)..."></textarea>
                           
                        </div>
                        <div style="margin-top: 20px">
                            <label>Template Content</label>
                            <div id="TemplateContent">
                               @Html.Raw(Model.TemplateContent)
                            </div>

                            <hr />
                            <input type="submit" class="btn btn-primary" value="Send" onclick="OnSubmit()" />
                        </div>

                    </div>
                </div>

            </section>

        </div>
        @Html.HiddenFor(x => x.WorkBoardSharingType)
        @Html.HiddenFor(x => x.WorkBoardId)

        @Html.HiddenFor(x => x.Id)

        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.NoteId)
    </form>
</div>
<script>
    $(document).ready(function () {
        @*$("#WorkBoardContributionType").data("kendoDropDownList").value('@Model.WorkBoardContributionType');*@
        onSelect();
        $("#EmailAddress").val("");
    });

    var onAjaxSuccess = function (res) {
           
          if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                window.parent.ShowNotification("Send Successfully", "success");
                $("#EmailAddress").val("");
                $("#OptionalMessage").val("");
                reset();
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                window.parent.ShowNotification("Updated Successfully", "success");
            }
        }
        else {
            showError(res.error);
          }
          HideLoader($('#page-content1'));
    };
    var showError = function (error) {
        //#validation-summary-manageform
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
     //   HideLoader($('#page-content1'));
    }
    function copyToClipboard(element) {
        var $temp = $("<input>");
        $("body").append($temp);
        $temp.val($(element).text()).select();
        document.execCommand("copy");
        $temp.remove();
    }
    @*$("#WorkBoardContributionType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
           
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=WorkBoardContributionTypeEnum",
                    }
                }
            }
    });
     $("#WorkBoardContributionType1").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
          
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=WorkBoardContributionTypeEnum",
                    }
                }
            }
        });
     $("#WorkBoardContributionType2").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
          
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=WorkBoardContributionTypeEnum",
                    }
                }
            }
        });*@

    $(document).on('shown.bs.tab', 'a[data-toggle="tab"]', function (e) {
        
        var id = e.currentTarget.attributes.id.value;
        if (id == "invitetab-key") {
            $("#WorkBoardSharingType").val("@WorkBoardSharingTypeEnum.IdKey");
            $("#Id").val($("#WorkBoardUniqueId").val());
            $("#Key").val($("#WorkBoardKey").val());
            // $("#WorkBoardContributionType1").data("kendoDropDownList").value('@Model.WorkBoardContributionType');

        }
        else if (id == "invitetab-email") {
            $("#WorkBoardSharingType").val("@WorkBoardSharingTypeEnum.Email");
            $("#WorkBoardContributionType2").data("kendoDropDownList").value('@Model.WorkBoardContributionType');
        }
        else if (id == "invitetab-link") {
            $("#WorkBoardSharingType").val("@WorkBoardSharingTypeEnum.Link");
            $("#WorkBoardContributionType").data("kendoDropDownList").value('@Model.WorkBoardContributionType');
        }
        else {
            //nothing currently
        }
    })

    //function OnSubmit()
    //{
    //    
    //    var x = $("#myInput").val();
    //    if (x != null) {
    //        tags.push(x);
    //        $("#myInput").val('');
    //        addTags();

    //    }

        $("#EmailAddress").val(tags.join(","));

    //    tags = [];

    //    if ($("#WorkBoardSharingType").val() == "@WorkBoardSharingTypeEnum.Link") {

    //    }
    //    else if ($("#WorkBoardSharingType").val() == "@WorkBoardSharingTypeEnum.IdKey") {
    //        $("#WorkBoardContributionType").val($("#WorkBoardContributionType1").data("kendoDropDownList").value());
    //    }
    //    else
    //    {
    //        $("#WorkBoardContributionType").val($("#WorkBoardContributionType2").data("kendoDropDownList").value());
    //    }
    //}

    var dataSource = new kendo.data.DataSource({
        transport: {
            read: {
                url: "/Cms/Workboard/ReadUserData?noteId="+'@Model.NoteId',
                dataType: "json"
            }
        },
    });

    $("#userList").kendoMultiSelect({
        dataTextField: "Name",
        dataValueField: "Id",
        optionLabel: "--- Select ---",
        value: "Id",
        filter: "contains",
        dataSource: dataSource,
        autoClose: false,
        change: onSelect
    });

    function onSelect() {
        $('li.k-state-selected').hide();
    }

    function onShare() {
        
        var multiselect = $("#userList").data("kendoMultiSelect");
        var selectedData = [];
        var items = multiselect.value();
        for (var i = 0; i < items.length; i++) {
            //selectedData.push(items[i]);
            alert(items[i]);
            NoteShare(items[i]);

        }
       // console.log(selectedData);
        //console.log("@Model.NoteId");

    }

    //function FillSharingCount() {
    //    /*var win = GetMainWindow().GetParentWindow();*/
    //    var win = window.GetMainWindow();
    //    win.FillSharingCount();
    //}

    function NoteShare(userId)
    {

        
        var nts = '3ce4e54c-da40-4387-ac3f-60e91f8ea5a3';
        $.ajax({
                type: "POST",
            url: "/Cms/ShareNote",
            data: {
                'NtsNoteId': '@Model.NoteId',
               // 'userList' : $("#userList").data("kendoMultiSelect").value(),
                'SharedWithUserId': userId,
                //'SharedWithTeamId': $("#SharedWithTeamId").data("kendoDropDownList").value(),
                'NoteSharedWithTypeId': '1'
            },
            success: function (data) {

               // console.log(NtsNoteId);
                $("#listViewTM").data("kendoListView").dataSource.read({ noteId: '@Model.NoteId' });
                $("#userList").data("kendoMultiSelect").dataSource.read({ noteId: '@Model.NoteId' });
                //FillSharingCount();
                },
                dataType: "json",
            });
    }


     $(document).ready(function () {

          var dataSource = new kendo.data.DataSource({
              transport: {
                  read: {
                      url: "/Cms/ReadNoteSharedData?noteId="+'@Model.NoteId',
                      dataType: "json",
                  }
              },
          });

          $("#listViewTM").kendoListView({
              dataSource: dataSource,
              template: kendo.template($("#templateTM").html())
          });

     });

    function onDeleteClick(id) {
        console.log(id);
            $.ajax({
                type: "POST",
                url: "/Cms/DeleteNoteShared",
                data: { 'id': id},
                success: function (data) {
                  /*FillSharingCount();*/
                    $("#listViewTM").data("kendoListView").dataSource.read({ noteId: '@Model.NoteId' });
                    $("#userList").data("kendoMultiSelect").dataSource.read({ noteId: '@Model.NoteId' });
                },
                dataType: "json",
            });
    }

    //multiple email js

    $('#divStyle').click(function () {
        $('#myInput').focus();
    });

    const tagContainer = document.getElementById("tag-container");
    const input = document.getElementById("myInput");

    let tags = [];

    input.addEventListener('keyup', function (e) {
        if (e.keyCode === 32) {
            tags.push(input.value);
            addTags();
            input.value = '';
        }
    })

    function addTags() {
        reset();
        tags.slice().reverse().forEach(function (tag) {
            const input = createTag(tag);
            tagContainer.prepend(input);
        })
    }

    function reset() {
        document.querySelectorAll('.tag').forEach(function (tag) {
            tag.parentElement.removeChild(tag);
        })
        console.log(tags);
    }

    function createTag(label) {
        const div = document.createElement('div');
        div.setAttribute('class', 'tag');
        const span = document.createElement('span');
        span.innerHTML = label;
        const closeBtn = document.createElement('i');
        closeBtn.setAttribute('class', 'material-icons');
        closeBtn.setAttribute('data-item', label);
        closeBtn.innerHTML = 'x';

        div.appendChild(span);
        div.appendChild(closeBtn);
        return div;
    }

    document.addEventListener('click', function (e) {
        /**/
        if (e.target.tagName === 'I') {
            const value = e.target.getAttribute('data-item');
            const index = tags.indexOf(value);
            tags = [...tags.slice(0, index), ...tags.slice(index + 1)];
            addTags();
        }
    })
</script>

