@*@using Kendo.Mvc.UI*@
@using System.Text
@model Synergy.App.ViewModel.FlowchartViewModel
@{
    ViewBag.Title = "Position Hierarchy";
    Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
}
<script src="~/js/positionchartmenu.js"></script>
<link rel="stylesheet" href="~/css/orgchart.css" />
<style>
    .k-button.k-primary {
        border-color: #ff6358;
        color: #fff;
        background-color: #ff6358;
        background-image: linear-gradient(rgba(255,138,88,0),rgba(255,138,88,.2));
    }
</style>

<script type="text/javascript">
    var reset = true, chartMode = 'Normal', hierarchyId, asonDate,
        allowedParentId, hierarchyRootNodeId, isAsOnDate, permissionCSV, isAdmin, loggedInEmpId
        , loggedInPositionId, loggedInUserOrganizationMapping
        , loggedInOrgId, isAdmin, orgAllowedParentId, orgHierarchyRootNodeId;

    $(document).ready(function () {
        @*asonDate = $("#AsOnDate").val();
        hierarchyId = $("#HierarchyId").val();
        //assignmentId = $("#AssignmentId").val();
        allowedParentId = $("#AllowedRootNodeId").val();
        hierarchyRootNodeId = $("#HierarchyRootNodeId").val();
        chartMode='@ViewBag.ChartMode';
        permissionCSV = '@ViewBag.PermissonCSV';
        isAsOnDate = '@ViewBag.IsAsOnDate' =='True';
        isAdmin = '@ViewBag.IsAdmin'=='True';
        loggedInEmpId = '@ViewBag.LoggedInEmpId';
        loggedInPositionId = '@ViewBag.LoggedInPositionId';
        loggedInUserOrganizationMapping = '@ViewBag.LoggedInUserOrganizationMapping';
        loggedInOrgId = '@ViewBag.LoggedInOrgId';

        orgAllowedParentId ='@ViewBag.OrgAllowedRootNodeId';
        orgHierarchyRootNodeId ='@ViewBag.OrgHierarchyRootNodeId';*@

        $("#menu").find("ul").addClass("dropdown-menu");

        @*$("#menu-heirarchy-date").html('Hierarchy as-of: @ViewBag.AsOnDateDisplay');*@
        InitialLoad(@ViewBag.PositionId);

    });

    function showLegend() {

    }

    function ExportToPdf() {
        $("#Width").val($(".root-li").width());
        $("#Height").val($(".root-li").height());
        var html = $('.tree').prop('outerHTML');
        $("#Content").val($('<div/>').text(html).html());
        document.getElementById('exportToPdf').submit();
        return true;
    }
    function OnAsOnDateChange(e) {
        var params = window.location.search;
        params = RemoveParams(params, 'date');
        var url = window.location.pathname + '?' + params + '&date='+kendo.toString(this.value(), 'yyyy-MM-dd');
        window.location.href = url;
        return false;
    }
    function InitialLoad(posId) {
        var url = "/cms/template/GetChart?processdesignId=123";
        var li = $('.root-li');
        GetChildList(url, li, true, true, null);
    }
    $(document).on('click', function (e) {
        if ($(e.target).closest("#menu").length === 0 && $(e.target).closest(".hr-org-menu").length === 0) {
            $("#menu").hide();
        }
    });

     function closeNav() {
            document.getElementById("mymodernsidebar").style.width = "0";
              $("#modernnavopen").show();
            $("#modernnavclose").hide();
    }


    function Goto(type) {
        InitialLoad(null);
    }
    function PositionChartSearchCallBack(Positions) {
      
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
        Search(Positions.replace(',', ''));
        return false;
    }
    function Search(posId) {
        var url = "/hrs/positionchart/GetParentHierarchyWithAllChild?posId=" + posId
            + "&hierarchyId=" + hierarchyId + "&hierarchyRootId=" + hierarchyRootNodeId
            + "&allowedRootId=" + allowedParentId + "&date=" + asonDate;
        var li = $('.root-li');
        GetChildList(url, li, allowedParentId, true, posId);
    }
    function OnSearch() {
         
         var win = GetMainWindow();
        win.iframeOpenUrl = "/hrs/positionchart/search?hierarchyId=" + hierarchyId;
        win.OpenWindow({ Title: 'Search Position', Width: 1200, Height: 650, Position:'Right' });
        return false;
    }
    function FillNode(data, liData, parentLvl) {
        liData.Level = parentLvl;
        var html = "";
        var template = kendo.template($("#template-org").html());
        html = template(liData);
        var items = $.grep(data, function (element, index) {
            return element.ParentId == liData.Id;
        });
        //var parentLvl = eval(liData.Level);
        if (items != null && items.length > 0) {
            html = html.replace('hr-org-expand', 'hr-org-collapse');
            html += "<ul class='" + parentLvl + "'>"
            for (var i = 0; i < items.length; i++) {
                html += "<li id='" + items[i].Id +"' lvl='" + (eval(parentLvl) + 1) + "'>";
                html += FillNode(data, items[i], (eval(parentLvl) + 1));
                html += "</li>"
            }
            html += "</ul>";
        }
        return html;
    }

    function GetChildList(url, li, posId,includeParent,searchId) {
        //kendo.ui.progress($('.root-li'), true);
      // ShowLoader();
        $.ajax({
            url: url,
            type: 'GET',
            cache: false,
            //async: false,
            success: function (data) {
                if (includeParent) {

                    var parentData = $.grep(data, function (element, index) {
                        return element.Id == posId;
                    });
                    if (parentData != null && parentData.length > 0) {
                        var parentLvl = eval(li.attr('lvl'));
                        li.html(FillNode(data, parentData[0], parentLvl));
                    }
                }
                else {

                    var childData = $.grep(data, function (element, index) {
                        return element.ParentId == posId;
                    });

                    if (childData != null && childData.length > 0) {
                        var parentLvl = eval(li.attr('lvl'));
                        var html = "<ul class='" + parentLvl + "'>"
                        for (var i = 0; i < childData.length; i++) {
                            html += "<li id='" + childData[i].Id+"' lvl='" + (eval(parentLvl) + 1) + "'>";
                            html += FillNode(data, childData[i], (eval(parentLvl) + 1));
                            html += "</li>"
                        }
                        html += "</ul>";
                        li.append(html);
                    }
                }
               // HideLoader();
                if (searchId!=null) {
                    $("#org-" + searchId).addClass('focus');
                    FocusSearchResultNode();
                }
            },
            error: function (errData) {
                //OnError(errData);
               // HideLoader();
            }
        });
        return false;
    }
    function Expand(e, rootli) {
        var node = $(e).parent('div').parent('li');
        var lvl = eval(node.attr('lvl'));
        var id = eval(node.attr('id'));
        var ul = node.find('ul[class=' + lvl + ']');
        if (ul.length <= 0) {
              hierarchyId = $("#HierarchyId").val();
            var url = "/hrs/positionchart/GetChildList?parentId=" + id + "&parentLevel=" + lvl
                + "&includeParent=false&uptoLevel=1&hierarchyId=" + hierarchyId + "&hierarchyRootId=" + hierarchyRootNodeId
                + "&allowedRootId=" + allowedParentId + "&date=" + asonDate;
            var rootli = $('.root-li');
            GetChildList(url, node, id,false,null)
        }
        else {
            ul.show();
            OnComplete();
        }


    }
    function MultiLevelExpandCollapse(posId, level) {
        var node = $('#org-' + posId).parent('li');
        var lvl = eval(node.attr('lvl'));
        var id = eval(node.attr('id'));
        var ul = node.find('ul[class=' + lvl + ']');

        var ec = node.find('.hr-ec');
        ec.removeClass("hr-org-expand");
        ec.addClass("hr-org-collapse");
        if (ul.length > 0) {
            ul.remove();
        }
        hierarchyId = $("#HierarchyId").val();
        var url = "/hrs/positionchart/GetChildList?parentId=" + id + "&parentLevel=" + lvl
            + "&includeParent=false&uptoLevel=" + level+"&hierarchyId=" + hierarchyId + "&hierarchyRootId=" + hierarchyRootNodeId
            + "&allowedRootId=" + allowedParentId + "&date=" + asonDate;
        GetChildList(url, node, id, false, null)
    }
    function CollapseAll(posId) {
        var node = $('#org-' + posId).parent('li');
        var lvl = eval(node.attr('lvl'));
        var ec = node.find('.hr-ec');
        ec.removeClass("hr-org-collapse");
        ec.addClass( "hr-org-expand");
        var ul = node.find('ul[class=' + lvl + ']');
        ul.remove();
        OnComplete();
    }
    function Collapse(e, rootli) {
        var node = $(e).parent('div').parent('li');
        var lvl = eval(node.attr('lvl'));
        var ul = node.find('ul[class=' + lvl + ']');
        ul.remove();
        OnComplete();
    }
    function OnExpandCollapseClick(e) {
        var rootli = $('.root-li');
        OnBegin();
        var isExpand = $(e).hasClass('hr-org-expand');
        $(e).toggleClass('hr-org-expand hr-org-collapse');
        if (isExpand) {
            Expand(e, rootli);
        }
        else {
            Collapse(e, rootli);
        }

    }

    function OnManage(source, posId, relationshipId, hierarchyId) {
        var rsv = encodeURIComponent("/hrs/positionchart/index?a=1");
        if (type1 == "PositionExcel") {
            rsv = encodeURIComponent("/hrs/positionchart/index?type=PositionExcel");
        }
        var url = "/hrs/positionhierarchy/" + source + (posId == null ? "" : "?posId=" + posId) + "&relationshipId=" + relationshipId + "&hierarchyId=" + hierarchyId  + "&ru=" + rsv;
        window.location.href = url;
        return false;
    }
    function OnPositionManage(source, id) {
        var rsv = encodeURIComponent("/hrs/positionchart/index?a=1");
        if (type1 == "PositionExcel") {
            rsv = encodeURIComponent("/hrs/positionchart/index?type=PositionExcel");
        }
        var url = "/hrs/position/" + source + (id == null ? "" : "?id=" + id + "&ru=" + rsv + "&empId=" + empId + "&posId=" + posId + "&hierarchyId=" + hierarchyId + "&orgId=" + orgId + "&date=" + asonDate);
        window.location.href = url;
    }
    function OnAssignmnetManage(source, id) {
        var rsv = encodeURIComponent("/hrs/positionchart/index?a=1");
        if (type1 == "PositionExcel") {
            rsv = encodeURIComponent("/hrs/positionchart/index?type=PositionExcel");
        }
        var url = "/hrs/assignment/" + source + (id == null ? "" : "?id=" + id + "&ru=" + rsv + "&empId=" + empId + "&posId=" + posId + "&hierarchyId=" + hierarchyId + "&orgId=" + orgId + "&date=" + asonDate);
        window.location.href = url;
    }
    function OnPersonManage(source, id) {
        var rsv = encodeURIComponent("/hrs/positionchart/index?posId=" + posId);
        if (type1 == "PositionExcel") {
            rsv = encodeURIComponent("/hrs/positionchart/index?type=PositionExcel");
        }
        var url = "/hrs/person/" + source + (id == null ? "" : "?id=" + id + "&ru=" + rsv + "&empId=" + empId + "&posId=" + posId + "&hierarchyId=" + hierarchyId + "&orgId=" + orgId + "&date=" + asonDate);
        window.location.href = url;
    }
    function CloseNote(redirect, tempId) {
        var rsv = encodeURIComponent("/hrs/positionchart/index?posId=" + posId);
        if (type1 == "PositionExcel") {
            rsv = encodeURIComponent("/hrs/positionchart/index?type=PositionExcel");
        }
       
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
        if (redirect)
            window.location.href = "/nts/Note/Manage?tagtotype=Person&tagtoid=" + empId + "&templateMasterId=" + tempId + "&ru=" + rsv;
    }
    function CloseTask(redirect, tempId) {
        var rsv = encodeURIComponent("/hrs/positionchart/index?posId=" + posId);
        if (type1 == "PositionExcel") {
            rsv = encodeURIComponent("/hrs/positionchart/index?type=PositionExcel");
        }
      
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
        if (redirect)
            window.location.href = "/nts/Task/Manage?assignTo=" + userId + "&templateMasterId=" + tempId + "&ru=" + rsv;
    }
    function CloseService(redirect, tempId) {
        var rsv = encodeURIComponent("/hrs/positionchart/index?posId=" + posId);
        if (type1 == "PositionExcel") {
            rsv = encodeURIComponent("/hrs/positionchart/index?type=PositionExcel");
        }
       
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
        if (redirect)
            window.location.href = "/nts/Service/Manage?userId=" + userId + "&templateMasterId=" + tempId + "&ru=" + rsv;
    }
    function SelectCallBack(posId, jobId, empId, orgId) {

        var rs = $("#RequestSource").val();
        if (rs == "Recruitment") {

            var ru = "/rec/rechome/recsummary";
            ru = encodeURIComponent(ru);
            window.location.href = "/nts/service/serviceflow?layoutMode=Iframe&templateMasterCode=JOB_REQUEST&udfName1=positionId&udfValue1=" + posId + "&udfCode1=" + posId + "&udfName2=jobId&udfValue2=" + jobId + "&udfCode2=" + jobId + "&udfName3=orgId&udfValue3=" + orgId + "&udfCode3=" + orgId + "&udfName4=noOfPosition&udfValue4=1&udfCode4=1&ru=" + ru;
            //window.location.href = "/nts/service/serviceflow?layoutMode=Iframe&templateMasterCode=JOB_REQUEST&udfName1=positionId&udfValue1=" + posId + "&udfName2=jobId&udfValue2=" + jobId + "&udfCode2=" + jobId + "&udfName3=empId&udfValue3=" + empId + "&udfName4=orgId&udfCode4=" + orgId + "&udfValue4=" + orgId +"&ru="+ru;
            //window.location.href = "/nts/service/manage?layoutMode=Iframe&templateMasterCode=JOB_REQUEST&udfName1=positionId&udfValue1=" + posId + "&udfName2=jobId&udfValue2=" + jobId;
        }
    }
</script>
@*@Html.ValidationSummary(false, "", new { @class = "k-block k-error-colored hr-v-summary text-danger" })*@

@Html.HiddenFor(x => x.HierarchyId)
@Html.HiddenFor(x => x.AllowedRootNodeId)
@Html.HiddenFor(x => x.HierarchyRootNodeId)
@Html.HiddenFor(x => x.AllowedRootNodeLevel)
@Html.HiddenFor(x => x.AsOnDate)
<div id="appWrapper">
    
    <script type="text/x-kendo-template" id="template-org">
        <div class="org-node org-node-3" id="org-#:data.Id#">
        <div class="row no-gutters">
            <div class="col-2 chart-item #:data.CssClass#" style="font-size:20px;padding-top:10px">
                # if (data.ComponentType===1) { #
                  <i  class="fa fa-play"></i>
                # }  else if (data.ComponentType===2) {#
                    <i class="fa fa-stop"></i>
                 # }  else if (data.ComponentType===4) {#
                    <i class="fa fa-folder-tree"></i>
               # }  else if (data.ComponentType===6) {#
                    <i class="fa fa-sitemap"></i>
          # }  else if (data.ComponentType===7) {#
                    <i class="fa fa-scroll"></i>
            # }  else if (data.ComponentType===8) {#
              <i class="fa fa-check"></i>
             # }  else if (data.ComponentType===9) {#
              <i class="fa fa-times"></i>
           # }  else {#
                 <i class="fa fa-question"></i>
           # } #
            </div>

            <div class="col-8 chart-item chart-text" style="white-space:normal;">
                #:Name #
            </div>
         <div class=" col-2 chart-menu">
                <span id="hr-org-menu-#:data.Id#" EmpId="#:data.PersonId#" EmpNumber="#:data.EmployeeNo#"
                      orgId="#:data.OrganizationId#" hc="#:data.DirectChildCount#" lvl="#:data.Level#"
                      jd="#:data.JobDescriptionId#" jobId="#:data.JobId#" rl="#:data.ReportingLine#"
                      orl="#:data.OrganizationReportingLine#" et="#:data.EmployeeTypeId#" pt="#:data.PositionTypeId#"
                      pPosId="#:data.ParentId#" nt="#:data.NodeTypeCode#" phs="#:data.PositionHiringStatusId#"
                      pjobId="#:data.ParentJobId#" posHierarchyId="#:data.PosHierarchyId#" amId="#:data.AssignmentId#"
                      userId="#:data.UserId#" posId="#:data.Id#"
                      class="fa fa-ellipsis-v" onclick="OpenContextMenu(this)">
                </span>
            </div>

        </div>
        </div>
    </script>


    @*<div class="chartTitle">
            @ViewBag.Title
        </div>*@
    <div class="tree" style="display:inline-flex;min-width:100%;text-align:center;">
        <ul class="0">
            <li class="root-li" lvl='0' id="@Model.AllowedRootNodeId">
            </li>
        </ul>
    </div>

</div>

 
 




