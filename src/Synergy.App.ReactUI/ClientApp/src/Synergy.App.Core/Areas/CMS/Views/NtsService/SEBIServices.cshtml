@inject IStringLocalizer<Synergy.App.WebUtility.Resources.Areas.Csc.Controllers.CommonServiceController> Resource
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using System.Web;
@model ServiceViewModel
@{
    ViewBag.Title = "All Task";
    Layout = null;
}
@inject IUserContext usercontext;

<script type="text/javascript">

    function onBack()
    {
        window.location.href = "@ViewBag.SmartCityUrl";
    }

    $(document).ready(function () {

    });

    var isFiltered = false;
    function OpenService(serviceId, tempCode) {

        var id = serviceId;
        var source = '@RequestSourceEnum.View.ToString()';
        var action = '@DataActionEnum.View.ToString()';

        var portalId = $('#GlobalPortalId').val();

        var url = '/Cms/Page?lo=Popup&pageType=Service&cbm=OnAfterServiceCreate&source=' + source + '&dataAction=' + action + '&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title:  'Service', Width: 1200, Height: 600 });
        return false;
    }

    function IframePostbackScript() {
        getService();
        getService1();
    }

    function OnPayment(id, tableId, amount,assigneeUserId) {

        ShowLoader($('#container'));
        var returnUrl = "/Portal/CSC/MyPayments/";
        $.ajax({
            type: "POST",
            url: "/CSC/CommonService/OnlinePayment",
            data: { 'ntsId': id, 'noteTableId': tableId, 'amount': amount, 'ntsType': '@NtsTypeEnum.Task', 'assigneeUserId': assigneeUserId, 'returnUrl': returnUrl },
            success: function (res) {

                if (res.success) {
                    if (res.requestURL === null || res.requestURL === '' || res.requestURL === undefined) {
                        HideLoader($('#container'));
                        alert('Payment gateway not found');
                        return false;
                    }
                    else {
                        window.top.location.href = res.requestURL;
                    }
                } else {
                    ShowNotification(res.error, "error");
                    HideLoader($('#container'));
                }
            },
            dataType: "json",
        });
    }

    var gId, gTableId, gAmount, gAssigneeUserId;
    function OnPaymentClick(id, tableId, amount, assigneeUserId) {
        gId = id;
        gTableId = tableId;
        gAmount = amount;
        gAssigneeUserId = assigneeUserId;
        $('#payConfirmModal').modal('show');
    }

    function OnPaymentConfirm() {
        $('.payment-body').html('Please wait while we are redirecting to payment gateway...');
        OnPayment(gId, gTableId, gAmount, gAssigneeUserId);
        return false;
    }

</script>

<style>
    .dropdown-toggle::after {
        content: none;
    }

    .iconwothtext {
        display: flex;
        cursor: pointer;
        align-items: center;
    }

    .leftmenustyle {
        font-size: 14px;
        color: #4b4f56;
        margin-bottom: 6px;
        font-weight: normal;
        margin-top: 6px;
        padding-left: 5px;
        border-bottom: 1px medium rgba(255, 255, 255, .5);
    }

    .col-1 {
        flex: none !important;
    }
    /* The hero image */
    .head-image {
        object-fit: fill;
    }

    /* Place text in the middle of the image */
    .head-text {
        text-align: left;
        position: absolute;
        top: 28%;
        color: white;
    }

    .head-img {
        max-width: 100%;
        max-height: 149px;
        width: 100%;
        object-fit: none;
    }

    .main {
        margin-top: 1%;
        text-align: right;
    }

    /* Bootstrap 4 text input with search icon */

    .has-search .form-control {
        padding-left: 2.375rem;
        /*width: 100%;*/
    }

    .form-group {
        width: 40%;
    }

    .has-search .form-control-feedback {
        position: absolute;
        z-index: 2;
        display: block;
        width: 2.375rem;
        height: 2.375rem;
        line-height: 2.375rem;
        text-align: center;
        pointer-events: none;
        color: #aaa;
    }

    .task-card {
        margin-left: 15px;
        margin-bottom: 30px;
        margin-top: 1%;
        border-radius: 6px;
        color: #333;
        background: #fff;
        width: 98%;
        box-shadow: 0 4px 20px 0 rgb(0 0 0 / 14%), 0 7px 10px -5px #fff;
        position: relative;
        display: flex;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid #eee;
        min-height: 160px;
    }

    .sub-div {
        overflow-y: scroll;
        height: 260px;
        overflow-x: hidden;
    }

    .card-heading {
        margin-left: 1%;
        font-weight: bold;
        margin-top: 12px;
    }

    .item-hover:hover {
        background-color: #d3d3d340;
        cursor: pointer !important;
    }

    .no-data {
        text-align: center;
        margin-top: 5%;
        font-size: 16px;
        font-weight: 500;
        display: none;
    }

    .no-data-icon {
        color: #c8aa4d;
        font-size: 40px;
    }

    .k-dropdown:hover {
        transform: none !important;
    }

    .k-select:hover {
        transform: none !important;
    }

    .k-input:hover {
        transform: none !important;
    }

    .k-state-hover :hover {
        transform: none !important;
    }

    span:hover {
        transform: none !important;
    }

    .k-link:hover {
        transform: none !important;
    }

    h6:hover {
        transform: none !important;
    }

    .form-control:hover {
        transform: none !important;
    }

    input:hover {
        transform: none !important;
    }

    .task-title {
        padding: 10px;
        background-color: #1c4893;
        font-weight: bold;
        text-align: left;
        color: #ffffff;
        margin-left: 0px;
        margin-right: 10px;
    }
</style>


<div id="appWrapper" class="wrapper">
    <div class="page">
        
        <div class="page-inner">
            <div class="page-section">
                <div class="row main">
                    <div class="col-sm-6 form-group" style="text-align:left;">
                        @if (ViewBag.IsDisableCreate == false)
                        {
                            <button onclick="createService()" class="btn btn-primary">Create Service</button>
                        }
                    </div>
                    <!-- Actual search box -->
                    @*<div class="col-sm-6 form-group has-search pull-right">*@

                    @*<span class="fa fa-search form-control-feedback"></span>
            <input id="mysearch" type="text" class="form-control" placeholder="Search by Service No and Service Subject">*@
                    @*</div>*@
                </div>
                <div class="card card-fluid">
                    <!-- .card-header -->
                    <div class="card-header">
                        <!-- .nav-tabs -->
                        <ul class="nav nav-tabs card-header-tabs">
                            <li class="nav-item">
                                <a class="nav-link active show" data-toggle="tab" href="#pending">Pending</a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" data-toggle="tab" href="#completed">Completed</a>
                            </li>

                        </ul><!-- /.nav-tabs -->
                    </div><!-- /.card-header -->
                    <!-- .card-body -->
                    <div class="card-body">
                        <!-- .tab-content -->
                        <div id="myTabContent" class="tab-content">
                            <div class="tab-pane fade active show" id="pending">
                                <div id="myGridService" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                            </div>
                            <div class="tab-pane fade" id="completed">
                                <div id="myGridService1" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                            </div>
                        </div><!-- /.tab-content -->
                    </div><!-- /.card-body -->
                </div>
            </div>
        </div>
    </div>
</div>






<script>

    function IframePostbackScript() {
        getService();
        getService1();
    }

    function OnAfterServiceCreate(task) {
        getService();
        getService1();
    }

    function createService() {
        var portalId = $('#GlobalPortalId').val();
        var url = '@Url.Action("SelectServiceTemplate", "NtsService",new {area="Cms" })?templateCode=@Model.TemplateCode&categoryCode=@Model.TemplateCategoryCode&userId=' + '@ViewBag.UserId';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Select Service', Width: 1000, Height: 600, Position: 'Right1' });
        return false;
    }

    var columnDefs = [
        { field: "OwnerDisplayName", minWidth: 150, headerName: "@Resource["Service Owner"]" },
        { field: "TemplateDisplayName", minWidth: 150, headerName: "Service Type" },
        {
            field: "ServiceSubject", minWidth: 220, headerName: "@Html.Raw(SharedResource["TaskSubject"])",
            cellRenderer: params => {
                return "<a style='cursor:pointer;color:blue;' href='javascript:OpenService(\"" + params.data.Id + "\",\"" + params.data.TemplateCode + "\");'>" + params.value + " </a>";
            }
        },
        { field: "ServiceNo", headerName: "@Html.Raw(SharedResource["ServiceNo"])", minWidth: 150 },
        { field: "ServiceStatusName", headerName: "Status", minWidth: 150 },
        {
            field: "StartDate", headerName: "@Html.Raw(SharedResource["StartDate"])", minWidth: 150,
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "." + (date.getMonth() + 1) + "." + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }
        },
        {
            field: "DueDate", headerName: "@Html.Raw(SharedResource["DueDate"])", minWidth: 150,
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "." + (date.getMonth() + 1) + "." + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }
        },
        ];


    $(function () {
        getService();
        getService1();
    });

    function getService() {
        document.getElementById("myGridService").innerHTML = "";
        @*var url = "/EGov/EGovernment/ReadTaskDataInProgress?portalNames=" + '@ViewBag.PortalNames';*@

        gridConfig(
            "myGridService",
            "/Cms/NtsService/ReadSEBIServiceDataInProgress?portalNames=" + '@ViewBag.PortalNames'+"&moduleCodes=" + '@Model.ModuleCode' + "&templateCodes=" + '@Model.TemplateCode' + "&categoryCodes=" + '@Model.TemplateCategoryCode' + "&showAllOwnersService=" + '@ViewBag.ShowAllOwnersService' + "&isDisableCreate=" +'@ViewBag.IsDisableCreate' ,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    function getService1() {
        document.getElementById("myGridService1").innerHTML = "";
        @*var url = "/EGov/EGovernment/ReadTaskDataInProgress?portalNames=" + '@ViewBag.PortalNames';*@

        gridConfig(
            "myGridService1",
            "/Cms/NtsService/ReadServiceDataCompleted?portalNames=" + '@ViewBag.PortalNames'+"&moduleCodes=" + '@Model.ModuleCode' + "&templateCodes=" + '@Model.TemplateCode' + "&categoryCodes=" + '@Model.TemplateCategoryCode' + "&showAllOwnersService=" + '@ViewBag.ShowAllOwnersService' + "&isDisableCreate=" +'@ViewBag.IsDisableCreate'  ,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

</script>

