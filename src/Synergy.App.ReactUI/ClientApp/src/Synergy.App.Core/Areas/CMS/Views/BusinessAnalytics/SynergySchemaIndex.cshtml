
@using Synergy.App.ViewModel;
@using Synergy.App.Common;


@model SynergySchemaViewModel


<script>



    function SchemaCreation() {


        var url = "/Cms/BusinessAnalytics/SynergySchema";
        //window.location.href = url;
        LoadPartailView(url, $('#cms-content'));


    }

    function SchemaEdit(id) {
        var url = "/Cms/BusinessAnalytics/SynergySchema?Id=" + id;
        //window.location.href = url;
        LoadPartailView(url, $('#cms-content'));


    }
    function deleteSchema(id) {
        var flag = confirm('Do you really want to delete the schema?');
        if (flag) {
            $.ajax({
                url: '@Url.Action("DeleteDbConnection", "BusinessAnalytics", new { @area="Cms"})?id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                       // $("#KgrdSchema").data("kendoGrid").dataSource.read();
                        getSchemaData();
                        //kendo.alert("Schema Deleted Successfully.");
                        ShowNotification("Schema Deleted Successfully", "success");
                    }
                },
                error: function (ert) {
                    ShowNotification("Schema Deleted Failed", "danger");
                    getSchemaData();
                   // $("#KgrdSchema").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }

    $(function () {

        
        getSchemaData();
        $.contextMenu({
            selector: '#tree-menuBin',
            trigger: 'left',
            build: function ($trigger, e) {

                var id = $trigger.data('idvalue');
                var status = $trigger.data('status');
                var noteid = $trigger.data('noteid');

                //var portalName = $trigger.data('portal-name');

                switch (status) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        SchemaEdit(id);
                                        break;

                                    case 'delete':
                                        deleteSchema(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-pencil" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },
                            }
                        };


                }
            }
        });

    });

    var columnDefs1 = [
        {
            field: "Id",
            headerName: "Action",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin' data-idvalue='" + params.data.Id + "' data-status=\"0\" data-noteid='" + params.data.NoteId +"' ><i class='fas fa-ellipsis-v'></i></div>";
            }
        },

       {
           field: "SchemaName",
           headerName: "Schema Name",

        },
        {
            field: "Query",
           headerName: "Query"

        },
        {
            field: "CreatedBy",
            headerName: "CreatedBy"
        },
       


    ];



    function getSchemaData() {
        document.getElementById("KgrdSchema").innerHTML = "";

        gridConfig(
            "KgrdSchema",
            "/Cms/BusinessAnalytics/ReadDataIndex",
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>

<div class="row">
    <div class="col-12" style="padding:30px">
        <button class="btn btn-primary" onclick="SchemaCreation();" title="New Schema">@SharedResource["Create"]</button>
        <div class="panel panel-primary">
            
            <div class="panel-body">
                <div id="KgrdSchema" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                @*@(Html.Kendo().Grid<SynergySchemaViewModel>
        ()
        .Name("KgrdSchema")

        .ToolBar(toolbar =>
        toolbar.ClientTemplate("<button class='btn btn-primary' onclick='SchemaCreation(); ' title='New Schema'>"+@SharedResource["Create"]+"</button>"))

        .Columns(columns =>
         {
             columns.Bound(c => c.Id).ClientTemplate("<div class='btn-group grid-menu' id='tree-menuBin' data-idvalue=\"#:Id#\" data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>").Width(150).Title(@SharedResource["Action"]);
             columns.Bound(p => p.SchemaName).Title("Schema Name").Width(170);
             columns.Bound(p => p.Query).Title("Query").Width(270);
             columns.Bound(p => p.CreatedBy).Width(150);


         })
        .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(10)
         .Model(model =>
         {
             model.Id(p => p.Id);
             model.Id(p => p.NoteId);

         })
        .Read(read => read.Action("ReadDataIndex", "BusinessAnalytics"))
        )




        .HtmlAttributes(new { style = "height: 550px"})
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .Filterable()
        .Scrollable(x => x.Enabled(true))
        .Sortable(srt => srt.Enabled(true))
        .Resizable(r => r.Columns(true))

        //.Pageable(pageable => pageable
        //                             .Refresh(true)
        //                             .PageSizes(new[] { 10, 50, 100, 200, 500 })
        //                             .ButtonCount(10))
        )*@
            </div>
        </div>
        </div>
    </div>
<script>

</script>