@{

    ViewData["Title"] = "Template";
    Layout = "/Views/Shared/_PopupLayout.cshtml";

}
@using CMS.UI.ViewModel;
@using CMS.Common;
@model TemplateViewModel;

<style>
    .k-panelbar {
        width: 800px;
    }
</style>

@*<div id="appWrapper">*@
@(Html.Kendo().PanelBar()
    .Name("panelbar")
    .ExpandMode(PanelBarExpandMode.Multiple)
    .Items(panelbar =>
    {
        panelbar.Add().Text("Basic Settings")
         .Content(@<div style="padding: 20px;">

          <table style="width:100%">
              <tr>

 @*<div class="form-group col-xs-12 col-sm-12">*@
               <th>
            <div class="col-xs-6 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.FieldId, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-xs-6">

                @(Html.Kendo().DropDownList()
             //  .Events(e => e.Change("SourceOfLeadChange"))
               .Name("FieldValues")
                 .DataSource(source =>
                 {
                     source.Read(read =>
                     {
                         read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "ControlTypeEnum" });
                     });
                 })
               .DataTextField("Name")
               .DataValueField("Id")
              //  .Events(e => e.Change("OnSelectField"))
               .Filter(FilterType.Contains)

             // .OptionLabel(@Constant.PlaceHolder_SelectOption)
             //  .HtmlAttributes(Model.ModifyPermission.SetReadOnlyWithClass(() => Model.SourceOfLead, "hr-xx-large"))
             //.Enable(Model.Operation == DataOperation.Create ? true : false
             //  .BindTo(ApplicationExtension.SelectListFor(typeof(ControlTypeEnum), Model.FieldValues))
             )
            </div></td></tr>
        @*</div>*@
               <tr>
                   <th>
                      @*<div class="form-group col-xs-12 col-sm-12">*@
            <div class="col-lg-6 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.GridTemplateFieldId, new { @class = "control-label" })
            </div></th>
                   <td>
            <div class="col-lg-6">
                @(Html.Kendo().DropDownListFor(model => model.GridTemplateFieldId)
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "ControlTypeEnum" });
                                                //  read.Action("GetIdNameListByPartialViewName", "TemplateField").Data("FilterGridList");
                                            });
                                        })
                                          .OptionLabel("Select")
                                      //  .Value("Select")
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        .Filter(FilterType.Contains)
                                     //   .Events(e=>e.Change("OnSelectGrid"))
                                        .HtmlAttributes(new { @class = "hr-xx-large" })
                                   )
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
                  <th>

                        @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.FieldName, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.FieldName).HtmlAttributes(new { @class = "form-control hr-xx-large", pattern = "[A-Za-z0-9_]", validationmessage = "Special charactor not allowed except underscore" })
                <script>
                    $("#FieldName").on("keyup", function (event) {
                        var fieldName = $("#FieldName").val();
                        //fieldName = fieldName.replace(/([A-Z]+)/g, " $1").replace(/([A-Z][a-z])/g, " $1")
                        var result = fieldName.replace(/([A-Z])/g, " $1");
                        var finalResult = result.charAt(0).toUpperCase() + result.slice(1);
                        $("#LabelDisplayName").val(finalResult);
                    });
                </script>
            </div>
        @*</div>*@

                  </td></tr>
         <tr>
             <th>
          @*<div class="form-group col-xs-12 col-sm-9">*@
            <div class="col-lg-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.ViewableContexts, new { @class = "control-label" })
            </div></th>
                <td>
            <div class="col-lg-12">
                @(Html.Kendo().MultiSelect()
                  .Name("ViewableContext")
                  .AutoClose(false)
                  .Placeholder("Select...")
                    .DataSource(source =>
                    {
            source.Read(read =>
            {
                read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsActionEnum" });
            });
        })
                  // .BindTo(ApplicationExtension.SelectListFor(typeof(NtsActionEnum), Model.ViewableContexts))
                  .DataTextField("Name")
                  .DataValueField("Id")
                  .AutoBind(true)
                 .Value(Model.ViewableCont)
                  .HtmlAttributes(new { @class = "hr-xx-large" })
                  .Height(300)
                    )
            </div>
        @*</div>*@
                  </td>
              </tr>

              <tr>
                  <th>
  @*<div class="form-group col-xs-12 col-sm-9">*@
            <div class="col-lg-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.EditableBy, new { @class = "control-label" })
            </div></th>
                    <td>
            <div class="col-lg-12">
                @(Html.Kendo().MultiSelect()
                                    .Name("EditableBy")
                                    .AutoClose(false)
                                    .Placeholder("Select UserType...")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsUserTypeEnum" });
                                          });
                                      })
                                    //  .BindTo(ApplicationExtension.SelectListFor(typeof(NtsUserTypeEnum), Model.EditableBys))
                                    .DataTextField("Name")
                                   .DataValueField("Id")
                                   .AutoBind(true)
                                   .Value(Model.Editable)
                                    .HtmlAttributes(new { @class = "hr-xx-large" })
                                    .Height(300)
                    )
            </div>
        @*</div>*@
                  </td></tr>
              <tr>

  @*<div class="form-group col-xs-12 col-sm-9">*@
                  <th>
            <div class="col-lg-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.EditableContext, new { @class = "control-label" })
            </div>
                   </th>
                  <td>
            <div class="col-lg-12">
                @(Html.Kendo().MultiSelect()
          .Name("EditableContext")
          .AutoClose(false)
          .Placeholder("Select...")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsActionEnum" });
                    });
                })
          // .BindTo(ApplicationExtension.SelectListFor(typeof(NtsActionEnum), Model.EditableContexts))
          .DataTextField("Name")
          .DataValueField("Id")
          .AutoBind(true)
          .Value(Model.EditableCont)
          .HtmlAttributes(new { @class = "hr-xx-large" })
          .Height(300)
                    )
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
                  <th>
 @*<div class="form-group col-xs-12 col-sm-9">*@
            <div class="col-lg-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.ViewableBy, new { @class = "control-label" })
            </div></th>
                   <td>
            <div class="col-lg-12">
                @(Html.Kendo().MultiSelect()
                          .Name("ViewableBy")
                          .AutoClose(false)
                          .Placeholder("Select UserType...")
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsUserTypeEnum" });
                                });
                            })
                        //   .BindTo(ApplicationExtension.SelectListFor(typeof(NtsUserTypeEnum), Model.ViewableBys))
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .AutoBind(true)
                        .Value(Model.Viewable)
                          .HtmlAttributes(new { @class = "hr-xx-large" })
                          .Height(300)
                    )
            </div>
        @*</div>*@
                  </td>
              <tr/>
              <tr>
                  <th>
 @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.SequenceNo, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @Html.Kendo().NumericTextBoxFor(m => m.SequenceNo).HtmlAttributes(new { @class = "form-control hr-small" })
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
               <th>
  @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ViewableByStepTasks, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @(Html.Kendo().MultiSelectFor(x => x.ViewableByStepTasks)
                            .AutoClose(false)
                            //  .Placeholder(@Constant.PlaceHolder_SelectOption)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    //  read.Action("GetIdNameList", "ServiceTaskTemplate", new { serviceTemplateId = Model.TemplateId });
                                });
                            })
                            //  .DataTextField("Name")
                            //   .DataValueField("Id")
                            //    .AutoBind(true)
                            .HtmlAttributes(new { @class = "hr-xx-large" })
                            //.Events(e => e.Change("OnChangeForDynamicMethod"))
                            //.ValuePrimitive(true)
                            //  .Value(Model.ViewableByStepTaskData)
                            .Height(300)
                    )
            </div>
        @*</div>*@
                  </td></tr>
              <tr>
                <th>
 @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DataSourceActionName, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.DataSourceActionName).HtmlAttributes(new { @class = "form-control hr-large" }).Enable(false)
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>

                <th>
 @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DataSourceControllerName, new { @class = "control-label" })
            </div>
                    </th>
                  <td>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.DataSourceControllerName).HtmlAttributes(new { @class = "form-control hr-large" }).Enable(false)
            </div>
        @*</div>*@
                  </td></tr>
             <tr>
                 <th>
 @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DataSourceAreaName, new { @class = "control-label" })
            </div>
                     </th>
                 <td>
            <div class="col-lg-12">
                @*@Html.Kendo().TextBoxFor(m => m.DataSourceAreaName).HtmlAttributes(new { @class = "form-control hr-large" })*@
                @(Html.Kendo().DropDownList()
                                  .Name("DataSourceAreaName").Enable(false)
                                   .DataSource(source =>
                                   {
                                       source.Read(read =>
                                       {
                                           read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "AreaEnum" });
                                       });
                                   })

                        .DataTextField("Name")
                        .DataValueField("Id")
                                  //    .DataTextField("Text")
                                  //      .DataValueField("Value")
                                  // .OptionLabel(@Constant.PlaceHolder_SelectOption)
                                  //     .Filter(FilterType.Contains)
                                  .HtmlAttributes(new { @class = "hr-x-large" })
                                  //  .BindTo(EnumExtension.SelectListFor(typeof(AreaEnum), Model.DataSourceAreaName))
                                  )
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
                <th>
                       @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DataTextField, new { @class = "control-label" })
            </div>
                    </th>  <td>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.DataTextField).HtmlAttributes(new { @class = "form-control hr-large" }).Enable(false)
            </div>
        @*</div>*@
                  </td></tr>
               <tr>
                   <th>
  @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DataValueField, new { @class = "control-label" })
            </div></th>
                   <td>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.DataValueField).HtmlAttributes(new { @class = "form-control hr-large" }).Enable(false)
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
                 <th>
 @*<div class="form-group col-xs-12">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DataSourceHtmlAttributesString, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DataSourceHtmlAttributesString, new { @class = "k-textbox hr-xxx-large", rows = "6",disabled= "disabled" })
            </div>
        @*</div>*@
                  </td></tr>
              <tr>
                <th>
  @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.HelpInfo, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.HelpInfo).HtmlAttributes(new { @class = "form-control hr-large" })
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
                <th>
  @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.AdditionalInfo, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.AdditionalInfo, new { @class = "k-textbox hr-large", rows = "3" })
            </div>
        @*</div>*@
                  </td></tr>
              <tr>
                  <th>
     @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.RequiredTypeCode, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @(Html.Kendo().DropDownListFor(m => m.RequiredTypeCode)
                      .DataSource(source =>
                      {
                          source.Read(read =>
                      {
                         // read.Action("GetIdNameList", "ListOfValue", new { area = "General", lovTypeCode = "REQUIRED_TYPE" });
                      });
                      })
                     // .OptionLabel(@Constant.PlaceHolder_SelectOption)
                      .DataTextField("Name")
                      .DataValueField("Code")
                      .Filter(FilterType.Contains)
                      .HtmlAttributes(new { @class = "hr-x-large" }))
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
                 <th>
   @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.RequiredClientScript, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.RequiredClientScript, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        @*</div>*@
                  </td></tr>
                 <tr>
                     <th>
 @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.RequiredServerScript, new { @class = "control-label" })
            </div></th><td>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.RequiredServerScript, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
                 <th>
@*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ReadonlyTypeCode, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @(Html.Kendo().DropDownListFor(m => m.ReadonlyTypeCode)
                                       .DataSource(source =>
                                       {
                                           source.Read(read =>
                                           {
                                              // read.Action("GetIdNameList", "ListOfValue", new { area = "General", lovTypeCode = "READONLY_TYPE" });
                                           });
                                       })
                                      // .OptionLabel(@Constant.PlaceHolder_SelectOption)
                                       .DataTextField("Name")
                                       .DataValueField("Code")
                                       .Filter(FilterType.Contains)
                                       .HtmlAttributes(new { @class = "hr-x-large" }))
            </div>
        @*</div>*@
                  </td></tr>
              <tr>
                 <th>
@*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ReadOnlyClientScript, new { @class = "control-label" })
            </div></th>
                  <td>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ReadOnlyClientScript, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        @*</div>*@
                  </td>
              </tr>
              <tr>
               <th>
 @*<div class="form-group col-xs-12 col-sm-6">*@
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ReadOnlyServerScript, new { @class = "control-label" })
            </div></th> 
                  <td>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ReadOnlyServerScript, new { @class = "k-textbox hr-large", rows = "3" })
            </div>
        @*</div>*@
                  </td>
              </tr>
              </table>


    </div>);
         panelbar.Add().Text("Styles")
            .Expanded(false)
            .Content(@<div style="padding: 20px;">
    <table style="width:100%">
        <tr>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
               <div class="col-xs-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.LabelDisplayName, new { @class = "control-label" })
            </div>
            <div class="col-xs-12">
                @Html.Kendo().TextBoxFor(m => m.LabelDisplayName).HtmlAttributes(new { @class = "hr-xx-large" })
            </div>
              </div>
            </td>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-xs-12 label-div">
                @Html.LabelFor(m => m.LabelColumnWidth, new { @class = "control-label" })
            </div>
            <div class="col-xs-12">
                @(Html.Kendo().DropDownListFor(m => m.LabelColumnWidth)
                                                                                            .DataTextField("Text")
                                                                                            .DataValueField("Value")
                                                                                            .SelectedIndex(2)
                                                                                            .BindTo(new List<SelectListItem>() {

                                                                        new SelectListItem() {Text = "1", Value = "1"},
                                                                        new SelectListItem() {Text = "2", Value = "2"},
                                                                        new SelectListItem() {Text = "3", Value = "3"},
                                                                        new SelectListItem() {Text = "4", Value = "4"},
                                                                        new SelectListItem() {Text = "5", Value = "5"},
                                                                        new SelectListItem() {Text = "6", Value = "6"},
                                                                        new SelectListItem() {Text = "7", Value = "7"},
                                                                        new SelectListItem() {Text = "8", Value = "8"},
                                                                        new SelectListItem() {Text = "9", Value = "9"},
                                                                        new SelectListItem() {Text = "10", Value = "10"},
                                                                        new SelectListItem() {Text = "11", Value = "11"},
                                                                                            })
                                                                                            .HtmlAttributes(new { @class = "form-control hr-xx-large" })
                    )
            </div>
        </div>
            </td>
        </tr>
         <tr>
            <td>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.FieldWidthCode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">

                @(Html.Kendo().DropDownList()
               //  .Events(e => e.Change("SourceOfLeadChange"))
               .Name("FieldWidthCode")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetSynergyLOV", "Template",new {Code="FIELD_WIDTH"});
                    });
                })
               .DataTextField("Name")
               .DataValueField("Code")
               .Filter(FilterType.Contains)
            // .OptionLabel(@Constant.PlaceHolder_SelectOption)
            //  .HtmlAttributes(Model.ModifyPermission.SetReadOnlyWithClass(() => Model.SourceOfLead, "hr-xx-large"))
            //.Enable(Model.Operation == DataOperation.Create ? true : false
            //   .BindTo(ApplicationExtension.SelectListFor(typeof(FieldWidthCodeEnum), Model.FieldWidthCode))
            )
            </div>
        </div>

            </td>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.MinimumValue, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.MinimumValue).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
            </td>
        </tr>
         <tr>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.MaximumValue, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.MaximumValue).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
            </td>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DecimalPrecision, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().IntegerTextBoxFor(m => m.DecimalPrecision).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
            </td>
        </tr>
         <tr>
            <td>
                 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DataFormatString, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.DataFormatString).HtmlAttributes(new { @class = "form-control hr-large" })
            </div>
        </div>
            </td>
            <td>
  <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.NumberOfLines, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().IntegerTextBoxFor(m => m.NumberOfLines).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
            </td>
        </tr>
         <tr>
            <td>
  <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.EnableDropdownGrouping, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.EnableDropdownGrouping).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
            </td>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.LabelColorHexa, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.LabelColorHexa).HtmlAttributes(new { @class = "form-control hr-large" })
            </div>
        </div>
            </td>

        </tr>
         <tr>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.IsLabelItalic, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.IsLabelItalic).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
            </td>
            <td>
                  <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.IsLabelUnderlined, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.IsLabelUnderlined).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
            </td>
        </tr>
         <tr>
             <td>
             <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.HyperlinkTarget, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @(Html.Kendo().DropDownList()
                        .Name("HyperlinkTarget")
                          .DataSource(source =>
                            {
                            source.Read(read =>
                               {
                                  read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "HyperlinkTargetEnum" });
                                });
                             })
                          .DataTextField("Name")
                          .DataValueField("Id")
                         //.OptionLabel(@Constant.PlaceHolder_SelectOption)
                          .Filter(FilterType.Contains)
                          .HtmlAttributes(new { @class = "hr-large" })
                         // .BindTo(EnumExtension.SelectListFor(typeof(HyperlinkTargetEnum), Model.HyperlinkTarget))
                         )
                </div>
            </div>
                 </td>
             <td>
            <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.PopupHeight, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @Html.Kendo().IntegerTextBoxFor(m => m.PopupHeight).HtmlAttributes(new { @class = "form-control hr-large" })
                </div>
            </div>
                 </td>
         </tr>
        <tr>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.PopupWidth, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @Html.Kendo().IntegerTextBoxFor(m => m.PopupWidth).HtmlAttributes(new { @class = "form-control hr-large" })
                </div>
            </div>
            </td>
            <td>
                <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.PopupTitle, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @Html.Kendo().TextBoxFor(m => m.PopupTitle).HtmlAttributes(new { @class = "form-control hr-large" })
                </div>
            </div>
            </td>
        </tr>

        <tr>
            <td>
                <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.AutoBind, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @Html.Kendo().CheckBoxFor(m => m.AutoBind).HtmlAttributes(new { @class = "form-control hr-x-small" })
                </div>
            </div>
            </td>
            <td>
  <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.CharacterMinimumLength, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @Html.Kendo().NumericTextBoxFor(m => m.CharacterMinimumLength).HtmlAttributes(new { @class = "form-control hr-x-small" })
                </div>
            </div>
            </td>
        </tr>
        <tr>
            <td>
<div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.CharacterMaximumLength, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @Html.Kendo().NumericTextBoxFor(m => m.CharacterMaximumLength).HtmlAttributes(new { @class = "form-control hr-x-small" })
                </div>
            </div>
            </td>
            <td>
 <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.PlaceHolder, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @Html.Kendo().TextBoxFor(m => m.PlaceHolder).HtmlAttributes(new { @class = "form-control hr-large" })
                </div>
            </div>
            </td>
        </tr>

        <tr>
            <td>
    <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-12 label-div">
                    @Html.LabelFor(m => m.ToolTip, new { @class = "control-label" })
                </div>
                <div class="col-lg-12">
                    @Html.Kendo().TextBoxFor(m => m.ToolTip).HtmlAttributes(new { @class = "form-control hr-large" })
                </div>
            </div>
            </td>
        </tr>
        </table>
                   @*<div class="form-group col-xs-12 col-sm-6">
               <div class="col-xs-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.LabelDisplayName, new { @class = "control-label" })
            </div>
            <div class="col-xs-12">
                @Html.Kendo().TextBoxFor(m => m.LabelDisplayName).HtmlAttributes(new { @class = "hr-xx-large" })
            </div>
              </div>
            <div class="form-group col-xs-12 col-sm-6">
            <div class="col-xs-12 label-div">
                @Html.LabelFor(m => m.LabelColumnWidth, new { @class = "control-label" })
            </div>
            <div class="col-xs-12">
                @(Html.Kendo().DropDownListFor(m => m.LabelColumnWidth)
                                                                                            .DataTextField("Text")
                                                                                            .DataValueField("Value")
                                                                                            .SelectedIndex(2)
                                                                                            .BindTo(new List<SelectListItem>() {

                                                                        new SelectListItem() {Text = "1", Value = "1"},
                                                                        new SelectListItem() {Text = "2", Value = "2"},
                                                                        new SelectListItem() {Text = "3", Value = "3"},
                                                                        new SelectListItem() {Text = "4", Value = "4"},
                                                                        new SelectListItem() {Text = "5", Value = "5"},
                                                                        new SelectListItem() {Text = "6", Value = "6"},
                                                                        new SelectListItem() {Text = "7", Value = "7"},
                                                                        new SelectListItem() {Text = "8", Value = "8"},
                                                                        new SelectListItem() {Text = "9", Value = "9"},
                                                                        new SelectListItem() {Text = "10", Value = "10"},
                                                                        new SelectListItem() {Text = "11", Value = "11"},
                                                                                            })
                                                                                            .HtmlAttributes(new { @class = "form-control hr-xx-large" })
                    )
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                <span class="required">*</span>
                @Html.LabelFor(m => m.FieldWidthCode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">

                @(Html.Kendo().DropDownList()
               //  .Events(e => e.Change("SourceOfLeadChange"))
               .Name("FieldWidthCode")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetSynergyLOV", "Template",new {Code="FIELD_WIDTH"});
                    });
                })
               .DataTextField("Name")
               .DataValueField("Code")
               .Filter(FilterType.Contains)
            // .OptionLabel(@Constant.PlaceHolder_SelectOption)
            //  .HtmlAttributes(Model.ModifyPermission.SetReadOnlyWithClass(() => Model.SourceOfLead, "hr-xx-large"))
            //.Enable(Model.Operation == DataOperation.Create ? true : false
            //   .BindTo(ApplicationExtension.SelectListFor(typeof(FieldWidthCodeEnum), Model.FieldWidthCode))
            )
            </div>
        </div>
            <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.MinimumValue, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.MinimumValue).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
                        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.MaximumValue, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.MaximumValue).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DecimalPrecision, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().IntegerTextBoxFor(m => m.DecimalPrecision).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
                 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DataFormatString, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.DataFormatString).HtmlAttributes(new { @class = "form-control hr-large" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.NumberOfLines, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().IntegerTextBoxFor(m => m.NumberOfLines).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.EnableDropdownGrouping, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.EnableDropdownGrouping).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
                  <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.LabelColorHexa, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.LabelColorHexa).HtmlAttributes(new { @class = "form-control hr-large" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.IsLabelItalic, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.IsLabelItalic).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.IsLabelUnderlined, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.IsLabelUnderlined).HtmlAttributes(new { @class = "form-control hr-x-small" })
            </div>
        </div>*@
            </div>);
        panelbar.Add().Text("Advance Settings")
            .Content(@<div style="padding: 20px;">
      <table style="width:100%">
      <tr>
          <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultValueTypeCode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @(Html.Kendo().DropDownListFor(m => m.DefaultValueTypeCode)

                                                    .DataSource(source =>
                                                     {
                                                         source.Read(read =>
                                                         {
                                                             read.Action("GetSynergyLOV", "Template", new { Code = "DEFAULT_VALUE_TYPE" });
                                                         });
                                                     })

                                                //   .OptionLabel(@Constant.PlaceHolder_SelectOption)
                                                .DataTextField("Name")
                                                .DataValueField("Code")
                                                .Filter(FilterType.Contains)
                                                .HtmlAttributes(new { @class = "hr-x-large" }))
            </div>
        </div>
          </td>
          <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultCodeStatic, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DefaultCodeStatic, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
          </td>
      </tr>
          <tr>
          <td>
<div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultValueStatic, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DefaultValueStatic, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
          </td>
          <td>
<div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultDynamicMethodName, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @(Html.Kendo().DropDownListFor(m => m.DefaultDynamicMethodName)
                                         .DataSource(source =>
                                         {
                                             source.Read(read =>
                                             {
                                              //   read.Action("GetSynergyLOV", "Template", new { Code = "DEFAULT_VALUE_TYPE" });
           // read.Action("GetDynamicMethods", "General", new { area = "General", classType = NtsDynamicClassTypeEnum.ValueScript, ntsType = Model.TemplateMasterNtsType, legalEntityCode = Model.TemplateMasterLegalEntityCode });
                                             });
                                         })
                                         //   .OptionLabel(@Constant.PlaceHolder_SelectOption)
                                         .DataTextField("Name")
                                         .DataValueField("Code")
                                         .Filter(FilterType.Contains)
                                         .HtmlAttributes(new { @class = "hr-x-large" }))
            </div>
        </div>
          </td>
      </tr>
          <tr>
          <td>
<div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultValueQuery, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DefaultValueQuery, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
          </td>
          <td>
<div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ClientCallBackScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ClientCallBackScript, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
          </td>
      </tr>

      <tr>
          <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ControlStyle, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ControlStyle, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
          </td>
          <td>
<div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ControlClass, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ControlClass, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ContainerStyle, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ContainerStyle, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
          </td>
          <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ConainerClass, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ConainerClass, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.VisibilityTypeCode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @(Html.Kendo().DropDownListFor(m => m.VisibilityTypeCode)
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetSynergyLOV", "Template", new { Code = "VISIBILITY_TYPE" });

                                          });
                                      })
                                      //    .OptionLabel(@Constant.PlaceHolder_SelectOption)
                                      .DataTextField("Name")
                                      .DataValueField("Code")
                                      .Filter(FilterType.Contains)
                                      .HtmlAttributes(new { @class = "hr-x-large" }))
            </div>
        </div>
          </td>
          <td>
<div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.VisibilityClientScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.VisibilityClientScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
 <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.VisibilityServerScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.VisibilityServerScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
          <td>
 <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DocumentReadyScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DocumentReadyScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
 <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ClientOnChangeScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ClientOnChangeScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
          <td>
 <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ClientValidationScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ClientValidationScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
               <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ClientDataBindScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ClientDataBindScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
          <td>
<div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ServerValidationScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ServerValidationScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
 <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.FieldHtmlAttributesString, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.FieldHtmlAttributesString, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
          <td>
               <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.LabelHtmlAttributesString, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.LabelHtmlAttributesString, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
<div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.PermissionCode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().IntegerTextBoxFor(m => m.PermissionCode).HtmlAttributes(new { @class = "k-textbox hr-small" })
            </div>
        </div>
          </td>
          <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.RelationshipName, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.RelationshipName).HtmlAttributes(new { @class = "form-control hr-large" })
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.RelationshipTargetNode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.DataSourceAreaName).HtmlAttributes(new { @class = "form-control hr-large" })
                @(Html.Kendo().DropDownList()
                   .Name("RelationshipTargetNode")

                     .DataSource(source =>
                     {
                         source.Read(read =>
                         {
                             read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NodeEnum" });
                         });
                     })

                      .DataTextField("Name")
                     .DataValueField("Id")
              //    .DataTextField("Text")
               //   .DataValueField("Value")
                  // .OptionLabel(@Constant.PlaceHolder_SelectOption)
                  .Filter(FilterType.Contains)
                  .HtmlAttributes(new { @class = "hr-x-large" })
                 // .BindTo(EnumExtension.SelectListFor(typeof(NodeEnum), Model.RelationshipTargetNode))
                 )
            </div>
        </div>
          </td>
          <td>
<div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.EnableScanUpload, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.EnableScanUpload).HtmlAttributes(new { @class = "form-control hr-x-small" }).Label("")
            </div>
        </div>
          </td>
      </tr>
      <tr>
          <td>
<div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.IsOCREnable, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.IsOCREnable).HtmlAttributes(new { @class = "form-control hr-x-small" }).Label("")
            </div>
        </div>
          </td>

      </tr>

      </table>

       @*<div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultValueTypeCode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @(Html.Kendo().DropDownListFor(m => m.DefaultValueTypeCode)

                                                    .DataSource(source =>
                                                     {
                                                         source.Read(read =>
                                                         {
                                                             read.Action("GetSynergyLOV", "Template", new { Code = "DEFAULT_VALUE_TYPE" });
                                                         });
                                                     })

                                                //   .OptionLabel(@Constant.PlaceHolder_SelectOption)
                                                .DataTextField("Name")
                                                .DataValueField("Code")
                                                .Filter(FilterType.Contains)
                                                .HtmlAttributes(new { @class = "hr-x-large" }))
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultCodeStatic, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DefaultCodeStatic, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultValueStatic, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DefaultValueStatic, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultDynamicMethodName, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @(Html.Kendo().DropDownListFor(m => m.DefaultDynamicMethodName)
                                         .DataSource(source =>
                                         {
                                             source.Read(read =>
                                             {
                                              //   read.Action("GetSynergyLOV", "Template", new { Code = "DEFAULT_VALUE_TYPE" });
           // read.Action("GetDynamicMethods", "General", new { area = "General", classType = NtsDynamicClassTypeEnum.ValueScript, ntsType = Model.TemplateMasterNtsType, legalEntityCode = Model.TemplateMasterLegalEntityCode });
                                             });
                                         })
                                         //   .OptionLabel(@Constant.PlaceHolder_SelectOption)
                                         .DataTextField("Name")
                                         .DataValueField("Code")
                                         .Filter(FilterType.Contains)
                                         .HtmlAttributes(new { @class = "hr-x-large" }))
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DefaultValueQuery, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DefaultValueQuery, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ClientCallBackScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ClientCallBackScript, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ControlStyle, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ControlStyle, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ControlClass, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ControlClass, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ContainerStyle, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ContainerStyle, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ConainerClass, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ConainerClass, new { @class = "k-textbox hr-xxx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.VisibilityTypeCode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @(Html.Kendo().DropDownListFor(m => m.VisibilityTypeCode)
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetSynergyLOV", "Template", new { Code = "VISIBILITY_TYPE" });

                                          });
                                      })
                                      //    .OptionLabel(@Constant.PlaceHolder_SelectOption)
                                      .DataTextField("Name")
                                      .DataValueField("Code")
                                      .Filter(FilterType.Contains)
                                      .HtmlAttributes(new { @class = "hr-x-large" }))
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.VisibilityClientScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.VisibilityClientScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.VisibilityServerScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.VisibilityServerScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.DocumentReadyScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.DocumentReadyScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ClientOnChangeScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ClientOnChangeScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ClientValidationScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ClientValidationScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ClientDataBindScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ClientDataBindScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.ServerValidationScript, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.ServerValidationScript, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.FieldHtmlAttributesString, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.FieldHtmlAttributesString, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>

        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.LabelHtmlAttributesString, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.TextAreaFor(m => m.LabelHtmlAttributesString, new { @class = "k-textbox hr-xxx-large", rows = "6" })
            </div>
        </div>
        <div class="form-group col-xs-12">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.PermissionCode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().IntegerTextBoxFor(m => m.PermissionCode).HtmlAttributes(new { @class = "k-textbox hr-small" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.RelationshipName, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.RelationshipName).HtmlAttributes(new { @class = "form-control hr-large" })
            </div>
        </div>

         <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.RelationshipTargetNode, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().TextBoxFor(m => m.DataSourceAreaName).HtmlAttributes(new { @class = "form-control hr-large" })
                @(Html.Kendo().DropDownList()
                   .Name("RelationshipTargetNode")

                     .DataSource(source =>
                     {
                         source.Read(read =>
                         {
                             read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NodeEnum" });
                         });
                     })

                      .DataTextField("Name")
                     .DataValueField("Id")
              //    .DataTextField("Text")
               //   .DataValueField("Value")
                  // .OptionLabel(@Constant.PlaceHolder_SelectOption)
                  .Filter(FilterType.Contains)
                  .HtmlAttributes(new { @class = "hr-x-large" })
                 // .BindTo(EnumExtension.SelectListFor(typeof(NodeEnum), Model.RelationshipTargetNode))
                 )
            </div>
        </div>
 <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.EnableScanUpload, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.EnableScanUpload).HtmlAttributes(new { @class = "form-control hr-x-small" }).Label("")
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-6">
            <div class="col-lg-12 label-div">
                @Html.LabelFor(m => m.IsOCREnable, new { @class = "control-label" })
            </div>
            <div class="col-lg-12">
                @Html.Kendo().CheckBoxFor(m => m.IsOCREnable).HtmlAttributes(new { @class = "form-control hr-x-small" }).Label("")
            </div>
        </div>*@

    </div>);

panelbar.Add().Text("Grid Configuration").Enabled(false).HtmlAttributes(new { @class="gd"})
    .Content(@<div style="padding: 20px;">
     <table style="width:100%">
         <tr>
             <td>
<div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridMinimumRows, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().NumericTextBoxFor(m => m.GridMinimumRows).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
  <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridMaximumRows, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().NumericTextBoxFor(m => m.GridMaximumRows).HtmlAttributes(new { @class = "form-control hr-x-small" })
                        </div>
                    </div>
             </td>
         </tr>
           <tr>
             <td>
                  <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridRequiredMinimumRows, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().NumericTextBoxFor(m => m.GridRequiredMinimumRows).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.ShowInGrid, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.ShowInGrid).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>
           <tr>
             <td>
<div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridCanAdd, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.GridCanAdd).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridAddButtonName, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().TextBoxFor(m => m.GridAddButtonName).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>
           <tr>
             <td>
<div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridCanEdit, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.GridCanEdit).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridEditButtonName, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().TextBoxFor(m => m.GridEditButtonName).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>
           <tr>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridCanView, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.GridCanView).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
<div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridViewButtonName, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().TextBoxFor(m => m.GridViewButtonName).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>
           <tr>
             <td>
<div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridCanDelete, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.GridCanDelete).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
<div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridDeleteButtonName, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().TextBoxFor(m => m.GridDeleteButtonName).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>
           <tr>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridShowDeleteConfirmation, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.GridShowDeleteConfirmation).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridDeleteConfirmationMessage, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().TextBoxFor(m => m.GridDeleteConfirmationMessage).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>
         <tr>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridDeleteSuccessMessage, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().TextBoxFor(m => m.GridDeleteSuccessMessage).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridAllowFilter, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.GridAllowFilter).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>
          <tr>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridAllowSorting, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.GridAllowSorting).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
             <td>
  <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridAllowPaging, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().CheckBoxFor(m => m.GridAllowPaging).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>
          <tr>
             <td>
 <div class="form-group col-xs-12 col-sm-6">
                        <div class="col-lg-12 label-div">
                            @Html.LabelFor(m => m.GridPageSize, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-12">
                            @Html.Kendo().NumericTextBoxFor(m => m.GridPageSize).HtmlAttributes(new { @class = "form-control hr-large" })
                        </div>
                    </div>
             </td>
         </tr>

         </table>
            </div>);
    })
)