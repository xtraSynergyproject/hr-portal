@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@model UserRoleStageParentViewModel
@{
    ViewData["Title"] = "User Role";
    Layout = null;
}
<script>

    
    var columnDefs = [
        
           {
            field: "UserRoleName",
           },
           {
               field: "InboxStageName",

           },
           {
               field: "TemplateCode",
           },
        {
            field: "TemplateName",
        },
        {
            field: "TemplateShortName",

        },
        {
            field: "InboxCode",
        },
        {
            field: "ChildSequence",
        },
        {
            field: "StageSequence",
        },      
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin14' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getUserRoleStageData();

       // $.contextMenu('update');
      //  $('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBin14',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OnEditUserRole(id);
                                        break;

                                    case 'delete':
                                        OnDeleteUserRole(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });

    function getUserRoleStageData() {
        document.getElementById("UserRolegrid").innerHTML = "";
        gridConfig(
            "UserRolegrid",
            "/cms/UserRoleStage/GetUserRoleStageParentListData",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script>
    function OnEditUserRole(id) {
       //
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditUserRoleStageParent", "UserRoleStage", new { @area="Cms"})?Id=' + id;
        win.OpenWindow({ Title: 'Manage User Role', Width: 600, Height: 600 });
        return false;
    }

    function OnDeleteUserRole(id) {
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDeleteRole(id);

        }, function () {

        });

    }

    function confirmDeleteRole(id) {
        //

        $.ajax({
           // url: "~/UserRole/DeleteUserRole?Id=" + id,
            url:'@Url.Action("DeleteUserRoleStageParent", "UserRoleStage", new { @area="Cms"})?Id=' + id,
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                // $('#dlg_DeleteConfirmation').data("kendoDialog").close();
               //
                //$("#UserRolegrid").data("kendoGrid").dataSource.read();
                getUserRoleStageData();
            },
            error: function () {
               //
               // $("#UserRolegrid").data("kendoGrid").dataSource.read();
                getUserRoleStageData();
            }
        });


    }

    function OnCreateUserRoleStageParent() {

       
           var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateUserRoleStageParent", "UserRoleStage", new { @area="Cms"})';
        win.OpenWindow({ Title: 'Manage User Role', Width: 600, Height: 600 });
        return false;

    }



</script>


<div>
    <h4>@ViewBag.Title</h4>

    <hr />

    <div class="row">


        <div class="col-12">
            <button type='button' class='btn btn-primary' onclick='OnCreateUserRoleStageParent();'><i class='fa fas fa-plus'></i>&nbsp;Create User Role Stage Parent</button>
            <br /><br />
            <div id="UserRolegrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            @*@(Html.Kendo().Grid<UserRoleStageParentViewModel>
        ()
        .Name("UserRolegrid")
        .ToolBar(toolbar =>
        toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateUserRoleStageParent();'><i class='fa fas fa-plus'></i>&nbsp;Create User Role Stage Parent</button>"))

        //toolbar.Custom().Text("Create Group").HtmlAttributes(new { href = "javascript:OnCreateGroup();" }))
        .Columns(columns =>
        {
            //columns.Bound(c => c.Id).Width(140).Hidden(true);
            //  columns.Bound(c => c.Id).Title(" ").Width(100).ClientTemplate("<a class='btn btn-success' onclick='return OnEditGroup(\"#=Id#\");'><i class='fad fa-edit'></i> Edit</a>");
            columns.Command(command =>
            {
                command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditUserRole").HtmlAttributes(new { @class = "action-icon"});
               command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteUserRole").HtmlAttributes(new { @class = "action-icon"});
            }).Title("Action").Width(100);
            columns.Bound(c => c.UserRoleName);
            columns.Bound(c => c.InboxStageName);
            columns.Bound(c => c.TemplateCode);
            columns.Bound(c => c.TemplateName);
            columns.Bound(c => c.TemplateShortName);
            columns.Bound(c => c.InboxCode);
            columns.Bound(c => c.ChildSequence);
            columns.Bound(c => c.StageSequence);


        })
         .Scrollable(x => x.Enabled(false))
                    .Sortable(srt => srt.Enabled(true))
                    .Selectable(select => select.Enabled(false))
                    .Filterable(f => f.Extra(false)
                                                        .Operators(o => o.ForString(s => s.Clear()
                                                        .Contains("Contains")
                                                        .IsEqualTo("Is equal to")
                                                    )))
                    .Pageable(pageable => pageable
                    .Refresh(true)

                    .PageSizes(true)
                    .ButtonCount(5))
                   // .AutoBind(true)
                    .DataSource(
                    dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    //.Events(events => events.Error("OnError"))
                    .Read(read => read.Action("GetUserRoleStageParentList", "UserRoleStage"))
                    .Model(model => model.Id(p => p.Id))
                    )
              )*@
        </div>
    </div>

</div>

