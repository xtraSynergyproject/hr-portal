@*@using Kendo.Mvc.UI;*@
@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Portal";
    //Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
    //Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    Layout = null;
}

@model PermissionViewModel

<style>
    .cms-manageportal-footer {
/*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }
    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }
    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }
/*    k-colorpicker {
        width: 100px;
    }

    .k-colorpicker .k-selected-color {
            width: 100px;
    }*/
</style>
<script type="text/javascript">


    function AddPermission() {
      
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("AddPermissions", "Content", new { @area="Cms"})?pageId=@Model.PageId&portalId=@Model.PortalId';
        win.OpenWindow({ Title: 'Add Permission', Width: 450, Height: 950, Position:'Right' });
        return false;
    }
     function EditData(rowid) {
         
          var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("EditPermission", "Content", new { @area="Cms"})?pageId=@Model.PageId&id='+rowid;
         win.OpenWindow({ Title: 'Edit Permission', Width: 450, Height: 950, Position:'Right' });
        return false;
    }

    function DeletePermission(rowid) {
        var flag = confirm('Do you really want to delete?');
        if (flag) {
            $.ajax({
                type: "POST",
                url: "/cms/content/DeletePermission?id=" + rowid,
                dataType: "json",
                success: function (result) {
                   // $("#PermissionGrid").data("kendoGrid").dataSource.read();
                    getData();
                    kendo.alert("Deleted Successfully");
                },
                error: function (xhr, httpStatusMessage, customErrorMessage) {
                    alert(customErrorMessage);
                }
            });
        }
    }
</script>
<script>   
    var columnDefs = [
        {
            field: "Name",
        },
        { field: "Code" },       
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin1' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];
    $(document).ready(function () {
       
        getData();

        //$.contextMenu('update');
       // $('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBin1',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        EditData(id);
                                        break;

                                    case 'delete':
                                        DeletePermission(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });
   });
   
    function getData() {
        document.getElementById("myGrid").innerHTML = "";
        gridConfig(
            "myGrid",
            "/cms/Content/ReadPermissionList?pageId=@Model.PageId&portalId=@Model.PortalId ",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

    <div class="row">
        <div class="tab-content" style="width:100%">
            <div id="user" class="tab-pane  in active" role="tabpanel" aria-labelledby="user-tab">
                <br />
                <button class="btn btn-primary" onclick="AddPermission()">Add </button>
                <br />


                <div class="row">
                    <div class="col-12">
                       
                        <div id="myGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                    </div>
                </div>




                @*@(Html.Kendo().Grid<PermissionViewModel>()
                            .Name("PermissionGrid")
                            .Columns(columns =>
                            {
                 columns.Bound(p => p.Id).Title("Action").ClientTemplate("<span title='edit' style='cursor:pointer' class='k-icon k-i-edit' onclick='EditData(\"#:Id#\")'>" +
                                    "</span>&nbsp;&nbsp;&nbsp;&nbsp;<span title='delete'  style='cursor:pointer' class='k-icon k-i-delete' onclick='DeletePermission(\"#:Id#\")'></span>").Width(150);

                columns.Bound(p => p.Name);
                                columns.Bound(p => p.Code);
                                columns.Bound(p => p.PageId).Hidden(true);

                            })
                            .Pageable()
                        //  .Refresh(true)
                            .Sortable()
                            .Filterable()
                            .Scrollable()
                             .DataSource(
                                dataSource => dataSource
                                .Ajax()
                                .PageSize(10)
                                .Read(read => read.Action("ReadPermission", "Content", new { @area = "Cms", pageId = Model.PageId,portalId=Model.PortalId }))
                                .Model(model => model.Id(p => p.Id))
                                )
                        )*@
            </div>
         
        </div>
    </div>
</div>

