@{
    ViewData["Title"] = "Settings";
    Layout = ViewBag.Layout;
}
@using Synergy.App.ViewModel;
@using Synergy.App.Common;


@model PageViewModel

<style>
    .lang-ctrl-width {
        width: calc(100% - 50px) !important;
        display: inline-block;
    }
    .language-icon{
        cursor:pointer;
    }
    .k-switch-label-off, .k-switch-label-on {
        display: block;
    }

    .style-myiconimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }

    /* .nav-tabs > li {
        float: left;
        margin-bottom: -1px;
    }

    .nav > li {
        position: relative;
        display: block;
    }
        .nav > li > a {
            position: relative;
            display: block;
            padding: 10px 15px;
        }
    .nav-tabs > li > a {
        margin-right: 2px;
        line-height: 1.42857143;
        border: 1px solid transparent;
        border-radius: 4px 4px 0 0;
    }
    a {
        color: #337ab7;
        text-decoration: none;
    }
    a {
        background-color: transparent;
    }*/
    label {
        display: inline-block;
        margin-bottom: -1.5rem;
        color: grey;
        float: right;
    }

    .float-container {
        border: solid 1px #ccc;
        position: relative;
    }

        .float-container input {
            border: none;
            outline: 0;
        }

    label {
        position: absolute;
    }

    .upload {
    }

    .upload-div .k-button {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
        min-height: 80px !important;
        background-image: url('../../../../images/logo.png') !important;
        background-repeat: no-repeat !important;
        background-position: left !important;
        position: relative !important;
        padding: 0px !important;
    }

        .upload-div .k-button span, .upload-div .k-upload-files, .upload-div .k-upload-status {
            display: none !important;
        }

    .upload-div .k-dropzone {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
    }
    /* .upload-div {
            border: none !important;
            background-color: transparent !important;
            width: 100% !important;
            height: 100% !important;
            background-image: url('../../../../images/logo.png') !important;
            background-repeat: no-repeat;
            background-position: center;
            position: relative;
        }*/

    .card-header {
        padding: 2px !important;
    }

    .k-listview {
        border: none !important;
    }

    .sidenav {
        height: 100%; /* 100% Full-height */
        width: 0; /* 0 width - change this with JavaScript */
        position: fixed; /* Stay in place */
        z-index: 100; /* Stay on top */
        top: 0; /* Stay at the top */
        left: 0;
        background-color: #fff; /* Black*/
        border-right: 1px solid silver;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 30px; /* Place content 60px from the top */
        transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    }



        /* Position and style the close button (top right corner) */
        .sidenav .closebtn {
            position: absolute;
            top: 0;
            right: 15px;
            font-size: 30px;
            font-weight: bold;
            margin-left: 20px;
            color: gray;
            border: none;
            text-decoration: none;
        }

            .sidenav .closebtn:hover {
                color: red;
            }

    /* Style page content - use this if you want to push the page content to the right when you open the side navigation */
    #component-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #editor-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #overlay {
        position: fixed;
        background: rgba(0,0,0,.5);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
        width: 100%;
        height: 100%;
        z-index: 99;
        right: 100%;
        top: 0;
        /*  transition: right .5s ease;*/
    }

    .overlay {
        right: 0 !important;
        /* transition: right .5s ease !important;*/
    }

    .cms-panel-header-name {
        font-size: 16px;
        font-weight: 700;
        padding: 0 10px;
        width: 80%;
    }
    /*Style for switch checkbox*/
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }

    /*Editor Type Style  */
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }

    .product {
        /*float: left;*/
        /*position: relative;*/
        /*width: 111px;*/
        height: 170px;
        margin: 0 0px;
        /*padding: 0;*/
    }

        .product img {
            width: 110px;
            height: 110px;
        }

        .product .div-icon {
            width: 110px;
            height: 110px;
            background-color: #f8f8f8;
        }

            .product .div-icon svg {
                position: relative;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
            }

        .product h3 {
            margin: 0;
            padding: 3px 5px 0 0;
            max-width: 96px;
            overflow: hidden;
            line-height: 1.1em;
            font-size: .9em;
            font-weight: normal;
            text-transform: uppercase;
            color: #999;
        }

        .product p {
            visibility: hidden;
        }

        .product:hover p {
            cursor: pointer;
            visibility: visible;
            position: absolute;
            width: 110px;
            height: 110px;
            top: 0;
            margin: 0;
            padding: 0;
            line-height: 110px;
            vertical-align: middle;
            text-align: center;
            color: #fff;
            background-color: rgba(0,0,0,0.75);
            transition: background .2s linear, color .2s linear;
            -moz-transition: background .2s linear, color .2s linear;
            -webkit-transition: background .2s linear, color .2s linear;
            -o-transition: background .2s linear, color .2s linear;
        }
    /*Editor Type Style Close */
</style>
<script>



    function onSelectFolder(e) {

        var dropdowntree = $("#MenuGroupId").data("kendoDropDownTree");
        var treeviewSelect = function (e) {
            if (e.sender.dataItem(e.node).type == 'workspace') {
                e.preventDefault()
            }
        };

        dropdowntree.treeview.bind("select", treeviewSelect);
    }

    function OnLanguageClick()
    {

        var defaultValue = $("#Title").val();
        var win = GetMainWindow();
        win.iframeOpenUrl = "/cms/ResourceLanguage/Create?lo=Popup&cbm=OnPortalPageTitleCallBack&templateType=PortalPage&defaultValue=" + defaultValue + "&templateId=@Model.Id&code=PortalPageTitle";
        win.OpenWindow({ Title: 'Manage Language', Width: 500, Height: 400 });
    }
     function OnMenuLanguageClick()
    {

        var defaultValue = $("#MenuName").val();
        var win = GetMainWindow();
         win.iframeOpenUrl = "/cms/ResourceLanguage/Create?lo=Popup&cbm=OnPortalMenuNameCallBack&templateType=PortalPage&defaultValue=" + defaultValue + "&templateId=@Model.Id&code=PortalPageMenuName";
        win.OpenWindow({ Title: 'Manage Language', Width: 500, Height: 400 });
    }
    function OnPortalPageTitleCallBack(Prms)
    {
        var english=Prms.item.English;
        $("#Title").val(english)

    }
    function OnPortalMenuNameCallBack(Prms) {

        var english = Prms.item.English;
        $("#MenuName").val(english)
    }
    var groupId = 1;
    var cellId = 1;
    var componentId = 1;

    function filterTemplates() {
        var portal=null;
        if ('@Model.RequestUrl' != null && '@Model.RequestUrl' != '') {
            portal = '@Model.PortalId';
        }
        return {
            type: $("#PageType").data("kendoDropDownList").value(),
            portalId: portal
        };
    }

    function FilterData() {
      //  
        var portal=null;
        if ('@Model.RequestUrl' != null && '@Model.RequestUrl' != '') {
            portal = '@Model.PortalId';
        }
        return {
            portalId: portal
        };
    }


    function SubModulechange()
    {
       // var search = FilterMenuGroup();
        var search = $("#SubModuleId").data("kendoDropDownList").value();

        //$("#MenuGroupId").data("kendoDropDownTree").dataSource.read(search)
        $("#MenuGroupId").data("kendoDropDownTree").dataSource.read({ SubModuleId: search })
    }

    function Modulechange() {
        // var search = FilterMenuGroup();
        var search = $("#ModuleId").data("kendoDropDownList").value();

        //$("#MenuGroupId").data("kendoDropDownTree").dataSource.read(search)
        $("#SubModuleId").data("kendoDropDownList").dataSource.read({ moduleId: search })
    }

    function FilterMenuGroup()
    {
        return {
            //SubModuleId: $("#SubModuleId").data("kendoDropDownList").value()
            SubModuleId: document.getElementById("SubModuleId").value
        }
    }

    function OnPageTypechange(args) {
        //
         $("#TemplateId").data("kendoDropDownList").dataSource.read({type: $("#PageType").val()});
        // $("#TemplateId").data("kendoDropDownList").dataSource.read();
        //if (pagetype == "Form") { $("#chkIndexPage").show(); }
        //else {
        //    $("#chkIndexPage").hide();
        //    $("#EnableIndexPage").val("false");
        //}
    }
    function ToggleNewGroup() {
        $('#new-row-container').toggle('400');
    }
    function DiscardDeleteGroup(e) {
        $(e).parent().hide('slide', { direction: 'right' }, 500);
    }
    function ConfirmDeleteGroup(e) {
        console.log(e);
        var contentId = e.parentNode.parentNode.parentNode.parentNode.id;
        var type = e.parentNode.parentNode.parentNode.parentNode.getAttribute('data-page-content-type');
        //$(e).parent().hide('slide', { direction: 'right' }, 500);
        $.ajax({
            type: "GET",
            url: "/Cms/Content/DeleteContent?id=" + contentId + "&type=" + type,
            dataType: "json",
            success: function (response) {
                $("#" + contentId).remove();
            },
        });
    }
    function DeleteGroup(e) {
        var n = $(e).next();
        if (n.is(':hidden')) {
            n.show('slide', { direction: 'right' }, 500);
        } else {
            n.hide('slide', { direction: 'right' }, 500);
        }
    }
    function OpenSettings(e) {
        //
        //var evt = e;
        //var evt = e.target.id;
        //console.log(evt);
        var sid = e.parentNode.parentNode.id;
        var stype = document.getElementById(sid).getAttribute('data-page-content-type');
        var pid = document.getElementById(sid).getAttribute('data-page-id');
        //alert('open settings');
        //alert("source Id : " + sid + ", Type : " + stype + ", page Id : " + pid);
        //openNavStyle(sid, stype);
        editNavStyle(sid, stype,pid);
    }
    function OpenPageSettings(e) {
        //var evt = e;
        //console.log(evt);
        var sid = e.parentNode.parentNode.id;
        var stype = document.getElementById(sid).getAttribute('data-page-content-type');
        var pid = document.getElementById(sid).getAttribute('id');
        //alert("source Id : " + sid + ", Type : " + stype + ", page Id : " + pid);
        //OpenManageSettings(sid, stype);
        editNavStyle(sid, stype,pid);
    }
    function SetPageSettings(id) {
        //alert(id);
        var pagename = $('#PageName').val();
        var pagetitle = $('#PageTitle').val();
        var pagemenuname = $('#PageMenuName').val();
        var pagehideinmenu = $('#PageHideInMenu').val();
        var pageisrootpage = $('#PageIsRootPage').val();

        document.getElementById(id).setAttribute("data-name", pagename);
        document.getElementById(id).setAttribute("data-title", pagetitle);
        document.getElementById(id).setAttribute("data-menu-name", pagemenuname);
        document.getElementById(id).setAttribute("data-hide-menu", pagehideinmenu);
        document.getElementById(id).setAttribute("data-is-root", pageisrootpModelge);

        //alert(pagename);
        //alert(pagetitle);
        //alert(pagemenuname);
        //alert(pagehideinmenu);
        //alert(pageisrootpage);
    }
    function openNav() {
        document.getElementById("side-components").style.width = "350px";
        //  $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }
    function openNavEditor() {
        document.getElementById("mySidenavEditor").style.width = "600px";
        $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }
    function openEditor() {
        alert("Hello Editor... ");
    }
    function OnSelectEditor(id) {
        alert("Under Development... ");
    }
    function OnChangeCustomValidation(e) {

        var validation = this.dataItem(e.item);
        if (validation.Id == "Email") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('[a-zA-Z0-9_.+-]+@@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Number") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('^[0-9]*$');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Url") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('https?://[a-zA-Z0-9-.]+.[a-zA-Z]{2,}');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Custom") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('');
            $('#txtCustomValidation').val('');
        } else {
            $('#txtRegularExpresssion').val('');
            $('#txtCustomValidation').val('');
            $('#txtRegularExpresssion').hide();
            $('#txtCustomValidation').hide();

        }
    }
    /* Set the width of the side navigation to 0 */
    function closeNav(sideNav) {
        document.getElementById(sideNav).style.width = "0";
        // $("#overlay").removeClass("overlay");
    }

    function closeNavEditor() {
        document.getElementById("mySidenavEditor").style.width = "0";
        $("#overlay").removeClass("overlay");
        //$('body').removeClass('fadeMe');
    }
    var builder;


    function uploadFile() {
        $("#iconFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs 
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-myiconimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#IconFileId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }
    $(document).ready(function () {
        uploadFile();

        $('.content').richText();
        //
         var moduleurl = "";
        var submoduleurl = "";
       // var templateurl = "";

        if ('@Model.RequestUrl' != null && '@Model.RequestUrl' != '') {
            moduleurl = "/Cms/Module/GetModuleList?portalId=@Model.PortalId";
            submoduleurl = "/Cms/SubModule/GetSubModuleList?portalId=@Model.PortalId";
         //   templateurl = "/Cms/Template/GetTemplateByType?portalId=@Model.PortalId&type="+type;

        }
        else {
            moduleurl = "/Cms/Module/GetModuleList";
            submoduleurl = "/Cms/SubModule/GetSubModuleList";
          //  templateurl = "/Cms/Template/GetTemplateByType?type=" + type;
        }
          $("#ModuleId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
              value: '@Model.ModuleId',
              change: Modulechange,
              dataBound: Modulechange,
            dataSource: {
                transport: {
                    read: {
                        url: moduleurl,
                    }
                }
            }
        });

        $("#SubModuleId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            @*optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",*@
            value: '@Model.SubModuleId',
            change: SubModulechange,
            dataBound: SubModulechange,
            dataSource: {
                transport: {
                    read: {
                        url: submoduleurl,
                    }
                }
            }
        });

      //  setTimeout(function () {
            var portal = "@Model.PortalId";
         //var subModuleId = $("#SubModuleId").data("kendoDropDownList").value();
        serviceRoot = "/cms/menugroup/GetMenuGroupListByPortal?portalId=" + portal /*+ "&SubModuleId=" + subModuleId*/;

            homogeneous = new kendo.data.HierarchicalDataSource({
         //   serverFiltering:true,
            transport: {
                read: {
                    url: serviceRoot,
                    dataType: "json"
                }
            },
            schema: {
                model: {
                    id: "id",
                    hasChildren: "hasChildren"
                }
            }
        });


        $("#MenuGroupId").kendoDropDownTree({
            placeholder: "Select ...",
            dataSource: homogeneous,
            height: "150px",
            dataTextField: "Name",
            dataValueField: "id",
            value: "@Model.MenuGroupId"
        });

       // }, 2000);



         @*$.ajax({
            type: "GET",
             url: "/Cms/Content/GetPageJsonForm?pageId=@Model.Id",
            success: function (response) {

                if (response != "" && response != null) {
                    var obj = JSON.parse(response);
                    builder = new Formio.FormBuilder(document.getElementById("builder"), obj);
                }
                else {
                    builder = new Formio.FormBuilder(document.getElementById("builder"), {
                        "display": "form",
                        "components": []
                    });
                }

            },
            error: function (response) {
                alert("error");
            },
        });*@
        InitializeContePlaceHolder();

        $('#txtMandatoryCustomValidation').hide();
        $('#txtRegularExpresssion').hide();
        $('#txtCustomValidation').hide();

        $('#chkFieldMandatory').on('change', function () {
            // From the other examples
            if (this.checked) {
                //alert("checked");
                $('#txtMandatoryCustomValidation').show();
            } else {
                //alert("not checked");
                $('#txtMandatoryCustomValidation').hide();
            }
        });





        $("#PageType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.PageType.ToString()',
            change: onPageTypeDataBound,
           dataBound: onPageTypeDataBound,
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=TemplateTypeEnum",
                    }
                }
            }
        });

        $("#Layout").kendoDropDownList({
            optionLabel: "--Select--",
            dataTextField: "Name",
            dataValueField: "Code",
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/LOV/GetLOVIdNameList?lovType=LOV_LAYOUT",
                    }
                }
            }
        });

    });

    function onPageTypeDataBound() {
        var templateurl = "";
       // var type = document.getElementById("PageType").value;
          if ('@Model.RequestUrl' != null && '@Model.RequestUrl' != '') {

              templateurl = "/Cms/Template/GetTemplateByType?portalId=@Model.PortalId&type=" + $("#PageType").data("kendoDropDownList").value();

        }
        else {

              templateurl = "/Cms/Template/GetTemplateByType?type=" + $("#PageType").data("kendoDropDownList").value();
        }
         $("#TemplateId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
           // cascadeFrom: "PageType",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.TemplateId',
            dataSource: {
                //serverFiltering: true,
                transport: {
                    read: {
                        url: templateurl,
                    }
                }
            }
         });
    }

    function AddNewGroup(type) {
        var gseq = groupId++;
        var gid = GenerateGuid();
        var groupRef = document.getElementById(type).firstElementChild;
        var grp = groupRef.cloneNode(true);
        var gn = $(grp).find('#group-name');
        gn.html(type + ' ' + (gseq));
        gn.attr("id", 'grp-name-' + gid);
        grp.setAttribute("id", gid);
        var seq = groupRef.getAttribute('data-sequence');
        seq = eval(seq) + 1;
        groupRef.setAttribute("data-sequence", seq);
        grp.setAttribute("data-sequence", seq);
        document.getElementById("groups").appendChild(grp);
        $('.column', $('#' + gid)).each(function () {
            $(this).attr("id", GenerateGuid());
            $(this).attr("data-parent-id", gid);
        });
    }
    function AddComponent(type, target) {
        switch (type) {
            case "RichText":
                AddRichText(type, target);
                break;
            default:
        }
    }
    function AddRichText(type, target) {
        var t = $(target);
        var cellId = GenerateGuid();
        var cellRef = document.getElementById('dummy-' + type).firstElementChild;
        var cell = cellRef.cloneNode(true);
        var cn = $(cell).find('#comp-name');
        cn.html('Rich Text Box ' + (componentId++));
        cn.attr("id", 'comp-name-' + (cellId));

        var seq = cellRef.getAttribute('data-sequence');
        seq = eval(seq) + 1;
        cellRef.setAttribute("data-sequencModel", seq);
        cell.setAttribute("data-sequence", seq);
        cell.setAttribute("data-parent-id", target.parentElement.id);
        cell.setAttribute("id", cellId);

        var compId = GenerateGuid();
        var control = $(cell).find('#component');
        control.attr("id", compId);
        control.attr("data-component-type", "RichText");
        control.attr("data-parent-id", cellId);
        t.before(cell);
        CreateRichTextBox($('#' + compId));
    }
    function CreateRichTextBox(id) {
        id.kendoEditor({
            stylesheets: [
                "../content/shared/styles/editor.css",
            ],
            tools: [
                "bold",
                "italic",
                "underline",
                "justifyLeft",
                "justifyCenter",
                "justifyRight",
                "insertUnorderedList",
                "createLink",
                "unlink",
                "insertImage",
                "tableWizard",
                "createTable",
                "addRowAbove",
                "addRowBelow",
                "addColumnLeft",
                "addColumnRight",
                "deleteRow",
                "deleteColumn",
                "mergeCellsHorizontally",
                "mergeCellsVertically",
                "splitCellHorizontally",
                "splitCellVertically",
                //"formatting",
                //{
                //    name: "fontName",
                //    items: [
                //        { text: "Andale Mono", value: "Andale Mono" },
                //        { text: "Arial", value: "Arial" },
                //        { text: "Arial Black", value: "Arial Black" },
                //        { text: "Book Antiqua", value: "Book Antiqua" },
                //        { text: "Comic Sans MS", value: "Comic Sans MS" },
                //        { text: "Courier New", value: "Courier New" },
                //        { text: "Georgia", value: "Georgia" },
                //        { text: "Helvetica", value: "Helvetica" },
                //        { text: "Impact", value: "Impact" },
                //        { text: "Symbol", value: "Symbol" },
                //        { text: "Tahoma", value: "Tahoma" },
                //        { text: "Terminal", value: "Terminal" },
                //        { text: "Times New Roman", value: "Times New Roman" },
                //        { text: "Trebuchet MS", value: "Trebuchet MS" },
                //        { text: "Verdana", value: "Verdana" },
                //    ]
                //},
                "fontSize",
                "foreColor",
                "backColor",
            ]
        });
    }
    // $('.splitter-container').SplitterBar();
    var splitter = $('.splitter-container').height(200).split({
        orientation: 'vertical',
        limit: 10,
        position: '20%', // if there is no percentage it interpret it as pixels
        onDrag: function (event) {
            console.log(splitter.position());
        }
    });
    function ReloadTab() {

    }
    function SetTabControls(index, select) {
        var tabStrip = $("#tabstrip").data("kendoTabStrip");
        if (select) {
            tabStrip.select(index);
        }
    }
    function onTabSelect1(e) {
        SetTabControls($(e.item).index(), false);
    }
    function OnSelect(e) {
        e.preventDefault();


    }
    function OpenIframeModal(url, title) {
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: title, Width: 700, Height: 350 });
        return false;
    }

    function componentDrag(ev) {
        //alert(ev.target.data('type'));
        ev.dataTransfer.setData("text", ev.target.id);
    }
    function componentDrop(ev, el) {
        ev.preventDefault();
        var type = ev.dataTransfer.getData("text");
        AddComponent(type, el);
        //ev.target.appendChild(document.getElementById(data));
    }
    function componentDragOver(ev) {
        ev.preventDefault();
    }
    //function RemovespecailChar()
    //{
    //    var txt = $("#pagetitle").val();
    //    txt = txt.replace(/[^A-Z0-9]/ig, "");
    //    $("#generatelbl").html(txt);
    //}
    $("#Title").on('input', function () {
        if ('@Model.DataAction' == '@DataActionEnum.Create')
        {
            var txt = $("#Title").val();
            txt = txt.replace(/[^A-Z0-9]/ig, "");
            $("#Name").val(txt);
        }
    });
    $("#Name").on('input', function () {
        var txt = $("#Name").val();
        txt = txt.replace(/[^_A-Z0-9]/ig, "");
        $("#Name").val(txt);
    });
    function OnRequestEnd_TopLinePriceGrid(e) {
        if (e.type === "update") {
            var grid = $('#kgrdUserPermission').data('kendoGrid');
            grid.dataSource.read();
        }
    }
    function OnError(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }
      var onAjaxSuccess = function (res) {
          //
          if (res.success) {
              var pageId = res.page.Id;
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                ShowNotification("Saved Successfully", "success");
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("Updated Successfully", "success");
            }
            if ('@Model.RequestUrl' == "Portal") {
                url = '@Url.Action("EditPage", "Content", new { @area="Cms"})?source=Portal&isPopup=true' + '&pageId=' + pageId ;
                win = GetMainWindow();
                win.iframeOpenUrl = url;
                win.OpenWindow({ Width: 1000, Height: 1000, Title: "Edit Page", Reload: true });
                window.parent.$("#pagetreelist").data("kendoTreeList").dataSource.read();
            }
            else {
                //window.parent.$("#contentTreeView").data("kendoTreeView").dataSource.read();
                window.parent.$('#contentTreeView').jstree(true).refresh();
                  LoadPartailView('@Url.Action("EditPage", "Content", new { @area="Cms"})?pageId=' + pageId, $('#page-content'));

            }



        }
        else {
            showError(res.error);
          }
          HideLoader($('#page-content1'));
    };
    var showError = function (error) {
        //#validation-summary-manageform
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
        HideLoader($('#page-content1'));
    }

    function onFileUploadSuccessIcon(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-myiconimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#IconFileId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onIconDel() {

        //        alert("Banner Delete");
        $(".style-myiconimage").attr("src", "/images/200.png");
        $("#IconFileId").val('');
       // var faviconupload = $("#files3").data("kendoUpload");
        //console.log(bannerupload);
        //faviconupload.clearFile(function (file) { return true; });
        $("#iconFile").dmUploader("reset");

    }

    function OnPageDetails() {

        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("PageDetailsIndex", "Content", new { @area="Cms"})?Id=' + '@Model.Id';
        win.OpenWindow({ Title: 'Page Details', Width: 800, Height: 800 });
        return false;
    }


</script>


<div class="row card-header pad-20 no-gutters">
    <div class="col-sm-1">
        <button type="button" class="btn" style="width: 68%; height: 94%; border: 1px solid transparent; border-color: #dee2e6; background-color: #fff;" onclick="openNavForIcon()">
            @if (Model.DataAction == DataActionEnum.Edit && Model.IconCss != "" && Model.IconCss != null)
            {
                <i class="@Model.IconCss" style="font-size:35px;color:@Model.IconColor" id="pageicon" data-type="@Model.IconCss" data-color="@Model.IconColor"></i>
            }
            else
            {
                <i class="fal fa-file" style="font-size:35px" id="pageicon" data-type="fal fa-file" data-color="#212529"></i>
            }

        </button>
    </div>
    @*<div class="float-container col-sm-6" style="margin-left:-21px;">
            <input type="text" class="form-control" id="pagetitle" value="@Model.Title" />
            <label id="generatelbl" class="float-right" for="pagetitle" style="position:unset;padding-right:5px;padding-top:3px;font-size:small;">@Model.Name</label>
        </div>*@
    <div class="col-sm-11">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item"><a data-toggle="tab" href="#general" class="nav-link active" role="tab" aria-controls="general" aria-selected="true"><i class="fas fa-pencil-paintbrush" style="margin-left:15px;"></i><br />Page</a></li>
            @if (Model.DataAction == DataActionEnum.Edit)
            {
                <li class="nav-item"><a data-toggle="tab" href="#permissions" class="nav-link" aria-controls="permissions" aria-selected="false" onclick=" LoadPartailView('@Url.Action("ManagePermissions", "Content", new { @area = "Cms" })?pageId=@Model.Id&pageType=@Model.PageType&portalId=@Model.PagePortalId', $('#permissions'));"><i class="fas fa-key" style="margin-left:32px;"></i><br />Permissions</a></li>

                <li class="nav-item"><a data-toggle="tab" href="#actionpermissions" class="nav-link" aria-controls="actionpermissions" aria-selected="false" onclick=" LoadPartailView('@Url.Action("ManageActionPermissions", "Content", new { @area = "Cms" })?pageId=@Model.Id&pageType=@Model.PageType&portalId=@Model.PagePortalId', $('#actionpermissions'));"><i class="fas fa-key" style="margin-left:32px;"></i><br />Action Permissions</a></li>

                <li class="nav-item"><a data-toggle="tab" href="#userdatapermissions" class="nav-link" aria-controls="userdatapermissions" aria-selected="false" onclick=" LoadPartailView('@Url.Action("ManageUserDataPermissions", "Content", new { @area = "Cms" })?pageId=@Model.Id&pageType=@Model.PageType&portalId=@Model.PagePortalId', $('#userdatapermissions'));"><i class="fas fa-key" style="margin-left:32px;"></i><br />Data Permissions</a></li>
            }
        </ul>

    </div>
</div>

<div class="tab-content" id="page-content1">
    <div id="general" class="tab-pane  in active" role="tabpanel" aria-labelledby="design-tab">


        <div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

            <form asp-controller="Content" asp-action="ManageGeneralTabData" class="form-horizontal"
                  data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
                  data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
                  data-ajax="true" data-ajax-method="POST">
                <div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>

                <div class="row" style="padding:10px;">
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="Title">Title</label>
                        </div>
                        <div class="col-9">
                            <input asp-for="Title" type="text" class="form-control lang-ctrl-width" placeholder="Title" autocomplete="off" />
                            <span class="fa fal fa-2x fa-language  language-icon" onclick="OnLanguageClick();"></span>
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3 ">
                            <label for="Name">Name</label>
                        </div>
                        <div class="col-9 ">
                            @*@if (Model.DataAction == DataActionEnum.Create)
                {*@
                            <input asp-for="Name" type="text" class="form-control" placeholder="Name" autocomplete="off" />
                            @*}
                else
                {
                    <input asp-for="Name" type="text" class="form-control" placeholder="Name" autocomplete="off" readonly />
                }*@

                        </div>
                    </div>
                    <!--<div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="Module">Module<span class="required">*</span></label>

                        </div>
                        <div class="col-9">
                          
                            <input id="ModuleId" style="width: 100%" />
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="Module">Sub Module<span class="required">*</span></label>

                        </div>
                        <div class="col-9 ">                           

                            <input id="SubModuleId" style="width: 100%" />-->

                            @*<input asp-for="MenuName" type="text" class="form-control" placeholder="Enter Menu Name" autocomplete="off" />*@
                        <!--</div>
                    </div>-->
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="MenuGroup">Menu Group<span class="required">*</span></label>

                        </div>
                        <div class="col-9">
                            @*@(Html.Kendo().DropDownListFor(x=>x.MenuGroupId)
                   .DataTextField("Name")
                                .DataValueField("Id")
                    // .Events(e => e.Change("change"))
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetMenuGroupListByPortal", "MenuGroup", new { @area = "Cms" ,@portalId=Model.PortalId}).Data("FilterMenuGroup");
                        });
                    })
                      .Value(Model.MenuGroupId)
                   .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                      .HtmlAttributes(new { style = "width: 100%" })
                )*@

                            @*@(Html.Kendo().DropDownTreeFor(x=>x.MenuGroupId)

                   .DataTextField("Name")
                   .DataValueField("id")

                            .HtmlAttributes(new { style = "width: 100%" })
                            .Placeholder("Select Menu Group")
                            .Filter(FilterType.Contains)
                            .Events(x => x.Select("onSelectFolder"))
                            .Value(Model.MenuGroupId)
                            .DataSource(dataSource => dataSource
                                .Read(read => read
                                    .Action("GetMenuGroupListByPortal", "MenuGroup", new { @area = "Cms", @portalId=Model.PortalId}).Data("FilterMenuGroup")
                                )
                            )
                )*@

                            <input asp-for="MenuGroupId" id="MenuGroupId" style="width: 100%" />
                            <!-- Template -->
                            <script id="dropdowntree-template" type="text/kendo-ui-template">
                                #: item.Name #
                            </script>

                            <!-- Template -->
                            <script id="dropdowntree-value-template" type="text/kendo-ui-template">
                                <span> #: data.Name # </span>
                            </script>
                            @*<input asp-for="MenuName" type="text" class="form-control" placeholder="Enter Menu Name" autocomplete="off" />*@
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="Module">Page Type<span class="required">*</span></label>

                        </div>
                        <div class="col-9">
                            @*@(Html.Kendo().DropDownListFor(x=>x.PageType)
                .DataTextField("Name")
                .DataValueField("Id")
                .Events(e => e.Change("OnPageTypechange"))
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                      read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "TemplateTypeEnum" });
                    });
                })
                .Value(Model.PageType.ToString())
                .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                .HtmlAttributes(new { style = "width: 100%" })
                )*@

                            <input asp-for="PageType" id="PageType" style="width: 100%" />

                        </div>
                    </div>

                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="Module">Page<span class="required">*</span></label>

                        </div>
                        <div class="col-9">
                            @*@(Html.Kendo().DropDownListFor(x=>x.TemplateId)
                    .DataTextField("Name")
                    .DataValueField("Id")
                    .AutoBind(true)
                    //.CascadeFrom("PageType")
                    .Filter(FilterType.Contains)
                    .DataSource(source =>
                    {
                    source.Read(read =>
                    {
                        read.Action("GetTemplateByType", "Template", new { @area = "Cms" }).Data("filterTemplates");
                    });
                    // .ServerFiltering(true);
                    })
                    .Value(Model.TemplateId)
                    .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                    .HtmlAttributes(new { style = "width: 100%" })
                )*@
                            <input asp-for="TemplateId" id="TemplateId" style="width: 100%" />
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <input type="checkbox" asp-for="ShowTitleInPage" class="k-checkbox" style="margin-right:5px;" />
                            <label>Show Page Title in Page</label>
                            @**@
                            @*@(Html.Kendo().CheckBox().Name("chkPageTitle").Checked(true).Label("Show Page Title in Page"))*@
                        </div>

                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <input type="checkbox" asp-for="HideInMenu" style="margin-right:5px;" />
                            <label>Do not Show this Page in Menu</label>
                        </div>
                        <div class="col-9">
                            <input asp-for="MenuName" type="text" class="form-control lang-ctrl-width" placeholder="Menu Name" autocomplete="off" />
                            <span class="fa fal fa-2x fa-language language-icon" onclick="OnMenuLanguageClick();"></span>
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="ShowOutsideMenuGroup" class="k-checkbox" style="margin-right:5px;" />
                            <label>Show This Item Outside Menu Group</label>
                        </div>

                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="DontShowMenuInThisPage" class="k-checkbox" style="margin-right:5px;" />
                            <label>Do not Show Menu In This Page</label>
                        </div>

                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="AuthorizationNotRequired" class="k-checkbox" style="margin-right:5px;" />
                            <label asp-for="AuthorizationNotRequired">Authorization Not Required</label>
                        </div>

                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="ShowMenuWhenAuthorized" class="k-checkbox" style="margin-right:5px;" />
                            <label asp-for="ShowMenuWhenAuthorized">Show In Menu When Authorized</label>
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="ShowMenuWhenNotAuthorized" class="k-checkbox" style="margin-right:5px;" />
                            <label asp-for="ShowMenuWhenNotAuthorized">Show In Menu When Not Authorized</label>
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="IsRootPage" class="k-checkbox" style="margin-right:5px;" />
                            <label asp-for="IsRootPage">Is Landing Page</label>
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="AllowIfPortalAccess" class="k-checkbox" style="margin-right:5px;" />
                            <label asp-for="AllowIfPortalAccess">Allow access to this page if portal access is enabled</label>
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="IsPageRedirect" class="k-checkbox" style="margin-right:5px;" />
                            <label asp-for="IsPageRedirect">Is Page Redirect</label>
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-12">
                            <input type="checkbox" asp-for="DontShowInMainMenu" class="k-checkbox" style="margin-right:5px;" />
                            <label asp-for="DontShowInMainMenu">Do not Show In Main Menu</label>
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3 ">
                            <label for="MenuName">Sequence No</label>
                        </div>
                        <div class="col-9 ">
                            <input asp-for="SequenceOrder" type="number" class="form-control" placeholder="Enter Sequence Order" autocomplete="off" />
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3 ">
                            <label for="GroupCode">Group Code</label>
                        </div>
                        <div class="col-9 ">
                            <input asp-for="GroupCode" type="text" class="form-control" placeholder="Enter Group Code" autocomplete="off" />
                        </div>
                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="Description">Layout</label>
                        </div>
                        <div class="col-9">
                            <input type="text" asp-for="Layout" placeholder="Layout" class="form-control" />
                        </div>


                    </div>
                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="Description">Description</label>
                        </div>
                        <div class="col-9">
                            @*<textarea asp-for="Description" placeholder="Description" rows="3" class="form-control"></textarea>*@
                            @*@(Html.Kendo().EditorFor(x=>x.Description)
                            .HtmlAttributes(new { style = "height:300px" })

                )*@

                            <div class="page-wrapper box-content" style="height:300px">
                                <textarea class="content" asp-for="Description" id="Description"></textarea>
                            </div>
                        </div>
                    </div>


                    @if (Model.DataAction == DataActionEnum.Edit)
                    {
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="Description">Page Details</label>
                            </div>
                            <div class="col-9">
                                <input type="button" class="btn btn-primary" value="Add Page Details" id="btnPageDetail" data-type="" onclick="OnPageDetails()" />
                            </div>


                        </div>
                    }

                    <div class="row col-12 pad-10">
                        <div class="col-3">
                            <label for="Description">File Icon</label>
                        </div>
                        <div class="col-9">
                            @*<div class="style-image">
                    @if (Model.IconFileId != null)
                    {
                        <img class="style-myiconimage" src="/cms/Document/GetImageMongo?id=@Model.IconFileId" onerror='OnPhotoError(this);' />
                    }
                    else
                    {
                        <img class="style-myiconimage" style="background-color:gray;" src="~/images/200.png" />
                    }

                </div>
                <div class="style-upload">*@
                            @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @Area="Cms"})
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccessIcon")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                        //.MaxFileSize(2097152)
                        )
                        .HtmlAttributes(new { @class = "hr-large", @id = "files3" })
                )*@
                            <div class="row">
                                @*<div class="col">
                        <div id="iconFile" class="dm-uploader">
                            <h6 class=" text-muted">Drag &amp; drop files here</h6>

                            <div class="btn btn-primary btn-block ">
                                <span>Open the file Browser</span>
                                <input type="file" title='Click to add Files' />
                            </div>
                        </div>

                    </div>*@


                                @*<div class="col">
                        <div class="card h-100">
                            <div class="card-header">
                                File List
                            </div>
                            <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                                <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                            </ul>
                        </div>
                    </div>*@

                                @*</div>
                        <button type="button" class="btn btn-light" title="Delete Icon" onclick="onIconDel();"><i class='fa fas fa-trash'></i></button>
                    </div>*@

                                @{
                                    await Html.RenderPartialAsync("~/Areas/Core/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.IconFileId), Value = Model.IconFileId });
                                }
                                @*</div>*@


                            </div>

                        </div>
                    </div>
                    <div @*class="cms-footer"*@ style="float:right">
                        @*<input type="button" class="btn btn-link" value="Save and Preview" data-type="Preview" onclick="OnSave('Preview', event)" />*@
                        @*<input type="button" class="btn btn-success" value="Save and Publish" data-type="Publish" onclick="OnSave('Publish', event)" />*@
                        <input type="submit" class="btn btn-primary" value="Save" id="btnSave" data-type="" onclick="OnSave('', event)" />
                    </div>
                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.DataAction)
                    @Html.HiddenFor(x => x.IconColor)
                    @Html.HiddenFor(x => x.IconCss)
                    @Html.HiddenFor(x => x.Level)
                    @Html.HiddenFor(x => x.Title)
                    @Html.HiddenFor(x => x.Name)
                    @Html.HiddenFor(x => x.state)
                    @Html.HiddenFor(x => x.PortalId)
                    @Html.HiddenFor(x => x.PagePortalId)
                    @Html.HiddenFor(x => x.ParentId)
                    @Html.HiddenFor(x => x.IconFileId)
                </div>
</form>
        </div>
    </div>
    <div id="permissions" class="tab-pane " role="tabpanel" aria-labelledby="permissions-tab">

    </div>

    <div id="actionpermissions" class="tab-pane " role="tabpanel" aria-labelledby="actionpermissions-tab">

    </div>

    <div id="userdatapermissions" class="tab-pane " role="tabpanel" aria-labelledby="userdatapermissions-tab">

    </div>
</div>





<div id="page-icon-div">
    <div id="mySidenavPageIcon" class="sidenav">
        <h1 class="cms-panel-header-name">Page Icon</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNavIcon()" title="Close">&times;</a>
        <hr />
        <div id="page-icon" class="row pad-20 slidenav-flow">

        </div>
    </div>
</div>


<script>
    @*$(document).ready(function () {
         LoadPartailView('@Url.Action("ManagePermissions", "Content", new { @area="Cms"})?pageId=@Model.Id&pageType=@Model.PageType', $('#permissions'));
    });*@

       var onAjaxSuccess = function (res) {
         //
           if (res.success) {
               debugger;
              var pageId = res.page.Id;
               if ('@Model.DataAction' == '@DataActionEnum.Create') {
                   ShowNotification("Saved Successfully", "success");
                   if ('@ViewBag.CallBackMethod' != '') {
                       var win = GetMainWindow();
                      win.CloseWindow({ MethodName:'@ViewBag.CallBackMethod' });
                      return false;
                   }
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("Updated Successfully", "success");
            }
            if ('@Model.RequestUrl' == "Portal") {
                url = '@Url.Action("EditPage", "Content", new { @area="Cms"})?source=Portal&isPopup=true' + '&pageId=' + pageId ;
                win = GetMainWindow();
                win.iframeOpenUrl = url;
                win.OpenWindow({ Width: 1000, Height: 1000, Title: "Edit Page", Reload: true });
                window.parent.$("#pagetreelist").data("kendoTreeList").dataSource.read();
            }
            else {
                //window.parent.$("#contentTreeView").data("kendoTreeView").dataSource.read();
                window.parent.$('#contentTreeView').jstree(true).refresh();
                  LoadPartailView('@Url.Action("EditPage", "Content", new { @area="Cms"})?pageId=' + pageId, $('#page-content'));

            }



        }
        else {
            showError(res.error);
          }
          HideLoader($('#page-content1'));
    };


    function OnSave(Statetype,evt) {

        ShowLoader($('#page-content1'));
       // $("#Title").val($("#pagetitle").val());
       // $("#Name").val($("#generatelbl").html());
        $("#state").val(Statetype);
        if ($("#Title").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Title is required");
            HideLoader($('#page-content1'));
            evt.preventDefault();
            return false;
        }
        //else if ($("#ModuleId").val() == "")
        //{
        //    $(".text-danger").removeClass("validation-summary-valid");
        //    $(".text-danger").addClass("validation-summary-errors");
        //    $(".text-danger").html("Module is required");
        //    evt.preventDefault();
        //    HideLoader($('#page-content1'));
        //    return false;

        //}
        //else if ($("#SubModuleId").val() == "") {
        //    $(".text-danger").removeClass("validation-summary-valid");
        //    $(".text-danger").addClass("validation-summary-errors");
        //    $(".text-danger").html("Sub Module is required");
        //    HideLoader($('#page-content1'));
        //    return false;
        //}
        else if ($("#MenuGroupId").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Menu Group is required");
            evt.preventDefault();
            HideLoader($('#page-content1'));
            return false;

        }
        else if ($("#PageType").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Page Type is required");
            evt.preventDefault();
            HideLoader($('#page-content1'));
            return false;

        }
        else if ($("#TemplateId").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Template is required");
            evt.preventDefault();
            HideLoader($('#page-content1'));
            return false;

        }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");

        }

    }

    function openNavForIcon() {
        //alert("test");
        document.getElementById("mySidenavPageIcon").style.width = "450px";
        LoadPartailView('@Url.Action("SelectPageIcon", "Content", new { @area="Cms"})?iconCss=' + $("#pageicon").attr("data-type") + "&iconColor=" + $("#pageicon").attr("data-color"), $('#page-icon'));
        $("#overlay").addClass("overlay");

    }
    function closeNavIcon() {
        document.getElementById("mySidenavPageIcon").style.width = "0";
        $("#overlay").removeClass("overlay");
    }
    function OnIconPropertySubmit(iconname, iconcolor) {

        $("#IconCss").val(iconname);
        $("#IconColor").val(iconcolor);
        $("#pageicon").attr("data-type", iconname);
        $("#pageicon").removeAttr("class");
        $("#pageicon").addClass(iconname);
        $("#pageicon").css("color", iconcolor);
        document.getElementById("mySidenavPageIcon").style.width = "0";
        $("#overlay").removeClass("overlay");
    }
    function Permission() {

           var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("PagePermission", "PagePermission", new { @area="Cms"})?portalId=@Model.PortalId&pageId=@Model.Id';
        win.OpenWindow({ Title: 'Permission', Width: 450, Height: 950, Position:'Right' });
        return false;
    }
     // function that gathers IDs of checked nodes
    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i].id);
            }

            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }

    // show checked node IDs on datasource change
    function onCheck() {
        var checkedNodes = [],
            treeView = $("#treeview").data("kendoTreeView"),
            message;

        checkedNodeIds(treeView.dataSource.view(), checkedNodes);

        if (checkedNodes.length > 0) {
            message = "IDs of checked nodes: " + checkedNodes.join(",");
        } else {
            message = "No nodes checked.";
        }
        $("#result").html(message);
    }

    function ExtractError(err, exludeLi) {
        var msg = "";
        $.each(err, function (key, value) {

            $.each(value, function (key1, value1) {
                $.each(value1, function (key2, value2) {
                    if (exludeLi) {
                        msg += value2 + "\n";
                    }
                    else {
                        msg += "<li>" + value2 + "</li>";
                    }

                });

            });
        });
        return msg;
    }



</script>





