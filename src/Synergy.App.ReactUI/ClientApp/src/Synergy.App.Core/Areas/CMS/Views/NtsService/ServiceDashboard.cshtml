@inject IStringLocalizer<CMS.UI.Web.Areas.CMS.Controllers.NtsServiceController> Resource
@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common

@model ProjectDashboardViewModel;

@{
    ViewBag.Title = @Resource["ServiceHomeDashboard"];

    Layout = null;
}

<style>

    .chart-body {
        height: 360px;
    }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    .banner-text {
        position: absolute;
        top: 35px;
        left: 30px;
    }

    .k-datepicker {
        width: 9em !important;
    }

</style>

<script>

    var etcode = "";
    var itccode = "";
    function onDatewiseSearch() {

        //var dates = {
        //    StartDate: kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
        //    DueDate: kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
        //};

        var st = $("#FromDate").val();
        var dt = $("#ToDate").val();

        var starr = st.split('.');
        var dtarr = dt.split('.');

        st = starr[1] + "/" + starr[0] + "/" + starr[2];
        dt = dtarr[1] + "/" + dtarr[0] + "/" + dtarr[2];

        DateWiseChart(st, dt);
        $("#chartDateWiseSearch").data("kendoChart").dataSource.read(dates);
    }

    $(document).ready(function () {

        //chart
        var url = "/Cms/NtsService/GetExternalServiceChartByStatus";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    etcode = res.TemplateCode;
                    var chart = "#chartTaskByStatus";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Task By Status"
                        //},
                        chart: {
                            id: chartTaskByStatus,
                            width: 370,
                            height: 360,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';
                                    if (status === 'Reply To External Customer') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS,SERVICE_STATUS_OVERDUE';
                                    } else if (status === 'Received External Request') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reply To External Customer') {
                                        statusCode = 'SERVICE_STATUS_REJECT,SERVICE_STATUS_CANCEL';
                                    }
                                    getServiceList(statusCode, etcode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],

                    };
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    document.getElementById("chartTaskByStatus").innerHTML = "";
                    chart.render();
                }
            }
        });
          //chartTaskByType
        var url = "/Cms/NtsService/GetInternalServiceChartByStatus";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    itccode = res.Code;
                    var chart = "#chartTaskByType";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Task By Type"
                        //},
                        chart: {
                            id: chartTaskByType,
                            width: 370,
                            height: 360,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';
                                    if (status === 'Overdue') {
                                        statusCode = 'SERVICE_STATUS_OVERDUE';
                                    } else if (status === 'In progress') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS';
                                    } else if (status === 'Draft') {
                                        statusCode = 'SERVICE_STATUS_DRAFT';
                                    } else if (status === 'Completed') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reject') {
                                        statusCode = 'SERVICE_STATUS_REJECT';
                                    }
                                    getIServiceList(statusCode, itccode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        colors: res.ItemStatusColor,
                        //colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],

                    };
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    document.getElementById("chartTaskByType").innerHTML = "";
                    chart.render();
                }
            }
        });


     $("#mdlServiceOwnedRequested").kendoMultiSelect({
         dataTextField: "Type",
         dataValueField: "Type",
        filter: "contains",
        autoBind: true,
        autoClose: false,
        change: onChangeTaskAssigned,
        dataSource: {
            transport: {
                read: {
                    url: "@Url.Action("GetExternalServiceChartStatus", "NtsService", new { area = "CMS" })",
                }
            }
        }
     });

        $("#mdlServiceStatus").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Name",
            filter: "contains",
            autoBind: true,
            autoClose: false,
            change: onChangeServiceStatus,
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_SERVICE_STATUS" })",
                    }
                }
            }
        });

        $("#FromDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat",});
        $("#ToDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat", });

        onDatewiseSearch();

    });

    function getServiceList(statusCode,tcode) {
        var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/NtsService/ServiceListByFilters?&statusCodes=' + statusCode + '&templateCodes=' + tcode;
        win.OpenWindow({ Title: 'Services', Width: 1200, Height: 600 });
        return false;
    }

    function getIServiceList(statusCode,itcode) {
        var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/NtsService/ServiceListByFilters?&statusCodes=' + statusCode + '&categoryCodes=' + itcode + '&showAllOwnersService=true';
        win.OpenWindow({ Title: 'Services', Width: 1200, Height: 600 });
        return false;
    }


    function OnOpen(id, templateCode) {

        var portalId =  $("#GlobalPortalId").val();
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterCreate&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Service Request', Width: 1200, Height: 700 });
        return false;
    }

    function GOWBS() {
        window.parent.LoadPartailView1("/pjm/ProjectTask/Index?ProjectId=@Model.Id&pageName=WorkBreakDownStructure", 'cms-content');
        AddBreadCrumb({ Text: 'Work BreakDown Structure', Name: 'WorkBreakDownStructure', Url: '/pjm/ProjectTask/Index?ProjectId=@Model.Id&pageName=WorkBreakDownStructure', PageType: 'Custom', LoadType: 'PartialView', IsNotClickable: false, IsClickDisabled: true }, true, 'Project Dashboard');

    }

    function onTaskSeriesClick(e) {

        var selectvalue = e.dataItem.Type;
        var multiselect = $("#mdlServiceStatus").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length;i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);

        var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        //var stagevalue = multiselectTaskStages.value();

        var search = {
            ServiceStatusIds: newvalue,
            StatusIds: assignedvalue,
        };
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);

        //var g = $("#kgdProjectGridView").data("kendoGrid");
        //console.log(g);
        //g.dataSource.group({ field: "NtsStatus" });
       //alert("\n category : " + e.category + "\n value : " + e.dataItem.Code);
        //window.lModelcation.href = "/pmt/pmthome/tasks?taskStatus=" + e.dataItem.Code;
    }

    function onTaskAssignedSeriesClick(e) {


        var selectvalue = e.dataItem.Type;
        var multiselect = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length; i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);

        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        //var stagevalue = multiselectTaskStages.value();

        var search = {
            ServiceStatusIds: statusvalue,
            StatusIds: newvalue,
        };
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);


    }
    function onTaskStagesSeriesClick(e) {

        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlTaskStages").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length; i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();

        var search = {
            //projectId: '@Model.Id',
           // projectIds: newvalue,
            ServiceStatusIds: statusvalue,
            StatusIds: assignedvalue,
        };
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);


        //var g = $("#kgdProjectGridView").data("kendoGrid");
        //console.log(g);
        //g.dataSource.group({ field: "ServiceStage" });
    }
    function onChangeServiceStatus() {
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
       // var stagevalue = multiselectTaskStages.value();
        var search = {
            //projectId: '@Model.Id',
            //projectIds: stagevalue,
            ServiceStatusIds: statusvalue,
            StatusIds: assignedvalue,
        };
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);

    }
    function onChangeTaskAssigned() {
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
       // var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
       // var stagevalue = multiselectTaskStages.value();
        var search = {
            //projectId: '@Model.Id',
           // projectIds: stagevalue,
            ServiceStatusIds: statusvalue,
            StatusIds: assignedvalue,
        };
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);

    }
    function onChangeTaskStages() {
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var search = {
           //projectId: '@Model.Id',
           // projectIds: stagevalue,
            ServiceStatusIds: statusvalue,
            StatusIds: assignedvalue,
        };
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);

    }
    function OnDataBound(arg) {

        document.getElementById('projectFiles').style.border = 'none';
        var data = $("#projectFiles").data("kendoListView").dataSource.data();
        var data1 = $("#ProjectTask12").data("kendoListView").dataSource.data();
        if (data.length == 0) {
            $('#no-data-file').show();
        } else {
            $('#no-data-file').hide();
        }
        if (data1.length == 0) {
            $('#no-data-notifi').show();
        } else {
            $('#no-data-notifi').hide();
        }
    }

    function OnTaskAssChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-taskchart').show();

        } else {
            $('#no-data-taskchart').hide();
        }
    }

    function OnTaskStatusChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-chart').show();

        } else {
            $('#no-data-chart').hide();
        }
    }

    function OnTaskTimeChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-timechart').show();

        } else {
            $('#no-data-timechart').hide();
        }
    }
    function OnProjectStageChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-stagechart').show();

        } else {
            $('#no-data-stagechart').hide();
        }
    }
    function onFilterReset() {
        var newvalue = new Array();
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        multiselectTaskStatus.value(newvalue);
        var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        multiselectTaskAssigned.value(newvalue);
       // var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
       // multiselectTaskStages.value(newvalue);
        @*var search = {
            projectId: '@Model.Id',
        };*@
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read();
        getDataServiceDashboard();
    }
     var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        {
            headerName: "Action",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBinServiceDashboard' data-templatecode='" + params.data.TemplateCode + "' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
        {
            field: "ServiceNo", headerName:"Service No"
        },
        { field: "ServiceSubject" },
        { field: "TemplateDisplayName", headerName: "Service Type" },
        { field: "OwnerUserUserName", headerName: "Service Owner" },
        { field: "ServiceStatusName", headerName: "Service Status" },
        //{ field: "StartDate" },
        //{ field: "DueDate" }
        {
            field: "StartDate",
            headerName: "@Resource["Start Date"]",
            cellRenderer: params => {

                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }

        },

        {
            field: "DueDate",
            headerName: "@Resource["Due Date"]",
            cellRenderer: params => {

                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }

        },

    ];
    function DateWiseChart(st,dt)
    {
        //$("#chartDateWiseSearch").html("");
        document.getElementById("chartDateWiseSearch").innerHTML = "";
        debugger
        var url = "/Cms/NtsService/GetExternalServiceSLA?StartDate=" + st + "&DueDate=" + dt;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    // var vals = res.ItemValueSeries;
                    var chart = "#chartDateWiseSearch";
                    var options = {
                        chart: {
                            height: 312,
                            type: "line",
                            stacked: false
                        },
                        dataLabels: {
                            enabled: false
                        },
                        colors: ["#FF1654", "#247BA0"],
                        //series: [
                        //    {
                        //        name: res.Days,
                        //        data: res.Type

                        //    },
                        //    {
                        //        name: res.ActualSLA,
                        //        data: res.Type

                        //    }
                        //],
                        series: [
                            {
                                name: "Service SLA",
                                data: res.LineChartValueSeries

                            },
                            {
                                name: "Actual SLA",
                                data: res.LineChartValueSeries1

                            }
                        ],
                        stroke: {
                            width: [4, 4]
                        },
                        plotOptions: {
                            bar: {
                                columnWidth: "20%"
                            }
                        },
                        xaxis: {
                            categories: res.ItemValueLabel
                        },
                        yaxis: [
                            {
                                axisTicks: {
                                    show: true
                                },
                                axisBorder: {
                                    show: true,
                                    color: "#FF1654"
                                },
                                labels: {
                                    style: {
                                        colors: "#FF1654"
                                    }
                                },
                                title: {
                                    text: "Service SLA",
                                    style: {
                                        color: "#FF1654"
                                    }
                                }
                            },
                            {
                                opposite: true,
                                axisTicks: {
                                    show: true
                                },
                                axisBorder: {
                                    show: true,
                                    color: "#247BA0"
                                },
                                labels: {
                                    style: {
                                        colors: "#247BA0"
                                    }
                                },
                                title: {
                                    text: "Actual SLA",
                                    style: {
                                        color: "#247BA0"
                                    }
                                }
                            }
                        ],
                        tooltip: {
                            shared: false,
                            intersect: true,
                            x: {
                                show: false
                            }
                        },
                        legend: {
                            horizontalAlign: "bottom",
                            offsetX: 40
                        }
                    };

                    var chart = new ApexCharts(document.querySelector("#chartDateWiseSearch"), options);

                    chart.render();

                    //var options = {
                    //    series: [{
                    //        name: 'Service SLA',
                    //        type: 'line',
                    //        data: res.LineChartValueSeries
                    //    }, {
                    //        name: 'Actual SLA',
                    //        type: 'line',
                    //            data: res.LineChartValueSeries1
                    //    }],
                    //    chart: {
                    //        height: 350,
                    //        type: 'line',
                    //        stacked: false
                    //    },
                    //    dataLabels: {
                    //        enabled: false
                    //    },
                    //    stroke: {
                    //        width: [1, 1, 4]
                    //    },
                    //    title: {
                    //        align: 'left',
                    //        offsetX: 110
                    //    },
                    //    xaxis: {
                    //        categories: res.ItemValueLabel,
                    //    },
                    //    yaxis: [
                    //        {
                    //            seriesName: 'Service SLA',
                    //            axisTicks: {
                    //                show: true,
                    //            },
                    //            axisBorder: {
                    //                show: true,
                    //                color: '#008FFB'
                    //            },
                    //            labels: {
                    //                style: {
                    //                    colors: '#008FFB',
                    //                }
                    //            },
                    //            title: {
                    //                text: "Service SLA",
                    //                style: {
                    //                    color: '#008FFB',
                    //                }
                    //            },
                    //            tooltip: {
                    //                enabled: true
                    //            }
                    //        },
                    //        {
                    //            seriesName: 'Actual SLA',
                    //            opposite: true,
                    //            axisTicks: {
                    //                show: true,
                    //            },
                    //            axisBorder: {
                    //                show: true,
                    //                color: '#00E396'
                    //            },
                    //            labels: {
                    //                style: {
                    //                    colors: '#00E396',
                    //                }
                    //            },
                    //            title: {
                    //                text: "Actual SLA",
                    //                style: {
                    //                    color: '#00E396',
                    //                }
                    //            },
                    //        },
                    //        //{
                    //        //    seriesName: 'Actual SLA',
                    //        //    opposite: true,
                    //        //    axisTicks: {
                    //        //        show: true,
                    //        //    },
                    //        //    axisBorder: {
                    //        //        show: true,
                    //        //        color: '#FEB019'
                    //        //    },
                    //        //    labels: {
                    //        //        style: {
                    //        //            colors: '#FEB019',
                    //        //        },
                    //        //    },
                    //        //    title: {
                    //        //        text: "Revenue (thousand crores)",
                    //        //        style: {
                    //        //            color: '#FEB019',
                    //        //        }
                    //        //    }
                    //        //},
                    //    ],
                    //    tooltip: {
                    //        fixed: {
                    //            enabled: true,
                    //            position: 'topLeft', // topRight, topLeft, bottomRight, bottomLeft
                    //            offsetY: 30,
                    //            offsetX: 60
                    //        },
                    //    },
                    //    legend: {
                    //        horizontalAlign: 'left',
                    //        offsetX: 40
                    //    }
                    //};

                    //var chart = new ApexCharts(document.querySelector("#chartDateWiseSearch"), options);
                    //chart.render();

                }
            }
        });
    }
    $(function () {

        getDataServiceDashboard();



        $.contextMenu({
            selector: '#tree-menuBinServiceDashboard',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');
                var templateCode = $trigger.data('templatecode');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'open':
                                        OnOpen(id, templateCode);
                                        break;



                                    default:
                                }
                            },
                            items: {
                                "open": { name: "Open", icon: "fas fa-edit" },



                            }
                        };


                }
            }
        });


    });


    function getDataServiceDashboard(search) {
        debugger
        var url = "/cms/NtsService/GetSEBIServiceList";
        if (search != undefined)
        {
            var ServiceStatusIds = search.ServiceStatusIds.length != 0 ? search.ServiceStatusIds : "";
            var StatusIds = search.StatusIds.length != 0 ? search.StatusIds : "";
            url = "/cms/NtsService/GetSEBIServiceList?ServiceStatusIds=" + ServiceStatusIds + "&StatusIds=" + StatusIds;
        }
       document.getElementById("kgdProjectGridView").innerHTML = "";
       gridConfig(
           "kgdProjectGridView",
           url,
           columnDefs,
           false,
           true,
           true,
           true,
           1,
           true,
           10);
    }


</script>


<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="banner-container">
            <img style="width:100%; height:100px" src="~/images/NTS/Service.jpeg" asp-append-version="true" />
            <h4 class="banner-text">@ViewBag.ServiceDashboardTitle</h4>
        </div>
        <div class="page-inner">
            <div class="page-section">
                <div class="row">
                    <div class="col-4"></div>
                    <div class="col-4"></div>
                    <div class="col-4">
                        <div class=" d-flex" style="justify-content:space-evenly;">
                            <div class="form-group">
                                <label class="control-label" for="FromDate">@SharedResource["From"]</label>
                                <input id="FromDate" class="date" value="@DateTime.Today.AddMonths(-1).ToString(ApplicationConstant.DateAndTime.DefaultJqueryDateFormat)" />
                            </div>
                            <div class="form-group">
                                <label class="control-label" for="ToDate">@SharedResource["To"]</label>
                                <input id="ToDate" class="date" value="@DateTime.Today.ToString(ApplicationConstant.DateAndTime.DefaultJqueryDateFormat)" />
                            </div>
                            <div class="form-group">
                                <button class="btn btn-filter-reset" onclick="onDatewiseSearch()" title="@Resource["ResetFilter"]"><i class="fa fa-search"></i></button>
                            </div>

                        </div>
                    </div>
                </div>


                <div class="row ">
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">External Request</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="chartTaskByStatus"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">Internal Request</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="chartTaskByType"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">External Request SLA</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="chartDateWiseSearch"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                </div>

                <div id="accordion2" class="card-expansion">
                    <!-- .card -->
                    <div class="card card-expansion-item expanded">
                        <div class="card-header border-0" id="headingOne2">
                            <button class="btn btn-reset d-flex justify-content-between w-100" data-toggle="collapse" data-target="#collapseOne2" aria-expanded="true" aria-controls="collapseOne2"><span>Filter</span> <span class="collapse-indicator"><i class="fa fa-fw fa-chevron-down"></i></span></button>
                        </div>
                        <div id="collapseOne2" class="collapse show" aria-labelledby="headingOne2" data-parent="#accordion2">
                            <div class="card-body pt-0 row">
                                <div class="col-sm-12 col-md-5">
                                    <div class="form-group">
                                        <label class="col-form-label" for="mdlServiceOwnedRequested1">External Service Status</label>
                                        <select id="mdlServiceOwnedRequested" data-placeholder="External Service Status"></select>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-5">
                                    <div class="form-group">
                                        <label class="col-form-label" for="mdlServiceStatus">Internal Service Status</label>
                                        <select id="mdlServiceStatus" data-placeholder="Internal Service Status"></select>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-2">
                                    <div class="form-group">
                                        <label class="col-form-label">&nbsp;</label>
                                        <button class="btn btn-primary form-control" onclick="onFilterReset()" title="@Resource["ResetFilter"]">@SharedResource["Reset"]</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><!-- /.card -->

                </div>

                <div>
                    <h5>@Resource["Service Details"]</h5>
                    <hr />
                    <div class="row">
                        <div class="col-12">
                            <div id="kgdProjectGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
