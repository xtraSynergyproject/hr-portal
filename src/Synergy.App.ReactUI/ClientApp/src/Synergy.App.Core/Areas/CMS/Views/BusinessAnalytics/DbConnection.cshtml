@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@model DbConnectionViewModel

@{
    ViewData["Title"] = "DB Connection";
    Layout = null;
}
<script>
    function OnDeleteConnection(Id) {
        var flag = confirm('Do you really want to delete the Connection?');
        
       // e.preventDefault();
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteDbConnection", "BusinessAnalytics", new { @area="Cms"})?id=' +/* dataItem.*/Id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                      //  $("#DbConnectionGrid").data("kendoGrid").dataSource.read();
                        refreshGridview()
                        kendo.alert("Connection Deleted Successfully.");
                    } 
                },
                error: function (ert) {
                    //
                  //  $("#DbConnectionGrid").data("kendoGrid").dataSource.read();
                    refreshGridview()
                }
            });
            return false;
        }
    }

    function OnEditConnection(/*e*/Id) {
      //  var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '/Cms/BusinessAnalytics/ManageDbConnection?id=' + /*dataItem.*/Id +'&dataAction=Edit';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'DB Connection', Width: 700, Height: 750, Position: 'Right' });
        return false;
    }
    function OnCreateConnection() {
        var url = '/Cms/BusinessAnalytics/ManageDbConnection?dataAction=Create';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'DB Connection', Width: 700, Height: 750, Position: 'Right' });
        return false;
    }
    function refreshGridview() {
      //  $("#DbConnectionGrid").data("kendoGrid").dataSource.read();
        getDbConnectionData();
    }


    $(document).ready(function () {

        getDbConnectionData();

    });


    var columnDefs1 = [
        {
            field: "Id",
            headerName: "Action",
            cellRenderer: params => {
                return "<i class='fa fas fa-pencil' onclick='OnEditConnection(\"" + params.data.Id + "\")'></i>&nbsp;&nbsp;<i class='fa fas fa-trash' onclick='OnDeleteConnection(\"" + params.data.Id + "\")'></i>";
            }
        },

        {
            field: "NoteSubject",
            headerName: "Name",

        },
        {
            field: "hostName",
            headerName: "Host Name"

        },
        {
            field: "port",
            headerName: "Port"
        },
        {
            field: "maintenanceDatabase",
            headerName: "Maintenance Database"
        },


    ];



    function getDbConnectionData() {
        document.getElementById("DbConnectionGrid").innerHTML = "";

        gridConfig(
            "DbConnectionGrid",
            "/Cms/BusinessAnalytics/ReadDbConnectionData",
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>


<div>
    <h4>@ViewBag.Title</h4>

    <hr />

    <div class="row">
        <div class="col-12">
            <button type='button' class='btn btn-primary' onclick='OnCreateConnection();'><i class='fa fas fa-plus'></i>&nbsp;Create Db Connection</button>

            <div id="DbConnectionGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            @*@(Html.Kendo().Grid<DbConnectionViewModel>
        ()
        .Name("DbConnectionGrid")
        .ToolBar(toolbar =>
        toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateConnection();'><i class='fa fas fa-plus'></i>&nbsp;Create Db Connection</button>"))

        .Columns(columns =>

        {
            columns.Command(command =>
            {
                command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditConnection").HtmlAttributes(new { @class = "action-icon" });
                command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteConnection").HtmlAttributes(new { @class = "action-icon" });
            }).Title("Action").Width(100);

            columns.Bound(c => c.NoteSubject).Title("Name");
            columns.Bound(c => c.hostName).Title("Host Name");
            columns.Bound(c => c.port).Title("Port");
            columns.Bound(c => c.maintenanceDatabase).Title("Maintenance Database");

        })
        .Scrollable(x => x.Enabled(false))
                    .Sortable(srt => srt.Enabled(true))
                    .Selectable(select => select.Enabled(false))
                    .Filterable(f => f.Extra(false)
                                                        .Operators(o => o.ForString(s => s.Clear()
                                                        .Contains("Contains")
                                                        .IsEqualTo("Is equal to")
                                                    )))
                    .Pageable(pageable => pageable
                    .Refresh(true)

                    .PageSizes(true)
                    .ButtonCount(5))
                    .AutoBind(true)
                    .DataSource(
                    dataSource => dataSource
                    .Ajax()
                    .PageSize(10)
                    //.Events(events => events.Error("OnError"))
                    .Read(read => read.Action("ReadDbConnectionData", "BusinessAnalytics"))
                    .Model(model => model.Id(p => p.Id))
                    )
              )*@

        </div>
    </div>
</div>
