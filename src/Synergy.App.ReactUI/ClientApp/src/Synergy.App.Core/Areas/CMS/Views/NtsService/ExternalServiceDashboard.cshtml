@inject IStringLocalizer<CMS.UI.Web.Areas.CMS.Controllers.NtsServiceController> Resource
@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common

@model ProjectDashboardViewModel;

@{
    ViewBag.Title = @Resource["ServiceHomeDashboard"];

    Layout = null;
}

<style>
    /*.panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .k-listview {
        border: none !important;
    }

    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    */
    /* .banner-container {
        position: relative;
        color: white;
    }

    .banner-text {
        position: absolute;
        top: 14px;
        left: 60px;
        font-size: 35px;
    }*/

    /*.banner-container {
        position: absolute;
        color: white;
        top: 0;
        left: 0;
        width: 100%;
    }    

    */

    .chart-body {
        height: 360px;
    }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    .banner-text {
        position: absolute;
        top: 35px;
        left: 30px;
    }   

    .k-datepicker {
        width: 9em !important;
    }
</style>

<script>
    var tcode;

    function onDatewiseSearch() {

        //var dates = {
        //    StartDate: kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
        //    DueDate: kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
        //};
        //$("#chartDateWiseSearch").data("kendoChart").dataSource.read(dates);

        var st = $("#FromDate").val();
        var dt = $("#ToDate").val();

        var starr = st.split('.');
        var dtarr = dt.split('.');

        st = starr[1] + "/" + starr[0] + "/" + starr[2];
        dt = dtarr[1] + "/" + dtarr[0] + "/" + dtarr[2];

        SLAChart(st, dt);
    }

    function filter() {

        return search = {
            StartDate : $("#FromDate").data("kendoDatePicker").value(),
            DueDate : $("#ToDate").data("kendoDatePicker").value()
        }
    }


    $(document).ready(function () {

        $("#FromDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat",});
        $("#ToDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat",});
        debugger;
        var st = $("#FromDate").val();
        var dt = $("#ToDate").val();

        var starr = st.split('.');
        var dtarr = dt.split('.');

        st = starr[1] + "/" + starr[0] + "/" + starr[2];
        dt = dtarr[1] + "/" + dtarr[0] + "/" + dtarr[2];

        $("#mdlServiceStatus").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Name",
            filter: "contains",
            autoBind: true,
            autoClose: false,
            change: onChangeServiceStatus,
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_SERVICE_STATUS" })",
                    }
                }
            }
        });

        //chart by service status
        var url = "/cms/NtsService/GetExternalUserServiceChartByStatus";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    tcode = res.Code;
                    var chart = "#chartByStatus";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Complaints By Status"
                        //},
                        chart: {
                            id: chartByStatus,
                            width: 370,
                            height: 360,
                            type: 'donut',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';
                                    if (status === 'Overdue') {
                                        statusCode = 'SERVICE_STATUS_OVERDUE';
                                    }else if (status === 'In Progress') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS';
                                    }else if (status === 'Draft') {
                                        statusCode = 'SERVICE_STATUS_DRAFT';
                                    }else if (status === 'Completed') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reject') {
                                        statusCode = 'SERVICE_STATUS_REJECT';
                                    }
                                    getServiceList(statusCode, tcode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        colors: res.ItemStatusColor,
                    };

                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });

        //chart by rated status
        var url = "/cms/NtsService/GetExternalUserInternalServiceChartByStatus";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {

                    var vals = res.ItemValueSeries;
                    tcode = res.Code;
                    var chart = "#chartByRatedStatus";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Complaints By Rated Status"
                        //},
                        chart: {
                            id: chartByRatedStatus,
                            width: 370,
                            height: 360,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';
                                    if (status === 'Overdue') {
                                        statusCode = 'SERVICE_STATUS_OVERDUE';
                                    } else if (status === 'In Progress') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS';
                                    } else if (status === 'Draft') {
                                        statusCode = 'SERVICE_STATUS_DRAFT';
                                    } else if (status === 'Completed') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reject') {
                                        statusCode = 'SERVICE_STATUS_REJECT';
                                    }
                                    getServiceList(statusCode, tcode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        colors: ["#03a9f4", "#ff9800", "#fad84a", "#4caf50"],
                    };

                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });

        SLAChart(st, dt);
        getprojectGridData("");

    });

    function getServiceList(statusCode, tccode) {
        var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/NtsService/ServiceListByFilters?&showAllOwnersService=true&statusCodes=' + statusCode + '&categoryCodes=' + tccode;
        win.OpenWindow({ Title: 'Services', Width: 1200, Height: 600 });
        return false;
    }

    function SLAChart(st, dt) {

        document.getElementById("chartSLA").innerHTML = "";
        //chart By Request SLA
        var url = "/cms/NtsService/GetExternalUserExternalServiceSLA?StartDate=" + st + "&DueDate=" + dt;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.LineChartValueSeries;
                    var chart = "#chartSLA";

                    var options = {
                        series: [{
                            name: "Days",
                            data: vals
                        },
                        {
                            name: "Actual SLA",
                            data: res.LineChartValueSeries1
                        }],
                        chart: {
                            height: 310,
                            type: 'line',
                            zoom: {
                                enabled: false
                            },
                            stacked: false
                        },
                        colors: ["#03a9f4", "#ff9800", "#fad84a", "#4caf50"],
                        dataLabels: {
                            enabled: false
                        },
                        stroke: {
                            curve: 'straight'
                        },
                        //title: {
                        //    text: 'Product Trends by Month',
                        //    align: 'left'
                        //},
                        xaxis: {
                            categories: res.ItemValueLabel,
                        },
                        yaxis: {
                            min: 0,
                            max: 5
                        },
                        markers: {
                            size: 1
                        },
                    };

                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });
    }


    function OnOpen(/*e*/TemplateCode, Id) {

        var portalId =  $("#GlobalPortalId").val();
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterCreate&source=View&dataAction=View&templateCodes=' + TemplateCode + '&portalId=' + portalId + '&recordId=' + Id;

        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Service Request', Width: 1200, Height: 700 });
        return false;
    }


    function onTaskSeriesClick(e) {

        var selectvalue = e.dataItem.Type;
        var multiselect = $("#mdlServiceStatus").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length;i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);
        var search = {
            ServiceStatusIds: newvalue,
        };
    }

    function onTaskAssignedSeriesClick(e) {
        var selectvalue = e.dataItem.Type;
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var search = {
            ServiceStatusIds: statusvalue,
        };
    }

    function onTaskStagesSeriesClick(e) {

        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlTaskStages").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length; i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var search = {
            ServiceStatusIds: statusvalue,
        };
    }

    function onChangeServiceStatus() {
        debugger;
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        getprojectGridData(statusvalue);
    }

    function onChangeTaskAssigned() {
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();

        var search = {
            ServiceStatusIds: statusvalue,
        };
    }

    function OnTaskAssChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-taskchart').show();

        } else {
            $('#no-data-taskchart').hide();
        }
    }

    function OnTaskStatusChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-chart').show();

        } else {
            $('#no-data-chart').hide();
        }
    }

    function OnTaskTimeChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-timechart').show();

        } else {
            $('#no-data-timechart').hide();
        }
    }
    function OnProjectStageChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-stagechart').show();

        } else {
            $('#no-data-stagechart').hide();
        }
    }

    function onFilterReset() {
        var newvalue = new Array();
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        multiselectTaskStatus.value(newvalue);
        getprojectGridData("");
    }

</script>

<script>

    var columnDefs1 = [
        {
            field: "Id",
            headerName: "Action",
            cellRenderer: params => {
                return "<i class='fa fas fa-eye' style='cursor:pointer;' title='Open' onclick='OnOpen(\"" + params.data.TemplateCode + "\",\"" + params.data.Id + "\")' ></i>";
            },
        },
        {
            field: "ServiceNo",
            headerName: "@Resource["Service No"]",
        },
        {
            field: "ServiceSubject",
            headerName: "@Resource["Service Subject"]"
        },
        {
            field: "TemplateDisplayName",
            headerName: "@Resource["Service Type"]"
        },
        {
            field: "OwnerUserUserName",
            headerName: "@Resource["Service Owner"]"
        },
        {
            field: "ServiceStatusName",
            headerName: "@Resource["Service Status"]"
        },
        {
            field: "StartDate",
            headerName: "@Resource["Start Date"]",
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }
        },
        {
            field: "DueDate",
            headerName: "@Resource["Due Date"]",
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }
        },
    ];

    $(function () {
        //getprojectGridData();
    });

    function getprojectGridData(statusIds) {

        document.getElementById("kgdProjectGridView").innerHTML = "";

        gridConfig(
            "kgdProjectGridView",
            "/Cms/NtsService/GetExternalUserSEBIServiceList?ServiceStatusIds=" + statusIds,
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

</script>

<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="banner-container">
            <img style="width:100%; height:100px" src="~/images/NTS/Service.jpeg" asp-append-version="true" />
            <h4 class="banner-text">@Resource["External Dashboard"]</h4>
        </div>
        <div class="page-inner">
            <div class="page-section">
                <div class="row">
                    <div class="col-4"></div>
                    <div class="col-4"></div>
                    <div class="col-4">
                        <div class=" d-flex" style="justify-content:space-evenly;">
                            <div class="form-group">
                                <label class="control-label" for="FromDate">@SharedResource["From"]</label>
                                <input id="FromDate" class="date" value="@DateTime.Today.AddMonths(-1).ToString(ApplicationConstant.DateAndTime.DefaultJqueryDateFormat)" />
                            </div>
                            <div class="form-group">
                                <label class="control-label" for="ToDate">@SharedResource["To"]</label>
                                <input id="ToDate" class="date" value="@DateTime.Today.ToString(ApplicationConstant.DateAndTime.DefaultJqueryDateFormat)" />
                            </div>
                            <div class="form-group">
                                <button class="btn btn-filter-reset" onclick="onDatewiseSearch()" title="@Resource["ResetFilter"]"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row ">
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">Complaints By Status</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="chartByStatus"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">Complaints Rated Status</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="chartByRatedStatus"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">External Request SLA</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="chartSLA"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                </div>

                <div id="accordion2" class="card-expansion">
                    <!-- .card -->
                    <div class="card card-expansion-item expanded">
                        <div class="card-header border-0" id="headingOne2">
                            <button class="btn btn-reset d-flex justify-content-between w-100" data-toggle="collapse" data-target="#collapseOne2" aria-expanded="true" aria-controls="collapseOne2"><span>Filter</span> <span class="collapse-indicator"><i class="fa fa-fw fa-chevron-down"></i></span></button>
                        </div>
                        <div id="collapseOne2" class="collapse show" aria-labelledby="headingOne2" data-parent="#accordion2">
                            <div class="card-body pt-0 row">
                                <div class="col-sm-12 col-md-5">
                                    <div class="form-group">
                                        <label class="col-form-label" for="mdlServiceStatus">Complaints Status</label>
                                        <select id="mdlServiceStatus" data-placeholder="Filter Service Status"></select>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-2">
                                    <div class="form-group">
                                        <label class="col-form-label">&nbsp;</label>
                                        <button class="btn btn-primary form-control" onclick="onFilterReset()" title="@Resource["ResetFilter"]">@SharedResource["Reset"]</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><!-- /.card -->
                </div>

                <div>
                    <h5>@Resource["Service Details"]</h5>
                    <hr />
                    <div class="row">
                        <div class="col-12">
                            <div id="kgdProjectGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@*<div id="appWrapper" class="pt-5">*@


@*<div class="row">
        <div class="col-sm-4">
            <div class="panel panel-success">
                <div class="panel-heading">Complaints By Status</div>
                <div class="panel-body">
                    <div class="chartdiv" id="chartByStatus" style="min-height:370px !important;"></div>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="panel panel-info">
                <div class="panel-heading">Complaints Rated status</div>
                <div class="panel-body">
                    <div class="chartdiv" id="chartByRatedStatus" style="min-height:370px !important;"></div>
                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="panel panel-warning">
                <div class="panel-heading">External Request SLA</div>
                <div class="panel-body">
                    <div class="chartdiv" id="chartSLA" style="min-height:370px !important;"></div>
                </div>
            </div>
        </div>
    </div>*@




@*<div class="row">
        <div class="col-12">
            <div class="panel panel-filter">
                <div class="panel-heading">@SharedResource["Filter"]</div>
                <div class="panel-body">
                    <div class="row" style="padding:5px;">
                        <div class="col-3">
                            Complaints Status
                            <select id="mdlServiceStatus" data-placeholder="@Resource["Filter Service Status"]" class="hr-x-large search-control"></select>
                        </div>
                        <div class="col-3" style="padding-top:20px;">
                            <button class="btn btn-filter-reset" onclick="onFilterReset()" title="@Resource["ResetFilter"]">@SharedResource["Reset"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@



@*<div>
        <h5>@Resource["Service Details"]</h5>
        <hr />
        <div class="row">
            <div class="col-12">
                <div id="kgdProjectGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            </div>
        </div>
    </div>*@



<!--<div class="row">
    <div class="col-12">
        <div class="panel panel-primary">
            <div class="panel-heading">@Resource["Service Details"]</div>
            <div class="panel-body">-->
@*@(Html.Kendo().Grid<ServiceViewModel>()
        .Name("kgdProjectGridView")
        .Columns(columns =>
        {
            columns.Command(command =>
            {
                command.Custom("open").Text("<i class='fa fas fa-eye' title='Open'></i>").Click("OnOpen").HtmlAttributes(new { @class = "action-icon" });
                //command.Custom("addtask").Text("<i class='fa fa-plus' title='Add Task'></i>").Click("OnEditJobDesc").HtmlAttributes(new { @class = "action-icon" });
                //command.Custom("addStage").Text("<i class='fa fa-plus' title='View Job Description Request'></i>").Click("OnViewJobDesc").HtmlAttributes(new { @class = "action-icon" });
            }).Width(150).Title(SharedResource["Action"]);
            columns.Bound(p => p.ServiceNo).Title(@SharedResource["ServiceNo"]).Width(300);
            columns.Bound(p => p.ServiceSubject).Title(@Resource["ServiceSubject"]).Width(250);
            columns.Bound(p => p.TemplateDisplayName).Title(@Resource["TemplateType"]).Width(250);
            columns.Bound(p => p.OwnerUserUserName).Title(@Resource["OwnerUserName"]).Width(250);
            //columns.Bound(p => p.TemplateUserType).Title(@Resource["TemplateUserType"]).Width(200);
            // columns.Bound(p => p.Priority).Width(200);
            columns.Bound(p => p.ServiceStatusName).Title(@Resource["ServiceStatusName"]).Width(200);
            columns.Bound(p => p.StartDate).Title(@SharedResource["StartDate"]).Format("{0:dd MMM yyyy}").Width(150);
            columns.Bound(p => p.DueDate).Title(@SharedResource["EndDate"]).Format("{0:dd MMM yyyy}").Width(150);
        })
        .ToolBar(toolbar =>
        {

            toolbar.Search().Text(SharedResource["Search"]);
        })
        .ColumnMenu(col=>col.Filterable(true))
        .Height(700)
        .Editable()
        //.Pageable()
        .Sortable()
        .Navigatable()
        .Resizable(r=>r.Columns(true))
        .Reorderable(r => r.Columns(true))
        .Groupable(g=>g.ShowFooter(false))
        .Filterable()
        .Scrollable(x => x.Enabled(true))
        //.Events(events => events.DataBound("onDataBound"))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Batch(true)
            //.PageSize(20)
            .AutoSync(true)
            .ServerOperation(false)
            //.Events(events => events.Error("error_handler"))
            .Model(model =>
            {
                model.Id(p => p.Id);

            })

            .Read("GetExternalUserSEBIServiceList", "NtsService", new { @area = "Cms" })

        )
    )*@
<!--</div>
        </div>
    </div>
</div>-->
</div>
