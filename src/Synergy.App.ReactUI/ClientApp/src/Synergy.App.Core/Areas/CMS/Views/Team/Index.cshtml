@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@model TeamViewModel
@{
    ViewData["Title"] = "Team";
    Layout = null;
}
<script>
    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        {
            field: "Name",
        },
        { field: "Description" },
        { field: "Code" },
        {
            field: "Status",
            cellRenderer: params => {
                return statusObj[params.value]; //only for enum
            }
        },
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getDataTeam();

        //$.contextMenu('update');
        //$('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBin',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEdit(id);
                                        break;

                                    case 'delete':
                                        OnDelete(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });

    function onEdit(id) {
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("Edit", "Team", new { @area="Cms"})?Id=' + id;
        win.OpenWindow({ Title: 'Manage Team', Width: 450, Height: 550 });
        return false;
    }

    function OnDelete(id) {
        var flag = confirm('Do you really want to delete the Team?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("Delete", "Team", new { @area="Cms"})?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    
                    if (result.success) {
                        getDataTeam();
                        kendo.alert("Team Deleted Successfully.");
                    } else {
                        getDataTeam();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    getDataTeam();
                }
            });
            return false;
        }
    }

   function getDataTeam() {
       document.getElementById("myGridTeam").innerHTML = "";
       gridConfig(
           "myGridTeam",
           "/cms/team/ReadData",
           columnDefs,
           false,
           true,
           true,
           true,
           1,
           true,
           10);
    }

</script>

<div>
    <h4>@ViewBag.Title</h4>

    <hr />


    <div class="row">
        <div class="col-12">
            <button type='button' class='btn btn-primary' onclick='OnCreateTeam();'><i class='fa fas fa-plus'></i>&nbsp;Create Team</button>
            <br /><br />
            <div id="myGridTeam" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>
@*<script>
      function OnDeleteTeam(e) {
        var flag = confirm('Do you really want to delete the Team?');
        //alert("..Delete");
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url:'@Url.Action("Delete", "Team", new { @area="Cms"})?Id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#Teamgrid").data("kendoGrid").dataSource.read();
                        kendo.alert("Team Deleted Successfully.");
                    } else {
                        $("#Teamgrid").data("kendoGrid").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //
                    $("#Teamgrid").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }
</script>
<div>
    <h4>@ViewBag.Title</h4>

    <hr />


    <div class="row">
        <div class="col-12">

            @(Html.Kendo().Grid<TeamViewModel>
    ()
    .Name("Teamgrid")
    .ToolBar(toolbar =>
    toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateTeam();'><i class='fa fas fa-plus'></i>&nbsp;Create Team</button>"))

    //toolbar.Custom().Text("Create Group").HtmlAttributes(new { href = "javascript:OnCreateGroup();" }))
    .Columns(columns =>
    {
        //columns.Bound(c => c.Id).Width(140).Hidden(true);
        //  columns.Bound(c => c.Id).Title(" ").Width(100).ClientTemplate("<a class='btn btn-success' onclick='return OnEditGroup(\"#=Id#\");'><i class='fad fa-edit'></i> Edit</a>");
        columns.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditTeam").HtmlAttributes(new { @class = "action-icon" });
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteTeam").HtmlAttributes(new { @class = "action-icon" });
        }).Title("Action").Width(100);
        columns.Bound(c => c.Name);
        columns.Bound(c => c.Description);
        columns.Bound(c => c.Code);
        columns.Bound(c => c.Status);

        //columns.Bound(c => c.GroupPortals).ClientTemplate("#= GroupPortals.join(', ')  #").Width(140);

    })
     .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                .Pageable(pageable => pageable
                .Refresh(true)

                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                .PageSize(10)
                //.Events(events => events.Error("OnError"))
                .Read(read => read.Action("ReadData", "Team"))
                .Model(model => model.Id(p => p.Id))
                )
          )
        </div>
    </div>

</div>

<script>
    //function OnCreateTeam() {
    //    window.location.href = "/Cms/Team/Manage";
    //}

        // $(document).ready(function () {

        //        $("#grid").data("kendoGrid").dataSource.reload()

        //});

    //function OnDeleteUser() {
    //
    //    $('#dlg_DeleteConfirmation').data("kendoDialog").open();
    //}



</script>*@