@inject IStringLocalizer<CMS.UI.Web.Areas.Pms.Controllers.PerformanceDocumentController> Resource
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@*@using Kendo.Mvc.UI;*@

@{
    ViewData["Title"] = "Manage Performance Document Stage";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model CompetencyCategoryViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
</style>
<style>
    #users-list .k-item {
        width: 100%;
        background-color: #fff;
        padding-top: 3px;
        padding-bottom: 3px;
        border-bottom: 1px solid #f2f2f2;
        border-collapse: collapse;
    }

        #users-list .k-item:hover {
            background-color: rgb(182,189,202);
        }

    #users-list .k-state-selected, #SwitchToUserId-list .k-state-selected:hover {
        background-color: #1984c8;
        border-color: #1984c8;
    }
</style>
<script type="text/javascript">

    $(document).ready(function () {
        HideLoader($("#global-overlay"));

    });

    function Close() {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function onAdd() {
        var win = GetMainWindow();
        win.iframeOpenUrl = "/Pms/PerformanceDocument/ManageCompetencyMasterJob";
        win.OpenWindow({ Title: '@Html.Raw(Resource["MapCompetencyToJob"])', Width: 450, Height: 700 });
    }

    function onEdit(noteval) {
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var win = GetMainWindow();
        win.iframeOpenUrl = "/Pms/PerformanceDocument/ManageCompetencyMasterJob?id=" + noteval;
        win.OpenWindow({ Title: '@Html.Raw(Resource["MapCompetencyToJob"])', Width: 450, Height: 700 });
    }

    function RefreshGrid() {
        //$("#kgrdPDM").data("kendoGrid").dataSource.read();
        GetComMasterJobData();
    }

    function Delete(noteval) {
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $.ajax({
            type: 'POST',
            url: "/pms/performancedocument/DeleteCompetencyMasterJob?noteid=" + noteval,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                window.parent.ShowNotification("@SharedResource["DeletedSuccessfully"]", "success");
                //$("#kgrdPDM").data("kendoGrid").dataSource.read();
                GetComMasterJobData();
            }
        });
    }

    //Data Grid

    $(function () {
        GetComMasterJobData();

        //grid context menu
        $.contextMenu({
            selector: '#cmj-menu',
            trigger: 'left',
            build: function ($trigger, e) {
                
                console.log($trigger);
                var noteId = $trigger.data('notevalue');                
                var status = 0;

                switch (status) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEdit(noteId);
                                        break;
                                    case 'delete':
                                        Delete(noteId);
                                        break;
                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "@SharedResource["Edit"]", icon: "fas fa-pencil" },
                                "delete": { name: "@SharedResource["Delete"]", icon: "fas fa-trash" },
                            }
                        };
                }
            }
        });
    });

    function GetComMasterJobData() {

        document.getElementById("kgrdPDM").innerHTML = "";
        gridConfig(
            "kgrdPDM",
            "/Pms/PerformanceDocument/ReadCompetencyMasterJob",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    var columnDefs = [
                            {
                                field: "Id",
                                headerName: "@SharedResource["Action"]",
                                cellRenderer: params => {
                                    return "<div class='btn-group grid-menu' id='cmj-menu' data-notevalue=\"" + params.data.NoteId + "\" ><i class='fas fa-ellipsis-v'></i></div>"
                               }
                            },
                            {
                                field: "CategoryName",
                                headerName: "Category Name",
                            },
                            {
                                field: "JobTitle",
                                headerName:"Job Title",width:200
                            },
                            {
                                field: "CompetencyName",
                                headerName: "Competency Name", width: 100,
                            },
                            {
                                field: "ProficiencyLevelName",
                                headerName: "Proficiency Level Name", width: 200,
                            },
    ];

</script>

<div class="row viewdata" style="padding:10px;">
    <div class="col-md-12">     

            <button class="k-button k-button-icontext k-grid-btnAdd k-primary" onclick="onAdd()"><i class="fas fa-plus"></i>&nbsp;Competency Master Job</button>

    </div>

    <div class="col-md-12 pad-10">
        <div id="kgrdPDM" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

    @*@(Html.Kendo().Grid<CompetencyCategoryViewModel>
    ().Name("kgrdPDM").HtmlAttributes(new { @class = "kgrdPDM" })
    .Columns(col =>
    {
        col.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("onEdit").HtmlAttributes(new { @class = "action-icon", @title = "" + SharedResource["Edit"] + "" });
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("Delete").HtmlAttributes(new { @class = "action-icon", @title = "" + SharedResource["Delete"] + "" });
        }).Title("" + SharedResource["Action"] + "").Width(100);
        //col.Bound(c => c.Id);
        col.Bound(c => c.CategoryName);
        col.Bound(c => c.JobTitle);
        col.Bound(c => c.CompetencyName);
        col.Bound(c => c.ProficiencyLevelName);
        // col.Bound(c => c.CompetencyName).Title("" + SharedResource["JobTitle"] + "");
        // col.Bound(c => c.Id").Title("Start Date").Width(150);
        // col.Bound("EndDate").Title("EndDate");
        // col.Bound("DocumentStatus").Title("Status");
    })
    .Scrollable(x => x.Enabled(true))
    .Sortable(srt => srt.Enabled(true))
    .Selectable(select => select.Enabled(false))
    .Filterable(f => f.Extra(false)
    .Operators(o => o.ForString(s => s.Clear()
    .Contains("Contains")
    .IsEqualTo("Is equal to")
    )))
    .Resizable(resize => resize.Columns(true))
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .AutoBind(true)
    .DataSource(
    dataSource => dataSource
    .Ajax()
    .PageSize(10)
    .Read(read => read.Action("ReadCompetencyMasterJob", "PerformanceDocument", new { Area="Pms"}))
    .Model(model => model.Id("Id")))
    )*@
    </div>
</div>

