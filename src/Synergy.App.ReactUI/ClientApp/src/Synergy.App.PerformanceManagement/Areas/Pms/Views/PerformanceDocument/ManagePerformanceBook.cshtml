@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@inject IUserContext _userContext;
@model ServiceTemplateViewModel;

@{
    ViewData["Title"] = "Performance Book";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}


<style>
    .book-accordion-heading {
        padding: 8px;
        cursor: pointer;
        color: #fff;
    }

    .book-accordion-body {
        border: 1px solid var(--pbc);
    }

    .grid-a {
        color: blue !important;
    }
</style>
<script type="text/x-kendo-template" id="menu-template">
    <div class='btn-group grid-menu' id='book-tree-menu' data-max-child-so='#:MaxChildSequence#' data-level='#:Level#' data-parent-type='#:ParentNtsType#' data-sequence-order='#:SequenceOrder#' data-parent-id='#:parentId#' data-has-child='#:HasChild#' data-id='#:Id#' data-type='#:NtsType#'  data-template-code='#:TemplateCode#'><i class='fas fa-ellipsis-v'></i></div>
    <a class='grid-a' href='javascript:FocusAccordian("#= Id #")'>#= ItemNo # </a>
</script>
<script>
    var showLoader = false;
    function FocusAccordian(id, type) {

        var node = $('#' + id);
        if (node != null && node.offset() != null) {
            var top = (node.offset().top - 150) + 'px';
            var bot = (node.offset().left - ($(window).width() / 2) + 80) + 'px';
            $('html,body').animate({
                scrollTop: top,
                scrollLeft: bot
            },
                1500);
            //$('.accordion-body-dynamic').collapse('collapse');
            $('#body_'+id).collapse('show');
            //$(".focus").addClass("blink");
           // blink(".focus", 3, 600);
        }
        return false;
    }
    function resizeIframe(obj, id) {
        var h = obj.contentWindow.document.body.scrollHeight;
        //$('.book-accordion-body').collapse('show');
        // obj.style.height = obj.contentWindow.document.documentElement.scrollHeight + 'px';
        obj.style.height = h + 'px';
        if (showLoader) {
            showLoader = false;
            HideLoader($('#book-content'));
        }
    }

    $(document).ready(function () {
        debugger;
        LoadPartailView('@Url.Action("PerformanceBookHTML", "PerformanceDocument", new { @area="Pms",@recordId=Model.ServiceId})', $('#htmlview'));

    });


    function LoadReport(serviceId) {
        debugger;
        var src = $('#iframe_report').attr("src");
        if (src === '') {
            var source = '@RequestSourceEnum.View.ToString()';
            var action = '@DataActionEnum.View.ToString()';
            var portalId = "";
            if (window.parent == "" || window.parent == undefined) {
                portalId = $("#GlobalPortalId").val();
            }
            else {
                portalId = window.parent.$("#GlobalPortalId").val();
            }
            @*var url = '/Cms/Report?rptName=CMS_ServiceBookReport.trdp&lo=@LayoutModeEnum.Popup&portalId=' + portalId + '&rptUrl=cms/query/GetServiceBookReport?serviceId=' + serviceId;*@
            var url = '/Cms/FastReport?rptName=CMS_ServiceBookReport&lo=@LayoutModeEnum.Popup&portalId=' + portalId + '&rptUrl=cms/query/GetPerformanceBookReport?serviceId=' + serviceId;
            $('#iframe_report').attr("src", url);
        }
    }

    function OnAfterServiceCreate() {
        LoadPartailView('@Url.Action("PerformanceBookHTML", "PerformanceDocument", new { @area="Pms",@recordId=Model.ServiceId})', $('#htmlview'));

    }
</script>

<ul class="nav nav-tabs" role="tablist">
    @*<li class="nav-item"><a data-toggle="tab" href="#editorview" class="nav-link" role="tab" aria-controls="editorview" aria-selected="false" style="display:none"><i class="fas fa-pencil-paintbrush" style="margin-left:15px;"></i><br />Editor View</a></li>*@
    <li class="nav-item"><a data-toggle="tab" href="#htmlview" class="nav-link active" aria-controls="htmlview" aria-selected="true" onclick="LoadPartailView('@Url.Action("PerformanceBookHTML", "PerformanceDocument", new { @area="Pms",@recordId=Model.ServiceId})', $('#htmlview'));"><i class="fas fa-book-reader" style="margin-left:3px;"></i><br />Html View</a></li>
    <li class="nav-item"><a data-toggle="tab" href="#reportview" class="nav-link" aria-controls="reportview" aria-selected="false" onclick="LoadReport('@Model.ServiceId');"><i class="fas fa-file-alt" style="margin-left:40px;"></i><br />Report View</a></li>

</ul>
<div class="tab-content">

    <div id="htmlview" class="tab-pane  in active" role="tabpanel" aria-labelledby="settings-tab">


    </div>
    <div id="reportview" class="tab-pane " role="tabpanel" aria-labelledby="settings-tab">
        <iframe id="iframe_report" src="" frameborder="0" style="border:none;width:100%;height:800px;"></iframe>
    </div>


</div>

@*<script>
    $('.accordion-group').on('show.bs.collapse', function () {
        var accordian = $(this);
        var id = accordian.attr("id");
        var type = accordian.data("type");
        var templateCode = accordian.data("template-code");
        showLoader = true;

        LoadIframe(id, type, templateCode);
    });
    function Move(id, type) {
        var serviceId = '@Model.ServiceId';
        var url ="/cms/ntsservice/serviceitemmove?serviceId=@Model.ServiceId&ntsType="+type+"&ntsId="+id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: "Move Item", Width: 800, Height: 600 });
        return false;
    }
    function OnServicePlusItemCreate(obj) {
        var win = GetMainWindow();
        win.OpenWindow({ Refresh:true });
    }

    function OnDeleteUser(id,pi,pt) {


        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDelete(id, pi, pt);
        }, function () {

        });

    }

    function confirmDelete(id, pi, pt) {

        $.ajax({

            url: '/cms/DeleteServiceBookItems?serviceId=' + id + '&parentId=' + pi + '&parentType=' + pt,
            type: "POST",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {


                if (pi == null) {
                    var win = GetMainWindow();
                    win.CloseWindow({ MethodName: "OnAfterServiceCreate" });
                    win.parent.ShowNotification("Deleted Successfully", "success");
                } else {
                    ShowNotification("Deleted Successfully", "success");
                    OnServicePlusItemCreate();
                }

            }
        });


    }

    function OnEditItem(Id, templateCode, type, itemType) {
        var typeName="";
        if (type === 0) {
            typeName = "Note";
        }
        else if (type === 1) {
            typeName = "Task";
        }
        else if (type === 2) {
            typeName = "Service";
        }
        //var dataAction = 'source=Versioning&dataAction=Edit';
        var dataAction = 'source=View&dataAction=View';
        if (itemType==='16') {
            dataAction = 'source=View&dataAction=View';
        }
        var portalId = '@_userContext.PortalId';
        var url = '/Cms/Page?lo=Popup&' + dataAction + '&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + Id;
        LoadCmsPartialView(url, typeName, true, 1200, 650, "Manage " + typeName);
        return false;
    }


    function AddItem(parentId, sequenceOrder, type, targetType, ptype) {
        debugger;
        sequenceOrder = sequenceOrder + 1;
        var cbm = 'OnServicePlusItemCreate';
        var servicePlusId = '@Model.ServiceId';
        var action = "";
        var parent = "";
        var title = "";
        if (type === 0 || (type === '-1' && ptype==0)) {
            parent = "&parentNoteId=" + parentId;
        }
        else if (type === 1 || (type === '-1' && ptype == 1)) {
            parent = "&parentTaskId=" + parentId;
        }
        else if (type === 2 || (type === '-1' && ptype == 2)) {
            parent = "&parentServiceId=" + parentId;
        }
        var emailCode = '@Convert.ToString(Model.EmailCopyTemplateCode)';
        if (type === '-1' && emailCode === '') {
            alert('Email Copy Template is not configured for this book. Please configure the template first');
            return;
        }
        var prms = encodeURIComponent('servicePlusId=' + servicePlusId + '&sequenceOrder=' + sequenceOrder + parent);
        var url = "";
        var notes = "";
        if (type === '-2') {
            prms = encodeURIComponent('servicePlusId=' + servicePlusId + '&sequenceOrder=' + sequenceOrder + '&parentServiceId=' + servicePlusId);
            url = '@Url.Action("SelectServiceTemplate", "NtsService", new { @area = "Cms"})?allBooks=true&prms=' + prms;
            var  win2 = GetMainWindow();
            win2.iframeOpenUrl = url;
            win2.OpenWindow({ Width: 1200, Height: 650, Title: "Select Book" });
            return;
        }

        @if (Model.AdhocNoteTemplateIds!=null && Model.AdhocNoteTemplateIds.Any()) {
           @: notes = '@Html.Raw(string.Join(',',Model.AdhocNoteTemplateIds))';
        }
        var tasks = "";
        @if (Model.AdhocTaskTemplateIds!=null && Model.AdhocTaskTemplateIds.Any()) {
           @: tasks = '@Html.Raw(string.Join(',',Model.AdhocTaskTemplateIds))';
        }
        var services = "";
        @if (Model.AdhocServiceTemplateIds!=null && Model.AdhocServiceTemplateIds.Any()) {
           @: services = '@Html.Raw(string.Join(',',Model.AdhocServiceTemplateIds))';
        }

        if (targetType == 'Note') {
            if (type === '-1') {
                url = "/PJM/EmailTask/EmailInbox?ntsType=Note&module=COPY_EMAIL&cbm=" + cbm + "&prms=" + prms + "&templateCode=" + emailCode;
                title = "Select Email";
            }
            else {
                url = "/cms/ntsnote/SelectNoteTemplate?cbm=" + cbm + "&prms=" + prms + "&templateIds=" + (notes === '' ? '-1' : notes);
                title = "Select Note";
            }

         }
        else if (targetType == 'Task') {
            url = "/cms/ntstask/SelectTaskTemplate?cbm="+cbm+"&prms="+prms+"&templateIds=" + (tasks === '' ? '-1' : tasks);
            title = "Select Task";
        }
        else if (targetType == 'Service') {
            url = "/cms/ntsservice/SelectServiceTemplate?cbm="+cbm+"&prms="+prms+"&serviceType="+'@ServiceTypeEnum.AdhocService'+"&templateIds=" + (services === '' ? '-1' : services);
            title = "Select Service";
        }
        else if (targetType == 'Book') {
            url = "/cms/ntsservice/SelectServiceTemplate?cbm=" + cbm + "&prms=" + prms + "&templateIds=" + (services === '' ? '-1' : services);
            title = "Select Book";
        }
                var win = GetMainWindow();
                win.iframeOpenUrl = url;
                win.OpenWindow({ Title:title, Width: 1200, Height: 600 });
                return false;
            }
     $(function () {
        $.contextMenu({
            selector: '#book-tree-menu',
            trigger: 'left',
            build: function ($trigger, e) {
                    var id = $trigger.data('id');
                var type = $trigger.data('type');
                    var itemType = $trigger.data('item-type');
                    var tempCode = $trigger.data('template-code');
                    var hasChild = $trigger.data('has-child');
                    var so = $trigger.data('sequence-order');
                    var pi = $trigger.data('parent-id');
                    var pt = $trigger.data('parent-type');
                    var lvl = $trigger.data('level');
                var childso = $trigger.data('max-child-so');
                    return {
                    callback: function (key, options) {
                            switch (key) {
                                case 'edit':
                                    OnEditItem(id, tempCode, type);
                                    break;
                                case 'del':
                                    OnDeleteUser(id,pi,pt);
                                    break;
                                case 'childService':
                                    AddItem(id, childso, type, 'Service');
                                    break;
                                case 'belowService':
                                    AddItem(pi, so, pt, 'Service');
                                    break;
                                case 'childTask':
                                    AddItem(id, childso, type, 'Task');
                                    break;
                                case 'belowTask':
                                    AddItem(pi, so, pt, 'Task');
                                    break;
                                case 'childNote':
                                    AddItem(id, childso, type, 'Note');
                                    break;
                                case 'childBook':
                                    AddItem(id, childso, '-2', 'Book');
                                    break;
                                case 'belowNote':
                                    AddItem(pi, so, pt, 'Note');
                                    break;
                                case 'childEmail':
                                    AddItem(id, childso, '-1', 'Note', type);
                                    break;
                                case 'belowEmail':
                                    AddItem(pi, so, '-1', 'Note', pt);
                                    break;
                                case 'move':
                                    Move(id, type);
                                    break;
                                default:
                            }
                        },
                            items: {
                                "below": {
                                    name: "Add Below", icon: "fas fa-plus", visible: lvl !== 0 && itemType!==17, items: {
                                    "belowNote": { name: "Note", icon: "fas fa-scroll"},
                                    "belowTask": { name: "Task", icon: "fas fa-tasks" },
                                    "belowService": { name: "Service", icon: "fas fa-tasks-alt" },
                                    "belowEmail": { name: "Email Content", icon: "fas fa-envelope" },

                                    }
                            },
                                "child": {
                            name: "Add Child", icon: "fas fa-plus" , items: {
                                        "childNote": { name: "Note", icon: "fas fa-scroll", visible: itemType !== 17 },
                                        "childTask": { name: "Task", icon: "fas fa-tasks", visible: itemType !== 17 },
                                        "childService": { name: "Service", icon: "fas fa-tasks-alt", visible: itemType !== 17 },
                                        "childEmail": { name: "Email Content", icon: "fas fa-envelope", visible: itemType !== 17 },
                                        "childBook": { name: "Book", icon: "fas fa-book", visible: itemType === 17 },

                                    }
                            },
                                "edit": { name: "@Html.Raw(SharedResource["Edit"])", icon: "fas fa-pencil", visible:  itemType !== 17 },
                                "move": { name: "Move", icon: "fas fa-expand-arrows-alt", visible: lvl !== 0 && itemType !== 17},
                                "del": { name: "@Html.Raw(SharedResource["Delete"])", icon: "fas fa-trash", visible:  itemType !== 17},
                            }
                    };
                }
            });

    });
</script>*@