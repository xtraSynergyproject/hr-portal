@using Synergy.App.ViewModel;
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.Common;
@*@using Kendo.Mvc.Extensions;*@
@model WorklistDashboardSummaryViewModel
@{
    ViewData["Title"] = "Dashboard";
    //Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    // Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
    Layout = null;

}
<link href="~/css/EGOV/DashBoardStyles.css" rel="stylesheet" />
<link href="~/css/EGOV/Dashboard-Navigation-with-Button.css" rel="stylesheet" />
<style>
    .create-new {
    }

        .create-new:hover {
        }

    .box-title {
        font-weight: 500;
    }

    .blue {
        color: #007bff !important;
        text-decoration: none;
    }

    .circle {
        width: 130px;
        height: 130px;
        line-height: 50px;
        border-radius: 50%;
        font-size: 50px;
        color: #000;
        text-align: center;
        border: 10px solid gray;
        font-size: 30px;
        display: table-cell;
        vertical-align: middle;
    }

    .k-listview {
        border-style: none !important;
    }

    .k-listview-content {
        /*overflow:hidden;*/
        display: flex;
    }

    .scrollbtn {
        background-color: #4E4D4D;
        color: white;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 2px;
    }

    .quickaccess {
        height: 150px;
        width: 300px;
        cursor: pointer;
    }

    .box {
        margin-top: 10px;
        float: left;
        flex-direction: unset;
    }

    .indiv-block-bg {
        width: 432px;
        height: 140px;
    }
</style>
<style>
    th {
        background-color: #006699 !important;
        color: #f2f2f2 !important;
    }

    .notification-title {
        background-color: #c1972a;
        border-bottom-left-radius: 0px;
        border-bottom-right-radius: 0px;
        height: 40px;
        border-top-left-radius: 4px;
        border-top-right-radius: 4px;
        display: flex;
        align-content: center;
        text-align: center;
    }

    .k-listview-content {
        height: auto !important;
    }
</style>
<style>
    .arrow_box {
        position: relative;
        background: #f2f2f2;
        border: 1px solid #808080;
    }

        .arrow_box:after, .arrow_box:before {
            bottom: 100%;
            left: 50%;
            border: solid transparent;
            content: " ";
            height: 0;
            width: 0;
            position: absolute;
            pointer-events: none;
        }

        .arrow_box:after {
            border-color: rgba(242, 242, 242, 0);
            border-bottom-color: #f2f2f2;
            border-width: 15px;
            margin-left: -15px;
        }

        .arrow_box:before {
            border-color: rgba(128, 128, 128, 0);
            border-bottom-color: #808080;
            border-width: 16px;
            margin-left: -16px;
        }

    .notification-item {
        padding: 0px;
        border: 1px solid silver;
        margin-bottom: 10px !important;
    }

    .notification-heading {
        padding: 0px !important;
        /* height: 75px;*/
        border-left-style: solid;
        border-left-width: 20px;
        border-top-left-radius: 0px;
        border-bottom-left-radius: 0px;
    }

    .notification-user {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        cursor: default;
    }

    #content_popup {
        font-family: "Segoe UI",Verdana,Helvetica,Sans-Serif;
    }

    .panel {
        margin-top: 0px !important;
    }

        .panel .panel-heading {
            line-height: unset !important;
        }

    .card-body-bg {
        background-color: #F5EBBC;
    }

    .card-header-bg {
        background-color: #E66C80;
    }

    .k-checkbox-label {
        font-size: 20px;
        color: black;
    }

    .filter-hover:hover {
        background-color: #ebd67a;
        border-radius: 6px;
    }

    .afterfilter {
        background-color: #ebd67a;
        border-radius: 6px;
    }

    .filter-hover {
        cursor: pointer;
    }

    .treeheader {
        font-weight: 500;
        text-align: center;
        font-size: medium;
        background-color: #006699;
        color: #f2f2f2 !important;
        border-style: solid;
        border-width: 1px;
        border-color: lightgrey;
        padding: 5px 0px 5px 0px;
    }

    .treebody {
        padding: 10px !important;
        color: black !important;
    }

    .fancytree-icon {
        display: none !important;
    }

    .pagination li:hover {
        cursor: pointer;
    }

    .page {
        font-size: 20px;
        padding: 6px;
        border: solid;
        border-width: thin;
        border-color: lightgrey;
        margin-bottom: 45px;
    }

    .ancpagination {
        padding: 20px;
        border-right: solid;
        padding-top: 8px;
        padding-bottom: 8px;
        border-color: lightgrey;
        border-width: thin;
    }

</style>
<script type="text/javascript">

    var userId = "";
    var docId = "";
    function htmlDecode(value) {
        return value.replace(/&lt;/g, "<").replace(/&gt;/g, ">");
    }

     function OnTakeAction(id, refType, refId, templateCode)
    {
         var portalId = $('#GlobalPortalId').val();
         var flag = false;
         if (refType === 'NTS_Note' || refType === '0') {
             var Type = "Note";
             flag = true;
         }
         else if (refType === 'NTS_Task' || refType === '1') {
             Type = "Task";
             flag = true;
         }
         else if (refType === 'NTS_Service' || refType === '2') {
             Type = "Service";
             flag = true;
         }
         MarkNotificationAsRead(id);
         if (flag) {
             var url = '/Cms/Page?lo=Popup&popup=true&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId+'&recordId=' + refId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Manage ' + Type, Width: 1200, Height: 600  });
        return false;
        }
        else {
            var win = GetMainWindow();
            // var portalId = $('#GlobalPortalId').val();
            // var url = '/Cms/Page?lo=Popup&cbm=OnAfterNoteCreate&source=Create&dataAction=Create&pageName=SalaryInfo&portalId=' + portalId /*+ '&prms=' + prms*/;
            win.iframeOpenUrl = "/Cms/NotificationDetails?notificationId="+id;
            win.OpenWindow({ Title: 'Notification Details', Width: 450, Height: 700 });
            return false;
        }
    }

    function MarkNotificationAsRead(id) {

        $.ajax({
            url: "/cms/MarkNotificationAsRead?id=" + id,
            contentType: "application/json",
            type: "POST",
            cache: false,
            success: function (result) {
                @*$("#NotificationlistView").data("kendoListView").dataSource.read({ date: '@Model.WeekDate', refType: '@ViewBag.Type', read: valueR, archive: valueA, refTypeId:'@Model.ReferenceTypeId' });
                $("#kgrdNotification").data("kendoGrid").dataSource.read({ date: '@Model.WeekDate', refType: '@ViewBag.Type', read: valueR1, archive: valueA1, refTypeId:'@Model.ReferenceTypeId'});*@

            },
            error: function (xhr, textStatus, errorThrown) {
                // alert(errorThrown);
            }
        });
    }

    function MarkNotificationAsNotRead(id) {

        $.ajax({
            url: "/PortalAdmin/NotificationTemplate/MarkNotificationAsNotRead?id=" + id,
            contentType: "application/json",
            type: "POST",
            cache: false,
            success: function (result) {
                @*$("#NotificationlistView").data("kendoListView").dataSource.read({ date: '@Model.WeekDate', refType: '@ViewBag.Type', read: valueR, archive: valueA, refTypeId:'@Model.ReferenceTypeId' });
                $("#kgrdNotification").data("kendoGrid").dataSource.read({ date: '@Model.WeekDate', refType: '@ViewBag.Type', read: valueR1, archive: valueA1, refTypeId:'@Model.ReferenceTypeId' });*@

            },
            error: function (xhr, textStatus, errorThrown) {
                // alert(errorThrown);
            }
        });
    }

    function ArchiveNotification(id) {

        $.ajax({
            url: "/PortalAdmin/NotificationTemplate/ArchiveNotification?id=" + id,
            contentType: "application/json",
            type: "POST",
            cache: false,
            success: function (result) {
                @*$("#NotificationlistView").data("kendoListView").dataSource.read({ date: '@Model.WeekDate', refType: '@ViewBag.Type', read: valueR, archive: valueA, refTypeId:'@Model.ReferenceTypeId' });
                $("#kgrdNotification").data("kendoGrid").dataSource.read({ date: '@Model.WeekDate', refType: '@ViewBag.Type', read: valueR1, archive: valueA1, refTypeId:'@Model.ReferenceTypeId' });*@

            },
            error: function (xhr, textStatus, errorThrown) {
                // alert(errorThrown);
            }
        });
    }

    function UnArchiveNotification(id) {
        $.ajax({
            url: "/PortalAdmin/NotificationTemplate/UnArchiveNotification?id=" + id,
            contentType: "application/json",
            type: "POST",
            cache: false,
            success: function (result) {
                @*$("#NotificationlistView").data("kendoListView").dataSource.read({ date: '@Model.WeekDate', refType: '@ViewBag.Type', read: valueR, archive: valueA, refTypeId:'@Model.ReferenceTypeId' });
                $("#kgrdNotification").data("kendoGrid").dataSource.read({ date: '@Model.WeekDate', refType: '@ViewBag.Type', read: valueR1, archive: valueA1, refTypeId:'@Model.ReferenceTypeId' });*@

            },
            error: function (xhr, textStatus, errorThrown) {
                // alert(errorThrown);
            }
        });
    }
    function OnBook(id,type,templateCode)
    {

        var portalId = $('#GlobalPortalId').val();

        var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&pageType=' + type+'&source=View&dataAction=View&templateCodes=' + templateCode + '&recordId=' + id + '&portalId=' + portalId ;


            var win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Title: '@Html.Raw(SharedResource["Edit"])', Width: 1200, Height: 650 });
            return false;
    }
      function OnTask(id,type,templateCode)
      {

        var portalId = $('#GlobalPortalId').val();

          var url = '/Cms/Page?lo=Popup&pageType=Task&cbm=OnAfterServiceCreate&source=View&dataAction=View&templateCodes=' + templateCode + '&recordId=' + id + '&portalId=' + portalId ;


            var win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Title: '@Html.Raw(SharedResource["Edit"])', Width:ViewBag1200, Height: 650 });
            return false;
    }

    function CreateService(templatecode) {
        var portalId = $('#GlobalPortalId').val();

        var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=Create&dataAction=Create&templateCodes=' + templatecode + '&portalId=' + portalId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Create Request', Width: 1200, Height: 700 });
        return false;
    }
    function LoadMyBooks(status,divId)
    {
        $("#MyBooksHead").html("PERFORMANCE BOOKS");
        $("#EmpBook").show();
        $("#MyTasks").hide();
        $("#MyNotifications").hide();
        getTree(status);
       // $("#kgrid_MyBooks").data("kendoTreeList").dataSource.read({ statusFilter: status });
        appliedfilter(divId);
    }
    function LoadMyTasks(status, divId) {
        $("#MyTaskHead").html("MY TASKS");
        $("#EmpBook").hide();
        $("#MyTasks").show();
        $("#MyNotifications").hide();
        $("#kgrid_MyTasks").data("kendoGrid").dataSource.read({ statusFilter: status });
        appliedfilter(divId);
    }
    function LoadNotifications(status, divId)
    {
        $("#NotificationHead").html("MY NOTIFICATIONS");
        $("#EmpBook").hide();
        $("#MyTasks").hide();
        $("#MyNotifications").show();
        $("#kgrid_MyNotifications").data("kendoGrid").dataSource.read({ statusFilter: status });
        appliedfilter(divId);
    }

    $(document).ready(function () {
        $("#MyBooksHead").html("PERFORMANCE BOOKS");
        $("#EmpBook").show();
        $("#MyTasks").hide();
        $("#MyNotifications").hide();

        var cascade = '@ViewBag.Admin' == 'True' ? "PerformanceUser" : "UserId";

        $("#PerformanceUser").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            //change: OnUserChange,
            dataSource:
            {
                transport:
                {
                    read:
                    {
                        url: "/PMS/PerformanceTask/GetPerformanceUserList",
                    }
                }
            }
        });

        $("#UserId").kendoDropDownList({
            @*optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",*@
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            //change: OnUserChange,
            value: '@ViewBag.UserId',
            dataSource:
            {
                transport:
                {
                    read:
                    {
                        url: "/PMS/PerformanceDocument/GetSubordinatesIdNameList",
                    }
                }
            }
        });

        $("#DocumentId").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            //change: OnDocChange,
            cascadeFrom: cascade,
            dataSource:
            {
                serverFiltering: true,
                transport:
                {
                    read:
                    {
                        dataType: "json",
                        url: "/PMS/PerformanceTask/GetPerformanceList",
                        data: UserFilter
                    }
                }
            }
        });


        //treelist
        //var dataSourceTree = new kendo.data.TreeListDataSource({
        //    transport: {
        //        read: {
        //            url: "/Pms/PerformanceDocument/LoadBook",
        //            dataType: "json"
        //        }
        //    },
        //    schema: {
        //        model: {
        //            id: "Id",
        //            parentId: "ParentServiceId",
        //            fields: {
        //                Id: { type: "text", nullable: false },
        //                ParentServiceId: { field: "ParentServiceId", nullable: true }
        //            },
        //        }
        //    }
        //});

        //$("#treelist_MyBooks").kendoTreeList({
        //    dataSource: dataSourceTree,
        //    resizable: true,
        //    columns: [
        //        { field: "Id", expandable: true, title: "Action", width: 250 },
        //        { field: "ServiceNo", title: "Document No" },
        //        { field: "ServiceSubject", title: "Document Name" },
        //        { field: "ServiceDescription", title: "Document Description" },
        //        { field: "Year", title: "Year" },
        //    ],
        //    pageable: {
        //        pageSize: 10,
        //        pageSizes: true
        //    }
        //});

    });

    function UserFilter() {
        return {
            ownerId: '@ViewBag.Admin' == 'True' ? $("#PerformanceUser").data("kendoDropDownList").value() : $("#UserId").data("kendoDropDownList").value(),
        }
    }

    function OnFilter(type) {
        
        userId = '@ViewBag.Admin' == 'True' ? $("#PerformanceUser").data("kendoDropDownList").value() : $("#UserId").data("kendoDropDownList").value();
        
        if (type == "Reset") {
            $("#DocumentId").data("kendoDropDownList").value("");
        } 

        docId = $("#DocumentId").data("kendoDropDownList").value();

        $.ajax({
            url: '/Pms/PerformanceDocument/LoadBook?userId=' + userId + '&docId=' + docId,
                type: 'POST',
                //data: {},
                dataType: 'json',
                success: function (result) {
                ($("#kgrid_MyBooks").fancytree("getTree")).reload(result).done(function(){

                })
            },
            error: function (ert) {               

            }
        });        
    }    

    function OnCreate() {
            var url = '@Url.Action("SelectServiceTemplate", "NtsService", new { @area = "Cms"})?allBooks=true';
            win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Width: 1200, Height: 650, Title: "Add Book"  });
    }


    function CreateBook(Id, templateCode, booktype,seq) {
        var prms = "";
        if (booktype == "Service") {
            prms = encodeURIComponent('parentServiceId=' + Id + '&servicePlusId=' + Id + '&sequenceOrder=' + seq );
        }
        else if (booktype == "Note"){
            prms = encodeURIComponent('parentNoteId=' + Id + '&notePlusId=' + Id + '&sequenceOrder=' + seq );
        }

        var url = '@Url.Action("SelectServiceTemplate", "NtsService", new { @area = "Cms"})?allBooks=true&prms=' + prms;
            win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Width: 1200, Height: 650, Title: "Add Book"  });
    }

    function ManageBook(Id, templateCode) {

        @*var portalId = $('#GlobalPortalId').val();
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + Id;
        LoadCmsPartialView(url, 'Service', true, 1200, 650, "Manage " + '@ViewBag.PageName');
        return false;*@

        var url = '@Url.Action("ManagePerformanceBook", "PerformanceDocument", new { @area = "Pms"})?recordId=' + Id;
            win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Width: 1200, Height: 750, Title: "Manage Performance Book"  });
    }

    function EditBook(Id, templateCode) {
        var portalId = $('#GlobalPortalId').val();
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=Edit&dataAction=Edit&templateCodes=' + templateCode +'&portalId=' + portalId + '&recordId=' + Id;
        LoadCmsPartialView(url, 'Service', true, 1200, 650, "Manage Service" );
        return false;
    }

    function OnDelete(id, booktype) {
        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDelete(id, booktype);
        }, function () {

        });

    }
    function confirmDelete(id, booktype) {

        var url = '/cms/NtsService/DeleteServiceBook?serviceId=' + id;
        //if (booktype == "Service") {
        //    url= '/cms/NtsService/DeleteServiceBook?serviceId=' + id;
        //}
        //else if (booktype == "Note") {
        //    url = '/cms/NtsService/DeleteNoteBook?noteId=' + id;
        //}

        $.ajax({

            url: url,
            type: "POST",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {

                ShowNotification("Deleted Successfully", "success");
                OnAfterServiceCreate();
            }
        });
    }

    function OnView(Id,code) {

        var portalId = $('#GlobalPortalId').val();
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterServiceCreate&source=View&dataAction=View&pageType=Service&templateCodes='+code+'&portalId=' + portalId + '&recordId=' + Id;

        var win = GetMainWindow();
        win.iframeOpenUrl = url
        win.OpenWindow({ Title: 'View Details', Width: 1200, Height: 750 });
        return false;
    }


    function OnAfterServiceCreate() {

        window.location.reload(true);
    }

    function appliedfilter(divId) {
        var element1 = document.getElementsByClassName("afterfilter");
        element1[0].classList.remove("afterfilter");

        var element = document.getElementById(divId);
        element.classList.add("afterfilter");
    }

    function OnDownloadPD(id, mstageid) {
        debugger;
        var user = '@ViewBag.LoggedInUserId';
        var mstage = mstageid;
        //var user = '27f042e1-39dd-4877-a627-dc8bf8dc8140';
        @*var url = '/Cms/Report?rptName=Pms/PMS_PerformanceDocument.trdp&rptUrl=pms/query/GetUserPerformanceDocumentInfo/' + user + '?PerformanceId=' + id + '&lo=@LayoutModeEnum.Popup&rptUrl2=pms/query/GetPerformanceDocumentServiceStepTaskByUser/' + user + '?PerformanceId=' + id;*@
        @*var url = '/Cms/Report?rptName=Pms/PMS_PerformanceDocument.trdp&rptUrl=pms/query/GetUserPerformanceDocumentInfo/' + user + '/' + id + '?masterStageId='+mstage+'&lo=@LayoutModeEnum.Popup&rptUrl2=pms/query/GetPerformanceDocumentServiceStepTaskByUser/' + user + '/' + id+'?masterStageId='+mstage;*@
        var url = '/Cms/FastReport?rptName=PMS_PerformanceDocument&rptUrl=pms/query/GetUserPerformanceDocumentInfo/' + user + '/' + id + '?masterStageId='+mstage+'&lo=@LayoutModeEnum.Popup&rptUrl2=pms/query/GetPerformanceDocumentServiceStepTaskByUser/' + user + '/' + id+'?masterStageId='+mstage;
        @*var prms = encodeURIComponent('rptName=Pms/PMS_PerformanceDocument.trdp&rptUrl=/pms/query/GetUserPerformanceDocumentInfo/' + user +'&lo=@LayoutModeEnum.Popup');*@
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(SharedResource["Report"])', Width: 1200, Height: 700 });
    }
    function OnDownloadPDR(id, mstageid) {
        debugger;
        var user = '@ViewBag.LoggedInUserId';
        var mstage = mstageid;
        @*var url = '/Cms/Report?rptName=PMS_PerformanceReport.trdp&rptUrl=pms/query/GetUserPerformanceDocumentInfo/' + user + '?PerformanceId=' + id + '&lo=@LayoutModeEnum.Popup';*@
        @*var url = '/Cms/Report?rptName=PMS_PerformanceReport.trdp&rptUrl=pms/query/GetUserPerformanceDocumentInfo/' + user + '/' + id + '?masterStageId='+mstage+'&lo=@LayoutModeEnum.Popup';*@
        var url = '/Cms/FastReport?rptName=PMS_PerformanceReport&rptUrl=pms/query/GetUserPerformanceDocumentInfo/' + user + '/' + id + '?masterStageId='+mstage+'&lo=@LayoutModeEnum.Popup';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(SharedResource["Report"])', Width: 1200, Height: 700 });
    }


      $(function () {
        $.contextMenu({
            selector: '#tree-menu',
            trigger: 'left',
            build: function ($trigger, e) {
                
                var id = $trigger.data('idvalue');
                var code = $trigger.data('type');
                var booktype = $trigger.data('bktype');
                var seq = $trigger.data('seq');
                var serId = $trigger.data('serid');
                var stageId = $trigger.data('stageid');

                var Items;
                debugger;
                if (booktype == "Document") {
                    if ('@ViewBag.Admin' == 'True') {
                        Items = {
                            //"Create": { name: "Add Book", icon: "fas fa-plus" },
                            "Edit": { name: "Edit Book" , icon: "fas fa-pencil" },
                            "Manage": { name: "Manage Book", icon: "fas fa-cog" },
                            "Delete": { name: "Delete Book", icon: "fas fa-trash" },
                        };
                    }
                    else {
                        Items = {
                            "Manage": { name: "Manage Book", icon: "fas fa-cog" },
                        };
                    }

                } else {
                    if ('@ViewBag.Admin' == 'True') {
                        Items = {
                            "Edit": { name: "Edit Book", icon: "fas fa-pencil" },
                            "View": { name: "View Book", icon: "fas fa-eye" },
                            "Delete": { name: "Delete Book", icon: "fas fa-trash" },
                        };
                    }
                    else {
                        Items = {
                            "View": { name: "View Book", icon: "fas fa-eye" },
                            "download": { name: "View Performance Details", icon: "fas fa-eye" },
                            "downloadreport": { name: "View Performance Result", icon: "fas fa-eye" },
                        };
                    }
                }

                  return {
                    callback: function (key, options) {
                        switch (key) {
                            //case 'Create':
                            //    CreateBook(id, code, booktype,seq);
                            //    break;
                            case 'Edit':
                                EditBook(id, code);
                                break;
                            case 'Manage':
                                ManageBook(id, code);
                                break;
                            case 'Delete':
                                OnDelete(id);
                                break;
                            case 'View':
                                OnView(id, code);
                                break;
                            case 'download':
                                OnDownloadPD(serId, stageId);
                                break;
                            case 'downloadreport':
                                OnDownloadPDR(serId, stageId);
                                break;
                            default:
                        }
                    },
                    items: Items
                };
            }
        });
      });

     var columnDefs = [

        { headerName: "Book No", field: "NoteNo",
            cellRenderer: params => {
                return "<a class='blue' href='javascript:OnBook(\"" + params.data.BookId + "\",\"" + params.data.BookType + "\",\"" + params.data.BookTemplateCode + "\");'>" + params.data.NoteNo + "</a>";
            }
        },
        { field: "NoteSubject",headerName:"Book Name" },
        {  field: "TaskNo",
            cellRenderer: params => {
                return "<a class='blue' href='javascript:OnTask(\"" + params.data.Id + "\", 'Task', \"" + params.data.TemplateCode + "\");'>" + params.data.TaskNo + "</a>";
            }
        },
        { field: "TaskSubject" },
        { field: "TaskDescription" },
        { field: "TaskStatusName"}
    ];

    function getData() {

        document.getElementById("kgrid_MyTasks").innerHTML = "";
        gridConfig(
            "kgrid_MyTasks",
            "/PortalAdmin/Dashboard/LoadBookTask",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
    var columnDefs1 = [

        {
            headerName: "Book No", field: "BookNo",
            cellRenderer: params => {
                return "<a class='blue' href='javascript:OnBook(\"" + params.data.BookId + "\",\"" + params.data.PageType + "\",\"" + params.data.BookTemplateCode + "\");'>" + params.data.BookNo + "</a>";
            }
        },
        { field: "BookName", headerName: "Book Name" },
        {
        field: "Subject",
            cellRenderer: params => {
                return "<a class='blue' href='javascript:OnTakeAction(\"" + params.data.Id + "\", \"" + params.data.ReferenceType + "\", \"" + params.data.ReferenceTypeId + "\",, \"" + params.data.ReferenceTemplateCode + "\");'>" + params.data.Subject + "</a>";
            }
        },
        { field: "From" },
        { field: "To" },
        { field: "ReadStatus" }
    ];

    function getData1() {

        document.getElementById("kgrid_MyNotifications").innerHTML = "";
        gridConfig(
            "kgrid_MyNotifications",
            "/PortalAdmin/Dashboard/LoadNotifications",
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>



<div style="padding:10px;margin-top:20px;">


    @*<div>
            <div class="row">


                <div class="d-flex flex-row flex-nowrap overflow-hidden" id="paymentdues">
                    <div class="box" style=" overflow: unset; display: flex;">
                        <div class="box indiv-block-bg">
                            <div class="row">
                                <div class="col">
                                    <div class="title-bg"><label class="box-title">My Books</label><a href='#' onClick="OnCreate()" title="Create New Book" style="float:right;margin-top:3px;margin-right: 20px; cursor: pointer;">Create New Book</a><i class='fas fa-plus' onclick="OnCreate()" title="Add Book" style=" float: right; margin-top: 7px; margin-right: 20px; cursor: pointer;"></i></div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-3">
                                    <div class="bill-date filter-hover afterfilter" id="allbook" onclick="LoadMyBooks('All', this.id)"><label class="sub-lable ">All</label><div class="field-value">@Model.N_CreatedByMeAll</div></div>
                                </div>
                                <div class="col-3">
                                    <div class="bill-date filter-hover" id="Activebook" onclick="LoadMyBooks('Active', this.id)"><label class="sub-lable">Active</label><div class="field-value">@Model.N_CreatedByMeActive</div></div>
                                </div>
                                <div class="col-3">
                                    <div class="bill-date filter-hover" id="Draftbook" onclick="LoadMyBooks('Draft', this.id)"><label class="sub-lable">Draft</label><div class="field-value">@Model.N_CreatedByMeDraft<br></div></div>
                                </div>
                                <div class="col-3">
                                    <div class="bill-date filter-hover" id="Expiredbook" onclick="LoadMyBooks('Expired', this.id)"><label class="sub-lable">Expired</label><div class="field-value">@Model.N_CreatedByMeExpired<br></div></div>
                                </div>
                            </div>

                        </div>
                    </div>
                </div>
                <div class="d-flex flex-row flex-nowrap overflow-hidden">
                    <div class="box" style=" overflow: unset; display: flex;">
                        <div class="box indiv-block-bg">
                            <div class="row">
                                <div class="col">
                                    <div class="title-bg"><label class="box-title">My Tasks</label></div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col">
                                    <div class="dates-block">
                                        <div class="row">
                                            <div class="col-2">
                                                <div class="bill-date filter-hover" id="alltask" onclick="LoadMyTasks('All', this.id)"><label class="sub-lable">All</label><div class="field-value">@Model.T_AssignAll<br></div></div>
                                            </div>
                                            <div class="col-4">
                                                <div class="bill-date filter-hover" id="PendingOverduetask" onclick="LoadMyTasks('PendingOverdue', this.id)"><label class="sub-lable">Pending/Overdue</label><div class="field-value">@Model.T_AssignPendingOverdue</div></div>
                                            </div>
                                            <div class="col-3">
                                                <div class="bill-date filter-hover" id="Completetask" onclick="LoadMyTasks('Complete', this.id)"><label class="sub-lable">Complete</label><div class="field-value">@Model.T_AssignCompleted<br></div></div>
                                            </div>

                                            <div class="col-3">
                                                <div class="bill-date filter-hover" id="Rejectedtask" onclick="LoadMyTasks('Rejected', this.id)"><label class="sub-lable">Rejected</label><div class="field-value">@Model.T_AssignReject<br></div></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="d-flex flex-row flex-nowrap overflow-hidden" id="paymentdues">
                    <div class="box" style=" overflow: unset; display: flex;">
                        <div class="box indiv-block-bg">
                            <div class="row">
                                <div class="col">
                                    <div class="title-bg"><label class="box-title">Notifications</label></div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="col">
                                    <div class="dates-block">
                                        <div class="row">
                                            <div class="col-2">
                                                <div class="bill-date filter-hover" id="allnoti" onclick="LoadNotifications('All', this.id)"><label class="sub-lable">All</label><div class="field-value">@Model.AllCount</div></div>
                                            </div>
                                            <div class="col-3">
                                                <div class="bill-date filter-hover" id="Readnoti" onclick="LoadNotifications('Read', this.id)"><label class="sub-lable">Read</label><div class="field-value">@Model.ReadCount</div></div>
                                            </div>
                                            <div class="col-3">
                                                <div class="bill-date filter-hover" id="UnReadnoti" onclick="LoadNotifications('UnRead', this.id)"><label class="sub-lable">UnRead</label><div class="field-value">@Model.UnReadCount<br></div></div>
                                            </div>
                                            <div class="col-3">
                                                <div class="bill-date filter-hover" id="Archivednoti" onclick="LoadNotifications('Archived', this.id)"><label class="sub-lable">Archived</label><div class="field-value">@Model.ArchivedCount<br></div></div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>*@

    @*----Summary Count----------*@

    @*<div class="row">
        <div class="col-sm-4">
            <div class="card text-center">
                <div class="card-header card-header-bg">
                    My Books
                </div>
                <div class="card-body card-body-bg">
                    <div class="row">
                        <div class="col-3  filter-hover afterfilter" onclick="LoadMyBooks('All', this.id)" id="allbook">
                            <div class="bill-date"><label class="sub-lable ">All</label><div class="field-value">@Model.N_CreatedByMeAll</div></div>
                        </div>
                        <div class="col-3 filter-hover" id="Activebook" onclick="LoadMyBooks('Active', this.id)">
                            <div class="bill-date"><label class="sub-lable">Active</label><div class="field-value">@Model.N_CreatedByMeActive</div></div>
                        </div>
                        <div class="col-3 filter-hover" onclick="LoadMyBooks('Draft', this.id)" id="Draftbook">
                            <div class="bill-date"><label class="sub-lable">Draft</label><div class="field-value">@Model.N_CreatedByMeDraft<br></div></div>
                        </div>
                        <div class="col-3 filter-hover" onclick="LoadMyBooks('Expired', this.id)" id="Expiredbook">
                            <div class="bill-date"><label class="sub-lable">Expired</label><div class="field-value">@Model.N_CreatedByMeExpired<br></div></div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-sm-4">
            <div class="card text-center">
                <div class="card-header card-header-bg">
                    My Tasks
                </div>
                <div class="card-body card-body-bg">
                    <div class="row">
                        <div class="col-3 filter-hover" id="alltask" onclick="LoadMyTasks('All', this.id)">
                            <div class="bill-date"><label class="sub-lable">All</label><div class="field-value">@Model.T_AssignAll<br></div></div>
                        </div>
                        <div class="col-3 filter-hover" id="PendingOverduetask" onclick="LoadMyTasks('PendingOverdue', this.id)">
                            <div class="bill-date"><label class="sub-lable">Pending</label><div class="field-value">@Model.T_AssignPendingOverdue</div></div>
                        </div>
                        <div class="col-3 filter-hover" id="Completetask" onclick="LoadMyTasks('Complete', this.id)">
                            <div class="bill-date"><label class="sub-lable">Complete</label><div class="field-value">@Model.T_AssignCompleted<br></div></div>
                        </div>

                        <div class="col-3 filter-hover" id="Rejectedtask" onclick="LoadMyTasks('Rejected', this.id)">
                            <div class="bill-date"><label class="sub-lable">Rejected</label><div class="field-value">@Model.T_AssignReject<br></div></div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-sm-4">
            <div class="card text-center">
                <div class="card-header card-header-bg">
                    Notifications
                </div>
                <div class="card-body card-body-bg">
                    <div class="row">
                        <div class="col-3 filter-hover" id="allnoti" onclick="LoadNotifications('All', this.id)">
                            <div class="bill-date"><label class="sub-lable">All</label><div class="field-value">@Model.AllCount</div></div>
                        </div>
                        <div class="col-3 filter-hover" id="Readnoti" onclick="LoadNotifications('Read', this.id)">
                            <div class="bill-date"><label class="sub-lable">Read</label><div class="field-value">@Model.ReadCount</div></div>
                        </div>
                        <div class="col-3 filter-hover" id="UnReadnoti" onclick="LoadNotifications('UnRead', this.id)">
                            <div class="bill-date"><label class="sub-lable">UnRead</label><div class="field-value">@Model.UnReadCount<br></div></div>
                        </div>
                        <div class="col-3 filter-hover" id="Archivednoti" onclick="LoadNotifications('Archived', this.id)">
                            <div class="bill-date"><label class="sub-lable">Archived</label><div class="field-value">@Model.ArchivedCount<br></div></div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>*@


    <div class="row" style="margin-top:50px;display:none;" id="EmpBook">
        <div class="col-12">
            <div class="row no-gutters" style="width:100%;">
                <div class="col-4"><h4 style="font-weight:500;" id="MyBooksHead">PERFORMANCE BOOKS</h4></div>
                <div class="col-3" style="text-align:end">
                    <label style="padding-right:20px;">User :</label>
                    @if (ViewBag.Admin)
                    {
                        <input type="text" id="PerformanceUser" style="width:70%;" />
                    }
                    else
                    {
                        <input type="text" id="UserId" style="width:70%;" />
                    }                    
                </div>
                <div class="col-3" style="text-align:end"><label style="padding-right:20px;">Document :</label> <input type="text" id="DocumentId" style="width:70%;"/></div>
                <div class="col-2" style="padding-left:20px;"><button class="btn btn-primary btn-sm" onclick="OnFilter();">Search</button> <button class="btn btn-primary btn-sm" style="margin-left:10px;" onclick="OnFilter('Reset');">Reset</button></div>
            </div>
            <br />

            @*<div id="treelist_MyBooks"></div>*@
            <br />
            <table id="kgrid_MyBooks" style="width:100%">
                <colgroup>
                    <col width="10">
                    <col width="50">
                    <col width="200">
                    <col width="200">
                    <col width="200">
                    <col width="200">
                    <col width="200">
                    <col width="200">
                </colgroup>
                <thead>
                    <tr>
                        <th class="treeheader"><div id="NoteId"></div></th>
                        <th class="treeheader"><div id="Action">Action</div></th>
                        <th class="treeheader"><div id="OwnerName">Owner Name</div></th>
                        <th class="treeheader"><div id="ServiceNo">Document No</div></th>
                        <th class="treeheader"><div id="ServiceSubject">Document Name</div></th>
                        <th class="treeheader"><div id="ServiceDescription">Document Description</div></th>
                        <th class="treeheader"><div id="Year">Document Year</div></th>
                        <th class="treeheader"><div id="ServiceStatusName">Document Status</div></th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                    </tr>
                </tbody>
            </table>

            <script>
                  function getTree(filter) {

                      $("#kgrid_MyBooks").fancytree({
                          extensions: ["table"],
                          source: $.ajax({
                              url: "/Pms/PerformanceDocument/LoadBook",
                              data: { userId: userId, docId: docId },
                              dataType: "json"
                          }),
                      lazyLoad: function (event, data) {
                      var node = data.node;
                        // Issue an Ajax request to load child nodes
                        data.result = {
                            url: "/Pms/PerformanceDocument/LoadBook",
                            data: { id: node.key, userId: userId, docId: docId }
                        }

                          },
                          renderNode: function (event, data) {
                              debugger;
                // Optionally tweak data.node.span
                //
                //var node = data.node;
                //  node.renderTitle();
                var node = data.node,
                    $tdList = $(node.tr).find(">td");
                // (index #0 is rendered by fancytree by adding the checkbox)
                //  $tdList.eq(0).text(node.data.NoteSubject).addClass("alignRight");
                // (index #2 is rendered by fancytree)
                //if(Type=='Question'){#<div><i class='fa fas fa-pencil' onclick='onEditSalaryInfo(\"#:NoteId#\")'></i></div>#}

                        $tdList.eq(1).html("<div class='btn-group grid-menu' id='tree-menu' data-idvalue='" + node.data.Id + "' data-type='" + node.data.TemplateCode + "' data-bktype='" + node.data.ServiceType + "' data-serid='" + node.data.ParentServiceId + "' data-stageid='" + node.data.MasterStageId + "'><i class='fas fa-ellipsis-v'></i></div>");
               // $tdList.eq(1).text(node.data.ServiceNo);
                $tdList.eq(2).text(node.data.OwnerDisplayName);
                $tdList.eq(3).text(node.data.ServiceNo);
                $tdList.eq(4).text(node.data.ServiceSubject);
                $tdList.eq(5).text(node.data.ServiceDescription);
                $tdList.eq(6).text(node.data.Year);
                $tdList.eq(7).text(node.data.DocumentStatusName);

            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {

                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });

    }

    $(function () {
        getTree();

        setTimeout(function () {

            $('#kgrid_MyBooks').after('<div id="nav" class="page"></div>');
            var rowsShown = 10;
            var rowsTotal = $('#kgrid_MyBooks tbody tr').length;
            var numPages = rowsTotal / rowsShown;
            for (i = 0; i < numPages; i++) {
                var pageNum = i + 1;
                $('#nav').append('<a class="ancpagination" href="#" rel="' + i + '">' + pageNum + '</a> ');
            }
            $('#kgrid_MyBooks tbody tr').hide();
            $('#kgrid_MyBooks tbody tr').slice(0, rowsShown).show();
            $('#nav a:first').addClass('active');
            $('#nav a').bind('click', function () {

                $('#nav a').removeClass('active');
                $(this).addClass('active');
                var currPage = $(this).attr('rel');
                var startItem = currPage * rowsShown;
                var endItem = startItem + rowsShown;
                $('#kgrid_MyBooks tbody tr').css('opacity', '0.0').hide().slice(startItem, endItem).
                    css('display', 'table-row').animate({ opacity: 1 }, 300);
            });
        }, 1000);

        // getPagination('#treetable');
    });
            </script>


            @*@(Html.Kendo().TreeList<NoteViewModel>()
                    .Name("kgrid_MyBooks")
                            .Columns(columns =>
                            {
                                columns.Add().Field(e => e.NoteId).Title("Action").Template("<div class='btn-group grid-menu' id='tree-menu' data-idvalue=\"#:Id#\" data-type=\"#:TemplateCode#\" data-bktype=\"#:BookType#\" data-seq=\"#:NextSequenceNo#\"><i class='fas fa-ellipsis-v'></i></div>").Width(150);
                                columns.Add().Field(e => e.NoteNo).Title("Book No").Template("<a class='blue' href='\\#' onClick=\"OnBook('#:Id#','#:BookType#','#:TemplateCode#')\">#:NoteNo#</a>").Width(250);
                                columns.Add().Field(e => e.NoteSubject).Title("Book Name").Width(250);
                                columns.Add().Field(e => e.NoteDescription).Title("Book Description").Width(250);
                                columns.Add().Field(e => e.NoteStatusName).Title("Book Status").Width(250);
                                //columns.Add().Field(e => e.SubModuleName).Width(160);
                            })
                            .Editable(e => e.Mode("popup"))
                        .Filterable()
                        .Sortable()
                        .DataSource(dataSource => dataSource
                        .Read(read => read.Action("LoadBook", "Dashboard", new { area = "PortalAdmin" }))
                .ServerOperation(false)
                .Model(m => {
                    m.Id(f => f.Id);
                    m.ParentId(f => f.ParentId);
                    m.Expanded(true);
                    m.Field(f => f.NoteNo);
                    // m.Field(f => f.SubModuleName);
                })
            )
            .Height(540)
            .Pageable(p => p.PageSize(15)
                            .PageSizes(true)
            )
        )*@
            @*@(Html.Kendo().Grid<NoteViewModel>
            ()
            .Name("kgrid_MyBooks").Height(350)
            .Columns(columns =>
            {
                columns.Bound(x=>x.NoteId).Visible(false);
                columns.Bound(x => x.NoteNo).Title("Book No").ClientTemplate("<a class='blue' href='\\#' onClick=\"OnBook('#:Id#','#:BookType#','#:TemplateCode#')\">#:NoteNo#</a>");
                columns.Bound(x => x.NoteSubject).Title("Book Name");
                columns.Bound(x => x.NoteDescription).Title("Book Description");
                columns.Bound(x => x.NoteStatusName).Title("Book Status");
            })

            .Resizable(resizable => resizable.Columns(true))
            .Scrollable(x => x.Enabled(true))
            .Sortable(srt => srt.Enabled(true))
            .Selectable(select => select.Enabled(false))
            .Filterable(f => f.Extra(false))
            .Pageable(pageable => pageable
            .Refresh(true)

            .PageSizes(true)
            .ButtonCount(5))
            .AutoBind(false)
            .DataSource(
            dataSource => dataSource
            .Ajax()
            .PageSize(10)

            //.Events(events => events.Error("OnError"))
            .Read(read => read.Action("LoadBook", "Dashboard",new {area="PortalAdmin" }))
            //.Model(model => model.Id(p => p.Id))

            )
        )*@

        </div>
    </div>
    <div class="row" style="margin-top:50px;display:none;" id="MyTasks">
        <div class="col-12">
            <h4 style="font-weight:500;" id="MyTaskHead"></h4>
            @*@(Html.Kendo().Grid<TaskViewModel>
            ()
            .Name("kgrid_MyTasks").Height(350)
            .Columns(columns =>
            {
                columns.Bound(x => x.NoteNo).Title("Book No").ClientTemplate("<a class='blue' href='\\#' onClick=\"OnBook('#:BookId#','#:BookType#','#:BookTemplateCode#')\">#:NoteNo#</a>");
                columns.Bound(x => x.NoteSubject).Title("Book Name");
                columns.Bound(x=>x.Id).Visible(false);
                columns.Bound(x => x.TaskNo).ClientTemplate("<a class='blue' href='\\#' onClick=\"OnTask('#:Id#','Task','#:TemplateCode#')\">#:TaskNo#</a>"); ;
                columns.Bound(x => x.TaskSubject);
                columns.Bound(x => x.TaskDescription);
                columns.Bound(x => x.TaskStatusName);
            })
            .Resizable(resizable => resizable.Columns(true))
            .Scrollable(x => x.Enabled(true))
            .Sortable(srt => srt.Enabled(true))
            .Selectable(select => select.Enabled(false))
            .Filterable(f => f.Extra(false))
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .AutoBind(false)
            .DataSource(
            dataSource => dataSource
            .Ajax()
            .PageSize(10)
            //.Events(events => events.Error("OnError"))
            .Read(read => read.Action("LoadBookTask", "Dashboard",new {area="PortalAdmin"}))
            )
        )*@

            <div class="row">
                <div class="col-12">                

                    <div style="padding-top:20px;">
                        <div id="kgrid_MyTasks" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                    </div>

                </div>
            </div>
            <div class="row" style="margin-top:50px;display:none;" id="MyNotifications">
                <div class="col-12">
                    <h4 style="font-weight:500;" id="NotificationHead"></h4>
                    @*@(Html.Kendo().Grid<NotificationViewModel>()
            .Name("kgrid_MyNotifications").Height(350)
            .Columns(columns =>
            {

                columns.Bound(x => x.BookNo).Title("Book No").ClientTemplate("<a class='blue' href='\\#' onClick=\"OnBook('#:BookId#','#:PageType#','#:BookTemplateCode#')\">#:BookNo#</a>");
                columns.Bound(x => x.BookName).Title("Book Name");
                columns.Bound(x => x.Subject).ClientTemplate("<a class='blue' href='\\#' onClick=\"OnTakeAction('#:Id#','#:ReferenceType#','#:ReferenceTypeId#','#:ReferenceTemplateCode#')\">#:Subject#</a>");
                columns.Bound(x => x.From);
                columns.Bound(x => x.To);
                columns.Bound(x => x.ReadStatus);
                //columns.Bound(x => x.Id).Title(" ").ClientTemplateId("NotificationTemplate1").Width(200);
            })

            .Resizable(resizable => resizable.Columns(true))
            .Scrollable(x => x.Enabled(true))
            .Sortable(srt => srt.Enabled(true))
            .Selectable(select => select.Enabled(false))
            .Filterable(f => f.Extra(false))
            .Pageable(pageable => pageable
            .Refresh(true)

            .PageSizes(true)
            .ButtonCount(5))
            .AutoBind(false)
            .DataSource(
            dataSource => dataSource
            .Ajax()
            .PageSize(10)

            //.Events(events => events.Error("OnError"))
            .Read(read => read.Action("LoadNotifications", "Dashboard",new {area="PortalAdmin"}))


            )
        )*@
                    <div class="row">
                        <div class="col-12">

                            <div style="padding-top:20px;">
                                <div id="kgrid_MyNotifications" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                            </div>

                        </div>
                    </div>
                    <script id="NotificationTemplate1" type="text/x-kendo-template">

                                <div class="panel notification-item">
                        <div data-toggle="collapse" data-target="\\#collapse-#=Id#" id="dynbutton-#=Id#" class="panel-heading notification-heading row no-gutters" style="border-left:8px solid #=ReadStatusString# == "NotRead" ? "\\#0066ff" : "\\#008000" ">
                            <div class="col-xs-2 p-1" style="text-align:center">
                                <img class="notification-user" src="/cms/Document/GetImageMongo?id=#=PhotoId#" onerror='OnPhotoError(this,"#=From#");' />
                <div class="" style="font-size: .7eM;color:\\#004d99;"> #=From#</div>
                            </div>
                            <div class="col-7 row p-1">

                                @*<div class="col-12" style="font-size: .9eM;color:\\#004d99;">From : #=value.From#</div>*@
                                <div class="col-12" style="font-size: .7eM;color:\\#004d99;"> #=Subject# </div>
                                <div class="col-12" style="font-size: .7eM;color:\\#004d99;"> #=DisplayCreatedDate# </div>
                <div class="col-12" style="font-size:.7eM;color:\\#004d99;"> #=ReferenceTypeNo#</div>
                            </div>

                           <div class="col-3  p-1">
                                     #if(IsArchived!=true){# <span style="float:right;cursor:pointer"><i style="font-size:20px" class="fas fa-archive" title="Archive Notification" onclick='ArchiveNotification("#:Id#")'></i></span> #}
                                     else if(IsArchived==true){# <span style="float:right;cursor:pointer"><i style="font-size:20px" class="fas fa-trash-undo" title="UnArchive Notification" onclick='UnArchiveNotification("#:Id#")'></i></span> #}#
                     <br/> <br/>
                                     #if(ReadStatus==0){# <span style="float:right;cursor:pointer"><i style="font-size:20px" class="fas fa-book-alt" title="Mark Notification as Read" onclick='MarkNotificationAsRead("#:Id#")'></i></span> #}
                                     else if(ReadStatus==1){# <span style="float:right;cursor:pointer" onclick='MarkNotificationAsNotRead("#:Id#")'><i style="font-size:20px" class="fas fa-book-open" title="Mark Notification as Unread" ></i></span> #}#
                        </div>
                        </div>
                        <div id="collapse-#=Id#" class="panel-collapse collapse" style="border-left:8px solid #=ReadStatusString# == "NotRead" ? "\\#0066ff" : "\\#008000" ">
                            <div class="panel-body p-2" style="font-size:0.85em;">
                                <p> From : #=From#</p>
                                <p> Date : #=DisplayCreatedDate#</p>
                                <p> Subject : #=Subject#</p>
                                <p> Description : #if(Body!= null){#  #=htmlDecode(Body)# #}#</p>
                       <a style="color:blue;" href="javascript:OnTakeAction('#:Id#','#:ReferenceType#','#:ReferenceTypeId#','#:TemplateCode#');">Click here to know more</a>

                            </div>
                        </div>
                    </div>

                    </script>
                </div>
            </div>
        </div>
    </div>
</div>