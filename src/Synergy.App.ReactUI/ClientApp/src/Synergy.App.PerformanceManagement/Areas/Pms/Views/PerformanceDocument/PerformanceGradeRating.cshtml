@inject IStringLocalizer<CMS.UI.Web.Areas.Pms.Controllers.PerformanceDocumentController> Resource
@using Synergy.App.ViewModel;
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.Common;
@*@using Kendo.Mvc.Extensions;*@
@{
    ViewData["Title"] = "" + Resource["PerformanceGradeRating"] + "";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    //Layout = null;
}
<style>
    .kgrdPDM {
        width: 100% !important;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        HideLoader($("#global-overlay"));});

    function OnCreatePerGradeRating() {

        var win = GetMainWindow();
        win.iframeOpenUrl = "/Pms/PerformanceDocument/CreatePGR?parentNoteId="+'@Model.ParentNoteId'+"&perRatingId="+'@Model.PerformanceRatingId';
        win.OpenWindow({ Title: 'Create Performance Grade Rating', Width: 450, Height: 700 });
        return false;
    }

    function onEditPerGradeRating(dId,pnId,prId) {
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        var win = GetMainWindow();
        win.iframeOpenUrl = "/Pms/PerformanceDocument/CreatePGR?ratingId=" + dId + "&parentNoteId=" + pnId + "&perRatingId=" + prId;
        win.OpenWindow({ Title: 'Edit Performance Grade Rating', Width: 450, Height: 700 });
    }

    function DeletePerGradeRating(nid) {

        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("@SharedResource["ConfirmDelete"]").then(function () {
            //confirmDelete(dataItem.NoteId);
            confirmDelete(nid);
        }, function () {

        });
    }

    function OnAfterPerGradeRatingCreate() {
        //$("#kgrdPGR").data("kendoGrid").dataSource.read();
        GetPGRData();
    }

    function confirmDelete(id) {

         $.ajax({
            type: 'POST',
             url: "/pms/performancedocument/DeleteGradeRating?gradeRatingid=" + id ,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                window.parent.ShowNotification("@SharedResource["DeletedSuccessfully"]", "success");
                //$("#kgrdPGR").data("kendoGrid").dataSource.read();
                GetPGRData();
            }
        });
    }

    //Data Grid

    function GetPGRData() {

        var newUrl = "/Pms/PerformanceDocument/ReadPerformanceGradeRatingData?ParentNoteId="+'@Model.ParentNoteId';

        document.getElementById("kgrdPGR").innerHTML = "";
        gridConfig(
            "kgrdPGR",
            newUrl,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    var columnDefs = [
                            {
                                field: "Id",
                                headerName: "@SharedResource["Action"]",
                                cellRenderer: params => {
                                    return "<div class='btn-group grid-menu' id='pgr-menu' data-idvalue=\"" + params.data.Id + "\" data-notevalue=\"" + params.data.NoteId + "\" data-parentvalue=\"" + params.data.ParentNoteId + "\" data-perratvalue=\"" + params.data.PerformanceRatingId + "\"><i class='fas fa-ellipsis-v'></i></div>"
                               }
                            },
                            {
                                field: "GradeName",
                                headerName: "@Resource["Grade"]",
                            },
                            {
                                field: "RatingName",
                                headerName:"@Resource["Rating"]",width:200
                            },
                            {
                                field: "BonusPercentage",
                                headerName: "Bonus Percentage", width: 100,
                            },
                            {
                                field: "IncrementPercentage",
                                headerName: "Increment Percentage", width: 200,
                            },

    ];

    //context menu--------
    $(function () {

        GetPGRData();

        $.contextMenu({
            selector: '#pgr-menu',
            trigger: 'left',
            build: function ($trigger, e) {

                console.log($trigger);
                var status = 0;
                var idval = $trigger.data('idvalue');
                var nval = $trigger.data('notevalue');
                var pid = $trigger.data('parentvalue');
                var prid = $trigger.data('perratvalue');

                switch (status) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEditPerGradeRating(idval, pid, prid);
                                        break;
                                    case 'delete':
                                        DeletePerGradeRating(nval);
                                        break;
                                    default:
                                    }
                            },
                            items: {
                                "edit": { name: "@Html.Raw(SharedResource["Edit"])", icon: "fas fa-pencil" },
                                "delete": { name: "@Html.Raw(SharedResource["Delete"])", icon: "fas fa-trash" }
                                }
                        };
                }
            }
        });

    });

</script>

<div class="row" style="padding:10px;">
    <div class="col-md-12">
        <div>
            <button class="btn btn-primary" id="btnAdd" onclick="OnCreatePerGradeRating();"><i class="fa fas fa-plus"></i>&nbsp;@SharedResource["Create"]</button>
        </div>
        <div id="kgrdPGR" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

        @*@(Html.Kendo().Grid<PerformanceDocumentViewModel>().Name("kgrdPGR")
        .HtmlAttributes(new { @class = "kgrdPGR" })
        .Columns(col =>
        {
            col.Command(command =>
            {
                command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("onEditPerGradeRating").HtmlAttributes(new { @class = "action-icon", @title = "" + SharedResource["Edit"] + "" });
                command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("DeletePerGradeRating").HtmlAttributes(new { @class = "action-icon", @title = "" + SharedResource["Delete"] + "" });
            }).Title("" + SharedResource["Action"] + "").Width(180);
            //col.Bound(c => c.Id);
            col.Bound(c=>c.GradeName).Title("" + Resource["Grade"] + "");
            col.Bound(c=>c.RatingName).Title("" + Resource["Rating"] + "");
            col.Bound(c=>c.BonusPercentage).Title("" + Resource["BonusPercentage"] + "").Width(200);
            col.Bound(c=>c.IncrementPercentage).Title("" + Resource["IncrementPercentage"] + "").Width(200);

        })
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Text("" + SharedResource["Create"] + "").Name("btnAdd").IconClass("fa fas fa-plus").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnCreatePerGradeRating();" });
    })
    .Scrollable(x => x.Enabled(true))

    .Sortable(srt => srt.Enabled(true))
    .Selectable(select => select.Enabled(false))
    .Filterable(f => f.Extra(false)
    .Operators(o => o.ForString(s => s.Clear()
    .Contains("Contains")
    .IsEqualTo("Is equal to")
    )))
    //.Events(e=>e.DataBound("onDataBound"))
      .Resizable(resize => resize.Columns(true))
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .AutoBind(true)
    .DataSource(
    dataSource => dataSource
    .Ajax()
    .PageSize(10)
    .Read(read => read.Action("ReadPerformanceGradeRatingData", "PerformanceDocument", new { Area="Pms", ParentNoteId = Model.ParentNoteId }))
    .Model(model => model.Id("Id")))
    )*@
    </div>
</div>

