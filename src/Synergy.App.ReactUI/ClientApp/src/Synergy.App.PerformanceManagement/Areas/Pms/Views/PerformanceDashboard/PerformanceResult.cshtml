@inject IStringLocalizer<CMS.UI.Web.Areas.Pms.Controllers.PerformanceDashboardController> Resource
@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common
@inject IUserContext _userContext;
@model ServiceViewModel;

@{
    ViewBag.Title = "Performance Result";
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}

<style>
    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .k-listview {
        border: none !important;
    }

    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    .stage {
        background: #a5ccd2;
        border-radius: 7px;
    }

    .dropdown-toggle::after {
        display: none;
    }

    .dropdown-menu {
        width: 100%;
        position: absolute;
        top: 100%;
        left: 0;
        z-index: 1000;
        display: none;
        float: left;
        min-width: 160px;
        padding: 5px 0;
        margin: 2px 0 0;
        font-size: 14px;
        list-style: none;
        background-color: #fff;
        border: 1px solid #ccc;
        border: 1px solid rgba(0,0,0,.15);
        border-radius: 4px;
        -webkit-box-shadow: 0 6px 12px rgb(0 0 0 / 18%);
        box-shadow: 0 6px 12px rgb(0 0 0 / 18%);
        background-clip: padding-box;
    }

    .project-dropdown ul {
        list-style-type: none;
        margin-bottom: 0px;
    }
    /* #dropdown {
        height: 42px;
        left: 221px;
        bottom: 35px;
        font-size: 18px;

        width: 99%;
        background: rgba(255, 255, 255, 0.15);
        border: 1px solid #E8E5E5;
        box-sizing: border-box;
        border-radius: 3px;
        color: #FFFFFF;
    }*/
    #banner {
        width: 100%;
        /*height: 140px;*/
        height: auto;
        left: 389px;
        top: 157px;
        background: #2D9FCA;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 6px;
        font-family: roboto;
    }

    .banner-item-project {
        background-color: #d6aa24;
    }

    .banner-item {
        color: #fff;
        height: 60px;
        text-align: left;
    }

        .banner-item:hover {
            color: #fff;
        }

    .banner-item-project {
        background-color: #42ca88;
    }

    .banner-item-date {
        background-color: #f0ad4e;
    }

    .k-dropdown-project .k-input {
        display: none !important;
    }

    .banner-container {
        position: relative;
        color: white;
    }

    .banner-text {
        position: absolute;
        top: 14px;
        left: 60px;
        font-size: 35px;
    }
</style>
<script>
    $(document).ready(function () {

        HideLoader($("#global-overlay"));

         $("#PerformanceYear").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            value: '@Model.PerformanceUserYear',
            change: OnChangePYear,
            dataSource:{
            serverFiltering: true,
            transport:{
                read:
                {
                    dataType: "json",
                    url: "/PMS/PerformanceTask/GetPerformanceUserYearList?userId=" + '@_userContext.UserId',
                }
            }
            }
         });

        $("#PerDocId").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            //change: OnServiceChange,
            value: '@Model.Id',
            //cascadeFrom: "PerformanceYear",
            dataSource:
            {
                //serverFiltering: true,
                transport:
                {
                    read:
                    {
                        dataType: "json",
                        url: "/PMS/PerformanceTask/GetPDMList",
                        data: PerYearFilter
                    }
                }
            },
            filtering: function (ev) {
                var filterValue = ev.filter != undefined ? ev.filter.value : "";
                ev.preventDefault();

                this.dataSource.filter({
                    logic: "or",
                    filters: [
                        {
                            field: "Name",
                            operator: "contains",
                            value: filterValue
                        },
                    ]
                });
            }
        });

        $("#PerDocMasterStage").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataTextField: "StageName",
            dataValueField: "StageId",
            filter: "contains",
            value: '@Model.PerformanceStage',
            cascadeFrom: "PerDocId",
            dataSource:
            {
                serverFiltering: true,
                transport:
                {
                    read:
                    {
                        dataType: "json",
                        url: "/PMS/PerformanceDashboard/GetPerDocMasterStage",
                        data: DocFilter
                    }
                }
            }
        });

        $("#PerUserId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            /*change: OnServiceChange,*/            
            cascadeFrom: "PerDocId",
            dataSource:
            {
                serverFiltering: true,
                transport:
                {
                    read:
                    {
                        dataType: "json",
                        url: "/PMS/PerformanceDocument/GetPerDocSubordinatesIdNameList",
                        data: DocFilter
                    }
                }
            }
        });

        $("#EmployeeId").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataTextField: "PersonFullName",
            dataValueField: "UserId",
            filter: "contains",
            change: OnEmpChange,
            //cascadeFrom: "DepartmentId",
            dataSource:
            {
                //serverFiltering: true,
                transport:
                {
                    read:
                    {
                        dataType: "json",
                        url: "/PMS/PerformanceDocument/ReadUsers?deptId="+'@Model.DepartmentId',
                    }
                }
            },
            filtering: function (ev) {
                var filterValue = ev.filter != undefined ? ev.filter.value : "";
                ev.preventDefault();

                this.dataSource.filter({
                    logic: "or",
                    filters: [
                        {
                            field: "PersonFullName",
                            operator: "contains",
                            value: filterValue
                        },
                    ]
                });
            }
        });

        getPerformanceResultData();
        
        var url = "/Pms/PerformanceDashboard/GetPerformanceChart?pdmId=@Model.Id&deptId=@Model.DepartmentId&stageId=@Model.StageId&userId=@Model.OwnerUserId";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;

                    //chart by status
                    var chart = "#chartTaskByStatus";
                    var options = {
                        series: [{
                            name: "No Of Users",
                            data: vals
                        }],
                        chart: {
                            type: 'area',
                            height: 350,
                            zoom: {
                                enabled: false
                            }
                        },
                        dataLabels: {
                            enabled: false
                        },
                        stroke: {
                            curve: 'smooth'
                        },
                        //title: {
                        //    text: 'Fundamental Analysis of Stocks',
                        //    align: 'left'
                        //},
                        //subtitle: {
                        //    text: 'Price Movements',
                        //    align: 'left'
                        //},
                        labels: res.ItemValueLabel,
                        xaxis: {
                            //type: 'datetime',
                            title: {
                                text: 'Scores'
                            }
                        },
                        yaxis: {
                            title: {
                                text: 'No Of Users'
                            }, min: 0, forceNiceScale: true,
                        },
                        legend: {
                            horizontalAlign: 'left'
                        }
                    };

                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();

                    //chart by type
                    var chart1 = "#chartTaskByType";
                    var options1 = {
                        series: [{
                            name: "No Of Users",
                            data: vals
                        }],
                        chart: {
                            type: 'bar',
                            height: 350
                        },
                        plotOptions: {
                            bar: {
                                horizontal: false,
                                columnWidth: '15%',
                                endingShape: 'rounded'
                            },
                        },
                        dataLabels: {
                            enabled: false
                        },
                        stroke: {
                            show: true,
                            width: 2,
                            colors: ['transparent']
                        },
                        xaxis: {
                            categories: res.ItemValueLabel,
                            title: {
                                text: 'Scores'
                            }
                        },
                        yaxis: {
                            title: {
                                text: 'No Of Users'
                            }
                        },
                        fill: {
                            opacity: 1
                        },
                        //tooltip: {
                        //    y: {
                        //        formatter: function (val) {
                        //            return "$ " + val + " thousands"
                        //        }
                        //    }
                        //}
                    };

                    var typechart = new ApexCharts(document.querySelector(chart1), options1);
                    typechart.render();
                }
            }
        });       
        
    });

    function OnChangePYear() {
        var search = PerYearFilter();
        $("#PerDocId").data("kendoDropDownList").dataSource.read(search);
    }

    function PerYearFilter() {
        return {
            ownerId: '@_userContext.UserId',
            year: $("#PerformanceYear").data("kendoDropDownList").value(),
        }
    }

    function DocFilter() {
        return {
            performanceId: $("#PerDocId").data("kendoDropDownList").value(),
        }
    }

    function onFilterBanner() {
        
        var project = "";
        var performanceStage = "";        
        var performanceUser = "";        

       performanceYear = $("#PerformanceYear").data("kendoDropDownList").value();
       performanceUser = $("#PerUserId").data("kendoDropDownList").value();
       project = $("#PerDocId").data("kendoDropDownList").value();
       performanceStage = $("#PerDocMasterStage").data("kendoDropDownList").value();
        //LoadPartailView1("/pms/PerformanceDashboard/PerformanceDetailsBanner?pageName=@Model.PageName&ProjectId=" + project + '&PerformanceStage=' + performanceStage + '&PerformanceUser=' + performanceUser + '&PerformanceUserYear=' + performanceYear + '&type=' + typeValue , 'ProjectBanner');
        //LoadPages(project, performanceStage, type, performanceUser, performanceYear, dept);

        var url = "/Pms/Performance/GetPerformanceDetails?MasterId=" + project + '&stageId=' + performanceStage + '&userId=' + performanceUser;
        getPerformanceResultData(url);

        var url = "/Pms/PerformanceDashboard/GetPerformanceChart?pdmId=" + project + "&stageId=" + performanceStage + "&userId=" + performanceUser;
        //var url = "/Pms/PerformanceDashboard/GetPerformanceChart?pdmId=@Model.Id&deptId=@Model.DepartmentId&stageId=@Model.StageId&userId=@Model.OwnerUserId";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    document.getElementById("chartTaskByStatus").innerHTML = "";
                    var vals = res.ItemValueSeries;

                    //status chart
                    var chart = "#chartTaskByStatus";
                    var options = {
                        series: [{
                            name: "No Of Users",
                            data: vals
                        }],
                        chart: {
                            type: 'area',
                            height: 350,
                            zoom: {
                                enabled: false
                            }
                        },
                        dataLabels: {
                            enabled: false
                        },
                        stroke: {
                            curve: 'smooth'
                        },                        
                        labels: res.ItemValueLabel,
                        xaxis: {                            
                            title: {
                                text: 'Scores'
                            }
                        },
                        yaxis: {
                            title: {
                                text: 'No Of Users'
                            }, min: 0, forceNiceScale: true,
                        },
                        legend: {
                            horizontalAlign: 'left'
                        }
                    };

                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();

                    //type chart
                    document.getElementById("chartTaskByType").innerHTML = "";                    
                    var typechart = "#chartTaskByType";
                    var options1 = {
                        series: [{
                            name: "No Of Users",
                            data: vals
                        }],
                        chart: {
                            type: 'bar',
                            height: 350
                        },
                        plotOptions: {
                            bar: {
                                horizontal: false,
                                columnWidth: '15%',
                                endingShape: 'rounded'
                            },
                        },
                        dataLabels: {
                            enabled: false
                        },
                        stroke: {
                            show: true,
                            width: 2,
                            colors: ['transparent']
                        },
                        xaxis: {
                            categories: res.ItemValueLabel,
                            title: {
                                text: 'Scores'
                            }
                        },
                        yaxis: {
                            title: {
                                text: 'No Of Users'
                            }
                        },
                        fill: {
                            opacity: 1
                        },                        
                    };

                    var chart = new ApexCharts(document.querySelector(typechart), options1);
                    chart.render();
                }
            }
        });
        
    }

    function OnEmpChange() {
        
        var doc = $("#PerDocId").data("kendoDropDownList").value();
        var dept = $("#DepartmentId").data("kendoDropDownList").value();
        var emp = $("#EmployeeId").data("kendoDropDownList").value();
        var stage = $("#PerDocMasterStage").data("kendoDropDownList").value();
        var url = "/Pms/Performance/GetPerformanceDetails?MasterId=" + doc + '&deptId=' + dept + '&userId=' + emp+'&stageId='+stage;
        getPerformanceResultData(url);
    }

    function OnTaskAssChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-taskchart').show();

        } else {
            $('#no-data-taskchart').hide();
        }
    }


    function onFilterReset() {
        var newvalue = new Array();
        //var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        //multiselectTaskStatus.value(newvalue);
        var multiselectTaskAssigned = $("#EmployeeId").data("kendoDropDownList");
        multiselectTaskAssigned.value(newvalue);
        var search = {
            performanceId: '@Model.Id',
        };
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        getPerformanceResultData();

    }

    function onView(id) {
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'View Task', Width: 600, Height: 600 });
        return false;
    }
     function OpenTask(taskId, templateCode) {

        var portalId = $('#GlobalPortalId').val();
         //var url = '/Cms/Page?lo=Popup&pageType=Task&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + taskId;
         var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterTaskCreate&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + taskId;
        // var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterTaskCreate&source=View&dataAction=View&templateCodes=PMS_GOAL_ADHOC_TASK&portalId=' + portalId + '&recordId=' + Id;
        //var url = '/Cms/Page?lo=Popup&pageType=Task&source=Versioning&dataAction=Edit&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + taskId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(Resource["ViewTask"])', Width: 1000, Height: 600, Position: 'Right1' });
        return false;
    }
</script>
<script>
    var columnDefs = [
        { field: "MasterName", headerName:"@Resource["Document Name"]" ,minWidth:150},
        { field: "Name", headerName: "@Resource["Stage Name"]", minWidth: 160 },
        { field: "OwnerUserName", headerName: "@SharedResource["Owner"]", minWidth: 150 },
        { field: "EmployeeNo", headerName: "@SharedResource["Employee No"]", minWidth: 150 },
        { field: "DepartmentName", headerName: "@SharedResource["Department Name"]", minWidth: 170},
        { field: "JobName", headerName: "@SharedResource["Job Name"]", minWidth: 150},
        { field: "ServiceStatusName", headerName: "@SharedResource["Status"]", minWidth: 120 },
        { field: "TotalGoal", headerName: "@Resource["Total Goal"]", minWidth: 150 },
        { field: "TotalCompetency", headerName: "@Resource["Total Competency"]", minWidth: 170 },
        { field: "TotalCompetencyWeightage", headerName: "@Resource["Total Competency Weightage"]", minWidth: 240 },
        { field: "TotalGoalWeightage", headerName: "@Resource["Total Goal Weightage"]", minWidth: 220},
        //{ field: "GoalNoOfMidYearReviewCompleted", headerName: "@Resource["No Of Mid Year Review Completed Goal"]", minWidth: 300 },
        //{ field: "GoalNoOfEndYearReviewCompleted", headerName: "@Resource["No Of End Year Review Completed Goal"]", minWidth: 300 },
        //{ field: "CompetencyNoOfMidYearReviewCompleted", headerName: "@Resource["No Of Mid Year Review Completed Competency"]", minWidth: 350 },
        //{ field: "CompetencyNoOfEndYearReviewCompleted", headerName: "@Resource["No Of End Year Review Completed Competency"]",  minWidth: 350},
    { field: "CalculatedRating", headerName: "@Resource["Calculated Rating"]", minWidth: 170 },
    { field: "CalculatedRatingRounded", headerName: "@Resource["Calculated Rating Rounded"]", minWidth: 220 },
    { field: "AdjustedRating", headerName: "@Resource["Adjusted Rating"]", minWidth: 170 },
    { field: "AdjustedRatingRounded", headerName: "@Resource["Adjusted Rating Rounded"]", minWidth: 220},
    { field: "FinalRating", headerName: "@Resource["Final Rating"]", minWidth: 150},
    { field: "FinalRatingRounded", headerName: "@Resource["Final Rating Rounded"]", minWidth: 220},
    { field: "ReadyForPerformanceRating", headerName: "@Resource["Ready For Performance Rating"]", minWidth: 250},
        {
        field: "Id", headerName: "@Resource["Comment"]", minWidth: 250,
            cellRenderer: params => {
                return htmlDecode(params.data.ReadyForPerformanceRating);
            }
        },
    ];

    function getPerformanceResultData(urlnew) {
           var url = "";
        if (urlnew != "" && urlnew != null) {
            url = urlnew;
        } else {
            url = "/Pms/Performance/GetPerformanceDetails?MasterId=" + '@Model.Id' + '&deptId=' + '@Model.DepartmentId' +'&stageId=@Model.StageId' + '&userId=@Model.OwnerUserId';

        }
        document.getElementById("kgdPerResultView").innerHTML = "";
        gridConfig(
            "kgdPerResultView",
            url,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    function htmlDecode(value) {
        return value.replace(/&lt;/g, "<").replace(/&gt;/g, ">");
    }
</script>

<div class="row hr-pad-top-10">
    <div class="col-md-6">
        <h4>
        </h4>
    </div>
</div>

<div class="banner-container">
    <img style="width:100%; height:100px" src="~/images/PMS/Performance Dashboard.png" />
    <div class="banner-text">Performance Result</div>
</div>

<div id="banner" role="group" style="width:100%;color:#FFFFFF;background: #17a2b8;padding-left: 5px;">
    <div class="row" style="padding-top:10px;">

        <div class=" col-md-4">
            <div style="font-size:.8em;padding-top:0px;">
                @Resource["Performance Year"]
                <div class="project-dropdown" id="dropdown" title="@Resource["PerformanceYear"]">
                    <input id="PerformanceYear" class="form-control" style="width:80%" />
                </div>
            </div>
        </div>
        <div class=" col-md-4">
            <div style="font-size:.8em;padding-top:0px;">
                @Resource["Performance Document"]
                <div class="project-dropdown" id="dropdown" title="@Resource["PerformanceDocument"]">
                    <input id="PerDocId" class="form-control" style="width:80%" />
                </div>
            </div>
        </div>

        <div class="col-3">
            <div style="font-size:.8em;padding-top:0px;padding-right:16px">
                Performance Stage
                <div class="project-dropdown" id="PerDocMasterStageddl" title="Performance Stage">
                    <input id="PerDocMasterStage" class="hr-x-large search-control" />
                </div>
            </div>
        </div>

        @*<div class="col-md-4">
                <div style="font-size:.8em;padding-top:0px;">
                    Department
                    <div class="project-dropdown" id="dropdown" title="Department">
                        <input id="DepartmentId" class="form-control" style="width:80%" />
                    </div>
                </div>
            </div>*@
        <div class="col-md-4">
            <div style="font-size:.8em;padding-top:0px;">
                Performance User
                <div class="project-dropdown" id="dropdownPerUserId" title="PerformanceUsers">
                    <input id="PerUserId" class="form-control" style="width:80%" />
                </div>
            </div>
        </div>


        <div class="col-3">
            <div style="font-size:.8em;padding-top:14px;padding-right:16px">
                <button class="btn btn-warning" onclick="onFilterBanner()">Search</button>
            </div>
        </div>

    </div>

    <div class="row" style="padding-top:20px">

        <div class=" col-md-2">
            <div title="@Resource["DocumentStatus"]" style="font-size:.8em;">
                @Resource["Document Status"]
                <div style="padding-top:5px;font-size:18px"> @Model.PerformanceDocumentStatus</div>
            </div>
        </div>

        <div class=" col-md-2">
            <div style="font-size:.8em;">
                @SharedResource["Start Date"]
                <div title="@SharedResource["StartDate"]" style="padding-top:5px;font-size:18px">
                    @Model.StartDate.ToDefaultDateFormat()
                </div>
            </div>
        </div>

        <div class=" col-md-3">
            <div style="font-size:.8em;">
                @SharedResource["Due Date"]
                <div title=" @SharedResource["DueDate"]" style="padding-top:5px;font-size:18px">
                    @Model.DueDate.ToDefaultDateFormat()
                </div>
            </div>
        </div>
    </div>
    <div class="row " style=" margin-left: 0px; font-size: 16px;margin-right:0px;">

    </div>

</div>

<div id="appWrapper" class="hr-pad-top-15">

    <div class="row">

        <div class="col-sm-6">
            <div class="panel panel-warning">
                <div class="panel-heading">Bell Curve Chart</div>
                <div class="panel-body">
                    <div id="chartTaskByStatus"></div>

                    @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>
                        ()
                        .Name("chartTaskByStatus")
                        .Legend(legend => legend
                        .Position(ChartLegendPosition.Bottom)
                        )
                        .DataSource(ds => ds
                        .Read(read => read.Action("GetPerformanceChart", "PerformanceDashboard", new { @area = "Pms", pdmId = Model.Id,deptId=Model.DepartmentId }))
                        )
                        .SeriesColors(new string[] { "#ff9800", "#fad84a", "#4caf50", "#03a9f4" })
                        .Series(series =>
                        {
                            //series.Donut(model => model.Value, model => model.Type)
                            //.Labels(labels => labels
                            //    .Visible(true)
                            //    .Position(ChartPieLabelsPosition.Center)
                            //    .Background("transparent")

                            //);
                            series.Area(model => model.Type, model => model.Value)
                            .Line(line => line.Style(ChartSeriesLineStyle.Smooth));
                        })
                        .CategoryAxis(categoryAxis => categoryAxis
                        .Title("No. Of Users")
                        .MajorGridLines(majorGridLines => majorGridLines.Visible(false))
                        .Labels(labels => labels
                        .Visible(true))
                        .Max(5)
                        )
                        .ValueAxis(valueAxis => valueAxis.Numeric()
                        .Title("Scores")
                        .MajorGridLines(majorGridLines => majorGridLines.Visible(false))
                        .MajorUnit(1)
                        //.Visible(false)
                        )
                        .HtmlAttributes(new { @style = "height:300px;" })
                        .Tooltip(tooltip => tooltip
                        .Visible(true)
                        // .Template("#= category # - #= kendo.format('{0:P}', percentage) #")
                        )
                        )*@
                    @*<div id="no-data-stagechart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>No Data Found</span></div>*@

                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="panel panel-info">
                <div class="panel-heading">Status Chart</div>
                <div class="panel-body">
                    <div id="chartTaskByType"></div>

                    @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>
                        ()
                        .Name("chartTaskByType")
                        .Legend(legend => legend
                        .Position(ChartLegendPosition.Bottom)
                        )
                        .DataSource(ds => ds
                        .Read(read => read.Action("GetPerformanceChart", "PerformanceDashboard", new { @area = "Pms", pdmId = Model.Id, deptId = Model.DepartmentId }))

                        )
                        .SeriesColors(new string[] { "#03a9f4", "#ff9800", "#fad84a", "#4caf50" })
                        .Series(series =>
                        {
                            series.Column(model => model.Type, model => model.Value);
                        })
                        .CategoryAxis(categoryAxis => categoryAxis
                        .Title("No. Of Users").MajorGridLines(lines => lines.Visible(false))
                        .Max(5)
                        )
                        .ValueAxis(valueAxis => valueAxis.Numeric()
                        .Title("Scores")
                        .MajorGridLines(majorGridLines => majorGridLines.Visible(false))
                        .MajorUnit(1)
                        )
                        .HtmlAttributes(new { @style = "height:300px;" })
                        .Tooltip(tooltip => tooltip
                        .Visible(true)
                        .Template("#= category #"))
                        )*@
                    @*<div id="no-data-taskchart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>No Data Found</span></div>*@

                </div>
            </div>
        </div>
    </div>

    @*<div class="row">
        <div class="col-12">
            <div class="panel panel-filter">
                <div class="panel-heading"> @SharedResource["Filter"]</div>
                <div class="panel-body">
                    <div class="row" style="padding:5px;">
                        <div class="col-4">
                            Employee<br />
                            <div id="EmployeeId" style="width:90%;"></div>
                        </div>

                        <div class="col-4">
                            <br />
                            <button class="btn btn-filter-reset" onclick="onFilterReset()" title="@SharedResource["Reset"] @SharedResource["Filter"]">@SharedResource["Reset"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@

    <div class="row">
        <div class="col-12">
            <div class="panel panel-primary">
                <div class="panel-heading">Performance Result Details</div>
                <div class="panel-body">
                    <div id="kgdPerResultView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

                </div>
            </div>
        </div>
    </div>
</div>




