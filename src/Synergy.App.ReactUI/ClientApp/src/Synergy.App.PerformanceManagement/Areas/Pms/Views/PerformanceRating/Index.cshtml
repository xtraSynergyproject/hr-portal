@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@model PerformaceRatingViewModel

@{
    ViewData["Title"] = "Performance Rating";
    Layout = null;
}

<style>
    .kgrdPDM {
        width: 100% !important;
    }
</style>

<script>
    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        {
            field: "Name",
        },        
        {
            field: "Status",
            cellRenderer: params => {
                return statusObj[params.value]; //only for enum
            }
        },
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBinPerformnceRating' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid= '" + params.data.NtsNoteIds + "' data-name= '" + params.data.Name + "' ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getDataPerformanceRating();

        //$.contextMenu('update');
        //$('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBinPerformnceRating',
            trigger: 'left',
            build: function ($trigger, e) {

                var id = $trigger.data('idvalue');
                var NoteId = $trigger.data('noteid');
                var Name = $trigger.data('name');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEditOnCreateTagCategory(id);
                                        break;
                                    case 'delete':
                                        OnDeleteTagCategory(id);
                                        break;
                                    case 'performanceRatingItemView':
                                        OnPerformanceRatingItemView(NoteId,Name);
                                        break;
                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },
                                "performanceRatingItemView": { name: "Performance Rating Item", icon: "fas fa-cog" },
                            }
                        };
                }
            }
        });

    });

    function OnCreateTagCategory() 
    {
        var win = GetMainWindow();
        win.iframeOpenUrl = "/Pms/PerformanceRating/PerformanceRating";
        win.OpenWindow({ Title: 'Create Performance Rating', Width: 450, Height: 700 });
        return false;
    }

    function onEditOnCreateTagCategory(id) 
    {
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        var win = GetMainWindow();
        var portalId = $('#GlobalPortalId').val();
        win.iframeOpenUrl = "/Pms/PerformanceRating/PerformanceRating?Id=" + id;
        win.OpenWindow({ Title: 'Edit Performance Rating', Width: 450, Height: 700 });
    }

    function OnDeleteTagCategory(id) {
        var flag = confirm('Do you really want to delete the Performance Rating?');
        //alert("..Delete");
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url:'@Url.Action("Delete", "PerformanceRating", new { @area = "Pms" })?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {                
                if (result.success) 
                {
                    //$("#kgrdperformanceRating").data("kendoGrid").dataSource.read();
                    getDataPerformanceRating();
                    kendo.alert("Tag Category Deleted Successfully.");
                }
                else
                {
                    //$("#kgrdperformanceRating").data("kendoGrid").dataSource.read();
                    getDataPerformanceRating();
                    var err = result.errors.BinderCountError.errors[0];
                    kendo.alert(err);
                }
                },
                error: function (ert)
                {
                //$("#kgrdperformanceRating").data("kendoGrid").dataSource.read();
                    getDataPerformanceRating();
                }
            });
            return false;
        }
    }


                function onDataBound(arg) {
                $("#kgrdperformanceRating tbody tr").each(function () {




                //if (currentDataItem.TagCategoryType == "Master") {
                //    Tag.remove();
                //}

                });
                }

    function OnPerformanceRatingItemView(NoteId,Name) 
    {
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //var NoteId = dataItem.NtsNoteIds;
        // var Name = data.Name;

        var win = GetMainWindow();
        win.iframeOpenUrl = "/Pms/PerformanceRating/PerformanceRatingItem?NoteId=" + NoteId;
        win.OpenWindow({ Title: 'Manage Performance Rating Item- '+Name , Width: 1200, Height: 700 });
    }



    function getDataPerformanceRating() 
    {
       document.getElementById("kgrdperformanceRating").innerHTML = "";
       gridConfig(
           "kgrdperformanceRating",
           "/pms/PerformanceRating/ReadPerformanceRatingData",
           columnDefs,
           false,
           true,
           true,
           true,
           1,
           true,
           10);
    }

</script>

<div>
    <h4>@ViewBag.Title</h4>

    <hr />

    <div class="row">
        <div class="col-12">
            <button type='button' class='btn btn-primary' onclick='OnCreateTagCategory();'><i class='fa fas fa-plus'></i>&nbsp;Create</button>
            <br /><br />
            <div id="kgrdperformanceRating" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>





            


                @*<div>
                    <h4>@ViewBag.Title</h4>

                    <hr />

                    <div class="row">



                        <div class="col-md-12">
                            @(Html.Kendo().Grid<PerformaceRatingViewModel>
    ().Name("kgrdperformanceRating").HtmlAttributes(new { @class = "kgrdPDM" })
    .Columns(col =>
    {
        col.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("onEditOnCreateTagCategory").HtmlAttributes(new { @class = "action-icon", @title = "Edit" });
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteTagCategory").HtmlAttributes(new { @class = "action-icon", @title = "Delete" });
            command.Custom("Tag").Text("<i class='fa fas fa-cog'></i>").Click("OnPerformanceRatingItemView").HtmlAttributes(new { @class = "action-icon", @title = "Tag" });

        }).Title("Action").Width(150);
        //col.Bound(c => c.Id);
        col.Bound(c => c.Name).Title("Name");
        col.Bound(c => c.Status).Title("Staus");
        //col.Bound("Name").Title("Name").Width(220);
        //col.Bound("Status").Title("Status").Width(220);





    })
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Text("Create").Name("btnAdd").IconClass("fa fas fa-plus").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnCreateTagCategory();" });
    })
    .Scrollable(x => x.Enabled(true))

    .Sortable(srt => srt.Enabled(true))
    .Selectable(select => select.Enabled(false))
    .Filterable(f => f.Extra(false)
    .Operators(o => o.ForString(s => s.Clear()
    .Contains("Contains")
    .IsEqualTo("Is equal to")
    )))
    .Events(e => e.DataBound("onDataBound"))
      .Resizable(resize => resize.Columns(true))
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .AutoBind(true)
    .DataSource(
    dataSource => dataSource
    .Ajax()
    .PageSize(10)
    .Read(read => read.Action("ReadPerformanceRatingData", "PerformanceRating", new { Area="Pms"}))
    .Model(m =>
      {
          m.Id(model => model.Id);
          m.Id(model => model.NtsNoteIds);
          m.Id(model => model.ParentNoteId);


      }))
    )
                        </div>

                    </div>
                </div>*@
