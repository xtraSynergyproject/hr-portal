@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;

@{
    ViewData["Title"] = "ManageBatch";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model BatchViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
    .drp-user .k-dropdown-wrap .k-input {
        height: 40px;
    }
</style>

<div class="row" style="margin-left:15px;">

    <form asp-controller="Batch" asp-action="Manage" method="post" class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All" style="font-size:16px;"></div>
        <div class="row" style="padding:10px;">

            @*<div class="col-12">JobId <span class="required">*</span></div>
            <div class="col-12 pad-15">
                @(Html.Kendo().DropDownListFor(model=>model.JobId)
                    .DataTextField("JobId")
                    .DataValueField("JobId")
                    .DataSource(source =>
                    {
                        source.Read(read =>
                        {
                            read.Action("GetJobIdList", "Batch");
                        });
                    })
                    .OptionLabel("Select JobId")
                    .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
                    )
            </div>*@
            @*<div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for=" JobId" type="text" class="form-control" placeholder="Enter JobId" required="required" autocomplete="off" style="width:80%" />
                    <label for=" JobId"> JobId <span class="required">*</span></label>
                </div>
            </div>*@

            @*<div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="OrganizationId" type="text" class="form-control" placeholder="Enter OrganisationId" required="required" autocomplete="off" style="width:80%" />
                    <label for="OrganizationId">OrganizationId <span class="required">*</span></label>
                </div>
            </div>*@


            <div class="col-12 pad-10">
                @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                <div class="form-label-group">
                    @*<input type="text" asp-for="CriteriaType" class="form-control" placeholder="CriteriaType" autocomplete="off" style="width:80%" />*@
                    <div>
                        <label for="Organization">Organization</label>
                    </div>
                    @(Html.Kendo().DropDownListFor(x=>x.OrganizationId)
                       .DataTextField("Name")
                                    .DataValueField("Id")
                                     .Filter(FilterType.Contains)
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                              read.Action("GetOrganizationIdNameByRecruitmentList", "Master", new { jobAddId = Model.JobId });
                                          });
                                      })
                                      .Events(x=>x.Change("onOrgChange"))
                           .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                         .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                        )
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" autocomplete="off" style="width:80%" required="required" readonly />
                    <label for="Name">Name</label>


                </div>
            </div>
            @if (Model.BatchType == BatchTypeEnum.ShortlistByHr)
            {
                <div class="col-12 pad-10">
                    @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                    <div class="form-label-group">
                        @*<input type="text" asp-for="CriteriaType" class="form-control" placeholder="CriteriaType" autocomplete="off" style="width:80%" />*@
                        <div>
                            <label for="Hiring Manager">Hiring Manager</label>
                        </div>
                        @*@(Html.Kendo().DropDownListFor(x=>x.HiringManager)
                        .DataTextField("Name")
                                     .DataValueField("Id")
                                       .DataSource(source =>
                                       {
                                           source.Read(read =>
                                           {
                                               read.Action("GetUserIdNameList", "User", new { @area="Cms"});
                                           });
                                       })
                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                          .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                         )*@
                        @*@(Html.Kendo().DropDownListFor(x => x.HiringManager)
                                                                .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                                .Filter(FilterType.Contains)
                                                                .DataTextField("Name")
                                                                .DataValueField("Id")
                                                                .Height(300)
                                                                .TemplateId("drp-user-template")
                                                                .ValueTemplateId("drp-user-value-template")
                                                                .HtmlAttributes(new { @class = "hr-xxl-large drp-user"  })
                                                                .DataSource(source =>
                                                                {
                                                                    //source.Custom()
                                                                    //    .ServerFiltering(true)
                                                                    //    .ServerPaging(true)
                                                                    //    .PageSize(100)
                                                                    //    .Type("aspnetmvc-ajax")
                                                                    //    .Transport(transport =>
                                                                    //    {
                                                                    ReaderW("GetUserIdNameList", "HiringManager", new { area = "Recruitment" });
                                                                })
                                                                        .Schema(schema =>
                                                                        {
                                                                            schema.Data("Data")
                                                                            .Total("Total");
                                                                        });
                        }))*@
                        @*@(Html.Kendo().DropDownListFor(x=>x.HiringManager)
                        .DataTextField("Name")
                                     .DataValueField("UserId")
                                      .Filter(FilterType.StartsWith)
                                       //.ClientTemplateId("template")
                                       .DataSource(source =>
                                       {
                                           source.Read(read =>
                                           {
                                               read.Action("GetUserIdNameList", "HiringManager");
                                           });
                                       }).TemplateId("drp-user-template")
                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                          .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                         )*@
                        @(Html.Kendo().DropDownListFor(x => x.HiringManager)
                        .DataTextField("Name")
                        .DataValueField("UserId")
                       // .Events(x=>x.DataBound("OnBound"))
                        .Filter(FilterType.Contains)
                        .TemplateId("drp-user-template")
                         .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                        .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                        .Events(events => events.Filtering(
                                @<text>
                                    function(e) {
                                       var filterValue = e.filter != undefined ? e.filter.value : "";
                                            e.preventDefault();

                                          this.dataSource.filter({
                                            logic: "or",
                                            filters: [
                                              {
                                                field: "Name",
                                                operator: "contains",
                                                value: filterValue
                                              },
                                              {
                                                field: "GAECNo",
                                                operator: "contains",
                                                value: filterValue
                                              },
                                              {
                                                field: "DesignationName",
                                                operator: "contains",
                                                value: filterValue
                                              }
                                            ]
                                          });
                                    }
                                    </text>
                                    ))
                         .DataSource(source =>
                       {
                           source.Read(read =>
                           {
                               read.Action("GetHMListByOrgId", "HiringManager").Data("FilterHm");
                           });
                           //.ServerFiltering(true);
                       })
                         .Value(Model.HiringManager)
                        // .CascadeFrom("OrganizationId")
                     )


                    </div>
                </div>
                <div class="col-12 pad-10">

                    <div class="form-label-group">

                        <div>
                            <label for="Hiring Manager">Head Of Department</label>
                        </div>

                        @(Html.Kendo().DropDownListFor(x => x.HeadOfDepartment)
                        .DataTextField("Name")
                        .DataValueField("UserId")
                       // .Events(x=>x.DataBound("OnBound"))
                        .Filter(FilterType.Contains)
                        .TemplateId("drp-user-template")
                         .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                        .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                        .Events(events => events.Filtering(
                                @<text>
                                    function(e) {
                                       var filterValue = e.filter != undefined ? e.filter.value : "";
                                            e.preventDefault();

                                          this.dataSource.filter({
                                            logic: "or",
                                            filters: [
                                              {
                                                field: "Name",
                                                operator: "contains",
                                                value: filterValue
                                              },
                                              {
                                                field: "GAECNo",
                                                operator: "contains",
                                                value: filterValue
                                              },
                                              {
                                                field: "DesignationName",
                                                operator: "contains",
                                                value: filterValue
                                              }
                                            ]
                                          });
                                    }
                                    </text>
                                    ))
                         .DataSource(source =>
                       {
                           source.Read(read =>
                           {
                               read.Action("GetHODListByOrgId", "HiringManager").Data("FilterHOD");
                           });
                           //.ServerFiltering(true);
                       })
                         .Value(Model.HeadOfDepartment)
                        // .CascadeFrom("OrganizationId")
                     )


                    </div>
                </div>
            }






            @* <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="BatchStatus" type="text" class="form-control" placeholder="Enter BatchStatus" autocomplete="off" style="width:80%" />
                    <label for="BatchStatus">BatchStatus</label>
                </div>
            </div>*@
            <div class="col-12 pad-10">
                @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                <div class="form-label-group">
                    @*<input type="text" asp-for="CriteriaType" class="form-control" placeholder="CriteriaType" autocomplete="off" style="width:80%" />*@
                    <div>
                        <label for="Batch Status">Batch Status</label>
                    </div>
                    @(Html.Kendo().DropDownListFor(x=>x.BatchStatus)
                       .DataTextField("Name")
                                    .DataValueField("Id")
                                      .DataSource(source =>
                                      {
                                          source.Read(read =>
                                          {
                                          read.Action("GetListOfValueList", "ListOfValue", new { Type = "BatchStatus" });
                                      });
    })
                          // .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                         .HtmlAttributes(new { @class = "form-control", @style = "width:80%",@readonly="readonly" })
                        )
                </div>
            </div>


            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div>
                        <label for="Target Hiring Date">Target Hiring Date</label>
                    </div>
                    @Html.Kendo().DatePickerFor(m => m.TargetHiringDate).Events(m => m.Change("TargetHiringDate")).Value(Model.TargetHiringDate==null ?DateTime.Today:Model.TargetHiringDate).Min(DateTime.Today).HtmlAttributes(new { @class = "form-control", @style = "width:80%", onkeydown = "javascript:return false;" })
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="TargetBatchCount" type="number" min="0" class="form-control" placeholder="Target Batch Count" autocomplete="off" style="width:80%" />
                    <label for="TargetBatchCount">TargetBatchCount</label>
                </div>
            </div>

            <div class="cms-slidebar-footer">
                <button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">Close</button>
                <input type="submit" class="btn btn-primary" value="Save" id="submitBtn" onclick="OnSave(event);" />
            </div>

        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.JobId)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.BatchType)
        @Html.HiddenFor(x => x.TaskId)
        @Html.HiddenFor(x => x.IsPending)
    </form>
</div>
<script type="text/x-kendo-tmpl" id="drp-user-template">
        <div class="row no-gutter drp-user-item">
     <div class="row" style="margin:5px;">
        @*<div class="col-3">
        <span>#:Id#</span>
        </div>*@

         <div class="col-9"><span><i class="fa fa-user-circle" aria-hidden="true"></i> &nbsp;#:Name#</span></div>

         <div class="col-9"><span><i class="fa fa-id-card" aria-hidden="true"></i> &nbsp;#:GAECNo#</span></div>
         <div class="col-9"><span><i class="fa fa-suitcase"></i> &nbsp;#:DesignationName#</span></div>
    
    </div>

    </div><hr />

            @*<div class="col-xs-9 col-sm-10 row no-gutter">
                <div class="col-xs-12 col-sm-7 no-gutter">
                    <div class="drp-user-name">#:Name#</div>
                    #if (data.Name!=null) {# <div class="drp-user-text" title="Name">#:Name#</div> # } #
                    #if (data.GAECNo!=null) {# <div class="drp-user-text" title="GAEC No">#:GAECNo#</div> # } #
                    #if (data.Designation!=null) {# <div class="drp-user-text" title="Designation">#:Designation#</div> # } #
                </div>*@
</script>

<script type="text/javascript">

    //function HiringManagerDrp() {
    //
    //    var filterValue = "search me";
    //    var newFilter = {
    //        logic: "or",
    //        filters: [
    //            { field: "Name", operator: "contains", value: filterValue },
    //            { field: "GAECNo", operator: "contains", value: filterValue },
    //            { field: "Designation", operator: "contains", value: filterValue }
    //        ]
    //    };
    //    $("#HiringManager").data("kendoDropDownList").dataSource.filter(newFilter);

    //}
    function onOrgChange(e)
    {
        var search = FilterHm();
        $("#HiringManager").data("kendoDropDownList").dataSource.read(search);
        var search1 = FilterHOD();
        $("#HeadOfDepartment").data("kendoDropDownList").dataSource.read(search1);
        var dataItem = e.sender.dataItem();
        if (dataItem.Id != null && dataItem.Id != "") {
            //var Name = $("#Name").val();
            //
              $.ajax({
                type: "GET",
                  url: '@Url.Action("GenerateBatchNo", "Batch", new { @area="Recruitment"})?JobId=@Model.JobId&OrgId=' + dataItem.Id,

                success: function (data) {

                    $("#Name").val(data.result);
                },
                error: function () { }
                //dataType: "json",
            });
        }
        else
        {
            //debugger
            var Name = $("#Name").val();
            var txt = Name.split("_");
            var NewName = '';
            for (var i = 1; i < txt.length; i++)
            {
                NewName = NewName+txt[i];
            }
            $("#Name").val(NewName);
        }
    }

    $(document).ready(function () {
        if ('@ViewBag.Success' == "True") {
            debugger;
           
         

            //window.parent.$("#Batchgrid").data("kendoGrid").dataSource.read();
            //var search2 = window.parent.Filterddl();
            //window.parent.$("#BatchId").data("kendoDropDownList").dataSource.read(search2)
          

            closeNavMemberGroup();
            if ('@Model.IsPending'=='True') {

                window.parent.$("#BatchgridClosed").data("kendoGrid").dataSource.read();
            }
            else {
                window.parent.$("#Batchgrid").data("kendoGrid").dataSource.read();
                var search2 = window.parent.Filterddl();
                window.parent.$("#BatchId").data("kendoDropDownList").dataSource.read(search2);

            }
            window.parent.refreshInbox();
           
        }

          if ('@ViewBag.Message' != "") {
              alert('@ViewBag.Message');
        }


        @*if ('@Model.OrganizationId'!= '')
        {
            $("#OrganizationId").data("kendoDropDownList").value('@Model.OrganizationId');
            $("#OrganizationId").data("kendoDropDownList").readonly();
        }*@
        if ('@Model.DataAction' == '@DataActionEnum.Edit')
        {
            $("#OrganizationId").data("kendoDropDownList").value('@Model.OrganizationId');
            $("#OrganizationId").data("kendoDropDownList").readonly();
        }

        if ('@Model.OrganizationId' != null && '@Model.JobId' != null && '@Model.DataAction' == '@DataActionEnum.Create') {
              $.ajax({
                type: "GET",
                  url: '@Url.Action("GenerateBatchNo", "Batch", new { @area="Recruitment"})?JobId=@Model.JobId&OrgId=' + '@Model.OrganizationId',

                success: function (data) {

                    $("#Name").val(data.result);
                },
                error: function () { }
                //dataType: "json",
            });
        }


    });
    function OnSave(evt) {

        if ($("#OrganizationId").val() == "") {
            //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Organization is required");
            evt.preventDefault();
            return false;

        }

        else if ($("#HiringManager").val() == "") {
            //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("HiringManager is required");
            evt.preventDefault();
            return false;

        }
        else if ($("#HeadOfDepartment").val() == "") {
            //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Head Of Department is required");
            evt.preventDefault();
            return false;

        }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
             }

        window.parent.$("#BatchId").data("kendoDropDownList").dataSource.read(search2)
       // window.parent.$("#Batchgrid").data("kendoGrid").dataSource.read()
    }



    function closeNavMemberGroup() {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
       // window.parent.CloseIframePopup();

    }
      var onAjaxSuccess = function (res) {

        if (res.success) {
            ShowNotification("Saved Successfully", "success");
            if ('@Model.IsPending' == 'True') {

            }
            else {
                var search2 = window.parent.Filterddl();
                window.parent.$("#BatchId").data("kendoDropDownList").dataSource.read(search2);
                window.parent.refreshInbox();
            }
          
        }
        else {
            showError(res.error);
        }
    };
    var showError = function (error) {
        //#validation-summary-manageform
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }
    function FilterHm()
    {
        return {
            orgId: $("#OrganizationId").data("kendoDropDownList").value()
        };
    }
    function FilterHOD() {
        return {
            orgId: $("#OrganizationId").data("kendoDropDownList").value()
        };
    }

</script>