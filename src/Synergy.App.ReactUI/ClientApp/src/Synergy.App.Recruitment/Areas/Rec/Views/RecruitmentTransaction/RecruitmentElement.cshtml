@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewBag.Title = "Requirement Dashboard";    
    Layout = "/Areas/Core/Views/Shared/_PopupLayout.cshtml";    
}
@model RecCandidateElementInfoViewModel

<script type="text/javascript">
    $(document).ready(function () {

        $("#JoiningDate").kendoDatePicker({
            value: new Date(),
            format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat"
        });

        $("#ContractStartDate").kendoDatePicker({
            value: new Date(),
            format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat"
        });

        $("#JoiningNotLaterThan").kendoDatePicker({
            value: new Date(),
            format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat"
        });

        $("#OfferDesigination").kendoDropDownList({
            dataTextField: "JobTitle",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            filter: "contains",
            value: "@Model.OfferDesigination",            
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Rec/RecruitmentTransaction/GetJobIdNameList",
                    }
                }
            }
        });

        $("#VisaCategory").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            filter: "contains",
            value: "@Model.VisaCategory",            
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/LOV/GetListOfValueList?type=LOV_VISA_CATEGORY",
                    }
                }
            }
        });

        $("#OfferGrade").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            filter: "contains",
            value: "@Model.OfferGrade",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Rec/RecruitmentTransaction/GetGradeIdNameList",
                    }
                }
            }
        });

        $("#AccommodationId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            filter: "contains",
            value: "@Model.AccommodationId",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Cms/LOV/GetListOfValueList?type=LOV_ACCOMMODATION",
                    }
                }
            }
        });

        var serCompData = [
            { text: "3", value: "3" },
            { text: "6", value: "6" },
            { text: "12", value: "12" }
        ];

        $("#ServiceCompletion").kendoDropDownList({
            dataTextField: "text",
            dataValueField: "value",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            filter: "contains",
            value: "@Model.ServiceCompletion",
            dataSource: serCompData,
        });

        $("#REGrid").jsGrid({
                    width: "100%",
                    inserting: false,
                    editing: true,
                    sorting: true,
                    paging: true,
                    autoload: true,
                    pageSize: 14,
                    pageButtonCount: 5,
                    controller: {
                        loadData: function (filter) {

                            return $.ajax({
                                type: "GET",
                                url: "/Rec/RecruitmentTransaction/ReadPayElementData?appid=" + '@Model.ReferenceId',
                                data: filter,
                                dataType: "json"
                            });
                        },
                        onItemEditing: function (e) {
                            debugger;
                            if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {
                                //
                                e.grid.updateItem();
                            }
                        },
                        updateItem: function (item) {
                            debugger;
                        },
                    },
                    fields: [
                        {
                            name: "ElementName",
                            type: "text",
                            editing: false
                        },
                        {
                            name: "Value",
                            type: "text",
                            editing: true
                        },
                        {
                            type: "control", deleteButton: false,
                        },
                        { name: "Id", type: "text", editing: false, visible: false },
                        { name: "ElementId", type: "text", editing: false, visible: false },
                        { name: "PayId", type: "text", editing: false, visible: false },
                        { name: "NoteId", type: "text", editing: false, visible: false },
                    ]
                });

    });

    function closeNav() {

        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function OnSave(e) {
        ShowLoader();
        if ($("#VisaCategory").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Visa Category is Required");
            e.preventDefault();
            return false;
        }
        else if ($("#ContractStartDate").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Contract Start Date is Required");
            e.preventDefault();
            return false;
        }
        else if ($("#OfferGrade").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Offer Grade is Required");
            e.preventDefault();
            return false;
        }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }

        $("#JoiningDate").val(kendo.toString($("#JoiningDate").data("kendoDatePicker").value(), 'yyyy-MM-dd'));
      
        var elelist = [];
        var eleGrid = $("#REGrid").data("JSGrid");

        if (eleGrid._editingRow != null) {
            eleGrid.updateItem();
        }

        for (var i = 0; i < eleGrid.data.length; i++) {
            elelist.push(eleGrid.data[i]);
        }

        $("#JsonPayElement").val(JSON.stringify(elelist));  
        $("#ContractStartDate").val(kendo.toString($("#ContractStartDate").data("kendoDatePicker").value(), 'yyyy-MM-dd'));
        $("#JoiningNotLaterThan").val(kendo.toString($("#JoiningNotLaterThan").data("kendoDatePicker").value(), 'yyyy-MM-dd'));

    }

    function OnCreate(e) {
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("RecruitmentPayElement", "RecruitmentDashboard", new { @area = "Recruitment" , applicatiodid=Model.ReferenceId })';
        win.OpenWindow({ Title: 'Recruitment Pay Elements', Width: 400, Height: 1000 });
        return false;
    }

    function OnEdit(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("EditRecruitmentPayElement", "RecruitmentDashboard", new { @area = "Recruitment" })?Id=' + dataItem.Id + '&applicatiodid=' + '@Model.ReferenceId';
        win.OpenWindow({ Title: 'Recruitment Pay Elements', Width: 1000, Height: 1000 });
        return false;
    }

    function OnDelete(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDelete(dataItem.Id);
        }, function () {

        });
    }

    function confirmDelete(id) {
        $.ajax({
            url:'@Url.Action("DeleteElement", "RecruitmentDashboard", new { @area= "Recruitment" })?Id=' + id,
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                ShowNotification("Deleted Successfully", "success");
                $("#grid").data("kendoGrid").dataSource.read();
            }
        });
    }

    function change() {
        var startDate = $("#ContractStartDate").val();
        var joindate = new Date(startDate);
        joindate.setDate(joindate.getDate() + 30);
        $("#JoiningNotLaterThan").data("kendoDatePicker").value(joindate);
    }

    function OnTraineeChange(e) {
        debugger;
        if (e.checked == true) {
            $("#ServiceCompletion").data("kendoDropDownList").value("12");
        } else
        {
            $("#ServiceCompletion").data("kendoDropDownList").value("6");
        }
    }

</script>

<style>
    .bold-text {
        font-weight: bold;
    }

    .left-column-property {
        border-style: solid;
        border-top-width: 1px;
        border-right-width: 1px;
        border-bottom-width: 0px;
        border-left-width: 1px;
    }

    .right-column-property {
        border-style: solid;
        border-top-width: 1px;
        border-right-width: 1px;
        border-bottom-width: 0px;
        border-left-width: 0px;
    }

    .middle-column-property-1 {
        border-width: 1px;
        border-style: solid;
    }

    .middle-column-property-2 {
        border-width: 1px;
        border-style: solid;
        border-top-width: 1px;
        border-right-width: 1px;
        border-bottom-width: 0px;
        border-left-width: 1px;
    }
</style>

<div class="row" style="margin-left:15px;">

    <form asp-controller="RecruitmentTransaction" asp-action="ManageApplicationElement" method="post" class="form-horizontal">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">

            @if (Model.ApplcationStateName == "FinalOfferSent")
            {
                <div class="row no-gutters pad-10" style="width:100%">
                    <div class="col pad-10">
                        <div class="form-label-group">
                            <span style="padding-right: 10px;">Reference Number :</span>
                            <span style="font-weight: 700;">@Html.DisplayFor(x => x.FinalOfferReference)</span>
                        </div>
                    </div>
                </div>
            }

            <div class="row no-gutters pad-10" style="width:100%">
                <div class="col pad-10">
                    <div class="form-label-group">
                        <span style="padding-right: 10px;">Name : </span>
                        <span style="font-weight: 700;">@Html.DisplayFor(x => x.ApplicantName)</span>
                    </div>
                </div>
            </div>

            <div class="row no-gutters pad-10" style="width:100%">
                <div class="col-4 pad-10">
                    <div class="form-label-group">
                        <span style="padding-right: 10px;">Offer Desigination : </span>
                        <input type="text" asp-for="OfferDesigination" id="OfferDesigination" class="form-control" style="width:70%" />

                        @*@(Html.Kendo().DropDownListFor(model => model.OfferDesigination)
                       .DataSource(source =>
                       {
                           source.Read(read =>
                           {
                               read.Action("GetIdNameList", "Master",new { @type= "Job" });
                           });
                       })
                       .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                       .DataTextField("Name")
                       .DataValueField("Id")
                       .Filter(FilterType.Contains)
                       .HtmlAttributes(new { @class = "hr-xx-large", style = "width:80%" })
                    )*@
                    </div>
                </div>
            </div>


            <div class="row no-gutters pad-10">
                <div class="col-4 pad-20">
                    <div class="form-label-group">
                        <div>
                            <label for="GaecNo">GAEC No</label>
                        </div>
                        <input type="text" asp-for="GaecNo" class="form-control" placeholder="Gaec No" autocomplete="off" style="width:80%;"/>
                        @*@Html.Kendo().TextBoxFor(x => x.GaecNo).HtmlAttributes(new { @type = "number", oninput = "this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" })*@
                    </div>
                </div>

                <div class="col-4 pad-20">
                    @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                    <div class="form-label-group">
                        <div>
                            <label for="AnnualLeave">Annual Leave</label>
                        </div>
                        <input type="number" asp-for="AnnualLeave" class="form-control" placeholder="Annual Leave" autocomplete="off" style="width:80%;"/>
                        @*@Html.Kendo().NumericTextBoxFor(x => x.AnnualLeave)*@
                    </div>
                </div>

                <div class="col-4 pad-20">
                    <div class="form-label-group" style="padding-right:45px">
                        <div>
                            <label for="VisaCategory">Visa Category<span class="required">*</span></label>
                        </div>
                        <input type="text" asp-for="VisaCategory" id="VisaCategory" class="form-control" />

                        @*@(Html.Kendo().DropDownListFor(x => x.VisaCategory)
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetListOfValueList", "ListOfValue", new { type = "LOV_VISACATEGORY" });
                            });
                        })
                        .Filter(FilterType.Contains)
                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                        // .HtmlAttributes(new { @class= "form-control-plaintext ip_text"})
                    )*@

                    </div>
                </div>
            </div>

            <div class="row no-gutters pad-10">
                <div class="col-4 pad-20">
                    <div class="form-label-group" style="padding-right:45px">
                        <div>
                            <label for="OfferGrade">Offer Grade<span class="required">*</span></label>
                        </div>
                        <input type="text" asp-for="OfferGrade" id="OfferGrade" class="form-control" />

                        @*@(Html.Kendo().DropDownListFor(x => x.OfferGrade)
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .Filter(FilterType.Contains)
                        .DataSource(source =>
                            {
                            source.Read(read =>
                            {
                                read.Action("GetGradeIdNameList", "RecruitmentDashboard");
                            });
                        })
                    .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                    )*@
                    </div>
                </div>

                <div class="col-4 pad-20">
                    <div class="form-label-group" style="padding-right:45px">
                        <div>
                            <label for="AccommodationId">Accommodation</label>
                        </div>
                        <input type="text" asp-for="AccommodationId" id="AccommodationId" class="form-control" />

                        @*@(Html.Kendo().DropDownListFor(x => x.AccommodationId)
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetListOfValueList", "ListOfValue", new { @area = "Recruitment", @type = "LOV_ACCOMMODATION" });
                            });
                        })
                        .HtmlAttributes(new { @class = "norm-input" })
                    )*@
                    </div>
                </div>

                <div class="col-4 pad-20">
                    @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                    <div class="form-label-group" @*style="padding-right:45px"*@>
                        <div>
                            <label for="JoiningDate">Joining Date</label>
                        </div>
                        <input type="text" asp-for="JoiningDate" id="JoiningDate" class="form-control" />
                        @*@Html.Kendo().DatePickerFor(x => x.JoiningDate).HtmlAttributes(new { onkeydown = "javascript:return false;" }).Min(DateTime.Today)*@

                    </div>
                </div>


            </div>
            @if (Model.ApplcationStateName != "FinalOfferSent")
            {
                <div class="row no-gutters pad-10">

                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="SalaryOnAppointment">Salary On Appointment</label>
                            </div>
                            <input type="number" asp-for="SalaryOnAppointment" class="form-control" placeholder="Salary On Appointment" autocomplete="off" />
                            @*@Html.Kendo().NumericTextBoxFor(x => x.SalaryOnAppointment)*@
                        </div>
                    </div>

                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:105px">
                            <div>
                                <label for="SalaryRevision">Salary Revision</label>
                            </div>
                            <input type="checkbox" style="margin-top: 5px;" asp-for="SalaryRevision" />
                            @*@Html.Kendo().CheckBoxFor(x => x.SalaryRevision)*@
                        </div>

                    </div>
                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="SalaryRevisionAmount">Salary Revision Amount</label>
                            </div>
                            <input type="number" asp-for="SalaryRevisionAmount" class="form-control" placeholder="Salary Revision Amount" autocomplete="off"/>
                            @*@Html.Kendo().NumericTextBoxFor(x => x.SalaryRevisionAmount)*@
                        </div>

                    </div>
                </div>

            }

            @if (Model.ApplcationStateName == "FinalOfferSent")
            {
                <div class="row no-gutters pad-10">
                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="ServiceCompletion">Service Completion(Month)</label>
                            </div>
                            <input type="text" asp-for="ServiceCompletion" id="ServiceCompletion" class="form-control" />

                            @*@Html.Kendo().DropDownListFor(x => x.ServiceCompletion).BindTo(new List<SelectListItem>() {
                            new SelectListItem() {
                            Text = "3",
                            Value = "3"
                            },
                            new SelectListItem() {
                            Text = "6",
                            Value = "6"
                            },
                            new SelectListItem() {
                            Text = "12",
                            Value = "12"
                            }
                        })*@
                        </div>
                    </div>

                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="TravelOriginAndDestination">Travel Origin And Destination</label>
                            </div>
                            <input type="text" asp-for="TravelOriginAndDestination" class="form-control" placeholder="Travel Origin And Destination" autocomplete="off" />
                            @*@Html.Kendo().TextBoxFor(x => x.TravelOriginAndDestination)*@
                        </div>

                    </div>

                    <div class="col-4 pad-20">
                        @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                        <div class="form-label-group">
                            <div>
                                <label for="VehicleTransport">VehicleTransport</label>
                            </div>
                            <input type="text" asp-for="VehicleTransport" class="form-control" placeholder="Vehicle Transport" autocomplete="off" />
                            @*@Html.Kendo().TextBoxFor(x => x.VehicleTransport)*@
                        </div>
                    </div>
                </div>

                <div class="row no-gutters pad-10">
                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="ContractStartDate">Contract Made<span class="required">*</span></label>
                            </div>
                            <div>
                                <input type="text" asp-for="ContractStartDate" id="ContractStartDate" class="form-control" />
                                @*@Html.Kendo().DatePickerFor(x => x.ContractStartDate).Events(e => { e.Change("change"); }).HtmlAttributes(new { onkeydown = "javascript:return false;" }).Format("dd MMM yyyy")*@
                            </div>
                        </div>
                    </div>

                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="JoiningNotLaterThan">Joining Not Later Than</label>
                            </div>
                            <div>
                                <input type="text" asp-for="JoiningNotLaterThan" id="JoiningNotLaterThan" class="form-control" />
                                @*@Html.Kendo().DatePickerFor(x => x.JoiningNotLaterThan).HtmlAttributes(new { @readonly = "readonly" }).Format("dd MMM yyyy")*@
                            </div>
                        </div>
                    </div>

                    <div class="col-4 pad-20">
                        <div class="form-label-group">
                            <div>
                                <label for="SalaryRevision">Salary On Appointment</label>
                            </div>
                            <input type="number" asp-for="SalaryOnAppointment" class="form-control" placeholder="Salary On Appointment" autocomplete="off" />
                            @*@Html.Kendo().NumericTextBoxFor(x => x.SalaryOnAppointment)*@
                        </div>
                    </div>

                </div>

                <div class="row no-gutters pad-10">

                    <div class="col-4 pad-20">
                        <div class="form-label-group">
                            <div>
                                <label for="SalaryRevision">Salary Revision Amount</label>
                            </div>
                            <input type="number" asp-for="SalaryRevisionAmount" class="form-control" placeholder="Salary Revision Amount" autocomplete="off" />
                            @*@Html.Kendo().NumericTextBoxFor(x => x.SalaryRevisionAmount)*@
                        </div>
                    </div>

                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-left:70px">
                            <div>
                                <label for="SalaryRevision">Salary Revision</label>
                            </div>
                            <input type="checkbox" style="margin-top: 5px;" asp-for="SalaryRevision" /><label> Salary Revision</label>
                            @*@Html.Kendo().CheckBoxFor(x => x.SalaryRevision)*@
                        </div>
                    </div>

                    <div class="col-4 pad-20">

                        <div class="form-label-group" style="padding-left:100px">
                            <div style="width:70px">
                                <label>Is Trainee</label>
                            </div>
                            <input type="checkbox" style="margin-top: 5px;" asp-for="IsTrainee" onclick="OnTraineeChange(this);" /><label> Is Trainee</label>
                            @*@Html.Kendo().CheckBoxFor(x => x.IsTrainee).HtmlAttributes(new { onclick = "OnTraineeChange();" })*@
                        </div>
                    </div>

                    <div class="col-4 pad-20" style="display:none;">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="IsLocalCandidate">Is Local Candidate</label>
                            </div>
                            <input type="checkbox" style="margin-top: 5px;" asp-for="IsLocalCandidate" /><label> Is Local Candidate</label>
                            @*@Html.Kendo().CheckBoxFor(x => x.IsLocalCandidate)*@
                        </div>
                    </div>

                </div>

            }

            <div id="REGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

            @*@(Html.Kendo().Grid<RecruitmentCandidateElementInfoViewModel>()
                .Name("grid").Height(850)
                //.ToolBar(toolbar =>
                // toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreate();'><i class='fa fas fa-plus'></i>&nbsp;Add</button>"))

                .Columns(columns =>
                {
                //columns.Command(command =>
                //{
                //    command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEdit").HtmlAttributes(new { @class = "action-icon" });
                //    command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDelete").HtmlAttributes(new { @class = "action-icon" });
                //}).Title("Action").Width(100);
                // columns.Command(command => { command.Edit().Text(" ").UpdateText(" ").CancelText(" ");}).Width(120);

                columns.Bound(c => c.ElementName);
                columns.Bound(c => c.Id).Hidden(true);
                columns.Bound(c => c.ElementId).Hidden(true);
                columns.Bound(c => c.PayId).Hidden(true);
                columns.Bound(c => c.Value);
                //columns.Bound(c => c.Comment); uncomment while runnning
                //columns.Bound(c => c.TargetBatchCount).Width(120);
                //columns.Bound(c => c.Id).Title("Send Batch").Width(120).ClientTemplate("#if(BatchStatusName=='Draft'){#<button class='btn btn-info' onclick='UpdateBatch(\"#:Id#\")'>Send To Hiring Manager</button>#}#").Width(280);
                })
                .Editable(editable => editable.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(true))
                .Scrollable(x => x.Enabled(true))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                //.Pageable(pageable => pageable
                //.Refresh(true)

                //.PageSizes(true)
                //.ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                   // .PageSize(10)
                   //.Events(events => events.Error("OnError"))
                   .Read(read => read.Action("ReadPayElementData", "RecruitmentDashboard", new { appid = Model.ApplicationId }))
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.ElementName).Editable(false);
                }
                )
                )
               )*@
           
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ElementId)
            @Html.HiddenFor(x => x.JsonPayElement)
            @Html.HiddenFor(x => x.ApplcationStateName)
            @Html.HiddenFor(x => x.TaskStatus)
            @Html.HiddenFor(x => x.ReferenceId)
        </div>

        @if (Model.IsHr && (Model.TaskStatus == "TASK_STATUS_INPROGRESS" || Model.TaskStatus == "TASK_STATUS_OVERDUE"))
        {
            <div>
                <div class="col-sm-12" style="text-align:right;">
                    @*<button type="button" class="btn btn-light" onclick="closeNav();">Close</button>*@
                    <button type="submit" class="btn btn-success" onclick="OnSave(event)">Save</button>
                </div>
            </div>
        }
    </form>

</div>
