@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;

@model ManpowerSummaryCommentViewModel

@{
    ViewData["Title"] = "ManpowerSummaryComment";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}



<div>


    <div class="row" style="margin-left:15px;margin-top:15px">
        <div class="col-12">


            @(Html.Kendo().Grid<ManpowerSummaryCommentViewModel>
    ()
    .Name("Commentgrid")
    

    .Columns(columns =>

    {
       @* columns.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditComment").HtmlAttributes(new { @class = "action-icon" });
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteComment").HtmlAttributes(new { @class = "action-icon" });
        }).Title("Action").Width(100);*@


        columns.Bound(c => c.Comment).Width(280);
        columns.Bound(c => c.JobTitle).Title("Job Title").Width(150);
        columns.Bound(c => c.OrganizationName).Title("Organization Unit").Width(180);
        columns.Bound(c => c.Requirement).Width(150);
        columns.Bound(c => c.Available).Width(150);
        columns.Bound(c => c.Planning).Width(150).Title("Sub Contract");
        columns.Bound(c => c.Transfer).Width(150);
        columns.Bound(c => c.Balance).Width(150);
        columns.Bound(c => c.VersionNo).Width(150);
        columns.Bound(c => c.CreatedByName).Width(150).Title("Created By");
        columns.Bound(c => c.CreatedDate).Format("{0:dd MMM yyyy}").Width(150);


    })
    .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                .Pageable(pageable => pageable
                .Refresh(true)

                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                .PageSize(10)
                //.Events(events => events.Error("OnError"))
                .Read(read => read.Action("ReadData", "ManpowerRequirementSummary",new {id=Model.ManpowerRecruitmentSummaryId, userRoleCode=Model.UserRoleCode }))
                .Model(model => model.Id(p => p.Id))
                )
          )

        </div>
    </div>
</div>
<script>
    

</script>