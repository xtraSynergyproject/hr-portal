@using CMS.Data.Model
@using CMS.UI.ViewModel
@using Kendo.Mvc.UI
@using Kendo.Mvc.Extensions
@using CMS.Common
@model WorkerCandidateViewModel
@{
    ViewBag.Title = "Worker Entries";
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}

<style>
    .k-grid thead {
        background-color: #1c4893 !important;
    }
    .a-text {
        color: blue !important;
        text-decoration: underline !important;
        cursor: pointer !important;
    }

    .accordion {
        background-color: #17a2b8;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 17px;
        transition: 0.4s;
        font-weight: bold;
    }

        .active, .accordion:hover {
            background-color: #17a2b8;
        }

        .accordion:after {
            content: '\02EF';
            color: white;
            font-weight: bold;
            float: right;
            margin-left: 5px;
            font-size: 74px;
            margin-top: -78px;
        }

    .active:after {
        content: "\02F0";
        color: white;
        font-weight: bold;
        float: right;
        margin-left: 5px;
        font-size: 74px;
        margin-top: -78px;
    }

    .panel {
        padding: 0 18px;
        background-color: white;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
    }

    body > .k-animation-container > .k-popup > .k-list {
        height: 150px;
        overflow: auto;
    }
</style>

<script>

    function ShowLoader(target) {
        kendo.ui.progress(target, true);
    }
    function HideLoader(target) {
        kendo.ui.progress(target, false);
    }

    $(document).ready(function () {
        var acc = document.getElementsByClassName("accordion");
        var i;

        for (i = 0; i < acc.length; i++) {
            acc[i].addEventListener("click", function () {
                this.classList.toggle("active");
                var panel = this.nextElementSibling;
                if (panel.style.maxHeight) {
                    panel.style.maxHeight = null;
                } else {
                    panel.style.maxHeight = panel.scrollHeight + 50 + "px";
                }
            });
        }
        //$.ajax({
        //    type: "GET",
        //    url: "/cms/userpagepreference/IsUserDisabledTour?pageName=WorkerDataByAgency",
        //    dataType: "json",
        //    success: function (result) {
        //        if (!result) {
        //            
        //            var a  = document.getElementById("expandgrid").classList.toggle("active");
        //            var panel = document.getElementById("expandgrid").nextElementSibling;
        //                if (panel.style.maxHeight) {
        //                    panel.style.maxHeight = null;
        //                } else {
        //                    panel.style.maxHeight = panel.scrollHeight + 50 + "px";
        //                }
        //            openTour();
        //        }
        //        isTourDisable = result;
        //    },
        //    error: function (xhr, httpStatusMessage, customErrorMessage) {
        //        alert(customErrorMessage);
        //    }
        //});

    });

    //var isTourDisable = false;
    //function openTour() {
    //    introJs().setOptions({
    //        showBullets: false,

    //        steps: [{
    //            title: "Welcome to worker details by agency",
    //            intro: "This will have details of the candidate added by agency"
    //        },
    //        {
    //            title: "Applied Worker Details",
    //            element: "#expandgrid",
    //            intro: "On expand of this button, you can see all the candidate data added by agency"
    //        },{
    //            title: "Worker Details Grid",
    //            element: "#panelgrid",
    //            intro: "On this grid, you can see all the worker data added by agency"
    //        }, {
    //            title: "Add Candidate Details",
    //            element: "#spreadsheet",
    //            intro: "In this spreadsheet, agency can add the worker candidate details"
    //        }, {
    //            title: "Save Changes Button",
    //            element: "#save",
    //            intro: "By clicking on this button agency can save the single or multiple candidate records"
    //        }, {
    //            title: "Cancel Changes Button",
    //            element: "#cancel",
    //            intro: "By clicking on this button agency can cancel the single or multiple candidate records"
    //        },
    //        ]
    //    }).onbeforeexit(function () {
    //        if (!isTourDisable) {

    //            kendo.confirm("Do you want to see this tour again, whenever you come to this page?").then(function () {
    //                //alert("yes");
    //                $.ajax({
    //                    type: "POST",
    //                    url: "/cms/userpagepreference/AddPageTourPreferences?pageName=WorkerDataByAgency&disablePageTour=true",
    //                    dataType: "json",
    //                    success: function (result) {
    //                        kendo.alert("Preference Saved Successfully");
    //                    },
    //                    error: function (xhr, httpStatusMessage, customErrorMessage) {
    //                        alert(customErrorMessage);
    //                    }
    //                });
    //                document.getElementById("expandgrid").click();
    //            }, function () {
    //                //alert("no");
    //                    document.getElementById("expandgrid").click();
    //            });
    //        }
    //    }).start();
    //}

    function CloseSchedule(success, res) {

    }

    var cursorPositionLeft = 0;
    var cursorPositionTop = 0;

    function onSelectCell(arg) {
        
      


        arg.preventDefault();
        if (arg.range.value() != null && arg.range.value() != '') {
            var cellval = arg.range.value() + "";
            if (cellval.indexOf('Update Skill') !== -1) {
                var row = arg.range._ref.row + 1;
                var col = arg.range._ref.col;

                var selectedJobData = $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("H" + row).values();
                
                if (selectedJobData[0][0] != null) {
                    var selectedJobId = selectedJobData[0][0].split("_")[1];
                    //var id = arg.range.value().split('-');
                    window.iframeOpenUrl = "/recruitment/uploadCandidate/AddSkills?jobId=" + selectedJobId;
                    ////window.iframeOpenUrl = "/assessment/assessment/ManageUser?userId=" + id[1];
                    window.OpenIframePopup(1400, 700, "Add Skills and Criteria");
                } else {
                    kendo.alert("Select Position First");
                }
            }

        }
    }

  

    function CloseSkillPopup(res) {
        CloseIframePopup();
        var selectedRow = $("#spreadsheet").data("kendoSpreadsheet").activeSheet().selection()._ref.topLeft.row + 1;
        $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("Q" + selectedRow).value(res);
       
    }
   
    function onSubmitWorker(e) {
        var isOkWorker = true;
        debugger;
        for (var u = 0; u <= e.data.updated.length - 1; u++) {

            if (e.data.updated[u].Age == "" &&
                e.data.updated[u].DOB == null &&
                e.data.updated[u].DocumentLink == "" &&
                e.data.updated[u].Position == null &&
                e.data.updated[u].Mobile == "" &&
                e.data.updated[u].CandidateName == "" &&
                e.data.updated[u].PassportCountry == null &&
                e.data.updated[u].PassportExpiry == null &&
                e.data.updated[u].PassportNumber == "" &&
                e.data.updated[u].PassportStatus == "" &&
                e.data.updated[u].Remarks == "" &&
                e.data.updated[u].Salary_QAR == "" &&
                e.data.updated[u].TotalWorkExperience == "" &&
                e.data.updated[u].WorkExperienceAbroad == "" &&
                e.data.updated[u].WorkExperienceIndia == "" &&
                e.data.updated[u].Nationality == null
                /*&& e.data.updated[u].VisaType == null*/) {
            } else {
                if (e.data.updated[u].DOB && !e.data.updated[u].DOB.includes(":") && !e.data.updated[u].DOB.includes("NaN")) {
                    e.data.updated[u].DOB = ConvertToDate(ExcelDateToJSDate(e.data.updated[u].DOB))
                }

                if (e.data.updated[u].PassportExpiry && !e.data.updated[u].PassportExpiry.includes(":") && !e.data.updated[u].PassportExpiry.includes("NaN")) {
                    e.data.updated[u].PassportExpiry = ConvertToDate(ExcelDateToJSDate(e.data.updated[u].PassportExpiry))
                }
                if (e.data.updated[u].CandidateName == "") {
                    kendo.alert("Candidate Name is mandatory");
                    isOkWorker = false;
                    break;
                }
                if (e.data.updated[u].Position == null) {
                    kendo.alert("Select Position");
                    isOkWorker = false;
                    break;
                }

                if (e.data.updated[u].PassportNumber == "") {
                    kendo.alert("Passport Number is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.updated[u].PassportStatus == "") {
                    kendo.alert("Passport Status is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.updated[u].DOB == "") {
                    kendo.alert("DOB is mandatory");
                    isOkWorker = false;
                    break;
                }
                e.data.updated[u].Age = getAge(e.data.updated[u].DOB);
                if (e.data.updated[u].Age <  22) {
                    kendo.alert("Age should not be less than 22");
                    isOkWorker = false;
                    break;
                }
                if (e.data.updated[u].Mobile == "") {
                    kendo.alert("Mobile is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.updated[u].DocumentLink == "") {
                    kendo.alert("Document Link is mandatory");
                    isOkWorker = false;
                    break;
                }

                e.data.updated[u].TotalWorkExperience = 0;

                if (e.data.updated[u].WorkExperienceAbroad == "") {
                    e.data.updated[u].WorkExperienceAbroad == 0;
                    e.data.updated[u].TotalWorkExperience == 0;
                }
                if (e.data.updated[u].WorkExperienceIndia == "") {
                    e.data.updated[u].WorkExperienceIndia == 0;
                    e.data.updated[u].TotalWorkExperience == 0;
                }

                if (e.data.updated[u].WorkExperienceAbroad > 0) {
                    e.data.updated[u].TotalWorkExperience += parseInt(e.data.updated[u].WorkExperienceAbroad);
                } else {
                    kendo.alert("Work Experience Abroad is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.updated[u].WorkExperienceIndia > 0) {
                    e.data.updated[u].TotalWorkExperience += parseInt(e.data.updated[u].WorkExperienceIndia);
                } else {
                    kendo.alert("Work Experience India is mandatory");
                    isOkWorker = false;
                    break;
                }
                if (e.data.updated[u].Nationality == null) {
                    kendo.alert("Nationality is mandatory");
                    isOkWorker = false;
                    break;
                }
                //if (e.data.updated[u].VisaType == null || e.data.updated[u].VisaType == "") {
                //    kendo.alert("Visa Type is mandatory");
                //    isOkWorker = false;
                //    break;
                //}
            }
        }

        for (var u = 0; u <= e.data.created.length - 1; u++) {
            if (e.data.created[u].Age == "" &&
                e.data.created[u].DOB == null &&
                e.data.created[u].DocumentLink == "" &&
                e.data.created[u].Position == null &&
                e.data.created[u].Mobile == null &&
                e.data.created[u].CandidateName == "" &&
                e.data.created[u].PassportCountry == null &&
                e.data.created[u].PassportExpiry == null &&
                e.data.created[u].PassportNumber == "" &&
                e.data.created[u].PassportStatus == "" &&
                e.data.created[u].Remarks == "" &&
                e.data.created[u].Salary_QAR == "" &&
                e.data.created[u].TotalWorkExperience == null &&
                e.data.created[u].WorkExperienceAbroad == null &&
                e.data.created[u].WorkExperienceIndia == null &&
                e.data.created[u].DocumentLink == "" &&
                e.data.created[u].Nationality == null
                /*&& e.data.created[u].VisaType == null*/) {

            }
            else {
                if (e.data.created[u].DOB && !e.data.created[u].DOB.includes(":") && !e.data.created[u].DOB.includes("NaN")) {
                    e.data.created[u].DOB = ConvertToDate(ExcelDateToJSDate(e.data.created[u].DOB))
                }

                if (e.data.created[u].PassportExpiry && !e.data.created[u].PassportExpiry.includes(":") && !e.data.created[u].PassportExpiry.includes("NaN")) {
                    e.data.created[u].PassportExpiry = ConvertToDate(ExcelDateToJSDate(e.data.created[u].PassportExpiry))
                }

                if (e.data.created[u].WorkExperienceAbroad == "") {
                    e.data.created[u].WorkExperienceAbroad == 0;
                }
                if (e.data.created[u].WorkExperienceIndia == "") {
                    e.data.created[u].WorkExperienceIndia == 0;
                }



               
                if (e.data.created[u].CandidateName == "") {
                    kendo.alert("Candidate Name is mandatory");
                    isOkWorker = false;
                    break;
                }
                if (e.data.created[u].PassportNumber == "") {
                    kendo.alert("Passport Number is mandatory");
                    isOkWorker = false;
                    break;
                }
                
                

                if (e.data.created[u].PassportStatus == "" || e.data.created[u].PassportStatus == null) {
                    kendo.alert("Passport Status is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.created[u].PassportCountry == null) {
                    kendo.alert("Passport Country is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.created[u].PassportExpiry == null) {
                    kendo.alert("Passport Expiry is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.created[u].DOB == "" || e.data.created[u].DOB == null) {
                    kendo.alert("DOB is mandatory");
                    isOkWorker = false;
                    break;
                }

                e.data.created[u].Age = getAge(e.data.created[u].DOB);
                if (e.data.created[u].Age < 22) {
                    kendo.alert("Age should not be less than 22");
                    isOkWorker = false;
                    break;
                }

             
                if (e.data.created[u].Position == null) {
                    kendo.alert("Select Position");
                    isOkWorker = false;
                    break;
                }

                e.data.created[u].TotalWorkExperience = 0;

                if (e.data.created[u].WorkExperienceAbroad != "" && e.data.created[u].WorkExperienceAbroad != null) {                   
                    e.data.created[u].TotalWorkExperience += parseInt(e.data.created[u].WorkExperienceAbroad);
                } else {
                    kendo.alert("Work Experience Abroad is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.created[u].WorkExperienceIndia != "" && e.data.created[u].WorkExperienceIndia != null) {
                    e.data.created[u].TotalWorkExperience += parseInt(e.data.created[u].WorkExperienceIndia);
                }
                else {
                    kendo.alert("Work Experience India is mandatory");
                    isOkWorker = false;
                    break;
                }

                if (e.data.created[u].Mobile == "" || e.data.created[u].Mobile == null) {
                    kendo.alert("Mobile is mandatory");
                    isOkWorker = false;
                    break;
                }


                if (e.data.created[u].DocumentLink == "" || e.data.created[u].DocumentLink == null) {
                    kendo.alert("Document Link is mandatory");
                    isOkWorker = false;
                    break;
                }
                if (e.data.created[u].Nationality == null) {
                    kendo.alert("Nationality is mandatory");
                    isOkWorker = false;
                    break;
                }
                //if (e.data.created[u].VisaType == null || e.data.created[u].VisaType == "") {
                //    kendo.alert("Visa Type is mandatory");
                //    isOkWorker = false;
                //    break;
                //}
            }
        }
        if (isOkWorker) {
            debugger;
            ShowLoader($('#worker-section'));
            $('#save').prop('disabled', true);
            $.ajax({
                type: "POST",
                url: "/recruitment/uploadCandidate/ManageWorkerDetails",
                data: e.data,
                dataType: "json",
                success: function (result) {
                    HideLoader($('#worker-section'));
                    if (result.success) {
                        $('#save').prop('disabled', false);
                        kendo.alert("Date Saved Successfully");
                        var spreadsheet = $("#spreadsheet").data("kendoSpreadsheet");
                        var sheet = spreadsheet.activeSheet();
                        sheet.dataSource.read();
                        $("#workerGrid").data("kendoGrid").dataSource.read();
                    }
                     else {
                    $('#save').prop('disabled', false);
                    kendo.alert(result.error);
                    }
                },
                error: function (xhr, httpStatusMessage, customErrorMessage) {
                    alert(customErrorMessage);
                }
            });
        }
    }

    function getAge(dateString) {
        if (dateString != null) {
            var today = new Date();
            var birthDate = new Date(dateString);
            var age = today.getFullYear() - birthDate.getFullYear();
            var m = today.getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            return age;
        } else {
            return 0;
        }
    }

    function refreshExcel() {
        getDataSource().sync();
    }



    function hideLoader() {
        document.getElementById('speach-load').style.display = "none";
    }

    function showLoader() {

    }


    function ConvertToDate(date) {
        var date = date;///new Date();
        var day = date.getDate();       // yields date
        var month = date.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
        var year = date.getFullYear();  // yields year
        var hour = date.getHours();     // yields hours
        var minute = date.getMinutes(); // yields minutes
        var second = date.getSeconds(); // yields seconds
        return year + "/" + month + "/" + day + " " + hour + ':' + minute + ':' + second;
    }

    function ExcelDateToJSDate(serial) {
        var utc_days = Math.floor(serial - 25569);
        var utc_value = utc_days * 86400;
        var date_info = new Date(utc_value * 1000);

        var fractional_day = serial - Math.floor(serial) + 0.0000001;

        var total_seconds = Math.floor(86400 * fractional_day);

        var seconds = total_seconds % 60;

        total_seconds -= seconds;

        var hours = Math.floor(total_seconds / (60 * 60));
        var minutes = Math.floor(total_seconds / 60) % 60;

        return new Date(date_info.getFullYear(), date_info.getMonth(), date_info.getDate(), hours, minutes, seconds);
    }

    function onReadWorker(options) {
        //ShowLoader($('#worker-section'));
        var jobAdvertisement = "H2:H";
        var dob = "F2:F";
        var expiry = "E2:E";
        var passportStatus = "C2:C";
        var country = "D2:D";
        var nationality = "R2:R";
        /*var visaty = "S2:S";*/
        

        var dateVal = {
            dataType: "date",
            showButton: true,
            comparerType: "between",
            from: 'DATEVALUE("1900-01-01")',
            to: 'DATEVALUE("2100-01-01")',
            allowNulls: true,
            type: "reject",
            titleTemplate: "Selected Date validation error",
            messageTemplate: "Selected Date should be between year 1900 and 2100."
        };



        $.ajax({
                url: '@Url.Action("ReadWorkerDetails", "UploadCandidate")',
                dataType: "json",
                success: function (result) {
                   options.success(result.Data);
                    
                    var index =  50;

                    // get Job Advertisement
                    $.ajax({
                        url: "/recruitment/uploadCandidate/GetJobAdvertismentForWorker?jobAdvId=@ViewBag.JobAdvId",
                        success: function (res) {
                            var joAdd = {
                                dataType: "list",
                                showButton: true,
                                comparerType: "list",
                                from: '"' + res + '"',
                                allowNulls: true,
                                type: "reject"
                            }

                            $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(jobAdvertisement + index).validation(joAdd);
                        },
                        error: function (xhr, httpStatusMessage, customErrorMessage) {
                            alert(customErrorMessage);
                        }
                    });

                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("P2:P" + index).value("Update Skills");



                    var mobile = {
                        dataType: "custom",
                        from: "AND(ISNUMBER(L2))",
                        allowNulls: false,
                        type: "reject",
                        titleTemplate: "Mobile validation error",
                        messageTemplate: "The value entered is not an valid phone number. Please enter numeric value."
                    }
                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("L2:L" + index).validation(mobile);

                     var texp = {
                        dataType: "custom",
                        from: "AND(ISNUMBER(I2))",
                        allowNulls: false,
                        type: "reject",
                        titleTemplate: "Expereince validation error",
                        messageTemplate: "The value entered is not an valid experience. Please enter numeric value."
                    }


                    var aexp = {
                        dataType: "custom",
                        from: "AND(ISNUMBER(J2))",
                        allowNulls: false,
                        type: "reject",
                        titleTemplate: "Expereince validation error",
                        messageTemplate: "The value entered is not an valid experience. Please enter numeric value."
                    }

                    var iexp = {
                        dataType: "custom",
                        from: "AND(ISNUMBER(K2))",
                        allowNulls: false,
                        type: "reject",
                        titleTemplate: "Expereince validation error",
                        messageTemplate: "The value entered is not an valid experience. Please enter numeric value."
                    }
                    //Experience
                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("I2:I" + index).validation(texp);
                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("J2:J" + index).validation(aexp);
                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("K2:K" + index).validation(iexp);



                    $.ajax({
                        url: "/recruitment/uploadCandidate/GetCountry",
                        success: function (res) {
                            var joAdd = {
                                dataType: "list",
                                showButton: true,
                                comparerType: "list",
                                from: '"' + res + '"',
                                allowNulls: true,
                                type: "reject"
                            }

                            $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(country + index).validation(joAdd);
                        },
                        error: function (xhr, httpStatusMessage, customErrorMessage) {
                            alert(customErrorMessage);
                        }
                    });

                    // get Nationality
                    $.ajax({
                        url: "/recruitment/uploadCandidate/GetNationality",
                        success: function (res) {
                            var nation = {
                                dataType: "list",
                                showButton: true,
                                comparerType: "list",
                                from: '"' + res + '"',
                                allowNulls: true,
                                type: "reject"
                            }

                            $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(nationality + index).validation(nation);
                        },
                        error: function (xhr, httpStatusMessage, customErrorMessage) {
                            alert(customErrorMessage);
                        }
                    });

                    // get VisaType
                    //$.ajax({
                    //    url: "/recruitment/uploadCandidate/GetVisaType",
                    //    success: function (res) {
                    //        var visa = {
                    //            dataType: "list",
                    //            showButton: true,
                    //            comparerType: "list",
                    //            from: '"' + res + '"',
                    //            allowNulls: true,
                    //            type: "reject"
                    //        }

                    //        $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(visaty + index).validation(visa);
                    //    },
                    //    error: function (xhr, httpStatusMessage, customErrorMessage) {
                    //        alert(customErrorMessage);
                    //    }
                    //});

                    uploadFile(index);


                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(dob + index).validation(dateVal).format("d-m-yyyy");
                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(expiry + index).validation(dateVal).format("d-m-yyyy");
                    //disable Json Data
                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("Q2:Q" + index).enable(false);
                 

                }
            });
    }

    function uploadFile(index) {

        var resume = "O2:O";

        kendo.spreadsheet.registerEditor("resume", function () {
            var context, dlg, model;
            return {
                edit: function (options) {
                    context = options;
                    open();
                },
                icon: "k-icon k-i-upload"
            };
            function create() {
                if (!dlg) {
                    model = kendo.observable({

                          ok: function () {
                            var files = document.getElementById('uploadResumeWorker').files[0];
                            if (files != undefined) {
                                uploadDocWorker(files, 'uploadResumeWorker');
                                if (ifFilesizeExceed == false) {
                                    context.callback(model.value.split("C:\"fakepath\"")[1]);
                                    dlg.close();
                                    dlg = null;
                                    $("#doclinkResumeWorker").remove();
                                    $("#uploadResumeWorker").remove();
                                }
                            } else {
                                dlg.close();
                                dlg = null;
                                $("#doclinkResumeWorker").remove();
                                $("#uploadResumeWorker").remove();

                            }
                        },
                        cancel: function () {
                            dlg.close();
                            dlg = null;
                            $("#doclinkResumeWorker").remove();
                            $("#uploadResumeWorker").remove();
                        }
                    });
                    var selectedrow = $("#spreadsheet").data("kendoSpreadsheet").activeSheet().selection()._ref.topLeft.row + 1;
                    var val = $("#spreadsheet").data("kendoSpreadsheet").activeSheet().selection().value();

                    var passport = "";
                    var link = "";
                    var display = "none";
                    if (val != null && val != "") {
                        link = window.location.origin + "/cms/Document/GetFileMongo?fileId=" + val.split("_")[1];
                        passport = $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("B" + selectedrow).value();
                        display = "";
                    }
                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().selection().link(link).value();
                    var el = $("<div data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
                        "<div style='display:" + display + "' id='doclinkResumeWorker'><a  href='" + link + "' target='_blank'>" + val + "</a>&nbsp;&nbsp;&nbsp; <span title='Remove File' onclick='onRemoveFileWorker(\"" + passport + "\",\"other\")' style='color:red;font-size: 30px;cursor:pointer;display: inline-block;' class='k-icon k-i-close-outline'></span></div><br/><br/>" +
                        "  <input type='file' id='uploadResumeWorker'  data-bind='value: value'></input>" +
                        "  <div style='margin-top: 1em; text-align: right'>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
                        "  </div>" +
                        "</div>");
                    kendo.bind(el, model);

                    // Cache the dialog.
                    dlg = el.getKendoWindow();
                }
            }
            function open() {
                create();
                dlg.open();
                dlg.center();
                var value = context.range.value();
                if (value != null) {
                    model.set("value", value);
                }
            }
        });

        $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(resume + index).editor("resume");

        //kendo.spreadsheet.registerEditor("passport", function () {
        //    var context, dlg, model;
        //    return {
        //        edit: function (options) {
        //            context = options;
        //            open();
        //        },
        //        icon: "k-icon k-i-upload"
        //    };
        //    function create() {
        //        if (!dlg) {
        //            model = kendo.observable({
        //                ok: function () {
        //                    var files = document.getElementById('uploadPassport').files[0];
        //                    uploadDocWorker(files, 'uploadPassport');
        //                    context.callback(model.value.split("C:\"fakepath\"")[1]);
        //                    dlg.close();
        //                },
        //                cancel: function () {
        //                    dlg.close();
        //                }
        //            });
        //            var el = $("<div data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
        //                "  <input type='file' id='uploadPassport'  data-bind='value: value'></input>" +
        //                "  <div style='margin-top: 1em; text-align: right'>" +
        //                "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
        //                "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
        //                "  </div>" +
        //                "</div>");
        //            kendo.bind(el, model);

        //            // Cache the dialog.
        //            dlg = el.getKendoWindow();
        //        }
        //    }
        //    function open() {
        //        create();
        //        dlg.open();
        //        dlg.center();
        //        var value = context.range.value();
        //        if (value != null) {
        //            model.set("value", value);
        //        }
        //    }
        //});

        //$("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(passport + index).editor("passport");

        //kendo.spreadsheet.registerEditor("education", function () {
        //    var context, dlg, model;
        //    return {
        //        edit: function (options) {
        //            context = options;
        //            open();
        //        },
        //        icon: "k-icon k-i-upload"
        //    };
        //    function create() {
        //        if (!dlg) {
        //            model = kendo.observable({
        //                ok: function () {
        //                    var files = document.getElementById('uploadEducation').files[0];
        //                    uploadDocWorker(files, 'uploadEducation');
        //                    context.callback(model.value.split("C:\"fakepath\"")[1]);
        //                    dlg.close();
        //                },
        //                cancel: function () {
        //                    dlg.close();
        //                }
        //            });
        //            var el = $("<div data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
        //                "  <input type='file' id='uploadEducation'  data-bind='value: value'></input>" +
        //                "  <div style='margin-top: 1em; text-align: right'>" +
        //                "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
        //                "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
        //                "  </div>" +
        //                "</div>");
        //            kendo.bind(el, model);

        //            // Cache the dialog.
        //            dlg = el.getKendoWindow();
        //        }
        //    }
        //    function open() {
        //        create();
        //        dlg.open();
        //        dlg.center();
        //        var value = context.range.value();
        //        if (value != null) {
        //            model.set("value", value);
        //        }
        //    }
        //});

        //$("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(education + index).editor("education");

        //kendo.spreadsheet.registerEditor("experience", function () {
        //    var context, dlg, model;
        //    return {
        //        edit: function (options) {
        //            context = options;
        //            open();
        //        },
        //        icon: "k-icon k-i-upload"
        //    };
        //    function create() {
        //        if (!dlg) {
        //            model = kendo.observable({
        //                ok: function () {
        //                    var files = document.getElementById('uploadExperience').files[0];
        //                    uploadDocWorker(files, 'uploadExperience');
        //                    context.callback(model.value.split("C:\"fakepath\"")[1]);
        //                    dlg.close();
        //                },
        //                cancel: function () {
        //                    dlg.close();
        //                }
        //            });
        //            var el = $("<div data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
        //                "  <input type='file' id='uploadExperience'  data-bind='value: value'></input>" +
        //                "  <div style='margin-top: 1em; text-align: right'>" +
        //                "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
        //                "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
        //                "  </div>" +
        //                "</div>");
        //            kendo.bind(el, model);

        //            // Cache the dialog.
        //            dlg = el.getKendoWindow();
        //        }
        //    }
        //    function open() {
        //        create();
        //        dlg.open();
        //        dlg.center();
        //        var value = context.range.value();
        //        if (value != null) {
        //            model.set("value", value);
        //        }
        //    }
        //});

        //$("#spreadsheet").data("kendoSpreadsheet").activeSheet().range(experience + index).editor("experience");
    }

    var ifFilesizeExceed = false;

    function uploadDocWorker(file, type) {
        ifFilesizeExceed = false;
        var fileSize = parseInt((file.size / (1024 * 1024)).toFixed(2));
        if (fileSize <= 10) {
            ShowLoader($('#worker-section'));
            var file = document.getElementById(type).files[0];
            let formData = new FormData();

            formData.append("file", file);
            fetch('/recruitment/uploadCandidate/UploadDocument', { method: 'POST', body: formData })
                .then((resp) => resp.json())
                .then(function (data) {
                    var i = data.FileName + "_" + data.Id;
                    $("#spreadsheet").data("kendoSpreadsheet").activeSheet().selection().link(window.location.origin + "/cms/Document/GetFileMongo?fileId=" + data.Id).value(i);
                    HideLoader($('#worker-section'));
                })
                .catch(function (error) {
                    console.log(error);
                });
        } else {
            ifFilesizeExceed = true;
            kendo.alert( "File size should not increase, 10 MB");
        }
    };

    function onRemoveFileWorker(passport, type) {
        $.ajax({
            type: "POST",
            url: "/recruitment/uploadCandidate/RemoveFile?passport=" + passport + "&type=" + type,
            dataType: "json",
            success: function (result) {
                
                if (type == "other") {
                    document.getElementById("uploadResumeWorker").value = "";
                    $('#doclinkResumeWorker').hide();
                }

                $("#spreadsheet").data("kendoSpreadsheet").activeSheet().selection().value("");
                alert("File removed successfully");

            },
            error: function (xhr, httpStatusMessage, customErrorMessage) {
                alert(customErrorMessage);
            }
        });
    }

    function onChange(e) {
        $("#cancel, #save").toggleClass("k-state-disabled", !this.hasChanges());
    }

    function getDataSource() {
        return $("#spreadsheet").data("kendoSpreadsheet").activeSheet().dataSource;
    }

    $("#save").click(function () {
        if (!$(this).hasClass("k-state-disabled")) {
            getDataSource().sync();
        }
    });

    $("#cancel").click(function () {
        if (!$(this).hasClass("k-state-disabled")) {
            getDataSource().cancelChanges();
        }
    });


    function onDataBinding(e) {
        console.log('Data is about to be bound to sheet "' + e.sheet.name() + '".');
    }

    function onDataBound(e) {
        var i = 2;
        var data = e.sheet.dataSource._data;
        
        for (var a = 0; a < data.length; a++) {
            if (data[a].DocumentLink && data[a].DocumentLink.includes("_")) {
                $("#spreadsheet").data("kendoSpreadsheet").activeSheet().range("O" + i + ":O" + i).link(window.location.origin + "/cms/Document/GetFileMongo?fileId=" + data[a].DocumentLink.split("_")[1]);
            }
            i++;
        }
    }
    function onSelect(arg) {


    }

    function OnDownload(link) {
        var l = link.split("_");
        url = '/cms/Document/GetFileMongo?fileId=' + l[l.length - 1];
        window.open(url, '_blank');
        return false;
    }
</script>

<br />
<div style="margin:10px;">
    <button id="expandgrid" class="accordion  header-bar">Expand to view Applied Worker Detail</button>
    <div id="panelgrid" class="panel">
        <br />

        @(Html.Kendo().Grid<WorkerCandidateViewModel>()
        .Name("workerGrid")
        .Columns(columns =>
        {
            columns.Bound(c => c.CandidateName).Width(200);
            columns.Bound(c => c.PassportNumber).Width(200);
            columns.Bound(c => c.PassportStatus).Width(200);
            columns.Bound(c => c.PassportCountry).Width(200);
            columns.Bound(c => c.PassportExpiry).Width(200);
            //columns.Bound(c => c.PassportExpiry).Width(200).ClientTemplate("#= kendo.toString(kendo.parseDate(PassportExpiry), 'dd MMM yyyy') #");
            columns.Bound(c => c.DOB).Width(200);
            //  columns.Bound(c => c.DOB).Width(200).ClientTemplate("#= kendo.toString(kendo.parseDate(DOB), 'dd MMM yyyy') #");
            columns.Bound(c => c.Age).Width(100);
            columns.Bound(c => c.Nationality).Width(100);
            //columns.Bound(c => c.VisaType).Width(100);
            columns.Bound(c => c.Position).Width(200);
            columns.Bound(c => c.TotalWorkExperience).Width(100);
            columns.Bound(c => c.WorkExperienceAbroad).Width(100);
            columns.Bound(c => c.WorkExperienceIndia).Width(100);
            columns.Bound(c => c.Mobile).Width(200);
            columns.Bound(c => c.Salary_QAR).Width(200);
            columns.Bound(c => c.Remarks).Width(200);
            columns.Bound(c => c.DocumentLink).Width(200).ClientTemplate("#if (DocumentLink!= null) {#<a  class='a-text' onclick='return OnDownload(\"#=DocumentLink#\");'> Download Document</a>#}#");
            columns.Bound(c => c.ApplicationState).Title("Application Status").Width(200);
        })
        .HtmlAttributes(new { style = "height: 550px;" })
        .Scrollable()
        .Filterable()
            .Resizable(resize => resize.Columns(true))
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("ReadGridWorkerDetails", "uploadCandidate", new { area = "recruitment"}))
            .PageSize(20)
        )
    )



    </div>

    <section id="worker-section">

        <div class="row" style="margin:40px;">

            <div>
                <button class="btn btn-primary" id="save" style="margin-right:10px;">Save changes</button>
                <button class="btn btn-dark" id="cancel">Cancel changes</button>
                <br />
            </div>

            @(Html.Kendo().Spreadsheet()
    .Name("spreadsheet")
    .Rows(500)
    .Columns(150)
    .HtmlAttributes(new { style = "width:100%;height:350px" })
            .Events(events => events.Select("onSelectCell"))
            .Events(e => e
            .DataBinding("onDataBinding")
            .DataBound("onDataBound")
        )
                    .Sheetsbar(false)

    .Toolbar(t => t.Home(false).Data(false).Insert(false))
    .Excel(excel => excel
            .ProxyURL(Url.Action("Data_Source_Proxy", "Spreadsheet"))
        )
        .Pdf(pdf => pdf
            .ProxyURL(Url.Action("Data_Source_Proxy", "Spreadsheet"))
        )
    .Sheets(sheets => {
        sheets.Add()
            .Name("Worker Details")
             .DataSource<WorkerCandidateViewModel>(ds => ds
                    .Custom()
                    .Batch(true)
                    .Transport(t => t
                        .Read("onReadWorker")
                        .Submit("onSubmitWorker")
                    )
                    .Events(e => e.Change("onChange"))
                     .Schema(s => s
                        .Model(m =>
                        {
                            m.Id(p => p.PassportNumber);
                        }))
                   )
            .Columns(columns =>
            {
                columns.Add().Width(150); // A - CandidateName
                columns.Add().Width(150); // B - PassportNumber
                columns.Add().Width(150); // C - PassportStatus
                columns.Add().Width(150); // D - PassportCountry
                columns.Add().Width(150); // E - PassportExpiry
                columns.Add().Width(150); // F - DOB

                columns.Add().Width(150); // G - Age
                columns.Add().Width(150); // H - Position
                columns.Add().Width(150); // I - TotalWorkExperience
                columns.Add().Width(150); // J - WorkExperienceAbroad
                columns.Add().Width(150); // K - WorkExperienceIndia
                columns.Add().Width(150); // L - Mobile

                columns.Add().Width(150); // M - Salary_QAR
                columns.Add().Width(150); // N - Remarks
                columns.Add().Width(600); // O - DocumentLink
                columns.Add().Width(150); // P - CriteriaSkills
                columns.Add().Width(100); // Q - CriteriaSkillsData
                columns.Add().Width(100); // R - Nationality
                //columns.Add().Width(150); // S - VisaType
                //columns.Add().Width(150); // T - ApplicationState
                //columns.Add().Width(150); // U - ApplicationStatus
                //columns.Add().Width(150);


            })
            .Rows(rows =>
            {
                rows.Add().Height(30).Cells(cells =>
                {

                    cells.Add()
                        .Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // A - CandidateName

                    cells.Add()
                         .Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // B - PassportNumber

                    cells.Add().Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // C - PassportStatus

                    cells.Add()
                    .Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // D - PassportCountry

                    cells.Add()
                    .Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // E - PassportExpiry

                    cells.Add()
                    .Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // F - DOB

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // G - Age

                    cells.Add()
                    .Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // H - Position

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // I - TotalWorkExperience

                    cells.Add()
                    .Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // J - WorkExperienceAbroad

                    cells.Add().Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // K - WorkExperienceIndia

                    cells.Add().Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // L - Mobile

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // M - Salary_QAR

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // N - Remarks

                    cells.Add().Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // O - DocumentLink

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // P - CriteriaSkills

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Q - CriteriaSkillsData

                    cells.Add().Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // R - Nationality

                    //cells.Add().Bold(true)
                    //   .Background("rgb(173, 216, 230)")
                    //   .TextAlign(SpreadsheetTextAlign.Center); // S - VisaType

                    //cells.Add().Bold(true)
                    //   .Background("rgb(173, 216, 230)")
                    //   .TextAlign(SpreadsheetTextAlign.Center); // T 


                });
            });
    })
)


        </div>
    </section>

</div>