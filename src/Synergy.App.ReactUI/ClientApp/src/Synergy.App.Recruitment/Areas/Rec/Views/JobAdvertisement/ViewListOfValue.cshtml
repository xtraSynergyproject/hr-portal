@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;

@{
    ViewData["Title"] = "ManageListOfValue";
    Layout = "/Views/Shared/_PopupLayout.cshtml";

}

@model ListOfValueViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
</style>
<script>
     function OnCreateList() {
       // alert(id);

        @*iframeOpenUrl = '@Url.Action("CreateListOf", "JobAdvertisement", new { @area="Recruitment"})';
         OpenIframePopup1(450, 1200, 'Manage List');*@
          var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("CreateListOf", "JobAdvertisement", new { @area = "Recruitment" })';
         win.OpenWindow({ Title: 'Manage List', Width: 450, Height: 900 });
        return false;

    }

    function OnEditList(e) {
       //
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("EditList", "JobAdvertisement", new { @area= "Recruitment" })?Id=' + dataItem.Id;
        OpenIframePopup1(600, 1200, 'Manage List');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditList", "JobAdvertisement", new { @area = "Recruitment" })?Id=' + dataItem.Id;
         win.OpenWindow({ Title: 'Manage List', Width: 1000, Height: 700 });
        return false;
    }

    function OnSave() {
        var cgrid = $("#grid").data("kendoGrid");
        var ccount = cgrid.dataSource.data().length;
        if (ccount > 0) {
            var detail = JSON.stringify(cgrid.dataSource.data());
            $("#Json").val(detail);
        }
    }



    var onAjaxSuccess = function (res) {
        // alert("test");
        if (res.success) {


            // alert(res);
            ShowNotification("Saved Successfully", "success");
           // id = res.id;
            //window.parent.CloseIframePopup();
            var win = GetMainWindow();
            win.CloseWindow();
            return false;
            window.parent.$("#ListOfValueTypeId").data("kendoDropDownList").dataSource.read({ jobid: $("#ReferenceTypeId").val(), type: 77 });



        }
        else {

            showError(res.error);
        }

        //HideLoader($('#divjobAdv'));
    };

</script>


<div class="row" style="margin-left:15px;">

    


            @(Html.Kendo().Grid<ListOfValueViewModel>
    ()
    .Name("viewgrid")
   // .ToolBar(toolbar =>
    //toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateList();'>Create ListofValue</button>"))

    //toolbar.Custom().Text("Create Group").HtmlAttributes(new { href = "javascript:OnCreateGroup();" }))
    .Columns(columns =>
    {
        //columns.Bound(c => c.Id).Width(140).Hidden(true);
        //  columns.Bound(c => c.Id).Title(" ").Width(100).ClientTemplate("<a class='btn btn-success' onclick='return OnEditGroup(\"#=Id#\");'><i class='fad fa-edit'></i> Edit</a>");
        columns.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditList").HtmlAttributes(new { @class = "action-icon"});
           // command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>")/*.Click("OnDeleteUserRoleStageChild")*/.HtmlAttributes(new { @class = "action-icon"});
        }).Title("Action").Width(150);
        // columns.Bound(c => c.Name);
        columns.Bound(c => c.Name);
        //columns.Bound(c => c.StatusCode).ClientTemplate("#=generateTemplate(StatusCode)#");




    })
     .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                .Pageable(pageable => pageable
                .Refresh(true)

                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                .PageSize(10)
                //.Events(events => events.Error("OnError"))
                .Read(read => read.Action("GetViewList", "JobAdvertisement", new { @area = "Recruitment" , jobid=Model.ReferenceTypeId}))
                .Model(model => model.Id(p => p.Id))
                )
          )
        </div>





@Html.HiddenFor(x => x.Id)
@*@Html.HiddenFor(x => x.DataAction)*@
@Html.HiddenFor(x => x.ListOfValueType)
@Html.HiddenFor(x => x.Code)
@Html.HiddenFor(x => x.Json)
@Html.HiddenFor(x => x.ReferenceTypeId)
@Html.HiddenFor(x => x.ReferenceTypeCode)
    


<script type="text/javascript">

    $(document).ready(function () {
        if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();

        }

    });

    function closeNavMemberGroup() {
        //window.parent.CloseIframePopup();
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }
     
</script>