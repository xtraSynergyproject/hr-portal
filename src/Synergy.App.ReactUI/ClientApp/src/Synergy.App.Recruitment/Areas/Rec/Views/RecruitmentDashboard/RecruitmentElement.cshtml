@using CMS.Data.Model
@using CMS.UI.ViewModel
@using CMS.Common;
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Requirement Dashboard";
    // Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
    //Layout = null;
}
@model RecruitmentCandidateElementInfoViewModel
@inject CMS.Common.IUserContext _userContext
<script type="text/javascript">
    $(document).ready(function () {

        //
        if ('@ViewBag.Success' == "True") {
            closeNav();
          // $("#grid").data("kendoGrid").dataSource.read();
        }
    });

    function closeNav() {

        //window.parent.CloseIframePopup2();
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function OnSave(e) {
        // alert(totalweightage)
        if ($("#VisaCategory").val() == "") {
            //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Visa Category is Required");
            e.preventDefault();
            return false;

        }
        else if ($("#ContractStartDate").val() == "") {
          //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Contract Start Date is Required");
            e.preventDefault();
            return false;

        }
        else if ($("#OfferGrade").val() == "") {
            //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Offer Grade is Required");
            e.preventDefault();
            return false;

        }

        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }


        var cgrid = $("#grid").data("kendoGrid");

        var ccount = cgrid.dataSource.data().length;
        //$("#kgrdColumnMetadatas").length
        if (ccount > 0) {
            //alert("Success")
            //var detail = JSON.stringify($("#kgrdColumnMetadatas").data().kendoGrid.dataSource.data());
            var detail = JSON.stringify(cgrid.dataSource.data());
            // console.log(detail);
            $("#JsonPayElement").val(detail);
        }


    }
    function OnCreate(e) {

        @*iframeOpenUrl = '@Url.Action("RecruitmentPayElement", "RecruitmentDashboard", new { @area = "Recruitment", applicatiodid=Model.ApplicationId })';

        OpenIframePopup1(400, 1200, 'Recruitment Pay Elements');*@
       // _RecruitmentPayElement
          var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("RecruitmentPayElement", "RecruitmentDashboard", new { @area = "Recruitment" , applicatiodid=Model.ApplicationId })';
        win.OpenWindow({ Title: 'Recruitment Pay Elements', Width: 400, Height: 1000 });
        return false;

    }

    function OnEdit(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("EditRecruitmentPayElement", "RecruitmentDashboard", new { @area = "Recruitment"})?Id=' + dataItem.Id + '&applicatiodid=' + '@Model.ApplicationId';
        OpenIframePopup1(1000, 1200, 'Recruitment Pay Elements');*@
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("EditRecruitmentPayElement", "RecruitmentDashboard", new { @area = "Recruitment" })?Id=' + dataItem.Id + '&applicatiodid=' + '@Model.ApplicationId';
        win.OpenWindow({ Title: 'Recruitment Pay Elements', Width: 1000, Height: 1000 });
        return false;
       // _RecruitmentPayElement

    }
    //function closeNav() {
    //    window.parent.CloseIframePopup();
    //}

    function OnDelete(e) {
        //
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDelete(dataItem.Id);
        }, function () {

        });

    }

    function confirmDelete(id) {
        //
        //  var grid = $("#grd_OrderStatus").data("kendoGrid");
        // var dataItem = $(e.currentTarget).closest("tr");
        // alert(dataItem.Id);
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $.ajax({
           // url: "~/UserRole/DeleteUserRole?Id=" + id,
            url:'@Url.Action("DeleteElement", "RecruitmentDashboard", new { @area= "Recruitment" })?Id=' + id,
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                // $('#dlg_DeleteConfirmation').data("kendoDialog").close();
                ShowNotification("Deleted Successfully", "success");
                $("#grid").data("kendoGrid").dataSource.read();
            }
        });
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").close();
       // window.parent.CloseIframePopup();

    }

    function change() {

        var startDate = $("#ContractStartDate").val();
        var joindate = new Date(startDate);
        joindate.setDate(joindate.getDate() + 30);
        $("#JoiningNotLaterThan").data("kendoDatePicker").value(joindate);

    }
    function OnTraineeChange() {

        if (document.getElementById('IsTrainee').checked == true) {

            $("#ServiceCompletion").data("kendoDropDownList").value("12");
        } else
        {
            $("#ServiceCompletion").data("kendoDropDownList").value("6");
        }
    }
    function onDataBoundGrade(e) {
        var dataItem = e.sender.dataItem();
        var grade = parseInt(dataItem.Name);
        var user = '@_userContext.Email';
        /*'aparna.krishna@galfarqatar.com.qa';*/
        /*alert(user);*/
        if ((grade <= 16) && user == "test_rejni@gmail.com") {
            $("#divSalaryOnAppointment").show();
            $("#divSalaryOnAppointmentHidden").hide();
            $("#divgridPayElement").show();
        }
        else if (user != "test_rejni@gmail.com") {
            $("#divSalaryOnAppointment").show();
            $("#divSalaryOnAppointmentHidden").hide();
            $("#divgridPayElement").show();
        }
        else {
            $("#divSalaryOnAppointment").hide();
            $("#divSalaryOnAppointmentHidden").show();
            $("#divgridPayElement").hide();
        }

    }
    function onChangeGrade(e) {
        var dataItem = e.sender.dataItem();
        var grade = parseInt(dataItem.Name);
        var user = '@_userContext.Email';
        /*'aparna.krishna@galfarqatar.com.qa';*/
        /*alert(user);*/
        if ((grade <= 16) && user == "test_rejni@gmail.com") {
            $("#divSalaryOnAppointment").show();
            $("#divSalaryOnAppointmentHidden").hide();
            $("#divgridPayElement").show();
        } else if (user != "test_rejni@gmail.com") {
            $("#divSalaryOnAppointment").show();
            $("#divSalaryOnAppointmentHidden").hide();
            $("#divgridPayElement").show();
        } else {
            $("#divSalaryOnAppointment").hide();
            $("#divSalaryOnAppointmentHidden").show();
            $("#divgridPayElement").hide();
        }
    }
</script>

<style>
    .Description {
        width: 100%;
        height: 100px;
        border-radius: 6px;
        border-color: aliceblue;
    }

    .bold-text {
        font-weight: bold;
    }

    .left-column-property {
        border-style: solid;
        border-top-width: 1px;
        border-right-width: 1px;
        border-bottom-width: 0px;
        border-left-width: 1px;
    }

    .right-column-property {
        border-style: solid;
        border-top-width: 1px;
        border-right-width: 1px;
        border-bottom-width: 0px;
        border-left-width: 0px;
    }

    .middle-column-property-1 {
        border-width: 1px;
        border-style: solid;
    }

    .middle-column-property-2 {
        border-width: 1px;
        border-style: solid;
        border-top-width: 1px;
        border-right-width: 1px;
        border-bottom-width: 0px;
        border-left-width: 1px;
    }
</style>

<div class="row" style="margin-left:15px;">


    <form asp-controller="RecruitmentDashboard" asp-action="ManageApplicationElement" method="post" class="form-horizontal">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">
            @if (Model.ApplcationStateName == "FinalOfferSent")
            {
                <div class="row no-gutters pad-10" style="width:100%">
                    <div class="col pad-10">
                        <div class="form-label-group">
                            <span style="padding-right: 10px;">Reference Number :</span>
                            <span style="font-weight: 700;">@Html.DisplayFor(x => x.FinalOfferReference)</span>
                        </div>
                    </div>

                </div>
            }

            <div class="row no-gutters pad-10" style="width:100%">
                <div class="col pad-10">
                    <div class="form-label-group">
                        <span style="padding-right: 10px;">Name : </span>
                        <span style="font-weight: 700;">@Html.DisplayFor(x => x.ApplicantName)</span>
                    </div>
                </div>
            </div>
            <div class="row no-gutters pad-10" style="width:100%">
                <div class="col pad-10">
                    <div class="form-label-group">
                        <span style="padding-right: 10px;">Offer Desigination : </span>
                        @(Html.Kendo().DropDownListFor(model => model.OfferDesigination)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetIdNameList", "Master",new { @type= "Job" });
                                });
                            })
                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Filter(FilterType.Contains)

                            //.HtmlAttributes(new { @class = "hr-xx-large" })
                            .HtmlAttributes(new { @class = "hr-xx-large", style = "width:80%" }))
                    </div>
                </div>
            </div>

            <div class="row no-gutters pad-10" style="width:100%">
                <div class="col pad-10">
                    <div class="form-label-group" style="padding-right:45px">
                        @*<div>
                                <label for="OfferGrade">Offer Grade<span class="required">*</span></label>
                            </div>*@
                        <span style="padding-right: 40px;">Offer Grade <span class="required">*</span> :</span>
                        @(Html.Kendo().DropDownListFor(x => x.OfferGrade)
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Filter(FilterType.Contains)
                            //.Events(e=>e.DataBound("onDataBoundGrade").Change("onChangeGrade"))
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetGradeIdNameList", "RecruitmentDashboard");
                                });
                            })
                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                        // .Value(Model.Status.ToString())
                        //  .HtmlAttributes(new { @class="form-control", style = "width:30%" })
                        )
                    </div>
                </div>
            </div>
            <div class="row no-gutters pad-10">


                <div class="col-4 pad-20">
                    <div class="form-label-group" style="padding-right:45px">
                        <div>
                            <label for="GaecNo">GAEC No</label>
                        </div>
                        @*<input asp-for="GaecNo" type="text" />*@
                        @Html.Kendo().TextBoxFor(x => x.GaecNo).HtmlAttributes(new { @type = "number", oninput = "this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" })
                    </div>

                </div>

                <div class="col-4 pad-20">
                    @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                    <div class="form-label-group">
                        <div>
                            <label for="AnnualLeave">Annual Leave</label>
                        </div>
                        @*<input type="number" asp-for="AnnualLeave" class="form-control" placeholder="Annual Leave" autocomplete="off" style="width:30%" />*@
                        @Html.Kendo().NumericTextBoxFor(x => x.AnnualLeave)
                    </div>
                </div>

                <div class="col-4 pad-20">
                    <div class="form-label-group" style="padding-right:45px">
                        <div>
                            <label for="VisaCategory">Visa Category<span class="required">*</span></label>
                        </div>
                        @(Html.Kendo().DropDownListFor(x => x.VisaCategory)
      .DataTextField("Name")
                   .DataValueField("Id")
                     .DataSource(source =>
                     {
                         source.Read(read =>
                         {
                             read.Action("GetListOfValueList", "ListOfValue", new { type = "LOV_VISACATEGORY" });
                         });
                     })
                        .Filter(FilterType.Contains)
                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                        // .HtmlAttributes(new { @class= "form-control-plaintext ip_text"})
                        )

                    </div>
                </div>
            </div>

            <div class="row no-gutters pad-10">


                @*<div class="col-4 pad-20">
                    <div class="form-label-group" style="padding-right:45px">
                    <div>
                        <label for="OfferSignedBy">Offer Signed By</label>
                    </div>
                    @Html.Kendo().TextBoxFor(x => x.OfferSignedBy)


                    </div>

                    </div>*@
                <div class="col-4 pad-20">
                    <div class="form-label-group" style="padding-right:245px">
                        <div>
                            <label for="AccommodationId">Accommodation</label>
                        </div>

                        @(Html.Kendo().DropDownListFor(x => x.AccommodationId)
           .DataTextField("Name")
           .DataValueField("Id")
           //.Events(e => e.Change("OnPageTypechange"))
           .DataSource(source =>
           {
               source.Read(read =>
               {
                   read.Action("GetListOfValueList", "ListOfValue", new { @area = "Recruitment", @type = "LOV_ACCOMMODATION" });
               });
           })
           //.Value()
           //.HtmlAttributes(new { @class = "norm-input" })
                    )


                    </div>

                </div>

                <div class="col-4 pad-20">
                    @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                    <div class="form-label-group" style="padding-right:45px">
                        <div>
                            <label for="JoiningDate">Joining Date</label>
                        </div>

                        @Html.Kendo().DatePickerFor(x => x.JoiningDate).HtmlAttributes(new { onkeydown = "javascript:return false;" }).Min(DateTime.Today)

                    </div>
                </div>


            </div>
            @if (Model.ApplcationStateName != "FinalOfferSent")
            {
                <div class="row no-gutters pad-10">

                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px" id="divSalaryOnAppointment">
                            <div>
                                <label for="SalaryOnAppointment">Salary On Appointment</label>
                            </div>
                            @Html.Kendo().NumericTextBoxFor(x => x.SalaryOnAppointment)
                        </div>
                        <div id="divSalaryOnAppointmentHidden" style="display:none;">
                            @Html.HiddenFor(x => x.SalaryOnAppointment)
                        </div>
                    </div>


                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:105px">
                            <div>
                                <label for="SalaryRevision">Salary Revision</label>
                            </div>
                            @*<input asp-for="OfferDesigination" type="text" class="form-control" required="required" autocomplete="off" style="margin-right:60px;" />*@
                            @Html.Kendo().CheckBoxFor(x => x.SalaryRevision)
                            @*@Html.Kendo().TextBoxFor(x => x.SalaryRevisionAmount)*@
                        </div>

                    </div>
                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="SalaryRevisionAmount">Salary Revision Amount</label>
                            </div>
                            @Html.Kendo().NumericTextBoxFor(x => x.SalaryRevisionAmount)
                        </div>

                    </div>
                </div>
                <div class="row no-gutters pad-10" style="width:100%">
                    <div class="col pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="SalaryRevisionComment">Salary Revision Comment</label>
                            </div>
                            @Html.TextAreaFor(x => x.SalaryRevisionComment, new { @class = "Description" })
                        </div>

                    </div>

                </div>
            }




            @if (Model.ApplcationStateName == "FinalOfferSent")
            {
                <div class="row no-gutters pad-10">
                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="ServiceCompletion">Service Completion(Month)</label>
                            </div>
                            @*<input asp-for="OfferDesigination" type="text" class="form-control" required="required" autocomplete="off" style="margin-right:60px;" />*@
                            @Html.Kendo().DropDownListFor(x => x.ServiceCompletion).BindTo(new List<SelectListItem>() {
              new SelectListItem() {
                  Text = "3",
                  Value = "3"
              },
              new SelectListItem() {
                  Text = "6",
                  Value = "6"
              },
              new SelectListItem() {
                  Text = "12",
                  Value = "12"
              }
          })
                        </div>
                    </div>

                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="TravelOriginAndDestination">Travel Origin And Destination</label>
                            </div>
                            @*<input asp-for="GaecNo" type="text" />*@
                            @Html.Kendo().TextBoxFor(x => x.TravelOriginAndDestination)
                        </div>

                    </div>

                    <div class="col-4 pad-20">
                        @*<input asp-for="Password" type="password" class="form-control" placeholder="Password" autocomplete="off" width="300" />*@
                        <div class="form-label-group">
                            <div>
                                <label for="VehicleTransport">VehicleTransport</label>
                            </div>
                            @*<input type="number" asp-for="AnnualLeave" class="form-control" placeholder="Annual Leave" autocomplete="off" style="width:30%" />*@
                            @Html.Kendo().TextBoxFor(x => x.VehicleTransport)
                        </div>
                    </div>
                </div>

                <div class="row no-gutters pad-10">
                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="ContractStartDate">Contract Made<span class="required">*</span></label>
                            </div>
                            <div>
                                @Html.Kendo().DatePickerFor(x => x.ContractStartDate).Events(e => { e.Change("change"); }).HtmlAttributes(new { onkeydown = "javascript:return false;" }).Format("dd MMM yyyy")
                            </div>
                        </div>
                    </div>

                    <div class="col-4 pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="JoiningNotLaterThan">Joining Not Later Than</label>
                            </div>
                            <div>
                                @Html.Kendo().DatePickerFor(x => x.JoiningNotLaterThan).HtmlAttributes(new { @readonly = "readonly" }).Format("dd MMM yyyy")
                            </div>
                        </div>
                    </div>


                    <div class="col-4 pad-20">
                        <div class="form-label-group">
                            <div>
                                <label for="SalaryRevision">Salary On Appointment</label>
                            </div>
                            @Html.Kendo().NumericTextBoxFor(x => x.SalaryOnAppointment)
                        </div>

                    </div>


                </div>


                <div class="row no-gutters pad-10" style="width:100%">
                    <div class="col-3 pad-20">

                        <div class="form-label-group">
                            <div style="width:70px">
                                <label>Is Trainee</label>
                            </div>
                            @Html.Kendo().CheckBoxFor(x => x.IsTrainee).HtmlAttributes(new { onclick = "OnTraineeChange();" })
                        </div>
                    </div>

                    <div class="col-3 pad-20">
                        <div class="form-label-group">
                            <div>
                                <label for="IsLocalCandidate">Is Local Candidate</label>
                            </div>
                            @*<input asp-for="OfferDesigination" type="text" class="form-control" required="required" autocomplete="off" style="margin-right:60px;" />*@
                            @Html.Kendo().CheckBoxFor(x => x.IsLocalCandidate)
                        </div>

                    </div>
                    <div class="col-3 pad-20">
                        <div class="form-label-group">
                            <div>
                                <label for="SalaryRevision">Salary Revision</label>
                            </div>
                            @*<input asp-for="OfferDesigination" type="text" class="form-control" required="required" autocomplete="off" style="margin-right:60px;" />*@
                            @Html.Kendo().CheckBoxFor(x => x.SalaryRevision)
                            @*@Html.Kendo().TextBoxFor(x => x.SalaryRevisionAmount)*@
                        </div>

                    </div>
                    <div class="col-3 pad-20">
                        <div class="form-label-group" style="padding-right:15px">
                            <div>
                                <label for="SalaryRevision">Salary Revision Amount</label>
                            </div>
                            @Html.Kendo().NumericTextBoxFor(x => x.SalaryRevisionAmount)
                        </div>

                    </div>





                </div>
                <div class="row no-gutters pad-10" style="width:100%">
                    <div class="col pad-20">
                        <div class="form-label-group" style="padding-right:45px">
                            <div>
                                <label for="SalaryRevisionComment">Salary Revision Comment</label>
                            </div>
                            @Html.TextAreaFor(x => x.SalaryRevisionComment, new { @class = "Description" })
                        </div>

                    </div>

                </div>
                @*<div class="row no-gutters pad-10">
                        <div class="col pad-20">
                            <div class="form-label-group" style="padding-right:45px">
                                <div>
                                    <label for="SalaryRevision">Salary Revision Amount</label>
                                </div>
                                @Html.Kendo().NumericTextBoxFor(x => x.SalaryRevisionAmount)
                            </div>

                        </div>

                    </div>*@





            }

            @*</div>*@


            <div id="divgridPayElement">

            @(Html.Kendo().Grid<RecruitmentCandidateElementInfoViewModel>
    ()
    .Name("grid").Height(850)
    //.ToolBar(toolbar =>
    // toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreate();'><i class='fa fas fa-plus'></i>&nbsp;Add</button>"))

    .Columns(columns =>

    {
        //columns.Command(command =>
        //{
        //    command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEdit").HtmlAttributes(new { @class = "action-icon" });
        //    command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDelete").HtmlAttributes(new { @class = "action-icon" });
        //}).Title("Action").Width(100);
        // columns.Command(command => { command.Edit().Text(" ").UpdateText(" ").CancelText(" ");}).Width(120);

        columns.Bound(c => c.ElementName);
        columns.Bound(c => c.Id).Hidden(true);
        columns.Bound(c => c.ElementId).Hidden(true);
        columns.Bound(c => c.PayId).Hidden(true);
        columns.Bound(c => c.Value);
        columns.Bound(c => c.Comment);

        //columns.Bound(c => c.TargetBatchCount).Width(120);
        //columns.Bound(c => c.Id).Title("Send Batch").Width(120).ClientTemplate("#if(BatchStatusName=='Draft'){#<button class='btn btn-info' onclick='UpdateBatch(\"#:Id#\")'>Send To Hiring Manager</button>#}#").Width(280);
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell).DisplayDeleteConfirmation(true))
    .Scrollable(x => x.Enabled(true))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                //.Pageable(pageable => pageable
                //.Refresh(true)

                //.PageSizes(true)
                //.ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                   // .PageSize(10)
                   //.Events(events => events.Error("OnError"))
                   .Read(read => read.Action("ReadPayElementData", "RecruitmentDashboard", new { appid = Model.ApplicationId }))
                .Model(model =>
                {
                    model.Id(p => p.Id);
                    model.Field(p => p.ElementName).Editable(false);
                }
                )
                )
               )
            </div>
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.ElementId)
            @Html.HiddenFor(x => x.JsonPayElement)
            @Html.HiddenFor(x => x.ApplcationStateName)
            @Html.HiddenFor(x => x.TaskStatus)

            @Html.HiddenFor(x => x.ApplicationId)
        </div>

        @if (Model.IsHr.IsTrue() && (Model.TaskStatus == "INPROGRESS" || Model.TaskStatus == "OVERDUE"))
        {
            <div class="cms-footer">
                <div class="col-sm-12" style="text-align:right;">
                    @*<button type="button" class="btn btn-light" onclick="closeNav();">Close</button>*@
                    <button type="submit" class="btn btn-success" onclick="OnSave(event)">Save</button>

                </div>

            </div>
        }
    </form>


</div>
