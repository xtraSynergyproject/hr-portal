@using CMS.Data.Model
@using CMS.UI.ViewModel
@using CMS.Common;
@using Kendo.Mvc.UI
@{
    ViewData["Title"] = "Comment";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model CMS.UI.ViewModel.ManpowerRecruitmentSummaryViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
    .row{
        margin-right:0px;
    }
</style>
<script>
    function onExpFileUploadSuccess(e) {
        if (e.response.success) {
            $("#AttachmentId").val(e.response.fileId);
            //document.getElementById('IsLatestOfferLetterSalarySlip').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
</script>

<div class="row" style="margin-left:15px;">
    

    <form asp-area="Recruitment" asp-controller="ManpowerRequirementSummary" asp-action="ManageManpowerRequirement"
          data-ajax-begin="CallLoder" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="CallHideLoader" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST"
          class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All" style="font-size:14px;" id="validation-summary"></div>
        <div class="row" style="padding:10px;">
            <div class="col-md-6">
                <div class="form-group col-xs-12 col-sm-12 row no-gutters">
                    <div class="col-12 label-div">
                        <label class="control-label"><span class="required">*</span> Position</label>
                        @*@Html.LabelFor(m => m.JobId, new { @class = "control-label" })*@
                    </div>
                    <div class="col-12">
                        @(Html.Kendo().DropDownListFor(model => model.JobId)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetIdNameList", "Master",new { @type= "Job" });
                                });
                            })
                            .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                            .DataTextField("Name")
                            .DataValueField("Id")
                            .Filter(FilterType.Contains)

                            //.HtmlAttributes(new { @class = "hr-xx-large" })
                            .HtmlAttributes(Model.DataAction != DataActionEnum.Create ? (object)new { style="width:80%", @readonly = "readonly", @class = "hr-xx-large" } : new { @class = "hr-xx-large", style = "width:80%" }))
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group col-xs-12 col-sm-12 row no-gutters">
                    <div class="col-12 label-div">
                        <label class="control-label"><span class="required">*</span> Organization</label>
                        @*<span class="required">*</span>
                            @Html.LabelFor(m => m.OrganizationId, new { @class = "control-label" })*@

                    </div>
                    <div class="col-12">
                        @(Html.Kendo().DropDownListFor(model => model.OrganizationId)
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                            read.Action("GetIdNameList", "Master", new { @type = "Organization" });
                                        });
                                    })
                                    .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                    .DataTextField("Name")
                                    .DataValueField("Id")
                                    .Filter(FilterType.Contains)

                                    .HtmlAttributes(new { style="width:80%" })
                                    .HtmlAttributes(Model.DataAction != DataActionEnum.Create ? (object)new { @readonly = "readonly", @class = "hr-xx-large" } : new { @class = "hr-xx-large", style="width:80%" }))
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group col-xs-12 col-sm-12">
                    <label for="Requirement"><span class="required">* </span>Requirement</label>
                    <input asp-for="Requirement" type="number" min="0" oninput="this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" class="form-control" autocomplete="off" style="width:80%" />

                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group col-xs-12 col-sm-12">
                    <label for="Seperation">Separation</label>
                    <input asp-for="Seperation" type="number" min="0" oninput="this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" class="form-control" autocomplete="off" style="width:80%" />

                </div>
            </div>

            <div class="col-md-6">
                <div class="form-group col-xs-12 col-sm-12">
                    @*<div class="col-lg-6 label-div">
                            <span class="required">*</span>
                            @Html.LabelFor(m => m.Available, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-6">
                            @Html.Kendo().TextBoxFor(m => m.Available).HtmlAttributes(new { @class = "form-control hr-xx-large" })
                        </div>*@
                    <label for="Available">Available</label>
                    <input asp-for="Available" type="number" min="0" oninput="this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" class="form-control" autocomplete="off" style="width:80%" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group col-xs-12 col-sm-12">
                    @*<div class="col-lg-6 label-div">
                            <span class="required">*</span>
                            @Html.LabelFor(m => m.Planning, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-6">
                            @Html.Kendo().TextBoxFor(m => m.Planning).HtmlAttributes(new { @class = "form-control hr-xx-large" })
                        </div>*@
                    <label for="Planning">Sub Contract</label>
                    <input asp-for="Planning" type="number" min="0" oninput="this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" class="form-control" autocomplete="off" style="width:80%" />
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group col-xs-12 col-sm-12">
                    @*<div class="col-lg-6 label-div">
                            <span class="required">*</span>
                            @Html.LabelFor(m => m.Transfer, new { @class = "control-label" })
                        </div>
                        <div class="col-lg-6">
                            @Html.Kendo().TextBoxFor(m => m.Transfer).HtmlAttributes(new { @class = "form-control hr-xx-large" })
                        </div>*@
                    <label for="Transfer">Transfer</label>
                    <input asp-for="Transfer" type="number" min="0" oninput="this.value = !!this.value && Math.abs(this.value) >= 0 ? Math.abs(this.value) : null" class="form-control" autocomplete="off" style="width:80%" />
                </div>
            </div>




        </div>

        <div class="row" style="padding:10px;">
            <div class="col-md-12" style="text-align:right;padding-bottom:10px;">
                <button type="button" class="btn btn-dark" onclick="closeNavMemberGroup();">Close</button>
                @*@Html.Kendo().Button().Name("btnSubmit").Content("Save").HtmlAttributes(new { @class = "k-primary" }).Events(ev => ev.Click("onClick()"))*@
                <input type="submit" class="btn btn-primary" value="Save" onclick="onClick(event);" />
            </div>
        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.VersionNo)
    </form>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        
       
        if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();
            window.parent.$("#kgrdManpowerRequirementSummary").data("kendoGrid").dataSource.read();
        }
       
    });
    var onAjaxSuccess = function (res) {
       
        if (res.success) {
            HideLoader($('.form-horizontal'));
            window.parent.ShowNotification("Saved Successfully", "success");
            @*var TemplateId = res.templateId;
            LoadPartailView('@Url.Action("ManageForm", "FormTemplate", new { @area = "Cms" })?templateId='+ TemplateId, $('#detailPage'));*@
            closeNavMemberGroup();
            window.parent.$("#kgrdManpowerRequirementSummary").data("kendoGrid").dataSource.read();
        }
        else {
            HideLoader($('.form-horizontal'));
            showError(res.errors.NameExist);
        }
    };
    var showError = function (error) {
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }



    function CallHideLoader() {
        HideLoader($('.form-horizontal'));
    }

    

    function CallLoder() {
        ShowLoader($('.form-horizontal'));
    }
    function closeNavMemberGroup() {
        //window.parent.CloseIframePopup();
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    //function OnChange() {
    //    var value = $("#OrganizationId").data("kendoDropDownList").text();
    //    $("#OrganizationName").val(value);
    //}
    //function OnChangeJob() {
    //    var value = $("#JobId").data("kendoDropDownList").text();
    //    $("#JobTitle").val(value);
    //}

    function onClick(evt) {
        //

        
        var req = $("#Requirement").val();
        var act = +$("#Available").val() + +$("#Planning").val() + +$("#Transfer").val() + +$("#Seperation").val(); 
        
        if (+act > +req) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Sum of seperation, available, subcontract and transfer should not greater than requirement");
            
            evt.preventDefault();
            return false;
        } else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }

        if ($("#JobId").val() == "") {
            //  
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Position is required");
            
            evt.preventDefault();
            return false;
        }
        else if ($("#OrganizationId").val() == "") {
            //  
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Organization is required");
            
            evt.preventDefault();
            return false;
        }
        else if ($("#Requirement").val() == "") {
            //  
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Requirement is required");
            
            evt.preventDefault();
            return false;
        }
        else {

            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }
        
        
        
    }
</script>
