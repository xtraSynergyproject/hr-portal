@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common

@{
    ViewBag.Title = "Case Summary";

    Layout = null;
}

<style>

 

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    .banner-text {
        position: absolute;
        top: 35px;
        left: 30px;
    }

    .k-datepicker {
        width: 9em !important;
    }
</style>

<script>

    var itcode = "";
    var rtcode = "";
    var ptcode = "";
    var ctcode = "";

    $(document).ready(function () {


        GetChart();
        caseSummaryGrid();

    });

    function getIssueChart() {
        //issue chart
        var url = "/CaseManagement/CaseManagement/GetStatusWiseChartByTemplateCode?tempCode=CSM_ISSUE&requestby=RequestedByMe";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    itcode = res.Code;
                    var chart = "#issueChart";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Task By Status"
                        //},
                        chart: {
                            id: issueChart,
                            width: 240,
                            height: 230,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';
                                    if (status === 'Draft') {
                                        statusCode = 'SERVICE_STATUS_DRAFT';
                                    } else if (status === 'In Progress') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS';
                                    } else if (status === 'Overdue') {
                                        statusCode = 'SERVICE_STATUS_OVERDUE';
                                    } else if (status === 'Completed') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reject' || status === 'Canceled') {
                                        statusCode = 'SERVICE_STATUS_REJECT,SERVICE_STATUS_CANCEL';
                                    }
                                    getServiceList(statusCode, itcode);
                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        //colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],
                        colors: res.ItemStatusColor,

                    };
                    
                    document.getElementById("issueChart").innerHTML = "";
                    var chart = new ApexCharts(document.querySelector(chart), options);                    
                    chart.render();
                }
            }
        });
    }

    function GetChart() {

        getIssueChart();

        //request chart
        var url = "/CaseManagement/CaseManagement/GetStatusWiseChartByTemplateCode?tempCode=CSM_REQUEST&requestby=RequestedByMe";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    rtcode = res.Code;
                    var chart = "#requestChart";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Task By Type"
                        //},
                        chart: {
                            id: requestChart,
                            width: 240,
                            height: 230,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';

                                    if (status === 'Draft') {
                                        statusCode = 'SERVICE_STATUS_DRAFT';
                                    } else if (status === 'In Progress') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS';
                                    } else if (status === 'Overdue') {
                                        statusCode = 'SERVICE_STATUS_OVERDUE';
                                    } else if (status === 'Completed') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reject' || status === 'Canceled') {
                                        statusCode = 'SERVICE_STATUS_REJECT,SERVICE_STATUS_CANCEL';
                                    }
                                    getServiceList(statusCode, rtcode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        colors: res.ItemStatusColor,
                        //colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],

                    };
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    document.getElementById("requestChart").innerHTML = "";
                    chart.render();
                }
            }
        });

        //problem chart
        var url = "/CaseManagement/CaseManagement/GetStatusWiseChartByTemplateCode?tempCode=CSM_PROBLEM&requestby=RequestedByMe";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    ptcode = res.Code;
                    var chart = "#problemsChart";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Task By Type"
                        //},
                        chart: {
                            id: problemsChart,
                            width: 240,
                            height: 230,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';
                                    if (status === 'Draft') {
                                        statusCode = 'SERVICE_STATUS_DRAFT';
                                    } else if (status === 'In Progress') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS';
                                    } else if (status === 'Overdue') {
                                        statusCode = 'SERVICE_STATUS_OVERDUE';
                                    } else if (status === 'Completed') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reject' || status === 'Canceled') {
                                        statusCode = 'SERVICE_STATUS_REJECT,SERVICE_STATUS_CANCEL';
                                    }
                                    getServiceList(statusCode, ptcode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        colors: res.ItemStatusColor,
                        //colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],

                    };
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    document.getElementById("problemsChart").innerHTML = "";
                    chart.render();
                }
            }
        });

        //change chart
        var url = "/CaseManagement/CaseManagement/GetStatusWiseChartByTemplateCode?tempCode=CSM_CHANGE&requestby=RequestedByMe";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    ctcode = res.Code;
                    var chart = "#changesChart";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Task By Type"
                        //},
                        chart: {
                            id: changesChart,
                            width: 240,
                            height: 230,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';
                                    if (status === 'Draft') {
                                        statusCode = 'SERVICE_STATUS_DRAFT';
                                    } else if (status === 'In Progress') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS';
                                    } else if (status === 'Overdue') {
                                        statusCode = 'SERVICE_STATUS_OVERDUE';
                                    } else if (status === 'Completed') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reject' || status === 'Canceled') {
                                        statusCode = 'SERVICE_STATUS_REJECT,SERVICE_STATUS_CANCEL';
                                    }
                                    getServiceList(statusCode, ctcode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        colors: res.ItemStatusColor,
                        //colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],

                    };
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    document.getElementById("changesChart").innerHTML = "";
                    chart.render();
                }
            }
        });
    }


    function getServiceList(statusCode, temcode) {
        debugger;
        var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/NtsService/ServiceListByFilters?&statusCodes=' + statusCode + '&templateCodes=' + temcode + '&showAllOwnersService=false&cbm=OnAfterServiceCreate';
        win.OpenWindow({ Title: 'Services', Width: 1200, Height: 600 });
        return false;
    }

    
    function OnOpen(id, templateCode) {

        var portalId =  $("#GlobalPortalId").val();
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterCreate&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Service Request', Width: 1200, Height: 700 });
        return false;
    }

    function OnCreateService() {
        var url = '/Cms/NtsService/SelectServiceTemplate?categoryCode=@ViewBag.CategoryCode&userId=@ViewBag.UserId&cbm=OnAfterServiceCreate';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Select Service', Width: 1000, Height: 600, Position: 'Right1' });
        return false;
    }

    function OnAfterServiceCreate() {
        //GetChart();
        window.location.href = window.location.href;
        //caseSummaryGrid();
    }


    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        {
            headerName: "Action",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' style='cursor:pointer;' id='casesummary-grdmenu' data-templatecode='" + params.data.TemplateCode + "' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
        {
            field: "ServiceNo", headerName:"Service No"
        },
        { field: "ServiceSubject" },
        { field: "TemplateDisplayName", headerName: "Service Type" },
        { field: "OwnerDisplayName", headerName: "Service Owner" },
        { field: "ServiceStatusName", headerName: "Service Status" },
        {
            field: "StartDate",
            headerName: "Start Date",
            cellRenderer: params => {
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }
        },
        {
            field: "DueDate",
            headerName: "Due Date",
            cellRenderer: params => {
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }
        },
    ];

    $(function () {

        $.contextMenu({
            selector: '#casesummary-grdmenu',
            trigger: 'left',
            build: function ($trigger, e) {

                var id = $trigger.data('idvalue');
                var templateCode = $trigger.data('templatecode');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'open':
                                        OnOpen(id, templateCode);
                                        break;
                                    default:
                                }
                            },
                            items: {
                                "open": { name: "Open", icon: "fas fa-edit" },
                            }
                        };
                }
            }
        });

    });


    function caseSummaryGrid() {

        var url = "/cms/NtsService/ReadServiceList?catCodes=@ViewBag.CategoryCode&portalId=@ViewBag.PortalId";
        //if (search != undefined)
        //{
        //    var ServiceStatusIds = search.ServiceStatusIds.length != 0 ? search.ServiceStatusIds : "";
        //    var StatusIds = search.StatusIds.length != 0 ? search.StatusIds : "";
        //    url = "/cms/NtsService/ServiceListByFilters?ServiceStatusIds=" + ServiceStatusIds + "&StatusIds=" + StatusIds;
        //}
        document.getElementById("casesummaryGridView").innerHTML = "";
        gridConfig(
           "casesummaryGridView",
           url,
           columnDefs,
           false,
           true,
           true,
           true,
           1,
           true,
           10);
    }


</script>


<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="page-inner">
            <div class="page-section">
                <div class="row no-gutters p-2">
                    <div class="col-lg-6 col-md-12">
                        <h5>@ViewBag.Title</h5>
                    </div>
                    <div class="col-lg-6 col-md-12 text-right">
                        <button class="btn btn-primary" onclick="OnCreateService();">Create Service</button>
                    </div>
                </div>
                <div class="row" style="padding:10px;">
                    <div class="col-sm-12 col-md-6 col-lg-3">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center bg-success text-white">Issues</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="issueChart"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center bg-warning">Requests</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="requestChart"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center bg-danger text-white">Problems</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="problemsChart"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-3">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center bg-info text-white">Changes</div><!-- .card-body -->
                            <div class="card-body chart-body">
                                <div id="changesChart"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                </div>

                <!--<div id="accordion2" class="card-expansion">-->
                <!-- .card -->
                <!--<div class="card card-expansion-item expanded">
                    <div class="card-header border-0" id="headingOne2">
                        <button class="btn btn-reset d-flex justify-content-between w-100" data-toggle="collapse" data-target="#collapseOne2" aria-expanded="true" aria-controls="collapseOne2"><span>Filter</span> <span class="collapse-indicator"><i class="fa fa-fw fa-chevron-down"></i></span></button>
                    </div>
                    <div id="collapseOne2" class="collapse show" aria-labelledby="headingOne2" data-parent="#accordion2">
                        <div class="card-body pt-0 row">
                            <div class="col-sm-12 col-md-5">
                                <div class="form-group">
                                    <label class="col-form-label" for="mdlServiceOwnedRequested1">External Service Status</label>
                                    <select id="mdlServiceOwnedRequested" data-placeholder="External Service Status"></select>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-5">
                                <div class="form-group">
                                    <label class="col-form-label" for="mdlServiceStatus">Internal Service Status</label>
                                    <select id="mdlServiceStatus" data-placeholder="Internal Service Status"></select>
                                </div>
                            </div>
                            <div class="col-sm-12 col-md-2">
                                <div class="form-group">
                                    <label class="col-form-label">&nbsp;</label>
                                    <button class="btn btn-primary form-control" onclick="onFilterReset()" title="Reset Filter">@SharedResource["Reset"]</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>-->
                <!-- /.card -->
                <!--</div>-->

                <div style="padding:10px;">
                    <h5>Service Details</h5>
                    <hr />
                    <div class="row">
                        <div class="col-12">
                            <div id="casesummaryGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
