@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using System.Web;
@model TaskViewModel
@{
    ViewBag.Title = "My Payments";
    Layout = null;
}
@inject IUserContext usercontext;


    <style>
        .dropdown-toggle::after {
            content: none;
        }

        .iconwothtext {
            display: flex;
            cursor: pointer;
            align-items: center;
        }

        .leftmenustyle {
            font-size: 14px;
            color: #4b4f56;
            margin-bottom: 6px;
            font-weight: normal;
            margin-top: 6px;
            padding-left: 5px;
            border-bottom: 1px medium rgba(255, 255, 255, .5);
        }

        .col-1 {
            flex: none !important;
        }
        /* The hero image */
        .head-image {
            object-fit: fill;
        }

        /* Place text in the middle of the image */
        .head-text {
            text-align: left;
            position: absolute;
            top: 28%;
            color: white;
        }

        .head-img {
            max-width: 100%;
            max-height: 149px;
            width: 100%;
            object-fit: none;
        }

        .main {
            margin-top: 1%;
            text-align: right;
        }

        /* Bootstrap 4 text input with search icon */

        .has-search .form-control {
            padding-left: 2.375rem;
            /*width: 100%;*/
        }

        .form-group {
            width: 40%;
        }

        .has-search .form-control-feedback {
            position: absolute;
            z-index: 2;
            display: block;
            width: 2.375rem;
            height: 2.375rem;
            line-height: 2.375rem;
            text-align: center;
            pointer-events: none;
            color: #aaa;
        }

        .task-card {
            margin-left: 15px;
            margin-bottom: 30px;
            margin-top: 1%;
            border-radius: 6px;
            color: #333;
            background: #fff;
            width: 98%;
            box-shadow: 0 4px 20px 0 rgb(0 0 0 / 14%), 0 7px 10px -5px #fff;
            position: relative;
            display: flex;
            flex-direction: column;
            min-width: 0;
            word-wrap: break-word;
            background-color: #fff;
            background-clip: border-box;
            border: 1px solid #eee;
            min-height: 160px;
            padding: 10px;
        }

        .sub-div {
            overflow-y: scroll;
            height: 260px;
            overflow-x: hidden;
        }

        .card-heading {
            margin-left: 1%;
            font-weight: bold;
            margin-top: 12px;
        }

        .item-hover:hover {
            background-color: #d3d3d340;
            cursor: pointer !important;
        }

        .no-data {
            text-align: center;
            margin-top: 5%;
            font-size: 16px;
            font-weight: 500;
            display: none;
        }

        .no-data-icon {
            color: #c8aa4d;
            font-size: 40px;
        }

        .k-dropdown:hover {
            transform: none !important;
        }

        .k-select:hover {
            transform: none !important;
        }

        .k-input:hover {
            transform: none !important;
        }

        .k-state-hover :hover {
            transform: none !important;
        }

        span:hover {
            transform: none !important;
        }

        .k-link:hover {
            transform: none !important;
        }

        h6:hover {
            transform: none !important;
        }

        .form-control:hover {
            transform: none !important;
        }

        input:hover {
            transform: none !important;
        }

        .task-title {
            padding: 10px;
            background-color: #1c4893;
            font-weight: bold;
            text-align: left;
            color: #ffffff;
            margin-left: 0px;
            margin-right: 10px;
        }

        .card-header {
            border-bottom: none;
        }
        .modal-header {
            border-bottom: 1px solid rgba(34,34,48,.1) !important;
        }
        .modal-body{
            padding-top:12px;
        }
    </style>

    <script type="text/javascript">
     function onBack()
    {
        window.location.href = "@ViewBag.ReturnUrl";
    }
    $(document).ready(function () {

    });

    function FilterGridPending() {
        var search = {
            TaskStatus: "IN_PROGRESS",//IN_PROGRESS
            Mode: $("#Mode").val(),
            ModuleName: "Dms",
            Text: $("#Text").val(),
        };
        return search;
    }

    function FilterGridOverDue() {
        var search = {
            TaskStatus: "OVER_DUE",
            Mode: $("#Mode").val(),
            ModuleName: "Dms",
            Text: $("#Text").val(),
        };
        return search;
    }

    function FilterGridShared() {
        var search = {
            TaskStatus: "",
            Mode: 'SHARE_TO',
            ModuleName: "Dms",
            Text: $("#Text").val(),
        };
        return search;
    }



    var isFiltered = false;

    function OpenNote(id) {
        var win = GetMainWindow();
        win.iframeOpenUrl = '/nts/note/NoteCard?NoteId=' + id;
        win.OpenWindow({ Title: "Document", Width: 1200, Height: 650 });
        return false;
    }

    function OpenTask(taskId, tempCode) {
        var id = taskId;
        var source = '@RequestSourceEnum.View.ToString()';
        var action = '@DataActionEnum.View.ToString()';

        var portalId = $('#GlobalPortalId').val();

        var url = '/Cms/Page?lo=Popup&pageType=Task&cbm=IframePostbackScript&source=' + source + '&dataAction=' + action + '&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title:  "Task", Width: 1200, Height: 600 });
        return false;
    }

    function CloseShare()
    {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function OnPayment(id, tableId, amount,assigneeUserId,paymentIds) {

        ShowLoader($('#container'));
        var returnUrl = "/Portal/JammuSmartCityCustomer/MyPayments/";
        $.ajax({
            type: "POST",
            url: "/EGov/SmartCity/OnlinePaymentJSC",
            data: { 'ntsId': id, 'noteTableId': tableId, 'amount': amount, 'ntsType': '@NtsTypeEnum.Task', 'assigneeUserId': assigneeUserId, 'returnUrl': returnUrl, 'paymentIds': paymentIds },
            success: function (res) {

                if (res.success) {
                    if (res.requestURL === null || res.requestURL === '' || res.requestURL === undefined) {
                        HideLoader($('#container'));
                        alert('Payment gateway not found');
                        return false;
                    }
                    else {
                        window.top.location.href = res.requestURL;
                    }

                } else {
                    ShowNotification(res.error, "error");
                    HideLoader($('#container'));
                }
            },
            dataType: "json",
        });
    }

    var gId, gTableId, gAmount, gAssigneeUserId, gpaymentIds;

    function OnPaymentClick(id, tableId, amount, assigneeUserId, paymentIds) {
        gId = id;
        gTableId = tableId;
        gAmount = amount;
        gAssigneeUserId = assigneeUserId;
        gpaymentIds = paymentIds;

        document.getElementById('totalAmount').innerHTML = amount;
        $('#payConfirmModal').modal('show');
    }

    function OnPaymentConfirm() {
        $('#payment-body').html('Please wait while we are redirecting to payment gateway...');
        $('#totAmount').html("");
        OnPayment(gId, gTableId, gAmount, gAssigneeUserId, gpaymentIds);
        return false;
    }

    function OnPay() {
        debugger;

        var allVals = [];
        var allAmount = [];
        var total = 0;
        $("input[class='checkpayment']:checked").each(function () {
            allVals.push($(this).attr("data-id"));
            allAmount.push($(this).attr("data-amount"));
            total = ($(this).attr("data-amount") != 'null')? Number(total) + Number($(this).attr("data-amount")):total;
        });

        if (allVals.length > 0) {

            if (allVals.length > 10) {
                kendo.alert("You can select maximum of 10 items");
            }
            else {

                @*$.ajax({
                url: '/EGOV/SmartCity/UpdateJSCPaymentDetails?paymentsIds=' + allVals.join(",") +'&portalNames=@ViewBag.PortalNames',
                type: 'GET',
                data: {},
                dataType: 'json',
                    success: function (result) {
                        debugger;
                    if (result.success) {
                        OnPaymentClick("", result.data, total, "@usercontext.UserId", allVals.join(", "));
                    } else {
                        ShowNotification("Try after some time.", "error");
                    }
                },
                error: function (ert) {
                    kendo.alert(result.error);
                    }

                });*@

                OnPaymentClick("", "", total, "@usercontext.UserId", allVals.join(","));
            }

        }
        else {
            kendo.alert("Please select atleast one item from the list");
        }

    }
    </script>



<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="page-inner">
            <div class="page-section">
                <!--<div class="row main">
                    <div class="col-sm-6 form-group" style="text-align:left;">-->
                        @*<input type="button" value="Return To Home Page" onclick="onBack()" class="btn btn-link" />*@
                    <!--</div>-->
                    <!-- Actual search box -->
                    <!--<div class="col-sm-6 form-group has-search pull-right">
                        <span class="fa fa-search form-control-feedback"></span>
                        <input id="mysearch" type="text" class="form-control" placeholder="Search by task subject or number">
                    </div>
                </div>-->

                @*Tabs*@
                <div class="container card-header" style="padding:10px;max-width:100%">
                    <ul class="nav nav-tabs" role="tablist">
                        <li class="nav-item"><a data-toggle="tab" href="#pending" class="nav-link active" role="tab" aria-controls="pending" aria-selected="true"><i class="fa-regular fa-calendar-circle-exclamation"></i>&nbsp;PENDING PAYMENTS</a></li>
                        <li class="nav-item"><a data-toggle="tab" href="#completed" class="nav-link" aria-controls="completed" aria-selected="false"><i class="fa-regular fa-calendar-check"></i>&nbsp;PAYMENTS HISTORY</a></li>                        
                    </ul>
                    <div class="tab-content" style="border: 1px solid silver;">                        
                        <div id="pending" class="tab-pane in active" role="tabpanel" aria-labelledby="design-tab">
                            <div class="row pad-10">
                                <div class="col-6"><button class="btn btn-primary" onclick="OnPay();" style="background: linear-gradient(#ff5722, #f39900) !important;border-color:#ff7f50 !important;">Pay Now</button></div>
                                <div class="col-6"></div>

                            </div>
                            @*<div class="task-card">
                                <div class="col-12">
                                    <div id="pendingPaymentGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                                </div>
                            </div>*@
                            <div class="col-12 pad-10">
                                <div id="pendingPaymentGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                            </div>
                        </div>

                        <div id="completed" class="tab-pane" role="tabpanel" aria-labelledby="design-tab">
                            <div class="col-12 pad-10">
                                <div id="completedPaymentGrid1" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                            </div>
                        </div>
                    </div>                                                                               
                        
                    <div class="modal fade" id="payConfirmModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog modal-dialog-centered" role="document">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h6 class="modal-title" id="exampleModalLabel">Ready To Pay?</h6>
                                        <button class="close" type="button" data-dismiss="modal" aria-label="Close">
                                            <span aria-hidden="true">×</span>
                                        </button>
                                    </div>
                                    <div class="modal-body payment-body" id="totAmount"><span style="color:#FF7F50">Total Amount :</span> <span  id="totalAmount"></span></div>
                                    <div class="modal-body payment-body" id="payment-body">Are you sure you want to proceed to payment gateway to pay the amount?</div>
                                    <div class="modal-footer">
                                        <button class="btn btn-secondary" type="button" data-dismiss="modal">Cancel</button>
                                        <button class="btn btn-primary" style="background: linear-gradient(#ff5722, #f39900) !important;border-color:#ff7f50 !important" onclick="return OnPaymentConfirm();">Proceed To Pay</button>
                                    </div>
                                </div>
                            </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script>
    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        {
            field: "Id", minWidth: 100,
            headerName: "Select",
            cellRenderer: params => {
                return "<input type='checkbox' class='checkpayment' data-id='" + params.value + "' data-amount='" + params.data.Amount + "' />"
            }

            //cellRenderer: params => {
            //    if (params.data.PaymentStatusCode == "ERROR_" || params.data.PaymentStatusCode == "NOT_PAID" || params.data.PaymentStatusCode == null) {
            //        //return "<a style='cursor:pointer;color:blue;' href='javascript:OpenService(\"" + params.data.Id + "\",\"" + params.data.TemplateMasterCode + "\");'>Pay</a>";
            //        return "<button class='btn btn-primary' onclick='OnPaymentClick(\"" + params.data.Id + "\",\"" + params.data.UdfNoteTableId + "\",\"" + params.data.ServiceCost + "\",\"" + params.data.AssignedToUserId + "\");'>Pay </button>";
            //    }
            //    return "";
            //}
        },
        {
            field: "PaymentSubject", minWidth: 220, headerName: "Service Name",
            cellRenderer: params => {
                return "<a style='cursor:pointer;color:blue;' href='javascript:OpenTask(\"" + params.data.TaskId + "\",\"" + params.data.TemplateCode + "\");'>" + params.value + " </a>";
            }
        },
        { field: "OwnerUserName", minWidth: 150,headerName: "Name" },
        { field: "ServiceNo", headerName: "Booking ID/Service No", minWidth: 150 },
        //{ field: "NoteNo", headerName: "Consumer No", minWidth: 150 },
        {
            field: "DueDate", headerName: "Payment Date", minWidth: 150,
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
            }
        },
        { field: "Amount", headerName: "Bill Amount", minWidth: 150 },
        { field: "ReferenceNo", headerName: "Payment Reference No", minWidth: 150 },
        {
            field: "PaymentStatus", headerName: "Payment Status", minWidth: 100,

            cellRenderer: params => {
                if (params.data.PaymentStatusCode == "JSC_SUCCESS") {
                    return "<span style='color:green'>" + params.value + " </span>";
                }
                else if (params.data.PaymentStatusCode == "JSC_ERROR") {
                    return "<span style='color:red'>" + params.value + " </span>";
                }
                else {
                    return "<span style='color:highlight'>" + params.value + " </span>";
                }
            },
        }
    ];


    $(function () {
        getService();
        getService1();
    });

    function getService() {
        document.getElementById("pendingPaymentGrid").innerHTML = "";

        gridConfig(
            "pendingPaymentGrid",
            "/EGov/SmartCity/GetJSCPendingPaymentsList?portalNames=@ViewBag.PortalNames",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs1 = [
        {
            field: "PaymentSubject", minWidth: 220, headerName: "Service Name",
            cellRenderer: params => {
                return "<a style='cursor:pointer;color:blue;' href='javascript:OpenTask(\"" + params.data.TaskId + "\",\"" + params.data.TemplateCode + "\");'>" + params.value + " </a>";
            }
        },
        {
            headerName: "Receipt",
            field: "ServiceNo", minWidth: 120,
            cellRenderer: params => {
                return "<a style='cursor:pointer;color:blue;' href='javascript:onDownloadBillPayment(\"" + params.data.ServiceNo + "\");'><i class='fa fa-download'></i></a> ";
            }
        },
        { field: "OwnerUserName", minWidth: 150,headerName: "Name" },
        { field: "ServiceNo", headerName: "Booking ID/Service No", minWidth: 150 },
        //{ field: "NoteNo", headerName: "Consumer No", minWidth: 150 },
        {
            field: "DueDate", headerName: "Payment Date", minWidth: 150,
            cellRenderer: params => {
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateFormatForMoment');
            }
        },
        { field: "Amount", headerName: "Bill Amount", minWidth: 150},
        { field: "ReferenceNo", headerName: "Payment Reference No", minWidth: 150 },
        {
            field: "PaymentStatus", headerName: "Payment Status", minWidth: 150,
            cellRenderer: params => {
                if (params.data.PaymentStatusCode == "JSC_SUCCESS") {
                    return "<span style='color:green'>" + params.value + " </span>";
                }
                else if (params.data.PaymentStatusCode == "JSC_ERROR") {
                    return "<span style='color:red'>" + params.value + " </span>";
                }
                else {
                    return "<span style='color:highlight'>" + params.value + " </span>";
                }
            }
        },
    ];


    function getService1() {
        document.getElementById("completedPaymentGrid1").innerHTML = "";

        gridConfig(
            "completedPaymentGrid1",
            @*"/EGov/EGovernment/ReadTaskDataCompleted?portalNames=" + '@ViewBag.PortalNames',*@
            "/EGov/SmartCity/GetJSCCompletedPaymentsList?portalNames=@ViewBag.PortalNames",
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    function onDownloadBillPayment(serviceId)
    {
		var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/FastReport?rptName=JSC_BillPaymentReport&lo=@LayoutModeEnum.Popup&rptUrl=egov/query/GetJSCBillPaymentReport?serviceNo='+serviceId;
        win.OpenWindow({ Title: 'Bill Payment Report', Width: 700, Height: 800 });
        return false;
    }

</script>
