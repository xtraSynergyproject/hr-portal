@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Garbage Collected Report - Auto Wise Status";
    Layout = null;
}

<div class="contener" style="padding:20px;">
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-12" style="text-align:center;">
            <h4>@ViewData["Title"]</h4>
        </div>
    </div>
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-4">
            <label style="font-weight:bold;">Select Auto <span class="required">*</span></label>
            <input id="AutoId" style="width: 100%;" />
        </div>
        <div class="col-4" style="padding-top:15px;">
            <button class="btn btn-primary mt-3" onclick="onSearchChart()" style="margin-right:10px;"><i class="fas fa-magnifying-glass"></i>  Search</button>
            <button class="btn btn-info mt-3" onclick="onResetChart()"><i class="fas fa-rotate-left"></i> Reset</button>
        </div>
    </div>
    <div class="row" id="divchart" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-12">
            <div id="chartGarbageReportAutoWise"></div>
        </div>
    </div>
    <div class="row" style="padding-top:10px;">
        <div class="col-6">
            <span id="gridtitle" style="color:inherit;padding-left:2px;font-weight:bold;font-size:16px;"></span>
        </div>
    </div>
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-12 p-2">
            <div id="kGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>



<script>
    $("#divchart").hide();

    $(document).ready(function () {

        $("#AutoId").kendoDropDownList({
            optionLabel: "--Select Auto--",
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/EGov/SmartCity/GetJSCAutoList"
                    }
                },
            },
        });
    });

    function onSearchChart(){
        debugger;
        var Aid = $("#AutoId").data("kendoDropDownList").value();
        if(Aid==""){
            alert("Please select Auto");
            return false;
        }
        $("#divchart").show();
         var pieurl = "/Egov/SmartCity/GetAutoWiseGarbageCollectedData?autoId=" + Aid;
         pieChart(pieurl, "chartGarbageReportAutoWise", '@ViewData["Title"]');
    }

    function onResetChart(){
        $("#divchart").hide();
        document.getElementById("kGridView").innerHTML = "";
        $("#AutoId").data("kendoDropDownList").value(-1);
    }

function pieChart(url, chartId, chartTitle) {
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {

                    var vals = res.ItemValueSeries;
                    var barvals = res.BarItemValueSeries;
                    var itcode = res.Code;
                    var barcolors = res.Colors;
                    var chart = "#" + chartId;
                    var options;
                     options = {
                        series: vals,
                        title: {
                            text: chartTitle
                        },
                        chart: {
                            id: chartId,
                            width: 500,
                            height: 450,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                        debugger;
                                        var name = config.w.globals.labels[config.dataPointIndex];
                                         document.getElementById("gridtitle").innerHTML = "Auto Wise garbage Collected Status : " + name;
                                    getAutoWiseGarbaseCollectedData(name);
                                }
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                         theme: {
                             palette: 'palette1' // upto palette10
                         },
                         //colors: ['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                         dataLabels: {
                             formatter: function (val, opts) {
                                 return opts.w.config.series[opts.seriesIndex]
                             },
                         },
                     };
                    document.getElementById(chartId).innerHTML = "";
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });
    }
    var columnDefs = [
        /*{
            headerName: "Complaint No",
            field: "ServiceNo",
            suppressSizeToFit: true,
            cellRenderer: params => {
                var a = "";
                debugger;
                var cnt = params.data.FlagDetails.length;
                for (var i = 0; i < cnt; i++) {
                    if (params.data.FlagDetails[i].LevelUserRole.includes("COMPLAINT_RESOLVER_LEVEL_2")) {
                        a = a + '<span style="color:dodgerblue;padding-left: 2px;font-weight:bold" class="fas fa-flag-pennant" title = "' + params.data.FlagDetails[i].OwnerUserName + '"> 2 </span>';
                    }
                    if (params.data.FlagDetails[i].LevelUserRole.includes("COMPLAINT_RESOLVER_LEVEL_3")) {
                        a = a + '<span style="color:orange;padding-left: 2px" class="fas fa-flag-pennant" title = "' + params.data.FlagDetails[i].OwnerUserName + '"> 3 </span>';
                    }
                    if (params.data.FlagDetails[i].LevelUserRole.includes("COMPLAINT_RESOLVER_LEVEL_4")) {
                        a = a + '<span style="color:red;padding-left: 2px" class="fas fa-flag-pennant" title = "' + params.data.FlagDetails[i].OwnerUserName + '"> 4 </span>';
                    }

                }
                if (params.data.ReopenCount > 0) {
                    a = a + " <span title='Reopened' style='color:blue;cursor:pointer' class='fas fa-rotate-right'></span>";
                }

                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
                    return a + "<input title='View Details' style='font-weight:bold' type='button' class='btn btn-link' onclick='OpenTask(\"" + params.data.Id + "\",\"" + params.data.TemplateCode + "\" )' value=\"" + params.value + "\" />";
                } else {
                    return a + "<input title='View Details' type='button' class='btn btn-link' onclick='OpenTask(\"" + params.data.Id + "\",\"" + params.data.TemplateCode + "\" )' value=\"" + params.value + "\" />";
                }

            }
        },
        {
            headerName: "Complaint Type",
            field: "GrievanceType",
            cellRenderer: params => {
                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
                    return "<span style='font-weight:bold'>" + params.value + "<span/>";
                } else {
                    return params.value;
                }
            }

        },
        {
            headerName: "Name",
            field: "Name",
            cellRenderer: params => {
                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
                    return "<span style='font-weight:bold'>" + params.value + "<span/>";
                } else {
                    return params.value;
                }
            }
        },
        {
            headerName: "Complaint Status",
            field: "GrvStatus",
            cellRenderer: params => {
                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") { return "<div style='background-color:#f7f5bc;padding-left:10px;font-weight:bold'>  Pending</div>"; }
                if (params.data.GrvStatusCode == "GRV_IN_PROGRESS") { return "<div style='background-color:#DFE9F5;padding-left:10px'>  " + params.value + "</div>"; }
                if (params.data.GrvStatusCode == "GRV_NOT_PERTAINING") { return "<div style='background-color:#FFCD91;padding-left:10px'>   " + params.value + "</div>"; }
                if (params.data.GrvStatusCode == "GRV_DISPOSED") { return "<div style='background-color:#90EE90;padding-left:10px'>   " + params.value + "</div>"; }
                else { return params.value; }
            }
        },
        {
            headerName: "Complaint Date",
            field: "CreatedDate",
            cellRenderer: params => {
                var date = new Date(params.value);

                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
                    return "<span style='font-weight:bold'>" + datefun(date) + "<span/>";
                } else {
                    return datefun(date);
                }
            }
        },*/
    ];

    function getAutoWiseGarbaseCollectedData(AutoId, status) {
        var dept = $("#AutoId").data("kendoDropDownList").value() + "-" + AutoId;
        gridConfig(
            "kGridView",
            "/EGov/SmartCity/GetAutoWiseGarbageCollectedData?autoId=" + Aid + "&status=" + status,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

</script>
