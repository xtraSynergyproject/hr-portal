@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Newtonsoft.Json;

@{
    ViewData["Title"] = ViewBag.ReportTitle;
    Layout = null;
}
<style>
    .k-grid-header .k-header {
        position: relative;
        vertical-align: bottom;
        cursor: default;
        font-weight: 600 !important;
    }

    .k-grid .k-grid-header .k-header .k-link {
        overflow: visible !important;
        white-space: normal !important;
    }

    td[role="gridcell"] {
        white-space: nowrap;
    }
</style>
<div class="contener" style="padding:20px;">
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-12" style="text-align:center;">
            <h4>@ViewData["Title"]</h4>
        </div>
    </div>
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-2" id="divinputward">
            <label style="font-weight:bold;">Select Ward</label>
            <input id="WardId" style="width: 100%;" />
        </div>
        <div class="col-2" id="divinputdept">
            <label style="font-weight:bold;">Select Department</label>
            <input id="DepartmentId" style="width: 100%;" />
        </div>
        <div class="col-2" id="divinputzone">
            <label style="font-weight:bold;">Select Zone</label>
            <input id="ZoneId" style="width: 100%;" />
        </div>
        <div class="col-2">
            <label style="font-weight:bold;">From Date</label>
            <input id="FromDate" style="width: 100%;" />
        </div>
        <div class="col-2">
            <label style="font-weight:bold;">To Date</label>
            <input id="ToDate" style="width: 100%;" />
        </div>
        <div class="col-3" style="padding-top:15px;">
            <button class="btn btn-primary mt-3" onclick="onSearchChart()" style="margin-right:10px;"><i class="fas fa-magnifying-glass"></i>  Search</button>
            <button class="btn btn-info mt-3" onclick="onResetChart()"><i class="fas fa-rotate-left"></i> Reset</button>
        </div>
        <div class="col" style="padding-top:15px;text-align:right;">
            @*<button class="btn btn-warning mt-3" onclick="onBackReportDashboard()"><i class="fas fa-left"></i> Back to Report Dashboard</button>*@
        </div>
    </div>
    <div class="row" id="divchart" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-12">
            <div id="chartGrievanceReportDeptWard"></div>
        </div>
    </div>
    <div class="row" style="padding-top:10px;">
        <div class="col-6">
            <span id="gridtitle" style="color:inherit;padding-left:2px;font-weight:bold;font-size:16px;"></span>
        </div>
        <div class="col-6" style="text-align:right;" id="divflag">
            <span style="color:dodgerblue;padding-left: 2px;font-weight:bold" class="fas fa-flag-pennant" title='Level 2'>Level 2 </span>
            <span style="color:orange;padding-left: 2px" class="fas fa-flag-pennant" title='Level 3'>Level 3 </span>
            <span style="color:red;padding-left: 2px" class="fas fa-flag-pennant" title='Level 4'>Level 4 </span>
            <span style='color:blue;' class='fas fa-rotate-right' title='Reopened'>Reopened</span>
        </div>
    </div>
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-12 p-2" id="divgrid">
            <div id="kGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>



<script>
    var barurl = "/Egov/SmartCity/GetGrievanceReportDeptWardData";
    $("#divflag").hide();
    $("#divchart").hide();
    $(document).ready(function () {

        $("#WardId").kendoDropDownList({
            optionLabel: "--Select Ward--",
            dataTextField: "Name",
            dataValueField: "Id",
            value: '@ViewBag.WardId',
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/EGov/SmartCity/GetWardList"
                    }
                },
            },
        });

        $("#DepartmentId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            filter: "contains",
            change: onchangeDept,
            dataSource: {
                transport: {
                    read: {
                        url: "/EGov/SmartCity/GetJSCDepartmentList",
                    }
                }
            }
        });
        
        $("#ZoneId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        //url: "/EGov/SmartCity/GetJSCZoneIdNameList",
                        url: "/EGov/SmartCity/GetJSCZoneListByDepartment",
                        data: ondataZone,
                    }
                }
            }
        });
        $("#FromDate").kendoDatePicker({
            value: new Date(new Date().setMonth(new Date().getMonth() - 6)),
            format: "dd-MM-yyyy",
            dateInput: false
        });
        $("#FromDate").attr("disabled", "disabled");

        $("#ToDate").kendoDatePicker({
            value: new Date(),
            format: "dd-MM-yyyy",
            dateInput: false
        });
        $("#ToDate").attr("disabled", "disabled");

        onSearchChart();
    });

    function onchangeDept(){
        var zonedrplst = $("#ZoneId").data("kendoDropDownList");
        //var deptid = $("#DepartmentId").data("kendoDropDownList").value();
        //{departmentId:deptid};
        zonedrplst.dataSource.read();
    }
    function ondataZone(){
            var deptid = $("#DepartmentId").data("kendoDropDownList").value();
            var search ={
                departmentId: deptid,
            };
            return search;
    }
    
    function onBackReportDashboard() {
        window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportDashboard";
        LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Reports Dashboard");
        return false;
    }
    if ('@ViewBag.ReportTypeCode' == "ZONE_WISE") {
        $("#divinputward").hide();
        $("#divinputdept").show();
        $("#divinputzone").show();
        $("#divchart").hide();
        $("#divflag").hide();
        $("#gridtitle").hide();
        $("#divgrid").hide();
    }

    function onSearchChart() {
        //debugger;
        $("#divgrid").hide();
        $("#gridtitle").hide();
        $("#divflag").hide();
        var wid = $("#WardId").data("kendoDropDownList").value();
        var did = $("#DepartmentId").data("kendoDropDownList").value();
        var zid = $("#ZoneId").data("kendoDropDownList").value();
        var fd = kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy-MM-dd');
        var td = kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy-MM-dd');

        //if (wid == "") {
        //    alert("Please select Ward");
        //    return false;
        //}
        $("#divchart").show();
        var url = "";
        //if ('@ViewBag.ReportTypeCode' == "DEPARTMENT_STATUS_WISE") {
        //    url = "/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=DEPARTMENT_STATUS_WISE&departmentId=" + did + "&fromDate=" + fd + "&toDate=" + td;
        //} else if ('@ViewBag.ReportTypeCode' == "WARD_STATUS_WISE") {
        //    url = "/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=WARD_STATUS_WISE&wardId=" + wid + "&fromDate=" + fd + "&toDate=" + td;
        //}
        if ('@ViewBag.ReportTypeCode' == "ZONE_WISE") {
            url = "/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=ZONE_WISE&departmentId="+did+"&zoneId=" + zid + "&fromDate=" + fd + "&toDate=" + td;
        }
        stackBarChart(url, "chartGrievanceReportDeptWard", '@ViewData["Title"]');
    }

    function onResetChart() {
        $("#divflag").hide();
        $("#divchart").hide();
        $("#divgrid").hide();
        $("#gridtitle").hide();
        $("#FromDate").data("kendoDatePicker").value(new Date(new Date().setMonth(new Date().getMonth() - 6)));
        $("#ToDate").data("kendoDatePicker").value(new Date());
        document.getElementById("kGridView").innerHTML = "";
        $("#WardId").data("kendoDropDownList").value(-1);
        $("#DepartmentId").data("kendoDropDownList").value(-1);
        $("#ZoneId").data("kendoDropDownList").value(-1);
    }

    //var barurl = "/Egov/SmartCity/GetGrievanceReportDeptWardData";
    //stackBarChart(barurl, "chartGrievanceReportDeptWard", '@ViewData["Title"]');



    function stackBarChart(url, chartId, chartTitle) {
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {

                    var vals = res.StackBarItemValueSeries;
                    var cats = res.StackBarCategories;
                    itcode = res.Code;
                    var chart = "#" + chartId;
                    var options = {
                        series: vals,
                        chart: {
                            type: 'bar',
                            height: 450,
                            stacked: true,
                            zoom: {
                                enabled: true
                            },
                            events: {
                                click: function (event, chartContext, config) {
                                    debugger;
                                    //var warddept = "-";
                                    var zone = config.globals.labels[config.dataPointIndex];
                                    var status = config.globals.initialSeries[config.seriesIndex].name;
                                    //var wardname = $("#WardId").data("kendoDropDownList").text();
                                    //@@if (ViewBag.ReportTypeCode == "DEPARTMENT_STATUS_WISE")
                                    //{
                                    //    @@:document.getElementById("gridtitle").innerHTML = "Department : " + department + ", Status : " + status;
                                    //    @@:warddept ="-" + department;
                                    //}
                                    //else if (ViewBag.ReportTypeCode == "WARD_STATUS_WISE")
                                    //{
                                    //    @@:document.getElementById("gridtitle").innerHTML = "Ward : " + department + ", Status : " + status;
                                    //    @@: var wardno = department.split("-");
                                    //    @@:warddept = wardno[1] + "-";
                                    //}
                                    document.getElementById("gridtitle").innerHTML = "Zone : "+zone;
                                    $("#divflag").show();
                                    $("#gridtitle").show();
                                    $("#divgrid").show();
                                    getComplaintData(zone, status);
                                }
                            }
                        },
                        colors: res.Colors,//['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                        plotOptions: {
                            bar: {
                                horizontal: false,
                                dataLabels: {
                                    total: {
                                        enabled: true,
                                        offsetX: 0,
                                        style: {
                                            fontSize: '14px',
                                            fontWeight: 900
                                        }
                                    }
                                }
                            },
                        },
                        stroke: {
                            width: 1,
                            colors: ['#fff']
                        },
                        title: {
                            text: chartTitle
                        },
                        xaxis: {
                            show: true,
                            title: {
                                text: res.XaxisTitle
                            },
                            categories: cats,
                            labels: {
                                formatter: function (val) {
                                    return val
                                },
                                style: {
                                    fontSize: '12px',
                                }
                            }
                        },
                        yaxis: {
                            show: true,
                            title: {
                                text: 'Count(s)'
                            },
                            labels: {
                                style: {
                                    fontSize: '14px',
                                }
                            }
                        },
                        tooltip: {
                            y: {
                                formatter: function (val) {
                                    return val
                                }
                            }
                        },
                        fill: {
                            type: 'gradient',
                            gradient: {
                                shade: 'dark',
                                type: 'vertical',
                                shadeIntensity: 0.1,
                                opacityFrom: 1,
                                opacityTo: 0.4,
                                stops: [0, 80, 100]
                            },
                            //opacity: 1
                        },
                        legend: {
                            position: 'top',
                            horizontalAlign: 'center',
                            offsetX: 40
                        }
                    };

                    document.getElementById(chartId).innerHTML = "";
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });
    }

    //function replaceString(value) {
    //    debugger;
    //    return value.replace("/""", "");
    //}
    function htmlDecode(value) {
        return value.replace(/&lt;/g, "<").replace(/&gt;/g, ">");
    }

    var columnDefs = [
        {
            title: "Complaint No",
            field: "ServiceNo",
            hidden: true,
            exportable: { excel: true }
        },
        {
            title: "Complaint No",
            field: "ComplaintNoText",
            width: "230px",
            exportable: { excel: false },
            template: "#= htmlDecode(ComplaintNoText)#"
        },
        {
            title: "Complaint Date",
            field: "CreatedDateText",
            template: "#if(GrvStatusCode == null || GrvStatusCode == 'GRV_PENDING'){#<span style='font-weight:bold'>#:CreatedDateText#<span/>#}else{##:CreatedDateText##}#"
        },
        {
            title: "Complaint Type",
            field: "GrievanceType",
            template: "#if(GrvStatusCode == null || GrvStatusCode == 'GRV_PENDING'){#<span style='font-weight:bold'>#:GrievanceType#<span/>#}else{##:GrievanceType##}#"
        },
        {
            title: "Complaint",
            field: "Name",
            template: "#if(GrvStatusCode == null || GrvStatusCode == 'GRV_PENDING'){#<span style='font-weight:bold'>#:Name#<span/>#}else{##:Name##}#"
        },
        {
            title: "Applicant Name",
            field: "OwnerUserName",
            template: "#if(GrvStatusCode == null || GrvStatusCode == 'GRV_PENDING'){#<span style='font-weight:bold'>#:OwnerUserName#<span/>#}else{##:OwnerUserName##}#"
        },

        {
            title: "Complaint Status",
            field: "GrvStatus",
            template: "#if(GrvStatusCode == null || GrvStatusCode == 'GRV_PENDING'){#<div style='font-weight:bold'> Pending</div>#}else{##:GrvStatus##}#"
        },
        {
            title: "Officer Name",
            field: "Level1User",
            template: "#if(GrvStatusCode == null || GrvStatusCode == 'GRV_PENDING'){#<span style='font-weight:bold'>#:Level1User#<span/>#}else{##:Level1User##}#"
        },
        {
            title: "No. of Days",
            field: "NoOfDaysPending",
            template: "#if(GrvStatusCode == null || GrvStatusCode == 'GRV_PENDING'){#<span style='font-weight:bold'>#:NoOfDaysPending#<span/>#}else{##:NoOfDaysPending##}#"
        },
    ];

    var columnDefs1 = [
        {
            headerName: "Complaint No",
            field: "ServiceNo",
            suppressSizeToFit: true,
            cellRenderer: params => {
                var a = "";
                debugger;
                var cnt = params.data.FlagDetails.length;
                for (var i = 0; i < cnt; i++) {
                    if (params.data.FlagDetails[i].LevelUserRole.includes("COMPLAINT_RESOLVER_LEVEL_2")) {
                        a = a + '<span style="color:dodgerblue;padding-left: 2px;font-weight:bold" class="fas fa-flag-pennant" title = "' + params.data.FlagDetails[i].OwnerUserName + '"> 2 </span>';
                    }
                    if (params.data.FlagDetails[i].LevelUserRole.includes("COMPLAINT_RESOLVER_LEVEL_3")) {
                        a = a + '<span style="color:orange;padding-left: 2px" class="fas fa-flag-pennant" title = "' + params.data.FlagDetails[i].OwnerUserName + '"> 3 </span>';
                    }
                    if (params.data.FlagDetails[i].LevelUserRole.includes("COMPLAINT_RESOLVER_LEVEL_4")) {
                        a = a + '<span style="color:red;padding-left: 2px" class="fas fa-flag-pennant" title = "' + params.data.FlagDetails[i].OwnerUserName + '"> 4 </span>';
                    }

                }
                if (params.data.ReopenCount > 0) {
                    a = a + " <span title='Reopened' style='color:blue;cursor:pointer' class='fas fa-rotate-right'></span>";
                }

                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
                    return a + "<input title='View Details' style='font-weight:bold' type='button' class='btn btn-link' onclick='OpenTask(\"" + params.data.Id + "\",\"" + params.data.TemplateCode + "\" )' value=\"" + params.value + "\" />";
                } else {
                    return a + "<input title='View Details' type='button' class='btn btn-link' onclick='OpenTask(\"" + params.data.Id + "\",\"" + params.data.TemplateCode + "\" )' value=\"" + params.value + "\" />";
                }

            }
        },
        //{
        //    headerName: "Department",
        //    field: "Department",
        //    cellRenderer: params => {
        //        if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
        //            return "<span style='font-weight:bold'>" + params.value + "<span/>";
        //        } else {
        //            return params.value;
        //        }
        //    }
        //},
        {
            headerName: "Complaint Type",
            field: "GrievanceType",
            cellRenderer: params => {
                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
                    return "<span style='font-weight:bold'>" + params.value + "<span/>";
                } else {
                    return params.value;
                }
            }

        },
        {
            headerName: "Name",
            field: "Name",
            cellRenderer: params => {
                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
                    return "<span style='font-weight:bold'>" + params.value + "<span/>";
                } else {
                    return params.value;
                }
            }
        },
        {
            headerName: "Complaint Status",
            field: "GrvStatus",
            cellRenderer: params => {
                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") { return "<div style='background-color:#f7f5bc;padding-left:10px;font-weight:bold'>  Pending</div>"; }
                if (params.data.GrvStatusCode == "GRV_IN_PROGRESS") { return "<div style='background-color:#DFE9F5;padding-left:10px'>  " + params.value + "</div>"; }
                if (params.data.GrvStatusCode == "GRV_NOT_PERTAINING") { return "<div style='background-color:#FFCD91;padding-left:10px'>   " + params.value + "</div>"; }
                if (params.data.GrvStatusCode == "GRV_DISPOSED") { return "<div style='background-color:#90EE90;padding-left:10px'>   " + params.value + "</div>"; }
                else { return params.value; }
            }
        },
        {
            headerName: "Complaint Date",
            field: "CreatedDate",
            cellRenderer: params => {
                var date = new Date(params.value);

                if (params.data.GrvStatusCode == null || params.data.GrvStatusCode == "GRV_PENDING") {
                    return "<span style='font-weight:bold'>" + datefun(date) + "<span/>";
                } else {
                    return datefun(date);
                }
            }
        },
    ];

    function getComplaintData(zone, status) {
        debugger;
        //var dept = department;
        var fd = kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy-MM-dd');
        var td = kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy-MM-dd');
        //document.getElementById("kGridView").innerHTML = "";
        //gridConfig(
        //    "kGridView",
        //    "/EGov/SmartCity/GetComplaintByWardAndDepartmentWithStatusDetails?department=" + dept + "&status=" + status,
        //    columnDefs1,
        //    false,
        //    true,
        //    true,
        //    true,
        //    1,
        //    true,
        //    10);

        var url = "/EGov/SmartCity/GetComplaintZoneStatusData?zone=" + zone + "&status=" + status + "&fromDate=" + fd + "&toDate=" + td;
        $("#kGridView").kendoGrid({
            toolbar: ["search", "excel"],
            excel: {
                fileName: "ZoneReport.xlsx",
                filterable: true,
                allPages: true
            },
            //excelExport: function (e) {
            //    e.workbook.fileName = "WardDepartment.xlsx";
            //    e.sender.showColumn(1);
            //    e.sender.hideColumn(2);
            //    //e.preventDefault();
            //    //exportFlag = true;
            //    setTimeout(function () {
            //    e.sender.saveAsExcel();
            //    });
            //},
            //pdf: {
            //    allPages: true,
            //    avoidLinks: true,
            //    paperSize: "A4",
            //    margin: { top: "2cm", left: "1cm", right: "1cm", bottom: "1cm" },
            //    landscape: true,
            //    repeatHeaders: true,
            //    template: $("#page-template").html(),
            //    scale: 0.8
            //},
            dataSource: {
                transport: {
                    read: url
                },
            },
            height: 550,
            groupable: false,
            sortable: true,
            resizable: true,
            reorderable: true,
            pageable: true,
            //columnMenu: true,
            columns: columnDefs
        });

    }

    function datefun(d) {
        let h = addZero(d.getHours());
        let m = addZero(d.getMinutes());

        return d.getDate() + "-" + (d.getMonth() + 1) + "-" + d.getFullYear() + " " + h + ":" + m;
    }

    function addZero(i) {
        if (i < 10) { i = "0" + i }
        return i;
    }

    function OpenTask(id, tempCode) {

        var portalId = $('#GlobalPortalId').val();
        var url = '/EGov/SmartCity/ManageGrievanceForm?complaintId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'View Complaint', Width: 1200, Height: 700 });
        return false;
    }

</script>