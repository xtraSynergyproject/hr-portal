@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Grievance Dashboard";
    Layout = null;
}
<style>
    .jsc-chart {
        padding: 10px;
        border-radius: 10px;
        cursor: pointer;
        /*border-style: solid;*/
    }

    .jsc-chart1 {
        padding: 10px;
        border-radius: 10px;
        border-color: darkgrey;
        /* margin: 10px; */
        /* border-width: 2px; */
        border-style: solid;
        box-shadow: 5px 5px darkgrey;
    }

</style>
<div class="contener" style="padding:20px;">
    <div class="row" style="padding-top:10px;padding-bottom:10px;">
        <div class="col-12" style="text-align:center;">
            <h4>@ViewData["Title"]</h4>
        </div>
    </div>
    <div class="row">
        <div class="col-12" style="text-align:right;">
            <h6 style="color:red;">*Data for past 6 months</h6>
        </div>
    </div>
    <div class="row">
        <div class="col-4 jsc-chart" onclick="onReportStatus();">
            <div id="chartStatus" class="jsc-chart1" style="padding-top:15%;padding-bottom:15%;"></div>
        </div>
        <div class="col-8 jsc-chart">
            <div class="jsc-chart1" style="padding-left:10px;padding-top:10px;">
                <ul class="nav nav-tabs" role="tablist">
                    <li class="nav-item"><a data-toggle="tab" href="#rptdept" class="nav-link active" role="tab" aria-controls="rptdept" aria-selected="true"><br />Department</a></li>
                    <li class="nav-item"><a data-toggle="tab" href="#rptward" class="nav-link " role="tab" aria-controls="rptward" aria-selected="true" onclick="onLoadDeptWardWise();"><br />Ward</a></li>
                </ul>
                <div class="tab-content" style="width:100%;padding-top:15px;">
                    <div id="rptdept" class="tab-pane  in active" role="tabpanel" aria-labelledby="rptdept">
                        <div onclick="onReportWardDept();">
                            <div id="chartWardDept"></div>
                        </div>
                    </div>
                    <div id="rptward" class="tab-pane" role="tabpanel" aria-labelledby="rptward">
                        <div onclick="onReportDeptWardWise();">
                            <div id="chartDeptWardWise"></div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-12 jsc-chart" onclick="onReportAging();">
            <div id="chartAging" class="jsc-chart1"></div>
        </div>
    </div>
@*    <div class="row">
        <div class="col-6 jsc-chart" onclick="onReportWardDept();">
            <div id="chartWardDept" class="jsc-chart1"></div>
        </div>
        <div class="col-6 jsc-chart" onclick="onReportWard();">
            <div id="chartWard" class="jsc-chart1"></div>
        </div>
        <div class="col-6 jsc-chart" onclick="onReportComplaint();">
            <div id="chartComplaint" class="jsc-chart1"></div>
        </div>
        <div class="col-6 jsc-chart" onclick="onReportAging();">
            <div id="chartAging" class="jsc-chart1"></div>
        </div>
        <div class="col-6 jsc-chart" onclick="onReportStatus();">
            <div id="chartStatus" class="jsc-chart1"></div>
        </div>
        <div class="col-6 jsc-chart" onclick="onReportDept();">
            <div id="chartDept" class="jsc-chart1"></div>
        </div>
    </div>*@
</div>

<script>
    $(document).ready(function () {
        var fd = kendo.toString(new Date(new Date().setMonth(new Date().getMonth() - 6)), 'yyyy-MM-dd');
        var td = kendo.toString(new Date(), 'yyyy-MM-dd');

        //stackBarChart("/Egov/SmartCity/GetGrievanceReportDeptWardData?wardId=@ViewBag.WardId&departmentId=", "chartWardDept", "Department wise");
        stackBarChart("/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=DEPARTMENT_STATUS_WISE&fromDate=" + fd + "&toDate=" + td, "chartWardDept", "Department wise");
        //stackBarChartDeptWard("/Egov/SmartCity/GetGrievanceReportDeptWardWiseData?&departmentId=@ViewBag.DepartmentId&wardId=", "chartDeptWardWise", "Ward wise");
        stackBarChartDeptWard("/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=WARD_STATUS_WISE&fromDate=" + fd + "&toDate=" + td, "chartDeptWardWise", "Ward wise");
        //pieChart("/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=WARD_WISE&wardId=&fromDate=" + fd + "&toDate=" + td, "chartWard", "Ward wise", "WARD_WISE");
        //pieChart("/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=DEPARTMENT_WISE&departmentId=&fromDate=" + fd + "&toDate=" + td, "chartDept", "Department wise", "DEPARTMENT_WISE");
        //pieChart("/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=COMPLAINTTYPE_WISE&grievanceTypeId=&fromDate=" + fd + "&toDate=" + td, "chartComplaint", "Complaint type wise", "COMPLAINTTYPE_WISE");
        pieChart("/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=STATUS_WISE&grvStatusId=&fromDate=" + fd + "&toDate=" + td, "chartStatus", "Status", "STATUS_WISE");
        pieChart("/Egov/SmartCity/GetGrievanceReportAgingData?typeCode=AGING_WISE", "chartAging", "Aging Report", "AGING_WISE");
    });

    function onReportWardDept() {
        //window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportDepartmentWard";
        //LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Ward Wise Department Wise Status");
        window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportDeptStackBar";
        LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Department Wise");
        return false;
    }
    function onReportDeptWardWise(){
        //window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportDepartmentWardWise";
        //LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Department Wise Ward Wise Status");
        window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportWardStackBar";
        LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Ward Wise");
        return false;
    }
    function onReportWard() {
        window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportWardWise";
        LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Ward Wise");
        return false;
    }
    function onReportDept() {
        window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportDepartmentWise";
        LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Department Wise");
        return false;
    }
    function onReportComplaint() {
        window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportComplaintTypeWise";
        LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Complaint Type Wise");
        return false;
    }
    function onReportStatus() {
        window.location.href = "/portal/JammuSmartCityEmployee/ComplaintStatusReport";
        LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Status Wise");
        return false;
    }
    function onReportAging() {
        window.location.href = "/portal/JammuSmartCityEmployee/JSCGrievanceReportAging";
        LoadCmsPartialView(window.location.href, 'Custom', false, "", "", "Aging Report");
        return false;
    }

    function onLoadDeptWardWise(){
        var fd = kendo.toString(new Date(new Date().setMonth(new Date().getMonth() - 6)), 'yyyy-MM-dd');
        var td = kendo.toString(new Date(), 'yyyy-MM-dd');

        //stackBarChartDeptWard("/Egov/SmartCity/GetGrievanceReportDeptWardWiseData?&departmentId=@ViewBag.DepartmentId&wardId=", "chartDeptWardWise", "Ward wise");
        stackBarChartDeptWard("/Egov/SmartCity/GetGrievanceReportDepartmentWiseData?typeCode=WARD_STATUS_WISE&fromDate=" + fd + "&toDate=" + td, "chartDeptWardWise", "Ward wise");
    }

    function stackBarChart(url, chartId, chartTitle) {
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {

                    var vals = res.StackBarItemValueSeries;
                    var cats = res.StackBarCategories;
                    itcode = res.Code;
                    var chart = "#" + chartId;
                    var options = {
                        series: vals,
                        chart: {
                            type: 'bar',
                            height: 400,
                            stacked: true,
                            zoom: {
                                enabled: true
                            },
                            events: {
                                click: function (event, chartContext, config) {
                                }
                            }
                        },
                        colors: res.Colors,//['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                        plotOptions: {
                            bar: {
                                horizontal: false,
                                dataLabels: {
                                    total: {
                                        enabled: true,
                                        offsetX: 0,
                                        style: {
                                            fontSize: '14px',
                                            fontWeight: 900
                                        }
                                    }
                                }
                            },
                        },
                        stroke: {
                            width: 1,
                            colors: ['#fff']
                        },
                        title: {
                            text: chartTitle,
                            align: 'center',
                        },
                        xaxis: {
                            show: true,
                            title: {
                                text: 'Department(s)'
                            },
                            categories: cats,
                            labels: {
                                formatter: function (val) {
                                    return val
                                },
                                style: {
                                    fontSize: '12px',
                                }
                            }
                        },
                        yaxis: {
                            show: true,
                            title: {
                                text: 'Count(s)'
                            },
                            labels:{
                                style:{
                                    fontSize: '14px',
                                }
                            }
                        },
                        tooltip: {
                            y: {
                                formatter: function (val) {
                                    return val
                                }
                            }
                        },
                        fill: {
                            type: 'gradient',
                            gradient: {
                                shade: 'dark',
                                type: 'vertical',
                                shadeIntensity: 0.1,
                                opacityFrom: 1,
                                opacityTo: 0.4,
                                stops: [0, 80, 100]
                            },
                            //opacity: 1
                        },
                        legend: {
                            show: false,
                            position: 'top',
                            horizontalAlign: 'center',
                            offsetX: 40
                        }
                    };

                    document.getElementById(chartId).innerHTML = "";
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });
    }

    function pieChart(url, chartId, chartTitle, reportTypeCode) {
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    var barvals = res.BarItemValueSeries;
                    var xtitle = res.XaxisTitle;
                    var itcode = res.Code;
                    var barcolors = res.Colors;
                    var chart = "#" + chartId;
                    var options;
                    if (reportTypeCode == "WARD_WISE" || reportTypeCode == "DEPARTMENT_WISE" || reportTypeCode == "COMPLAINTTYPE_WISE" || reportTypeCode == "AGING_WISE") {
                        options = {
                            series: barvals,
                            title: {
                                text: chartTitle,
                                align: 'center',
                            },
                            fill:{
                                type: 'gradient',
                                gradient: {
                                    shade: 'dark',
                                    type: 'vertical',
                                    shadeIntensity: 0.1,
                                    opacityFrom: 1,
                                    opacityTo: 0.4,
                                    stops: [0, 80, 100]
                                },
                            },
                            chart: {
                                type: 'bar',
                                height: 350,
                                events: {
                                    dataPointSelection: function (event, chartContext, config) {
    @*debugger;
                                            var name = config.w.globals.labels[config.dataPointIndex];
                                            if ('@ViewBag.ReportTypeCode' == "WARD_WISE") {
                                            document.getElementById("gridtitle").innerHTML = "Ward : "+name;
                                            } else if ('@ViewBag.ReportTypeCode' == "DEPARTMENT_WISE") {
                                            document.getElementById("gridtitle").innerHTML = "Department : "+name;
                                            } else if ('@ViewBag.ReportTypeCode' == "COMPLAINTTYPE_WISE") {
                                            document.getElementById("gridtitle").innerHTML = "Complaint Type : "+name;
                                            } else if ('@ViewBag.ReportTypeCode' == "STATUS_WISE") {
                                            document.getElementById("gridtitle").innerHTML = "Complaint Status : "+name;
                                            }
                                            $("#divflag").show();
                                            $("#gridtitle").show();
                                            $("#divgrid").show();
                                            getComplaintData(name);*@
                                        }
                                }
                            },
                            plotOptions: {
                                bar: {
                                    borderRadius: 4,
                                    horizontal: false,
                                }
                            },
                            dataLabels: {
                                enabled: true
                            },
                            xaxis: {
                                categories: res.ItemValueLabel,
                                show: true,
                                title: {
                                    text: xtitle
                                },
                            },
                            yaxis: {
                                show: true,
                                title: {
                                    text: 'Count(s)'
                                },
                                labels: {
                                    formatter: function (val, index) {
                                        return val.toFixed(0);
                                    },
                                    style: {
                                        fontSize: '14px',
                                    }
                                }
                            },
                            //labels: res.ItemValueLabel,
                            colors: res.Colors,//['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                            //dataLabels: {
                            //    formatter: function (val, opts) {
                            //        return opts.w.config.series[opts.seriesIndex]
                            //    },
                            //},
                        };
                    }
                    else if (reportTypeCode == "STATUS_WISE") {

                        options = {
                            series: vals,
                            title: {
                                text: chartTitle,
                                align: 'center',
                            },
                            fill: {
                                type: 'gradient',
                                gradient: {
                                    shade: 'light',
                                    //type: 'vertical',
                                    shadeIntensity: 0.6,
                                    opacityFrom: 0.4,
                                    opacityTo: 1,
                                    stops: [0, 90, 100]
                                },
                            },
                            chart: {
                                id: chartId,
                                //width: 450,
                                height: 500,
                                type: 'pie',
                                events: {
                                    dataPointSelection: function (event, chartContext, config) {
    @*debugger;
                                            var name = config.w.globals.labels[config.dataPointIndex];
                                            if ('@ViewBag.ReportTypeCode' == "STATUS_WISE") {
                                            document.getElementById("gridtitle").innerHTML = "Complaint Status : " + name;
                                            }
                                            $("#gridtitle").show();
                                            $("#divflag").show();
                                            $("#divgrid").show();
                                            getComplaintData(name);*@
                                    }
                                }
                            },
                            legend: {
                                position: 'bottom'
                            },
                            labels: res.ItemValueLabel,
                            colors: res.Colors,//['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                            dataLabels: {
                                formatter: function (val, opts) {
                                    return opts.w.config.series[opts.seriesIndex]+" ("+val.toFixed(2)+"%)"
                                },
                            },
                        };


                    } else {
                        options = {
                            series: vals,
                            title: {
                                text: chartTitle
                            },
                            chart: {
                                id: chartId,
                                width: 500,
                                height: 400,
                                type: 'pie',
                                events: {
                                    dataPointSelection: function (event, chartContext, config) {
                                        //debugger;
                                        //var name = config.w.globals.labels[config.dataPointIndex];
                                        //getComplaintData(name);
                                    }
                                }
                            },
                            legend: {
                                position: 'bottom'
                            },
                            labels: res.ItemValueLabel,
                            theme: {
                                palette: 'palette1' // upto palette10
                            },
                            //colors: ['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                            dataLabels: {
                                formatter: function (val, opts) {
                                    return opts.w.config.series[opts.seriesIndex]
                                },
                            },
                        };
                    }
                    document.getElementById(chartId).innerHTML = "";
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });
    }
    
    function stackBarChartDeptWard(url, chartId, chartTitle) {
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {

                    var vals = res.StackBarItemValueSeries;
                    var cats = res.StackBarCategories;
                    itcode = res.Code;
                    var chart = "#" + chartId;
                    var options = {
                        series: vals,
                        chart: {
                            type: 'bar',
                            height: 400,
                            stacked: true,
                            zoom: {
                                enabled: true
                            },
                            events: {
                                click: function (event, chartContext, config) {
                                    //debugger;
                                    //var wardname = config.globals.labels[config.dataPointIndex];
                                    //var status = config.globals.initialSeries[config.seriesIndex].name;
                                    //var department = $("#DepartmentId").data("kendoDropDownList").text();
                                    //document.getElementById("gridtitle").innerHTML = "Department : " + department + ", Ward: " + wardname;
                                    //$("#divflag").show();
                                    //$("#gridtitle").show();
                                    //$("#divgrid").show();
                                    //var ward = wardname.split("-");
                                    //getComplaintData(ward[0], status);
                                }
                            }
                        },
                        colors: res.Colors,//['#00FF00', '#FF0000', '#f2a818', '#13b713', '#f10b0b', '#008ffb', '#f2a818'],
                        plotOptions: {
                            bar: {
                                horizontal: false,
                                dataLabels: {
                                    total: {
                                        enabled: true,
                                        offsetX: 0,
                                        style: {
                                            fontSize: '14px',
                                            fontWeight: 900
                                        }
                                    }
                                }
                            },
                        },
                        stroke: {
                            width: 1,
                            colors: ['#fff']
                        },
                        title: {
                            text: chartTitle,
                            align: 'center',
                        },
                        xaxis: {
                            show: true,
                            title: {
                                text: 'Ward(s)'
                            },
                            categories: cats,
                            labels: {
                                formatter: function (val) {
                                    return val
                                },
                                style: {
                                    fontSize: '12px',
                                }
                            }
                        },
                        yaxis: {
                            show: true,
                            title: {
                                text: 'Count(s)'
                            },
                            labels: {
                                style: {
                                    fontSize: '14px',
                                }
                            }
                        },
                        tooltip: {
                            y: {
                                formatter: function (val) {
                                    return val
                                }
                            }
                        },
                        fill: {
                            type: 'gradient',
                            gradient: {
                                shade: 'dark',
                                type: 'vertical',
                                shadeIntensity: 0.1,
                                opacityFrom: 1,
                                opacityTo: 0.4,
                                stops: [0, 80, 100]
                            },
                            //opacity: 1
                        },
                        legend: {
                            show: false,
                            position: 'top',
                            horizontalAlign: 'center',
                            offsetX: 40
                        }
                    };

                    document.getElementById(chartId).innerHTML = "";
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    chart.render();
                }
            }
        });
    }
</script>