@inject IStringLocalizer<CMS.UI.Web.Areas.PJM.Controllers.EmailTaskController> Resource
@using Synergy.App.WebUtility;
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.Common;
@inject Synergy.App.Common.IUserContext _userContext
@*@model ApplicationDataViewModel;*@
@model ApplicationSearchViewModel;

@{
    ViewBag.Title = "";
    if (ViewBag.Module == "COPY_EMAIL")
    {
        Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    }
    else
    {
        Layout = null;
    }

}

<style>
    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    .tree-item-status {
        cursor: pointer;
    }

    .left {
        min-width: 300px;
        max-width: 600px;
    }

    .splitter-container {
        height: 90vh !important;
        width: 100%;
    }

    .treeview .k-in {
        width: 100% !important;
    }
    /*Portal Start*/
    .sidenav {
        height: 100%; /* 100% Full-height */
        width: 0; /* 0 width - change this with JavaScript */
        position: fixed; /* Stay in place */
        z-index: 100; /* Stay on top */
        top: 0; /* Stay at the top */
        right: 0;
        background-color: #fff; /* Black*/
        border-left: 1px solid silver;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 30px; /* Place content 60px from the top */
        transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    }



        /* Position and style the close button (top right corner) */
        .sidenav .closebtn {
            position: absolute;
            top: 0;
            right: 15px;
            font-size: 30px;
            font-weight: bold;
            margin-left: 20px;
            color: gray;
            border: none;
            text-decoration: none;
        }

            .sidenav .closebtn:hover {
                color: red;
            }

    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }

    #portal-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #overlay {
        position: fixed;
        background: rgba(0,0,0,.5);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
        width: 100%;
        height: 100%;
        z-index: 99;
        right: 100%;
        top: 0;
        /*  transition: right .5s ease;*/
    }

    .overlay {
        right: 0 !important;
        /* transition: right .5s ease !important;*/
    }

    .cms-panel-header-name {
        font-size: 16px;
        font-weight: 700;
        padding: 0 10px;
        width: 80%;
    }

    #mailfolders {
        border-right: solid;
        background-color: lightblue;
    }

    .linkButton a {
        background: none !important;
        border: none;
        padding: 0 !important;
        font-family: arial,sans-serif; /*input has OS specific font-family*/
        color: #069;
        text-decoration: underline;
        cursor: pointer;
    }

        .linkButton a:hover {
            background: none !important;
            border: none;
            padding: 0 !important;
            font-family: arial,sans-serif; /*input has OS specific font-family*/
            color: #069;
            text-decoration: underline;
            cursor: pointer;
        }
    /*Portal End*/
    .banner-container {
        position: relative;
        color: white;
    }

    .banner-text {
        position: absolute;
        top: 14px;
        left: 60px;
        font-size: 35px;
    }
</style>
<script id="select-email" type="text/x-kendo-template">
    #if(EmailType=='INBOX' && TaskId!='' ){#
    @*@(Html.Kendo().RadioButton().Name("select-task").Checked(false).Label("Link")
.HtmlAttributes(new { onchange = "OnCheckBox(\"#=TaskId#\")" })
)*@

    <section class="section-preview">
    <div class="custom-control custom-radio custom-control-inline">
         <input type="radio" class="custom-control-input" id="select-task" name="select-task" onchange="OnCheckBox('#=TaskId#');">
         <label class="custom-control-label" for="select-task">Link</label>
    </div>
    </section>
    #}#

</script>
<script>
    var treeviewid = "";
    $(document).ready(function () {
        //$(".toggle-nav").trigger("click");
        //var treeview = $("#inboxTreeView"),
        //    kendoTreeView = treeview.data("kendoTreeView");

        //treeview.on("click", ".k-in", function (e) {
        //    kendoTreeView.toggle($(e.target).closest(".k-item"));
        //});
      //  $("#kgdSelfGridView").data('kendoGridView').dataSource.read({ id: "INBOX" });

        GetCompanyEmail();
    });

    function OnCheckBox(id) {
        selectedEmail = id;
        if ('@ViewBag.Module' == "PJM") {

             var url = "/pjm/EmailTask/ViewProjectWithWBSItem?id=" + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
       win.OpenWindow({ Title: '@Html.Raw(SharedResource["WBSItem"])', Width: 1400, Height: 1200 });
        return false;
        }

    }

    function linktask(id) {
        selectedEmail = id;

         var url = "/cms/NtsTask/TaskHome?rs=EmailTask&lo=@LayoutModeEnum.Popup";
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
       win.OpenWindow({ Title: '@Html.Raw(Resource["WBSItem"])', Width: 1400, Height: 1200 });
        return false;
    }

     function linkservice(id) {
        selectedEmail = id;

          var url = "/cms/NtsService/ServiceHome?rs=EmailTask&lo=@LayoutModeEnum.Popup";
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
       win.OpenWindow({ Title: '@Html.Raw(Resource["WBSItem"])', Width: 1400, Height: 1200 });
        return false;
    }

     function linknote(id) {
        selectedEmail = id;

          var url = "/cms/NtsNote/NoteHome?rs=EmailTask&lo=@LayoutModeEnum.Popup";
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
       win.OpenWindow({ Title: '@Html.Raw(Resource["WBSItem"])', Width: 1400, Height: 1200 });
        return false;
    }

    function CloseWBSSelect(sid, parentId, type) {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
        var tid = selectedEmail;//$("#select-task").data("kendoRadioButton").value();
        $.ajax({
            type: "POST",
            url: "/pjm/emailTask/ManageEmailTask?id=" + tid + "&taskId=" + sid + "&parentId=" + parentId + "&type=" + type,
            success: function (data) {
                if (data.success) {
                    ShowNotification("@SharedResource["Email"] " + type + " @Resource["LinkedSuccessfully"]");
                  //  $("#treelist1").data("kendoTreeList").dataSource.read();
                }
                else {
                    ShowNotification("@SharedResource["Email"] " + type + " @Resource["LinkedFailed"]!");
                }
            },
            dataType: "json",
        });
    }

        function CloseGeneralSelect(sid, type) {


            var win = GetMainWindow();
            win.CloseWindow();
            return false;
            var tid = selectedEmail;//$("#select-task").data("kendoRadioButton").value();
            $.ajax({
            type: "POST",
            url: "/pjm/emailTask/ManageGeneralEmailTask?id=" + tid + "&refId=" + sid + "&type=" + type,
            success: function (data) {
                if (data.success) {
                    ShowNotification("@SharedResource["Email"] " + type + " @Resource["LinkedSuccessfully"]");
                  //  $("#treelist1").data("kendoTreeList").dataSource.read();
                }
                else {
                    ShowNotification("@SharedResource["Email"] " + type + " @Resource["LinkedFailed"]!");
                }
            },
            dataType: "json",
        });
    }



    function OnSelect(/*e*/id) {
        //expandedObjlist = [];

      //  var data = this.dataItem(e.node);
        //$("#kgdSelfGridView").data('kendoGrid').dataSource.read({ id: data.id });
        var url = "/PJM/EmailTask/ReadEmailTasks1?id=" + /*data.*/id;
        GetCompanyEmail(url);

    }

    function AddTask(data) {
        
       //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
       // var id = $("#" + subject);
       // var bd=id.attr("data-Body");
       // alert(subject);
        var portalId = $('#GlobalPortalId').val();
        var dataItem = data;
        //var prms = encodeURIComponent('subject=' + subject  + '&ownerUserId=' + fromid + '&assignedToUserId=' + '@_userContext.UserId');

        var prms = encodeURIComponent('subject=' + dataItem.Subject + '&ownerUserId=' + dataItem.FromUserId + '&description=' + dataItem.Body + '&assignedToUserId=' + '@_userContext.UserId');
        var udfs = encodeURIComponent('MessageId=' + dataItem.MessageId );
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=Create&dataAction=Create&templateCodes=EMAIL_TASK&portalId=' + portalId + '&prms=' + prms + '&udfs=' + udfs;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(SharedResource["CreateTask"])', Width: 1200, Height: 600 });
        return false;
    }

    function AddCopyEmail(id) {
        
       //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
       // var id = $("#" + subject);
       // var bd=id.attr("data-Body");
        // alert(subject);

        ShowLoader($('#main_Div'));
        var url = "@Url.Action("SaveEmailToNtsType", "EmailTask", new { @area = "PJM" })";
        @*var model = { NtsType: '@ViewBag.NtsType', Id: dataItem.MessageId, templateCode: '@ViewBag.TemplateCode', prms: '@ViewBag.Prms' };*@
        var model = { NtsType: '@ViewBag.NtsType', Id: id, templateCode: '@ViewBag.TemplateCode', prms: '@ViewBag.Prms' };
        $.post(url, model, function (res) {
            if (res.success) {


                var portalId = '@_userContext.PortalId'; //'8edc86b3-9934-46e3-95de-d76c816404b4';
                var prms = encodeURIComponent('@Html.Raw(ViewBag.Prms)');

                //var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=Create&dataAction=Create&templateCodes=EMAIL_TASK&portalId=' + portalId + '&prms=' + prms + '&attachments=' + dataItem.AttachmentIds;
                var url = '/Cms/Page?lo=Popup&cbm=@ViewBag.cbm&source=Versioning&dataAction=Edit&templateCodes=' + res.TemplateCode + '&portalId=' + portalId + '&recordId=' + res.Id + '&prms=' + prms;
                var win = GetMainWindow();
                win.CloseWindow({ MethodName: '@ViewBag.cbm' });
                win.ShowNotification("Saved Successfully", "success");
                //win.iframeOpenUrl = url;
                //win.OpenWindow({ Title: 'View', Width: 1200, Height: 600, Reload:true});
                HideLoader($('#main_Div'));
                return false;

            } else { HideLoader($('#main_Div')); }
        });
        //var prms = encodeURIComponent('subject=' + subject  + '&ownerUserId=' + fromid + '&assignedToUserId=' + '@_userContext.UserId');

    }

    function OnAfterTaskCreate(service) {
        //$("#kgdSelfGridView").data('kendoGrid').dataSource.read({ id: "INBOX" });
        var url = "/PJM/EmailTask/ReadEmailTasks1?id=INBOX";
        GetCompanyEmail(url);

    }
    function ViewTask(data) {
        //$(e).removeClass("k-state-selected");
       // e.sender.element.closest("tr").find(".k-state-selected").removeClass(".k-state-selected");
        var portalId = $('#GlobalPortalId').val();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var dataItem = data;
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=View&dataAction=View&templateCodes=EMAIL_TASK&portalId=' + portalId + '&recordId=' + dataItem.TaskId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(SharedResource["ViewTask"])', Width: 1200, Height: 600 });
        return false;
    }

    function onEmail(data)
    {
        
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var dataItem = data;
        url = '@Url.Action("NtsEmail", "Cms", new { @area = "" })?refId=' + dataItem.TaskId + '&refType=@ReferenceTypeEnum.NTS_Task';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(SharedResource["Email"])', Width: 1200, Height: 600 });
    }

    function onExpand(e) {

    }

    function refreshInbox() {
        $("#inboxTreeView").data('kendoTreeView').dataSource.read();
        //$("#inboxTreeView").data('kendoTreeView').expandPath(["INBOX","0515a39a-35fa-4b7c-b7b4-4230c52890ec", "Overseas Business Visa", "Staff Joining", "UPLOAD_PASSPORT_VISA_QATARID"]);
    }

    function getcompanyinbox() {
      LoadPartailView('@Url.Action("CompanyEmails", "EmailTask", new { @area = "Pjm" ,Id= ViewBag.Id})', $('#company'));
    }

    function getprojectinbox() {
        // $("#inboxTreeView").data('kendoTreeView').dataSource.read({ config: "project" });
       LoadPartailView('@Url.Action("ProjectEmails", "EmailTask", new { @area = "Pjm",Id= ViewBag.Id })', $('#project'));
    }
    function onDataBound(arg) {
        $("#kgdSelfGridView tbody tr").each(function () {
            var currentDataItem = $("#kgdSelfGridView").data("kendoGrid").dataItem($(this));
            var add = $(this).find(".k-grid-AddTask");
            var viewt = $(this).find(".k-grid-ViewTask");
            var viewe = $(this).find(".k-grid-ViewMail");

            //update.click(function () {
            //    OnEdit("Update", currentDataItem.Id);
            //});
            //correct.click(function () {
            //    OnEdit("Correct", currentDataItem.Id);
            //});
            //del.click(function () {
            //    OnEdit("Delete", currentDataItem.Id);EmailType=='INBOX' && TaskId!=''
            //});EmailType=='INBOX' && TaskId=='' && IsTaskCreated==false

            if (currentDataItem.EmailType == 'INBOX' && currentDataItem.TaskId == '') {
                viewt.remove();
                viewe.remove();
            }
            else if (currentDataItem.EmailType == 'INBOX' && currentDataItem.TaskId != '') {
                add.remove();
            }
            else {
                add.remove();
                viewt.remove();
                viewe.remove();
            }
        });
    }

    function OnChange(e) {

        var a = document.getElementById("kgdSelfGridView_active_cell");
        var classname = a.className;
        if (classname.includes("k-command-cell")) {
            e.preventDefault();
            return false;
        }
        var selectedRows = this.select();
        var selectedDataItems = [];
        for ( i = 0; i < selectedRows.length; i++) {
            var dataItem = this.dataItem(selectedRows[i]);
             selectedDataItems.pus_userContext(dat_userContexttem);
            //url = '@Url.Action("ViewEmail", "Cms", new { @area = ""})?subject=' + dataItem.Subject + '&body=' + dataItem.Body + 'Htmltmlto=' + dataItem.To + '&from=' + dataItem.From + '&cc=' + dataItem.Cc + '&bcc=' + dataItem.Bcc;
            var prms = encodeURIComponent('subject=' +ViewBagBagiewBagataItem.Subject + '&body=' + dataItem.Body + '&to=' + dataItem.To + '&from=' + dataItem.From + '&cc=' + dataItem.Cc + '&bcc=' + dataItem.Bcc);
            url = '@Url.Action("ViewEmail", "Cms", new { @area = ""})?prms=' + prms;
            var win = GetMainWindow();
                win.iframeOpenUrl = url;
            win.OpenWindow({ Title: '@Html.Raw(Resource["ViewEmail"])', Width: 1200, Height: 900 });

        }
        // selectedDataItems contains all selected data items
        //console.log(selectedDataItems);
    }

    $(function () {
        $.contextMenu({
            selector: '#link-menu',
            trigger: 'left',
            build: function ($trigger, e) {

                console.log($trigger);
                var id = $trigger.data('idvalue');
                var status = 0;

                switch (status) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'LinkTask':
                                        linktask(id);
                                        break;
                                    case 'LinkService':
                                        linkservice(id);
                                        break;
                                    case 'LinkNote':
                                        linknote(id);
                                        break;
                                    default:
                                }
                            },
                            items: {
                                "LinkTask": { name: "Link to Task", icon: "fas fa-link" },
                                "LinkService": { name: "Link to Service", icon: "fas fa-link" },
                                "LinkNote": { name: "Link to Note", icon: "fas fa-link" },
                            }
                        };
                }
            }
        });

        //grid context menu
        $.contextMenu({
            selector: '#grid-menu-item',
            trigger: 'left',
            build: function ($trigger, e) {
                
                console.log($trigger);
                var emailType = $trigger.data('typevalue');
                var taskId = $trigger.data('taskvalue');
                var status = (emailType == 'INBOX' && taskId != '')?0:1;

                switch (status) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {                                    
                                    case 'viewTask':
                                        ViewTask(taskId);
                                        break;
                                    case 'viewMail':
                                        onEmail(taskId);
                                        break;
                                    default:
                                }
                            },
                            items: {
                                "viewTask": { name: "View Task", icon: "fas fa-eye" },
                                "viewMail": { name: "View Mail", icon: "far fa-envelope-open-text" },
                            }
                        };
                    case 1:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'addTask':
                                        AddTask(taskId);
                                        break;                                    
                                    default:
                                }
                            },
                            items: {
                                "addTask": { name: "Add Task", icon: "fa-plus" },                                
                            }
                        };
                }
            }
        });

    });

    function OnChange1(e) {

        var a = document.getElementById("kgdCompanyGridView_active_cell");
        var classname = a.className;
        if (classname.includes("k-command-cell")) {
            e.preventDefault();
            return false;
        }
        var selectedRows = this.select();
        var selectedDataItems = [];
        for (var i = 0; i < selectedRows.length; i++) {
            var dataItem = this.dataItem(selectedRows[i]);
            //  selectedDataItems.push(dataItem);
            // url = '@Url.Action("ViewEmail", "Cms", new { @area = ""})?subject=' + dataItem.Subject + '&body=' + dataItem.Body + '&to=' + dataItem.To + '&from=' + dataItem.From + '&cc=' + dataItem.Cc + '&bcc=' + dataItem.Bcc;
            var prms = encodeURIComponent('subject=' + dataItem.Subject + '&body=' + dataItem.Body + '&to=' + dataItem.To + '&from=' + dataItem.From + '&cc=' + dataItem.Cc + '&bcc=' + dataItem.Bcc);
            url = '@Url.Action("ViewEmail", "Cms", new { @area = ""})?prms=' + prms; var win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Title: '@Html.Raw(Resource["ViewEmail"])', Width: 1200, Height: 900 });
        }
    }

    function onDataBound1(arg) {
        $("#kgdCompanyGridView tbody tr").each(function () {
            var currentDataItem = $("#kgdCompanyGridView").data("kendoGrid").dataItem($(this));
            var add = $(this).find(".k-grid-AddTask");
            var viewt = $(this).find(".k-grid-ViewTask");
            var viewe = $(this).find(".k-grid-ViewMail");

            if (currentDataItem.EmailType == 'INBOX' && currentDataItem.TaskId == '' && currentDataItem.IsTaskCreated == false) {
                viewt.remove();
                viewe.remove();
            }
            else if (currentDataItem.EmailType == 'INBOX' && currentDataItem.TaskId != '') {
                add.remove();
            }
            else {
                add.remove();
                viewt.remove();
                viewe.remove();
            }
        });
    }
    function onSearch() {
        
        var val = $('#mysearch').val();
        var search = {
            search: val,
        };
        //$("#kgdSelfGridView").data("kendoGrid").dataSource.read(search);
        var url = "/PJM/EmailTask/ReadEmailTasks1?search=" + val;
        GetCompanyEmail(url);
    }

    $(function () {
        GetCompanyEmail();
    });

    function GetCompanyEmail(url) {
        
        var newUrl = "";
        if (url != "" && url != undefined) {
            newUrl = url;
        }
        else {
            newUrl = "/PJM/EmailTask/ReadEmailTasks1";
        }
        document.getElementById("kgdSelfGridView1").innerHTML = "";
        gridConfig(
            "kgdSelfGridView1",
            newUrl,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    var columnDefs = [
                            {
                                field: "MessageId",
                                headerName: "@Resource["Action"]",
                                cellRenderer: params => {
                                    if ('@ViewBag.Module' == "PJM") {
                                        if (params.data.EmailType == 'INBOX' && params.data.TaskId != '') {
                                            return "<section class='section-preview'>"+
                                                "<div class='custom-control custom-radio custom-control-inline'>"+
                                                " <input type='radio' class='custom-control-input' id='select-task' name='select-task' onchange='OnCheckBox(\"" + params.data.TaskId + "\");'>" +
                                                "<label class='custom-control-label' for='select-task'>Link</label>" +
                                                "</div>" +
                                                "</section>"
                                        }
                                    }
                                    else if ('@ViewBag.Module' == "COPY_EMAIL") {
                                        return "<button class='linkButton' onclick='AddCopyEmail(\"" + params.value + "\")'>Save</button>"
                                    }
                                    else {
                                        return "if('" + params.data.EmailType + "' == 'INBOX' && '" + params.data.TaskId +"'!='' ){<div class='btn-group grid-menu' id='link-menu' data-idvalue=\"" + params.data.TaskId + "\" ><i class='fas fa-ellipsis-v'></i></div>}"

                                    }
                               }
                            },
                            {
                                field: "To",
                                headerName: "@SharedResource["To"]",
                            },
                            {
                                field: "From",
                                headerName:"@SharedResource["From"]",width:200
                            },
                            {
                                field: "Subject",
                                headerName: "@SharedResource["Subject"]", width: 100,
                            },
                            {
                                field: "Bcc",
                                headerName: "@Resource["Bcc"]", width: 200,
                            },
                            {
                                field: "Cc",
                                headerName: "@Resource["Cc"]", width: 200,
                            },
                            {
                                field: "MessageId",
                                headerName: "@Resource["Action"]",
                                cellRenderer: params => {
                                    return "<div class='btn-group grid-menu' id='grid-menu-item' data-typevalue=\"" + params.data.EmailType + "\" data-taskvalue=\"" + params.data.TaskId + "\"><i class='fas fa-ellipsis-v'></i></div>"
                               }
                            },
                        ];

</script>
<div class="banner-container">
    <img style="width:100%; height:100px" src="~/images/HRBanners/Inbox.png" />
    <div class="banner-text">Inbox</div>
</div>
<div class="card-header" style="padding:10px;">
    @*<div class="container col-sm-5">*@
    <ul class="nav nav-tabs" role="tablist">
        @if (ViewBag.Module == "COPY_EMAIL")
        {
            <li class="nav-item"><a data-toggle="tab" href="#self" class="nav-link active" role="tab" aria-controls="self" aria-selected="true" @*onclick="getselfinbox();"*@>@Resource["SelfInbox"]</a></li>

        }
        else
        {
            <li class="nav-item"><a data-toggle="tab" href="#self" class="nav-link active" role="tab" aria-controls="self" aria-selected="true" @*onclick="getselfinbox();"*@>@Resource["SelfInbox"]</a></li>

            @if (ViewBag.Admin == true)
            {
                <li class="nav-item" id="litaskindex">

                    <a data-toggle="tab" href="#company" class="nav-link" aria-controls="company" aria-selected="false" onclick="getcompanyinbox(); ">@Resource["SystemInbox"]</a>
                </li>
            }
            @if (ViewBag.Module == "PJM")
            {
                <li class="nav-item" id="litaskscriptpage">
                    <a data-toggle="tab" href="#project" class="nav-link" aria-controls="project" aria-selected="false" onclick="getprojectinbox();">@Resource["ProjectInbox"]</a>
                </li>
            }
        }


    </ul>
    <div class="tab-content" id="main_Div">
        <div id="self" class="tab-pane  in active" role="tabpanel" aria-labelledby="self-tab">
            <div class="row" style="padding-left:15px">
                <div class="col-3" id="mailfolders">
                    <script>
                        $('#inboxTreeView')
                            .on('changed.jstree', function (e, data) {
                                var i, j, r = [];
                                for (i = 0, j = data.selected.length; i < j; i++) {
                                    
                                    nodetext = data.instance.get_node(data.selected[i]).text;
                                    //  Type = data.instance.get_node(data.selected[i]).original.Type;
                                    Id = data.instance.get_node(data.selected[i]).original.id;
                                    // ParentId = data.instance.get_node(data.selected[i]).original.ParentId;
                                    OnSelect(Id);
                                }

                            })
                            .jstree({
                                'core': {
                                    'data': function (node, cb) {
                                        
                                        if (node.id === "#") {
                                            $.ajax({
                                                async: true,
                                                type: "GET",
                                                url: "/PJM/EmailTask/GetInboxTreeviewList",
                                                dataType: "json",
                                                success: function (json) {
                                                    cb(json);
                                                },

                                                error: function (xhr, ajaxOptions, thrownError) {
                                                    alert(xhr.status);
                                                    alert(thrownError);
                                                }
                                            });
                                            //cb([{ "text": "Root", "id": "1", "children": true }]);
                                        }
                                        else {
                                            $.ajax({
                                                async: true,
                                                type: "GET",
                                                url: "/PJM/EmailTask/GetInboxTreeviewList?id=" + node.id,
                                                dataType: "json",
                                                success: function (json) {
                                                    cb(json);
                                                },

                                                error: function (xhr, ajaxOptions, thrownError) {
                                                    alert(xhr.status);
                                                    alert(thrownError);
                                                }
                                            });
                                        }
                                    }
                                }
                            });
                    </script>
                    <div id="inboxTreeView" class="demo treeview"></div>
                    @*@(Html.Kendo().TreeView()
            .Name("inboxTreeView").HtmlAttributes( new {@class="treeview"})
          .Events(e=>e.Expand("onExpand").Select("OnSelect"))
            .DataTextField("Name")
            .TemplateId("ct-tv-template")
            .DataSource(dataSource => dataSource
                .Read(read => read
                    .Action("GetInboxTreeviewList", "EmailTask",new { @area="PJM"})//.Data("AddData")
                )
            )
        )*@
                </div>
                <div class="col-9">
                    <div class="row">
                        <div class="col-sm-4 form-group has-search pull-right">

                            <input id="mysearch" type="text" class="form-control">

                        </div>
                        <div class="col-sm-3 form-group">


                            <button class="btn btn-filter-reset" onclick="onSearch()">Search</button>

                        </div>
                    </div>

                    <div id="kgdSelfGridView1" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

                    @*@(Html.Kendo().Grid<MessageEmailViewModel>()
    .Name("kgdSelfGridView")
    .Columns(columns =>
    {
        //        columns.Select().Width(75).HtmlAttributes(new { @class = "checkbox-align" }).HeaderHtmlAttributes(new { @class = "checkbox-align" });
        if (ViewBag.Module == "PJM")
        {
            columns.Bound(p => p.MessageId).Title(@SharedResource["Action"]).ClientTemplateId("select-email").Width(100);
        }
        else if (ViewBag.Module == "COPY_EMAIL")
        {
            columns.Command(command => command.Custom("Save").Click("AddCopyEmail")).Width(110).Title("Action").HtmlAttributes(new { @class = "linkButton" });
        }
        else
        {
            columns.Bound(c => c.MessageId).ClientTemplate("#if(EmailType=='INBOX' && TaskId!='' ){#<div class='btn-group grid-menu' id='link-menu' data-idvalue=\"#:TaskId#\"  ><i class='fas fa-ellipsis-v'></i></div>#}#").Width(150).Title("" + SharedResource["Action"] + "");
        }
        columns.Bound(p => p.To).Title(@SharedResource["To"]).Width(300);
        columns.Bound(p => p.From).Title(@SharedResource["From"]).Width(250);
        columns.Bound(p => p.Subject).Title(@SharedResource["Subject"]).Width(250);
        //  columns.Bound(p => p.Body).Title(@SharedResource["Body"]).ClientTemplate("#if(Body!=null&&Body.length>30){# # var myContent =Body; #  # var dcontent = myContent.substring(0,30); # <span>#=kendo.toString(dcontent)#</span> #}else{# <span>#=Body#</span> #}#").Width(200);
        columns.Bound(p => p.Bcc).Title(@Resource["BCC"]).Width(200);
        columns.Bound(p => p.Cc).Title(@Resource["CC"]).Width(200);
        columns.Bound(p => p.MessageId).Title(@Resource["MessageId"]).Visible(false).Width(200);
        columns.Bound(p => p.AttachmentIds).Title("").Visible(false).Width(200);
        // columns.Bound(p => p.MessageId).ClientTemplate("#if(EmailType=='INBOX' && TaskId=='' && IsTaskCreated==false){#<i class='fa fa-plus' title='AddTask' data-Body='#:Body#' id='#:Subject#' onclick='AddTask(\"#:MessageId#\",\"#:Subject#\",\"#:FromUserId#\");'></i> #} else if(EmailType=='INBOX' && TaskId!='' ){#<i class='fa fas fa-eye' title='ViewTask' onclick='ViewTask(\"#:TaskId#\")'></i>&nbsp;&nbsp;  <i class='far fa-envelope-open-text' onclick='onEmail(\"#:TaskId#\")'></i> #}#").Title(" ").Width(100).Sortable(false);
        columns.Command(command =>
        {
            command.Custom("AddTask").Text("<i class='fa fa-plus' title='AddTask'></i>").Click("AddTask").HtmlAttributes(new { @class = "action-icon" });
            command.Custom("ViewTask").Text("<i class='fa fas fa-eye' title='ViewTask'></i>").Click("ViewTask").HtmlAttributes(new { @class = "action-icon", title = "View Task" });
            command.Custom("ViewMail").Text("<i class='far fa-envelope-open-text' title='ViewMail'></i>").Click("onEmail").HtmlAttributes(new { @class = "action-icon", title = "View Mail" });

        }).Width(150).Exportable(false).Title(" ");
    })
    .ToolBar(toolbar =>
    {

        //toolbar.Search().Text(@SharedResource["Search"]);
    })/*.Selectable(s=>s.Mode(GridSelectionMode.Single)).PersistSelection(true)*/
    .ColumnMenu(col=>col.Filterable(false))
    .Height(700)
    .Editable()
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .Sortable()
    .Navigatable()
    .Resizable(r=>r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Groupable(g=>g.ShowFooter(false))
    .Filterable()
    .Scrollable()
    .Events(events => events.DataBound("onDataBound").Change("OnChange"))
    .DataSource(dataSource => dataSource
        .Ajax()
        // .Batch(true)
        .PageSize(10)
        // .AutoSync(true)
        // .ServerOperation(false)
        //.Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.MessageId);
        })
        .Read(read=>
        read.Action("ReadEmailTasks", "EmailTask", new { @area = "PJM"/*, id = ViewBag.Id*/ })
        )


    )
)*@
                </div>
            </div>


        </div>
        <div id="company" class="tab-pane " role="tabpanel" aria-labelledby="company-tab">


        </div>
        <div id="project" class="tab-pane " role="tabpanel" aria-labelledby="project-tab">


        </div>

    </div>
</div>
<!--<div class="splitter-container">
    <div class="left" style="padding-left:20px">
       @* @(Html.Kendo().TreeView()
        .Name("inboxTreeView").HtmlAttributes( new {@class="treeview"})
      .Events(e=>e.Expand("onExpand").Select("OnSelect"))
        .DataTextField("Name")
        .TemplateId("ct-tv-template")
        .DataSource(dataSource => dataSource
            .Read(read => read
                .Action("GetInboxTreeviewList", "EmailTask",new { @area="PJM"})
            )
        )
    )*@


        <script id="ct-tv-template" type="text/kendo-ui-template">
            <span style="width:100%" id="#: item.id #" class="tree-item-#:item.Type.toLowerCase()#">#: item.Name #</span>

        </script>-->
@*<span data-id="#:item.id#" data-type="#:item.Type#" data-portal-name="#:item.Name#" data-parent-id="#:item.ParentId#" class="tree-menu" data-level="#:item.Level#"><i class="fa fa-ellipsis-h"></i></span>*@

<!--</div>
<div class="right pad-l-t-15" id="inbox-content-div" style="width:100%;">-->
@*<iframe id="iframeData" width="100%" height="400px" style="border:none;" ></iframe>*@
<!--</div>
</div>-->
<div id="create-category-div">
    <div id="mySidenavPageCategory" class="sidenav">
        <h1 class="cms-panel-header-name" id="sidebarHeader">@Resource["CreateCategory"]</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNavCategory()" title="@SharedResource["Close"]">&times;</a>
        <hr />
        <div id="create-category" class="row pad-20 slidenav-flow">

        </div>
    </div>
</div>
