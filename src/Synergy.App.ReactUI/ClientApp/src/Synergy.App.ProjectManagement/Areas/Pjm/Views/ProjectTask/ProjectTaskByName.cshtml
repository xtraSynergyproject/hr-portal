@inject IStringLocalizer<CMS.UI.Web.Areas.PJM.Controllers.ProjectTaskController> Resource
@using Synergy.App.DataModel
@using Synergy.App.WebUtility
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common

@model TeamWorkloadViewModel
@{
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}

<style>
    .listViewDoc {
        border: none;
        border-radius: 6px;
        overflow-x: hidden;
    }

    input.largerCheckbox {
        width: 15px;
        height: 20px;
        background-color: #2196F3;
    }

    .board {
        border: none;
        overflow-x: scroll;
        display: flex;
    }

    .card_task {
        border-color: #209EB8;
    }

    .newtask {
        background-color: black;
        color: #fff;
    }

    .tasklist {
        background-color: #209EB8;
        color: #fff;
        border-radius: 0px 0px 3px 3px;
    }

    .taskname {
        /*color: #1D6EF4;*/
        color: black;
    }

    .drp-user-photo {
        height: 50px;
        width: 50px;
        border-radius: 30px;
    }

    #board > .k-listview-content {
        display: flex;
    }

    .k-listview-content {
        overflow: unset;
    }

    #listView {
        padding: 10px 5px;
        margin-bottom: -1px;
        min-height: 510px;
    }

    .scrollbtn {
        background-color: #4E4D4D;
        color: white;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 2px;
    }

    .k-treeview-lines {
        overflow-x: scroll;
        width: 100%;
    }
    .banner-container {
        position: relative;
        color: white;
    }

    .banner-text {
        position: absolute;
        top: 14px;
        left: 60px;
        font-size: 35px;
    }
</style>

<script>
    $(document).ready(function () {
        GetPTNData();
        window.parent.LoadPartailView1("/pjm/ProjectTask/ProjectDetailsFilter", 'ProjectFilter');
        HideLoader($("#global-overlay"));
    });

    var columnDefs = [
        {
            field: "Title",
            headerName:"@SharedResource["Subject"]"
        },
        {
            field: "ProjectName",
            headerName:"@SharedResource["Project"]"
        },
        {
            field: "ServiceStage",
            headerName:"@SharedResource["Stage"]"
        },
        {
            field: "OwnerName",
            headerName:"@SharedResource["Sender"]"
        },
        {
            field: "UserName",
            headerName:"@SharedResource["Receiver"]"
        },
        {
            field: "Priority",
            headerName:"@SharedResource["Priority"]"
        },
        {
            field: "NtsStatus",
            headerName:"@SharedResource["Status"]"
        },
        {
            field: "Start",
            headerName: "@SharedResource["StartDate"]",
            cellRenderer: params => {
                var date = new Date(params.value);
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [day, month, year].join('.');
            }
        },
        {
            field: "End",
            headerName: "@SharedResource["DueDate"]",
            cellRenderer: params => {
                var date = new Date(params.value);
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                return [day, month, year].join('.');
            }
        },
    ];

    function GetPTNData(urlnew) {
        var url = "";
        if (urlnew != "" && urlnew != null) {
            url = urlnew;
        } else {
            url = "/PJM/ProjectTask/ReadProjectUserWorkloadGridViewData";
        }
        document.getElementById("kgdPTN").innerHTML = "";
        gridConfig(
            "kgdPTN",
            url,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

  //$(function () {
  //
  //      $.contextMenu({
  //          selector: '.tree-menu1',
  //          trigger: 'left',
  //          build: function ($trigger, e) {
  //             // var parentId = $trigger.data('id');
  //              var parentType = $trigger.data('type');
  //              //var selectParentId = $trigger.data('parentId');

  //              //switch (parentType) {
  //              //    case 'Root':
  //                      return {
  //                          callback: function (key, options) {
  //                              switch (key) {
  //                                  case 'add':
  //                                     break;
  //                                  case 'edit':
  //                                   break;
  //                                  case 'delete':
  //                                    break;
  //                                  default:
  //                              }
  //                          },
  //                          items: {
  //                              "add": { name: "Create Sub Task", icon: "fas fa-pencil" },
  //                              "edit": { name: "Edit Sub Task", icon: "fas fa-pencil" },
  //                              "delete": { name: "Delete Sub Task", icon: "fas fa-trash" },
  //                          }
  //                      };
  //              //}


  //          }
  //      });
  //});

    function OnSelect(e) {        
        e.preventDefault();
    }

    var splitter = $('.splitter-container').height(200).split({
        orientation: 'vertical',
        limit: 10,
        position: '20%', // if there is no percentage it interpret it as pixels
        onDrag: function (event) {
            console.log(splitter.position());
        }
    });

    function OnTask(userId) {
        var portalId = $('#GlobalPortalId').val();
        var prms = encodeURIComponent('parentServiceId=@Model.Id&assignedToUserId=' + userId);
            var url = '/Cms/Page?source=Create&dataAction=Create&pageName=ProjectTask&portalId=' + portalId + '&prms=' + prms;

            LoadCmsPartialView(url, 'Task', true, 1200, 650, '@Html.Raw(SharedResource["CreateTask"])');
            return false;
    }

    function OnSubTask(parentTaskId) {
        var portalId = $('#GlobalPortalId').val();
        var prms = encodeURIComponent('parentServiceId=@Model.Id&parentTaskId=' + parentTaskId);
            var url = '/Cms/Page?source=Create&dataAction=Create&pageName=ProjectTask&portalId=' + portalId + '&prms=' + prms;

            LoadCmsPartialView(url, 'Task', true, 1200, 650, '@Html.Raw(SharedResource["CreateSubtask"])');
            return false;
    }

    function EditTask(taskId) {
        var portalId = $('#GlobalPortalId').val();
        var prms = encodeURIComponent('parentServiceId=@Model.Id');
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=Versioning&dataAction=Edit&pageName=ProjectTask&portalId=' + portalId + '&recordId=' + taskId + '&prms=' + prms;

            LoadCmsPartialView(url, 'Task', true, 1200, 650, '@Html.Raw(SharedResource["EditTask"])');
            return false;
    }

    function OnGridGroupByUser() {
        var g = $("#kgdPTN").data("kendoGrid");
       // var g = $("#kgdProjectGridView").data("kendoGrid");
        g.dataSource.group([{ field: "UserName" }, { field: "ProjectName" }]);

    }
    function OnGridGroupByProject() {
        //var g = $("#kgdProjectGridView").data("kendoGrid");
        var g = $("#kgdPTN").data("kendoGrid");
        g.dataSource.group({ field: "ProjectName" });
    }
    function onSearch() {
        
       // var search = {
       //     projectIds: $("#ProjectFiltersIds").data("kendoMultiSelect").value(),
       //     recieverids : $("#Receiver").data("kendoMultiSelect").value(),
       //     senderIds : $("#Sender").data("kendoMultiSelect").value(),
       //     statusIds : $("#Status").data("kendoMultiSelect").value(),
       //     column: $("#Column").data("kendoDropDownList").value(),
       //     dateRange: $("#DateType").data("kendoDropDownList").value(),
       //     fromDate : kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
       //     toDate : kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
       // };
       //// $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
       // $("#kgdPTN").data("kendoGrid").dataSource.read(search);

        var projectIds = $("#ProjectFiltersIds").data("kendoMultiSelect").value();
        var recieverids = $("#Receiver").data("kendoMultiSelect").value();
        var senderIds = $("#Sender").data("kendoMultiSelect").value();
        var statusIds = $("#Status").data("kendoMultiSelect").value();
        var column = $("#Column").data("kendoDropDownList").value();
        var dateRange = $("#DateType").data("kendoDropDownList").value();
        var fromDate = kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');
        var toDate = kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');

        var newurl = "/PJM/ProjectTask/ReadProjectUserWorkloadGridViewData?projectIds=" + projectIds + "&recieverids=" + recieverids + "&senderIds=" + senderIds +
            "&statusIds=" + statusIds + "&column=" + column + "&dateRange=" + dateRange + "&fromDate=" + fromDate + "&toDate=" + toDate;
        GetPTNData(newurl);
        HideLoader($("#global-overlay"));
    }
    function onReset() {
        window.parent.LoadPartailView1("/pjm/ProjectTask/ProjectDetailsFilter", 'ProjectFilter');
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read();
        //$("#kgdPTN").data("kendoGrid").dataSource.read();
       GetPTNData();
        HideLoader($("#global-overlay"));
    }
</script>


@*<div style=""><img style="width:100%; height:100px" src="~/images/Project User Workload.png" /></div>*@
<div class="banner-container">
    <img style="width:100%; height:100px" src="~/images/pmt/Project User Workload.jpg" />
    <div class="banner-text">Subordinate Task Workload</div>
</div>

<div class="row hr-pad-top-10">
    @*<div class="col-md-6">
            <h4>
                Project Team Workload
            </h4>
        </div>*@
</div>


<div id="ProjectFilter">

</div>
<div class="row" style="padding-right:10px;">
    @*<div class="col-md-12" style="text-align: right;">
        <a href="javascript: void(0); onclick=OnGridGroupByUser()" class="btn btn-sm btn-primary" title="@Resource["GroupbyReceiver&Project"]"><i class="fas fa-list-alt fa-1x"></i></a>&nbsp;&nbsp;
        <a href="javascript: void(0); onclick=OnGridGroupByProject()" class="btn btn-sm btn-primary" title="@Resource["GroupbyProject"]"><i class="fas fa-line-columns fa-1x"></i></a>
        &nbsp;&nbsp;&nbsp;
    </div>*@
</div>
<div id="divgridview" class="row">
    <div class="col-sm-12">
        <div id="kgdPTN" style="width:100%;height:550px" class="ag-theme-alpine"></div>

        @*@(Html.Kendo().Grid<ProjectGanttTaskViewModel>()
    .Name("kgdPTN")
    .Columns(columns =>
    {
        //        columns.Select().Width(75).HtmlAttributes(new { @class = "checkbox-align" }).HeaderHtmlAttributes(new { @class = "checkbox-align" });
        columns.Bound(p => p.TaskNo).Title(@SharedResource["TaskNo"]).Width(300);
        columns.Bound(p => p.Title).Title(@SharedResource["Subject"]).Width(300);
        columns.Bound(p => p.ProjectName).Title(@SharedResource["Project"]).ClientGroupHeaderTemplate("Project: #=data.value#").Width(250);
        columns.Bound(p => p.ProjectNo).Title(@SharedResource["ProjectNo"]).Width(250);
        columns.Bound(p => p.ServiceStage).Title(@SharedResource["ProjectStage"]).Width(250);
        columns.Bound(p => p.OwnerName).Title(@SharedResource["Owner"]).Width(200);
        columns.Bound(p => p.UserName).Title(@SharedResource["Assignee"]).Width(200);
        columns.Bound(p => p.Priority).Title(@SharedResource["Priority"]).Width(200);
        columns.Bound(p => p.NtsStatus).Title(@SharedResource["TaskStatus"]).Width(200);
        columns.Bound(p => p.Start).Title(@SharedResource["PlanStartDate"]).Format(ApplicationConstant.DateAndTime.DefaultDateTimeFormat).Width(200);
        columns.Bound(p => p.End).Title(SharedResource["PlanDueDate"]).Format(ApplicationConstant.DateAndTime.DefaultDateTimeFormat).Width(200);
        columns.Bound(p => p.ActualStartDate).Title(SharedResource["ActualStartDate"]).Format(ApplicationConstant.DateAndTime.DefaultDateTimeFormat).Width(200);
        columns.Bound(p => p.ActualEndDate).Title(SharedResource["ActualEndDate"]).Format(ApplicationConstant.DateAndTime.DefaultDateTimeFormat).Width(200);
    })
    .ToolBar(toolbar =>
    {
        //toolbar.Excel();
        //toolbar.Pdf();
        toolbar.Search().Text(@SharedResource["Search"]);
    })
    //.Pdf(pdf=>pdf.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
    //.Excel(excel=>excel.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
    .ColumnMenu(col=>col.Filterable(false))
    .Height(700)
    .Editable()
    .Pageable()
    .Sortable()
    .Navigatable()
    .Resizable(r=>r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Groupable(g=>g.ShowFooter(false))
    .Filterable()
    .Scrollable()
    //.Events(events => events.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(20)
        .AutoSync(true)
        .ServerOperation(false)
        //.Events(events => events.Error("error_handler"))
        .Model(model =>
        {
            model.Id(p => p.Id);

        })
        //.Group(group=>group.Add("Category.CategoryName", typeof(string), ListSortDirection.Descending))
        //.Create("DetailProducts_Create", "Grid")
        //.Read("ReadProjectTaskGridViewData", "Project", new { @area = "PJM", projectId = "e58937f0-fd6e-490d-8526-366b56062b17" })
        .Read("ReadProjectUserWorkloadGridViewData", "ProjectTask", new { @area = "PJM" })
        .Group(g=>g.Add(x=>x.UserName))
        .Group(g => g.Add(x => x.ProjectName))
    //.Update("DetailProducts_Update", "Grid")
    //.Destroy("DetailProducts_Destroy", "Grid")
    )
)*@

    </div>
</div>



<script>

    var colors = ['#F56564', '#90D142', '#28BAF5', '#7551F5', '#5BA79F', '#7A8F9D', '#4F67B6'];
    function OnDataBoundDoc(arg) {
        var childDiv = document.getElementById('board').children;

        for (var i = 0; i < childDiv.length; i++) {
            childDiv[i].children[0].style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
        }
    }

    $('#left').click(function () {
        event.preventDefault();
        $('#board').animate({
            scrollLeft: "-=1075px"
        }, "slow");
    });

    $('#right').click(function () {
        event.preventDefault();
        $('#board').animate({
            scrollLeft: "+=1075px"
        }, "slow");
    });


</script>

