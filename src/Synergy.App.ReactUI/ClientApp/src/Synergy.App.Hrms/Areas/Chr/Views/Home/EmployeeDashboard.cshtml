@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.HomeController> Resource
@using Synergy.App.DataModel
@using Synergy.App.Common
@using Synergy.App.ViewModel
@{
    ViewBag.Title = "Employee Dashboard";
    Layout = null;
}
<script>
    $(document).ready(function () {

        $("#AgeFilter").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            change: onAgeChange,
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CMS/LOV/GetLOVIdNameList?lovType=AGE_RANGE",
                    }
                }
            },
        });

        $("#SalaryFilter").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            change: onSalaryChange,
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CMS/LOV/GetLOVIdNameList?lovType=SALARY_RANGE",
                    }
                }
            },
        });

        $("#GenderFilter").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            change: onGenderChange,
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CMS/LOV/GetLOVIdNameList?lovType=LOV_GENDER",
                    }
                }
            },
        });

        $("#JobFilter").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            change: onJobChange,
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CHR/HRCore/GetALLJOBS",
                    }
                }
            },
        });
        $("#CountryFilter").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            change: onCountryChange,
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CHR/HRCore/GetAllCountry",
                    }
                }
            },
        });

         $("#AgeChartClick").click(function () {
             var chart = $("#chartByAge").getKendoChart();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: "age.pdf",
                    proxyURL: "@Url.Action("Export_Save", "Home",new { area="CHR"})"
                });
            });
         });
          $("#SalaryDownload").click(function () {
             var chart = $("#chartBySalary").getKendoChart();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: "salary.pdf",
                    proxyURL: "@Url.Action("Export_Save", "Home",new { area="CHR"})"
                });
            });
          });
          $("#GenderDownload").click(function () {
             var chart = $("#chartByGender").getKendoChart();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: "gender.pdf",
                    proxyURL: "@Url.Action("Export_Save", "Home",new { area="CHR"})"
                });
            });
          });
          $("#JobDownload").click(function () {
             var chart = $("#chartByRole").getKendoChart();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: "job.pdf",
                    proxyURL: "@Url.Action("Export_Save", "Home",new { area="CHR"})"
                });
            });
          });
          $("#NationalityDownload").click(function () {
             var chart = $("#chartByCountry").getKendoChart();
            chart.exportPDF({ paperSize: "auto", margin: { left: "1cm", top: "1cm", right: "1cm", bottom: "1cm" } }).done(function (data) {
                kendo.saveAs({
                    dataURI: data,
                    fileName: "country.pdf",
                    proxyURL: "@Url.Action("Export_Save", "Home",new { area="CHR"})"
                });
            });
        });
    });
    function onSalaryChange(e)
    {
        var search = FilterSalary();
        $("#chartBySalary").data("kendoChart").dataSource.read({
            typeId: $("#SalaryFilter").data("kendoDropDownList").value()
        });
    }
    function onAgeChange(e) {
        var search = FilterAge();
        $("#chartByAge").data("kendoChart").dataSource.read({
            typeId: $("#AgeFilter").data("kendoDropDownList").value()
        });
    }
    function onGenderChange(e) {
      //  var search = FilterGender();
        $("#chartByGender").data("kendoChart").dataSource.read({
            typeId: $("#GenderFilter").data("kendoDropDownList").value()
        });
    }
    function onJobChange(e) {
        var search = FilterJob();
        $("#chartByRole").data("kendoChart").dataSource.read({
            typeId: $("#JobFilter").data("kendoDropDownList").value()
        });
    }
    function onCountryChange(e) {
       // var search = FilterCountry();
        //
        $("#chartByCountry").data("kendoChart").dataSource.read({
            typeId: $("#CountryFilter").data("kendoDropDownList").value()
        });
    }
    function FilterAge()
    {
        return
        {
            typeId : $("#AgeFilter").val();
        }
    }
    function FilterSalary() {
        return
        {
            typeId : $("#SalaryFilter").val();
        }
    }
    function FilterGender() {
        return
        {
            typeId : $("#GenderFilter").val();
        }
    }
    function FilterJob() {
        return
        {
            typeId : $("#JobFilter").val();
        }
    }
    function FilterCountry() {
        alert($("#CountryFilter").data("kendoDropDownList").value());

        return
        {
            typeId : $("#CountryFilter").data("kendoDropDownList").value();
        }
    }
</script>
<div class="row">
    <div class="col-6">
        @Resource["EXPORTALLDATA"]
    </div>
    <!--<div class="row col-6 ">
        <div class="col-6">-->
    @*@(Html.Kendo().DropDownList().Name("RoleType")
                         //.DataSource(source =>
                         //{
                         //    source.Read(read =>
                         //    {
                         //        read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_SERVICE_STATUS" });
                         //    });
                         //})
                         .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                         .DataTextField("Name")
                         .DataValueField("Id")
                         //.Events(e=>e.Change("onChangeServiceStatus"))
                         .HtmlAttributes(new { @class = "hr-x-large search-control" })
        )*@
    <!--</div>
        <div class="col-6">
            <button class="btn-primary">Download Data</button>
        </div>
    </div>-->
</div>
<hr />
<div class="row">
    <div class="row col-6 ">
        <div class=" col-12">
            @Resource["AGERANGE"]

        </div>
        <div class="row col-12">

            <div class="col-8">
                @*@(Html.Kendo().DropDownList().Name("AgeFilter")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_ASSIGNMENT_TYPE" });
                                 });
                             })
                             .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                             .DataTextField("Name")
                             .DataValueField("Id")
                              .Events(e => e.Change("onAgeChange"))
                             .HtmlAttributes(new { @class = "hr-x-large search-control" })
                    )*@

                <input id="AgeFilter" class="hr-x-large search-control" />
            </div>

            <div class="col-4" style="text-align:right;">
                <button class="btn-primary" id="AgeChartClick">@Resource["DownloadData"]</button>
            </div>
        </div>
        <div class=" col-12">
            @*<div class="col-6">*@


            @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>
    ()
    .Name("chartByAge")
    .Title(@Resource["EmployeeAge"])
    .Legend(legend => legend.Position(ChartLegendPosition.Bottom))
    .DataSource(ds => ds.Read(read => read.Action("GetEmployeeByAge", "Home", new { area = "CHR" })/*.Data("FilterAge")*/))
    .Series(series =>
    {
        series.Column(model=>model.Value).Name(@Resource["Ages"])/*.MaxSize(100)*/;

        // series.Column(new double[] {  }).Name("Ages");
    })
    .CategoryAxis(axis => axis
    //.Categories("0-20","20-30","30-40","40-50","50-60","60-70","70-80","80-90","90-100")/*.Min(10).Max(100)*/
     .Categories(x=>x.Type)/*.Min(10).Max(100)*/
    )

    .ValueAxis(axis => axis
    .Numeric().Labels(labels => labels.Format("{0}"))

    )
    .Tooltip(tooltip => tooltip
    .Visible(true)
    .Format("{0}")

    )
    )*@
            @*</div>*@
            @*<div class="col-6">
                            <div style="        border: 1px solid;
                        border-radius: 22px;
                        padding: 10px;
                        text-align: center;
                        margin-bottom: 10px;
                ">
                                <h4>@ViewBag.AvgAge YEARS</h4>
                                <span>AVG. AGE OF EMPLOYEE</span>
                            </div>
                            <div style="        border: 1px solid;
                        border-radius: 22px;
                        padding: 10px;
                        text-align: center;
                        margin-bottom: 10px;
                ">
                                <h4>@ViewBag.MaxAge YEARS</h4>
                                <span>OLDEST EMPLOYEE</span>
                            </div>
                            <div style="
                    border: 1px solid;
                    border-radius: 22px;
                    padding: 10px;
                    text-align: center;margin-bottom:10px;
                ">

                                <h4>@ViewBag.MinAge YEARS</h4>
                                <span>YOUNGEST EMPLOYEE</span>
                            </div>

                        </div>*@

        </div>

    </div>
    <div class="row col-6">
        <div class="col-12">
           @Resource["SALARYRANGE"]
        </div>
        <div class="row col-12">

            <div class="col-8">
                @*@(Html.Kendo().DropDownList().Name("SalaryFilter")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_ASSIGNMENT_TYPE" });
                                 });
                             })
                             .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                             .DataTextField("Name")
                             .DataValueField("Id")
                            .Events(e => e.Change("onSalaryChange"))
                             .HtmlAttributes(new { @class = "hr-x-large search-control" })
                    )*@

                <input id="SalaryFilter" class="hr-x-large search-control" />
            </div>

            <div class="col-4" style="text-align:right;">
                <button class="btn-primary" id="SalaryDownload">@Resource["DownloadData"]</button>
            </div>
        </div>
        <div class="col-12">
            @*<div class="col-6">*@


            @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
            .Name("chartBySalary")
            .Title(@Resource["EmployeeSalary"])
            .Legend(legend => legend.Position(ChartLegendPosition.Bottom))
             .DataSource(ds => ds.Read(read => read.Action("GetEmployeeBySalary", "Home", new { area = "CHR" })/*.Data("FilterSalary")*/))
            .Series(series =>
            {
                series.Column(model=>model.Value).Name(@Resource["Salary"]);
                // series.Column(new double[] { 15.7, 11, 20, 25, 36.6 }).Name("World");
            })
            .CategoryAxis(axis => axis
                .Categories(x=>x.Type)
            )
            .ValueAxis(axis => axis
                .Numeric().Labels(labels => labels.Format("{0}"))
            )
            .Tooltip(tooltip => tooltip
                .Visible(true)
                .Format("{0}")
            )
    )*@
            @*</div>*@
            @*<div class="col-6">
                            <div style="        border: 1px solid;
                        border-radius: 22px;
                        padding: 10px;
                        text-align: center;
                        margin-bottom: 10px;
                ">
                                <h4>@ViewBag.AverageSalary </h4>
                                <span>AVG. SALARY</span>
                            </div>
                            <div style="        border: 1px solid;
                        border-radius: 22px;
                        padding: 10px;
                        text-align: center;
                        margin-bottom: 10px;
                ">
                                <h4>@ViewBag.HeighestSalary</h4>
                                <span>HIGHEST SALARY</span>
                            </div>
                            <div style="
                    border: 1px solid;
                    border-radius: 22px;
                    padding: 10px;
                    text-align: center;margin-bottom:10px;
                ">

                                <h4>@ViewBag.LowestSalary</h4>
                                <span>LOWEST SALARY</span>
                            </div>

                        </div>*@

        </div>

    </div>
</div>

<div class="row">
    <div class="row col-6 ">
        <div class="col-12">
            @Resource["GENDER"]
        </div>
        <div class="row col-12">

            <div class="col-8">
                @*@(Html.Kendo().DropDownList().Name("GenderFilter")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_ASSIGNMENT_TYPE" });
                                 });
                             })
                             .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                             .DataTextField("Name")
                             .DataValueField("Id")
                             .Events(e => e.Change("onGenderChange"))
                             .HtmlAttributes(new { @class = "hr-x-large search-control" })
            )*@

                <input id="GenderFilter" class="hr-x-large search-control" />
            </div>

            <div class="col-4" style="text-align:right;">
                <button class="btn-primary" id="GenderDownload">@Resource["DownloadData"]</button>
            </div>
        </div>

        <div class="col-12">
            @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                              .Name("chartByGender")
                              .Title(@Resource["EmployeeGender"])
                              .Legend(legend => legend
                              .Position(ChartLegendPosition.Bottom)
                              )
                              .DataSource(ds => ds
                              .Read(read => read.Action("GetEmployeeByGender", "Home", new { @area = "CHR" })/*.Data("FilterGender")*/)

                              )
                              .SeriesColors(new string[] { "#03a9f4", "#ff9800", "#fad84a", "#4caf50" })
                              .Series(series =>
                              {
                                  series.Pie(model => model.Value, model => model.Type)
                                  .Labels(labels => labels
                                  .Visible(true)
                                  .Position(ChartPieLabelsPosition.Center)
                                  .Background("transparent"));
                              }).HtmlAttributes(new { @style = "height:300px;" })
                               .Tooltip(tooltip => tooltip
                               .Visible(true)
                               .Template("#= category # - #= kendo.format('{0:P}', percentage) #"))
                        // .Events(e => e
                        // .SeriesClick("onTaskAssignedSeriesClick")
                        //.DataBound("OnTaskAssChartDataBound")
                        // )
                        )*@
        </div>
    </div>
    <div class="row col-6">
        <div class="col-12">
            @Resource["JOB"]
        </div>
        <div class="row col-12">

            <div class="col-8">
                @*@(Html.Kendo().DropDownList().Name("JobFilter")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_ASSIGNMENT_TYPE" });
                                 });
                             })
                             .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                             .DataTextField("Name")
                             .DataValueField("Id")
                              .Events(e => e.Change("onJobChange"))
                             .HtmlAttributes(new { @class = "hr-x-large search-control" })
                    )*@

                <input id="JobFilter" class="hr-x-large search-control" />
            </div>

            <div class="col-4" style="text-align:right;">
                <button class="btn-primary" id="JobDownload">@Resource["DownloadData"]</button>
            </div>
        </div>

        <div class="col-12">
            @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                            .Name("chartByRole")
                            .Title(@Resource["EmployeeRole"])
                            .Legend(legend => legend
                                .Position(ChartLegendPosition.Bottom)
                            )
                            .DataSource(ds => ds
                             .Read(read => read.Action("GetEmployeeByRole", "Home", new { @area = "CHR" })/*.Data("FilterJob")*/)
                            //.Read(read => read.Action("GetProjectTaskChartByStatus", "Project", new { @area = "PJM", projectId = Model.Id }))
                            )
                            .SeriesColors(new string[] { "#ff9800", "#fad84a", "#4caf50", "#03a9f4" })
                            .Series(series =>
                            {
                                series.Donut(model => model.Value, model => model.Type)
                                .Labels(labels => labels
                                    .Visible(true)
                                    .Position(ChartPieLabelsPosition.Center)
                                    //.Template("#= category # - #= kendo.format(' {0:n0}', value) # ")
                                    .Background("transparent")

                                );

                            }).HtmlAttributes(new { @style = "height:300px;" })
                            .Tooltip(tooltip => tooltip
                                .Visible(true)
                            .Template("#= category # - #= kendo.format('{0:P}', percentage) #")
                            //.Template("#= category # ")
                            )
        //.Events(events => events
        //.SeriesClick("onTaskSeriesClick")
        // .DataBound("OnTaskStatusChartDataBound")
        //)
        )*@
        </div>

    </div>

</div>

<div class="row">
    <div class="col-12">
        @Resource["COUNTRIES"]
    </div>
    <div class="row col-12">

        <div class="col-8">
            @*@(Html.Kendo().DropDownList().Name("CountryFilter")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_ASSIGNMENT_TYPE" });
                                 });
                             })
                             .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                             .DataTextField("Name")
                             .DataValueField("Id")
                             .Events(e=>e.Change("onCountryChange"))
                             .HtmlAttributes(new { @class = "hr-x-large search-control" })
            )*@

            <input id="CountryFilter" class="hr-x-large search-control" />
        </div>

        <div class="col-4" style="text-align:right;">
            <button class="btn-primary" id="NationalityDownload">@Resource["DownloadData"]</button>
        </div>
    </div>
    <div class="row col-12">
        <div class="col-12">
            @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
            .Name("chartByCountry")
            .Title(@Resource["Nationality"])
            .Legend(legend => legend.Position(ChartLegendPosition.Bottom))
             .DataSource(ds => ds.Read(read => read.Action("GetEmployeeByNationality", "Home", new { area = "CHR" })/*.Data("FilterCountry")*/))
            .Series(series =>
            {
                series.Column(model=>model.Value).Name(Resource["Nationality"]);
                // series.Column(new double[] { 15.7, 11, 20, 25, 36.6 }).Name("World");
            })
            .CategoryAxis(axis => axis
                .Categories(x=>x.Type)
            )
            .ValueAxis(axis => axis
                .Numeric().Labels(labels => labels.Format("{0}"))
            )
            .Tooltip(tooltip => tooltip
                .Visible(true)
                .Format("{0}")
            )
    )*@
        </div>

        @*<div class="col-6">

            </div>*@
    </div>

</div>