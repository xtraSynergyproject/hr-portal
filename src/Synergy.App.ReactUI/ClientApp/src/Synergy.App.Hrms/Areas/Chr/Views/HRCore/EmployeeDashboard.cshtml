@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common;
@using Synergy.App.ViewModel;

@inject Synergy.App.Common.IUserContext _userContext

@model AssignmentViewModel;

@{
    ViewData["Title"] = "New Employee Dashboard";
    //Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

<div class="">
    <div class="row pt-5">
        <div class="col-2">
            <img class="user-img rounded-circle float-right user-context-menu" style="border-radius: 50%; width: 100px; height: 100px;" id="profileImg"
                 src="/cms/Document/GetImageMongo?id=@Model.PhotoName" onerror="OnPhotoError(this);">
        </div>
        <div class="col-3">
            <b style="font-size:25px"> @Model.PersonFullName</b>
            <br />
            @Model.JobName
        </div>
        <div class="col-7">
            <hr />
            <div class="row">
                <div class="col-3">
                    Grade Name:  <b>@Model.GradeName</b>
                </div>
                <div class="col-6">
                    Department:  <b>@Model.DepartmentName</b>
                </div>
                <div class="col-3">
                    Status:  <b>@Model.PersonStatus</b>
                </div>
            </div>
            <hr />
            <div class="row">
                <div class="col-3">
                    Date Of Join:  <b>@Model.DTDateOfJoin.ToDefaultDateFormat()</b>
                </div>
                <div class="col-6">
                    Position:  <b>@Model.PositionName</b>
                </div>
                <div class="col-3">
                    Position:  <b>@Model.LocationName</b>
                </div>
            </div>
        </div>
    </div>
</div>
<br />
<div class="card">
    <div class="card-header">
        <i class="fas fa-star"></i>&nbsp; <b style="font-size:15px">Shortcuts</b>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-3">
                <a href="javascript:createLeave()">
                    <div class="rcorners">
                        <div class="row">
                            <div class="col-2">
                                @*<i class="fa fa-wrench"></i>*@
                                <img class="fav-img" src="/cms/document/getimagemongo/@ViewBag.LeaveRequestPhoto">
                            </div>
                            <div class="col rcol">
                                <span style="font-size:18px;font-weight:bold;color:dodgerblue">Leave Request</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-3">
                <a href="javascript:requestTimeOff()">
                    <div class="rcorners">
                        <div class="row">
                            <div class="col-2">
                                <img class="fav-img" src="/cms/document/getimagemongo/@ViewBag.RequestTimeOffPhoto">
                            </div>
                            <div class="col rcol">
                                <span style="font-size:18px;font-weight:bold;color:dodgerblue">Request Time-Off</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-3">
                <a href="javascript:OpenEmployeeDirectory();">
                    <div class="rcorners" @*onclick="OpenEmployeeDirectory()"*@>
                        <div class="row">
                            <div class="col-2">
                                <img class="fav-img" src="/cms/document/getimagemongo/@ViewBag.EmployeeDirectoryPhoto">
                            </div>
                            <div class="col rcol">
                                <span style="font-size:18px;font-weight:bold;color:dodgerblue">
                                    Employee Directory
                                </span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
            <div class="col-3">
                <a href="javascript:OnSBMenuClick('EmployeeProfile');">
                    <div class="rcorners">
                        <div class="row">
                            <div class="col-2">
                                <img class="fav-img" src="/cms/Document/GetImageMongo?id=@Model.PhotoName">
                            </div>
                            <div class="col rcol">
                                <span style="font-size:18px;font-weight:bold;color:dodgerblue">My Profile</span>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        </div>
    </div>
</div>
<br />

<div class="row">
    <div class="col-4">
        <div class="card">
            <div class="card-header">
                <i class="fas fa-calendar"></i>&nbsp; <b style="font-size:15px">You Report To</b>
            </div>
            <div class="card-body card-body-ht">
                @if (Model.LineManager.IsNotNull())
                {
                    <div class="row">
                        <div class="col-4">
                            <img class="user-img rounded-circle user-context-menu" style="padding-top: 2px; border-radius: 50%; width: 100px; height: 100px;" id="profileImg"
                                 src="/cms/Document/GetImageMongo?id=@Model.LineManager.PhotoId" onerror="OnPhotoError(this);">
                        </div>
                        <div class="col-8">
                            <b style="font-size:20px">@Model.LineManager.Name</b>
                            <br />
                            @Model.LineManager.JobTitle
                        </div>
                    </div>}
                else
                {
                    <div>No Line Manager mapped for this user</div>
                }
            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="card">
            <div class="card-header">
                <i class="fas fa-user-tag"></i>&nbsp; <b style="font-size:15px">My Tasks</b>
            </div>
            <div class="card-body card-body-ht task-body">
                <div id="taskChart"></div>
            </div>
        </div>
    </div>
    <div class="col-4">
        <div class="card">
            <div class="card-header">
                <i class="fas fa-calendar-range"></i>&nbsp; <b style="font-size:15px">My Services</b>
            </div>
            <div class="card-body card-body-ht service-body">
                <div id="serviceChart"></div>
            </div>
        </div>
    </div>
    @*<div class="col-4">
            <div class="card">
                <div class="card-header">
                    <i class="fas fa-calendar"></i>&nbsp; <b style="font-size:15px">Upcoming Leaves</b>
                </div>
                <div class="card-body">


                </div>
            </div>
        </div>*@

</div>

<style>
    .fav-img {
        width: 50px;
        border-bottom-left-radius: 6px;
        border-top-left-radius: 6px;
        border-bottom-right-radius: 0px !important;
        border-top-right-radius: 0px !important;
    }

    .card-body-ht {
        min-height: 220px;
    }

    .card-header {
        background-color: #add8e65c;
        padding-bottom: 20px;
    }

        .card-header i {
            color: dodgerblue;
        }

    .rcorners {
        border-radius: 6px;
        border: 1px solid #d7d7d7;
        cursor: pointer;
    }

    /*i.fa {
        display: inline-block;
        border-radius: 60px;
        box-shadow: 0 0 2px #888;
        padding: 0.5em 0.6em;
        font-size: 25px;
        background-color: #e4e4ff;
        color: white;
    }*/

    .rbox {
        padding-top: 25px;
        padding-left: 35px;
    }

    .rcol {
        padding-left: 30px;
        padding-top: 10px;
    }
</style>
<script type="text/x-kendo-tmpl" id="listTemplate">

</script>
<script>

    $(function () {
        LoadTaskSummary();
        LoadServiceSummary();
         //getLeaveDetailData();
        // getTaskList();
        // getServiceList();
         var dataSource = new kendo.data.DataSource({
             transport: {
                 read: {
                     url: "/chr/HRCore/GetManagerData",
                     dataType: "json",
                 }
             },

         });
         $("#ManagerData").kendoListView({
             dataSource: dataSource,
             //height: 400,
             scrollable: true,
             template: kendo.template($("#listTemplate").html())
         });
     });
    function LoadTaskSummary() {
        ShowLoader($('.task-body'));
        var url = "/cms/task/gettasksummary";
             $.ajax({
            type: 'GET',
                 url:url,
                 success: function (res) {
                     HideLoader($('.task-body'));
                     var vals = [res.Pending, res.Completed, res.Rejected];
                     var chart = "#taskChart";
                     var options = {
                         series: vals,
                         chart: {
                             id: taskChart,
                             width: 320,
                             height: 180,
                             type: 'pie',
                             events: {
                                 dataPointSelection: function (event, chartContext, config) {
                                     var status = config.w.config.labels[config.dataPointIndex];
                                     var code = config.w.config.chart.id;
                                     var statusCode = '';
                                     if (status === 'Pending') {
                                         statusCode = 'TASK_STATUS_INPROGRESS,TASK_STATUS_OVERDUE';
                                     } else if (status === 'Completed') {
                                         statusCode = 'TASK_STATUS_COMPLETE';
                                     } else if (status === 'Rejected') {
                                         statusCode = 'TASK_STATUS_REJECT,TASK_STATUS_CANCEL';
                                     }
                                     getTaskList(statusCode);
                                 }
                             }
                         },
                         legend: {
                             position: 'right'
                         },
                         labels: ['Pending', 'Completed', 'Rejected'],
                         colors: ['#007bff', '#28a745', '#dc3545'],

                     };

                     var chart = new ApexCharts(document.querySelector(chart), options);
                     chart.render();

            }

        });
    }
    function LoadServiceSummary() {
        ShowLoader($('.service-body'));
        var url = "/cms/service/getservicesummary";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                HideLoader($('.service-body'));
                var vals = [res.Pending, res.Completed, res.Rejected];
                var chart = "#serviceChart";
                var options = {
                    series: vals,
                    chart: {
                        id: taskChart,
                        width: 320,
                        height: 180,
                        type: 'pie',
                        events: {
                            dataPointSelection: function (event, chartContext, config) {
                                var status = config.w.config.labels[config.dataPointIndex];
                                var code = config.w.config.chart.id;
                                var statusCode = '';
                                if (status === 'Pending') {
                                    statusCode = 'SERVICE_STATUS_INPROGRESS,SERVICE_STATUS_OVERDUE';
                                } else if (status === 'Completed') {
                                    statusCode = 'SERVICE_STATUS_COMPLETE';
                                } else if (status === 'Rejected') {
                                    statusCode = 'SERVICE_STATUS_REJECT,SERVICE_STATUS_CANCEL';
                                }
                                getServiceList(statusCode);

                            }
                        }
                    },
                    legend: {
                        position: 'right'
                    },
                    labels: ['Pending', 'Completed', 'Rejected'],
                    colors: ['#007bff', '#28a745', '#dc3545'],

                };

                var chart = new ApexCharts(document.querySelector(chart), options);
                chart.render();
            }

        });

    }

    function getTaskList(statusCode) {
        
         var win = GetMainWindow();
         win.iframeOpenUrl = '/Cms/NtsTask/TaskListByFilters?userId=' + '@ViewBag.UserId' + '&statusCodes=' + statusCode + '&cbm=OnRefresh';
         win.OpenWindow({ Title: 'Tasks', Width: 1200, Height: 600 });
         return false;
    }

    function getServiceList(statusCode) {
        
        var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/NtsService/ServiceListByFilters?userId=' + '@ViewBag.UserId' + '&statusCodes=' + statusCode + '&cbm=OnRefresh';
        win.OpenWindow({ Title: 'Services', Width: 1200, Height: 600 });
        return false;        
    }
    function OnRefresh() {
        LoadTaskSummary();
        LoadServiceSummary();
    }


    function OnDataBoundPending(arg) {

        document.getElementById('kgrdTask').style.border = 'none';
        var data = $("#kgrdTask").data("kendoListView").dataSource.data();
        if (data.length == 0) {
            $('#no-data-pending').show();
        } else {
            $('#no-data-pending').hide();
        }

    }

    var columnDefs = [

           {
            field: "LeaveType",
            headerName: "Leave Type",
            cellRenderer: params => {
                return "<a style='text-decoration: underline;' href='javascript: void(0);' onclick='OpenService(\"" + params.data.NtsServiceId + "\",\"" + params.data.TemplateCode + "\");'>" + params.value + "</a>";
            }
           },

            {
                field: "StartDate",

                cellRenderer: params => {

                    var date = new Date(params.value);
                    return date.getDate() + "." + (date.getMonth() + 1) + "." + date.getFullYear();
                }
        },
        {
            field: "EndDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "." + (date.getMonth() + 1) + "." + date.getFullYear();
            }

            //cellRenderer: params => {

            //    var date = new Date(params.value);
            //    return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            //}
        },
        {
            field: "LeaveStatus",
            headerName: "Status"
        },
    ];

    var columnDefsTask = [
            {
                field: "TaskNo",
                headerName: "Task No.",
                cellRenderer: params => {
                    return "<a style='text-decoration: underline;' href='javascript: void(0);' onclick='OpenTask(\"" + params.data.NtsNoteId + "\",\"" + params.data.TemplateCode + "\");'>" + params.value + "</a>";
                }
            },
           {
            field: "TaskSubject",
            headerName: "Subject",
        },
        {
            field: "DisplayStartDate",
            headerName: "StartDate",

        },
        {
            field: "DisplayDueDate",
            headerName: "DueDate",

        },
        {
            field: "TaskStatusName",
            headerName: "Status",

        },
    ];

    var columnDefsService = [
            {
            field: "ServiceNo",
            headerName: "Service No.",
                cellRenderer: params => {
                    return "<a style='text-decoration: underline;' href='javascript: void(0);' onclick='OpenService(\"" + params.data.NtsServiceId + "\",\"" + params.data.TemplateCode + "\");'>" + params.value + "</a>";
                }
            },
           {
               field: "TemplateDisplayName",
            headerName: "Subject",
        },

        {
            field: "DisplayStartDate",
            headerName: "StartDate",

           },
            {
                field: "DisplayDueDate",
                headerName: "DueDate",

        },

         {
             field: "ServiceStatusName",
            headerName: "Status",

        },
    ];

    @*function getLeaveDetailData() {
        document.getElementById("kgrdLeave").innerHTML = "";
        gridConfig(
            "kgrdLeave",
            "/Chr/Leave/ReadUpcomingLeaveDetailData?userId=@ViewBag.UserId",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }*@

    //function getTaskList() {
    //    document.getElementById("kgrdTask").innerHTML = "";
    //    gridConfig(
    //        "kgrdTask",
    //        "/cms/NtsTask/ReadTop10TaskDataInProgress?portalNames=HR",
    //        columnDefsTask,
    //        false,
    //        true,
    //        true,
    //        true,
    //        1,
    //        true,
    //        10);
    //}

    //function getServiceList() {
    //    document.getElementById("kgrdService").innerHTML = "";
    //    gridConfig(
    //        "kgrdService",
    //        "/cms/NtsService/ReadTop10ServiceDataInProgress?portalNames=HR",
    //        columnDefsService,
    //        false,
    //        true,
    //        true,
    //        true,
    //        1,
    //        true,
    //        10);
    //}

      function OpenService(serviceId, tempCode) {

        var id = serviceId;
        var source = '@RequestSourceEnum.View.ToString()';
        var action = '@DataActionEnum.View.ToString()';

        var portalId = $('#GlobalPortalId').val();

        var url = '/Cms/Page?lo=Popup&viewType=Book&pageType=Service&cbm=OnAfterServiceCreate&source=' + source + '&dataAction=' + action + '&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title:  'Service', Width: 1200, Height: 600 });
        return false;
    }

    function OpenTask(taskId, tempCode) {

        var id = taskId;
            var source = '@RequestSourceEnum.View.ToString()';
            var action = '@DataActionEnum.View.ToString()';
        var pagename = "NtsTaskPage";
        var portalId = "@_userContext.PortalId";

           var url = '/Cms/Page?lo=Popup&pageType=Task&source=' + source + '&dataAction=' + action + '&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
           win.iframeOpenUrl = url;
        win.OpenWindow({ Title:  'Task', Width: 1200, Height: 600 });
        return false;
    }
        function OpenEmployeeDirectory() {
           var url = '/Chr/HRDirect/EmployeeDirectory';
            var win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Title:  'Employee Directory', Width: 1200, Height: 600 });
            return false;
    }

     function createLeave() {

         if ('@Model.UserId' == '' || '@Model.UserId' == null) {
             @*alert("@Resource["PleaseMapUserToPersonFromManagePerson"]");*@
             alert("Please Map User From Manage Person");
         }
         else {
             var win = GetMainWindow();
             win.iframeOpenUrl = '@Url.Action("SelectServiceTemplate", "NtsService", new { area = "Cms" })?templateCode=&categoryCode=Leave&cbm=refreshGrid&userId=' + '@Model.UserId';
             win.OpenWindow({ Title: "Create New Leave Request", Width: 1200, Height: 600 });
             return false;
         }
    }

    function requestTimeOff() {
        var users = '@Model.UserId';
       var win = GetMainWindow();
             win.iframeOpenUrl = '@Url.Action("SelectServiceTemplate", "NtsService", new { area = "Cms" })?templateCode=&categoryCode=TimePermission&cbm=tpcallback&userId=' + '@Model.UserId';
             win.OpenWindow({ Title: "Add Time Permission", Width: 1200, Height: 600 });
             return false;

    }

    function myprofile() {
         var portalId = '@ViewBag.PortalId';//$('#GlobalPortalId').val();
        var url = '/Cms/Page?lo=Div&pageName=EmployeeProfile&portalId=' + portalId;
        LoadPartailView(url, $('#pageContent'),);
    }

     function OnSBMenuClick(pn) {
        pagename = pn;
        ReloadPageContent();
    }
    function ReloadPageContent() {
         var portalId = '@ViewBag.PortalId';//$('#GlobalPortalId').val();
         var url = '/Cms/Page?lo=Div&pageName=' + pagename+'&portalId=' + portalId;
         LoadCmsPartialView(url, 'Custom', false, null, null, pagename, null, null, $('#pageContent'), null);
    }


</script>