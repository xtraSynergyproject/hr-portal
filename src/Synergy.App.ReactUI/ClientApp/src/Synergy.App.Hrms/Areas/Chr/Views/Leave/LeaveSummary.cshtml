@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.LeaveController> Resource
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model LeaveSummaryViewModel
@{
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}


<style>
    #chartSummary>svg{
        width:1000px !important;
    }
</style>

@*<div class="formHeader">
    <h4>
        Leave Summary
    </h4>
</div>*@
<div class="row">
    <div class="col-7" style="margin-bottom:20px">
     
            @*@(Html.Kendo().Chart<LeaveSummaryViewModel>()
                            .Name("chartSummary")
                            .HtmlAttributes(new { style = "min-height: 600px;" })
                            .Title(@Resource["Leavestakeninlast12months"])
                            .Legend(legend => legend
                            .Position(ChartLegendPosition.Bottom)
                            )
                            .SeriesDefaults(seriesDefaults => seriesDefaults
                            .Column().Stack(true)
                            )
                            .DataSource(ds => ds.Read(read => read.Action("ReadLeaveSummaryData", "Leave", new { userId = Model.UserId })))
                            .Series(series =>
                            {
                                series.Column(model => model.Count);//.ColorHandler("GetColor('NotStarted')");
                            })
                            .CategoryAxis(axis => axis
                            .Categories(model => model.Month)
                            .MajorGridLines(lines => lines.Visible(false))
                            )
                            .AutoBind(true)
                            .ValueAxis(axis => axis
                            .Numeric().MajorUnit(1)
                            .Line(line => line.Visible(false))
                            )
                            .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Format("{0}")
                            )
            //.Events(events => events
            //.SeriesClick("onSeriesClick")
            // )
            )*@
    


    </div>
    <div class="col-5">
       

            @*@(Html.Kendo().Chart<LeaveSummaryViewModel>()
                                    .Name("goal")
                                            .Title(title => title
                                                .Text(@Resource["Leavestakeninlast12months"])
                                                .Position(ChartTitlePosition.Bottom))
                                    .Legend(legend => legend
                                        .Visible(false)
                                    )
                                    .DataSource(ds =>
                                    {
                                        ds.Read(read => read.Action("ReadLeaveSummaryPieData", "Leave",new { userId=Model.UserId}));
                                    }
                                )
                                    .ChartArea(chart => chart
                                        .Background("transparent")
                                    )

                                    .Series(series =>
                                    {
                                        series.Pie(model => model.Count, model => model.Type)
                                        .Labels(labels => labels
                                            .Template("#= category #: \n #= value#")
                                            .Background("transparent")
                                            .Visible(true)
                                        )
                                        .StartAngle(50);
                                    })
                                    .Tooltip(tooltip => tooltip
                                        .Visible(true)
                                        .Format("{0}")
                                    )
            )*@
       
    </div>
</div>


<script type="text/javascript">

    function GetColor(val) {
        if (val == "NotStarted") {
            return "lightgray";
        }
        else if (val == "Started") {
            return "lightblue";
        }
        else if (val == "Completed") {
            return "lightgreen";
        }
        else if (val == "Cancelled") {
            return "lightgoldenrodyellow";
        }
        else if (val == "Overdue") {
            return "lightcoral";
        }
    }
    function onSeriesClick(e) {
        //alert(e.series.name);
    }



</script>
