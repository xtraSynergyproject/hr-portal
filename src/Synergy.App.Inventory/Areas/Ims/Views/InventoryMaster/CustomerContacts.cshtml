@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@*@using Kendo.Mvc.UI;*@
@model ContactsViewModel
@{
    //ViewData["Title"] = ViewBag.PageName;
    Layout = null;
}

<script>
    $(document).ready(function () {


        getContactPersonGridListData();
        $.contextMenu({
            selector: '#tree-menuItemscc',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');
                var status = $trigger.data('status');
                var noteId = $trigger.data('noteid');


                switch (0) {
                    case 0:

                        return {
                            callback: function (key, options) {
                                switch (key) {


                                    case 'edit':
                                        EditContact(noteId);
                                        break;


                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit Contact Person", icon: "fas fa-edit" },
                            }
                        };


                }
            }
        });
    });

    function OnSearch(e) {
        getItemsListData();
    }

    function AddContacts(e) {
        var portalId = $('#GlobalPortalId').val();
        var win = GetMainWindow();
          var udfs = encodeURIComponent('CustomerId=@Model.CustomerId');
        win.iframeOpenUrl = '/Cms/Page?lo=Popup&cbm=OnAfterNoteCreate&source=Create&dataAction=Create&templateCodes=IMS_CUSTOMER_CONTACT&portalId=' + portalId + '&udfs=' + udfs;
        win.OpenWindow({ Title: 'Add Contact Person', Width: 1000, Height: 700 });
        return false;
    }
    function EditContact(noteId) {
        var portalId = $('#GlobalPortalId').val();
        var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/Page?lo=Popup&cbm=OnAfterNoteCreate&source=Edit&dataAction=Edit&templateCodes=IMS_CUSTOMER_CONTACT&portalId=' + portalId + '&recordId=' + noteId;
        win.OpenWindow({ Title: 'Edit Contact Person', Width: 1000, Height: 700 });
        return false;
    }

    function OnAfterNoteCreate(note) {
        getContactPersonGridListData();
    }
    var columnDefs1 = [
        {
            field: "Id",
            headerName: "Select",
            cellRenderer: params => {
                return "<input type='checkbox' class='checkcontact' data-id='" + params.value + "'/>"


            }
        },
        {
            field: "ContactPersonName",
            headerName: "Contact Name"
        },
        {
            field: "Designation",
            headerName: "Designation"
        },
        {
            field: "MobileNo1",
            headerName: "Mobile No"
        },
        {
            field: "ContactNo1",
            headerName: "Contact No",
        },
        {
            field: "Email",
            headerName: "Email",
        },
        {
            headerName: "Actions",
            field: "NoteId",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuItemscc' data-idvalue='" + params.data.Id + "' data-status=\"" + params.data.NoteStatusCode + "\" data-noteid='" + params.data.NoteId +"' ><i class='fas fa-ellipsis-v'></i></div>"
               }
        }
    ];

    function getContactPersonGridListData() {
        document.getElementById("ContactPersonGrid").innerHTML = "";
        /*?Customer = " + $("#Customer").data("kendoDropDownList").value() + " & ProposalSource=" + $("#ProposalSource").data("kendoDropDownList").value() + " & WorkFlowStatus=$('input[WorkFlowStatus]:checked').val()" + " & FromDate=" + $("#FromDate").val() + " & ToDate=" + $("#ToDate").val(),*/
        gridConfig(
            "ContactPersonGrid",
            "/IMS/InventoryMaster/ReadCustomerContactsData?customerId=@Model.CustomerId",
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
    function onDelete()
    {
        var allVals = [];
        $("input[class='checkcontact']:checked").each(function () {
            allVals.push($(this).attr("data-id"));
        });
        //alert(allVals.join(", "));
        //return;
        $.ajax({
            url: "/Ims/InventoryMaster/DeleteCustomerContacts?ids=" + allVals.join(", "),
            cache: false,
            success: function (html) {
                ShowNotification("Deleted Successfully", "success")
                getContactPersonGridListData();
            }
        });
    }
    function onBack() {
        onBackCustomer()
    }
</script>

<div style="width: 100%;" class="p-3">
    <fieldset class="fieldset">
        <legend class="fs-legend"><label>CustomerName Name:&nbsp;</label><strong> @Model.CustomerName</strong></legend>
        <input type="button" class="btn btn-warning" value="Add New Contact" style="color: white" onclick="AddContacts()" />
        <input type="button" class="btn btn-primary" value="Back" style="color:white" onclick="onBack()" />
        <input type="button" class="btn btn-danger" value="Delete" style="color:white" onclick="onDelete()" />
    </fieldset>
    <fieldset class="fieldset">
        <legend class="fs-legend">Customer Contact List</legend>
        <div id="ContactPersonGrid" style="width: 100%;height:500px" class="ag-theme-alpine"></div>
    </fieldset>
</div>

 