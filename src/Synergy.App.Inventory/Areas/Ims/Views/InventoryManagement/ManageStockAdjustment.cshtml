@using Synergy.App.ViewModel
@using Synergy.App.Common
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Manage Stock Adjustment";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model StockAdjustmentViewModel

<style>
    .k-switch-label-on, .k-switch-label-off {
        display: flex
    }


    .avatar-myProfile {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .avatar-mysign {
        border-radius: 50%;
        height: 80px;
        width: 80px;
    }

    .bold {
        font: bold
    }
</style>
<div style="width: 100%;" class="p-3">
    <form asp-controller="InventoryManagement" asp-action="ManageStockAdjustment" class="form-horizontal" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div class="text-danger" asp-validation-summary="All"></div>

        <div style="width: 100%;" class="p-3">
            <fieldset class="fieldset">
                <legend class="fs-legend">Stock Adjustment</legend>
                @*<legend class="fs-legend">Project Information</legend>*@
                <div class="row">
                    <div class="col-4 form-group">
                        <div class="col-form-label required">
                            <label>Warehouse</label>
                        </div>
                        <input type="text" asp-for="WarehouseId" class="form-control" required />
                    </div>
                    <div class="col-4 form-group">
                        <div class="col-form-label required">
                            <label>Adjustment Date</label>
                        </div>
                        <input type="text" asp-for="AdjustmentDate" class="form-control" required />
                    </div>
                    <div class="col-4 form-group">
                        <div class="col-form-label required">
                            <label>Adjustment Type</label>
                        </div>
                        <input type="text" asp-for="StockAdjustmentType" class="form-control" />
                    </div>


                    <div class="col-8 form-group">
                        <div class="col-form-label required">
                            <label>Comment</label>
                        </div>
                        <input type="text" asp-for="Comment" class="form-control" required />
                    </div>
                    </div>
            </fieldset>
          
                <div class="col-4 form-group">
                    <div class="col-form-label required">
                        <label>&nbsp;</label>
                    </div>
                    <input type="submit" class="btn btn-primary" value="Save" style="margin:5px;" onclick="OnSubmit()" />
                    <input type="button" class="btn btn-secondary" value="Close" style="margin:5px;" onclick="closeNav()" />
                </div>
       
        </div>

            @Html.HiddenFor(x => x.DataAction)
            @Html.HiddenFor(x => x.ServiceId)
</form>
</div>
<script type="text/javascript">

    function OnSubmit(e)
    {
        var Customer = $("#Customer").data("kendoDropDownList").value();
        var Country = $("#Country").data("kendoDropDownList").value();
        var State = $("#State").data("kendoDropDownList").value();
        var City = $("#City").data("kendoDropDownList").value();
        var ProposalType = $("#ProposalType").data("kendoDropDownList").value();
        var ProposalSource = $("#ProposalSource").data("kendoDropDownList").value();
        var CompetitionWith = $("#CompetitionWith").val();
        var ProjectSummary = $("#ProjectSummary").val();
        if (ProposalType == null || ProposalType == '' || ProposalType == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Proposal Type is required");
            e.preventDefault();
            return false;
        }
        if (ProposalSource == null || ProposalSource == '' || ProposalSource == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Proposal Source is required");
            e.preventDefault();
            return false;
        }
        if (Customer == null || Customer == '' || Customer == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Customer is required");
            e.preventDefault();
            return false;
        }
        if (Country == null || Country == '' || Country == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Country is required");
            e.preventDefault();
            return false;
        }
        if (State == null || State == '' || State == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("State is required");
            e.preventDefault();
            return false;
        }
        if (City == null || City == '' || City == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("City is required");
            e.preventDefault();
            return false;
        }
        if (ProjectSummary == null || ProjectSummary == '' || ProjectSummary == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Summary is required");
            e.preventDefault();
            return false;
        }
        if (CompetitionWith == null || CompetitionWith == '' || CompetitionWith == undefined) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Competition With is required");
            e.preventDefault();
            return false;
        }
    }
    $(document).ready(function () {
        $("#StockAdjustmentType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--All--",
			@* value: "@Model.Status",*@
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StockAdjustmentTypeEnum",
                    }
                }
            }
        });
     $("#WarehouseId").kendoDropDownList({
            dataTextField: "WarehouseName",
            dataValueField: "Id",

            optionLabel: "--Select--",

            dataSource: {
                transport: {
                    read: {
                        url: "/IMS/InventoryManagement/GetWarehouseList",
                    }
                }
            }
        });

        $("#AdjustmentDate").kendoDatePicker({
            value: new Date(),
            format: "yyyy-MM-dd"
        });
        function filterState()
        {
            debugger
            return {
                countryId: $("#Country").data("kendoDropDownList").value()
            };
        }
        function filterCity() {
            debugger
            return {
                stateId: $("#State").data("kendoDropDownList").value()
            };
        }
      
    });


        var onAjaxSuccess = function (res) {
            if (res.success) {
                closeNav()
        }
        else {
            alert(res)
            showError(res.error);
        }
    };


    function closeNav() {

        var win = GetMainWindow();
        win.CloseWindow({ MethodName:"getStockAdjustmentData"});
        return false;
    }

    function onFileUploadSuccess(e) {
        //
        if (e.response.success) {
            // alert(e.response.fileId);
            //console.log(e);
            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserProfilePhoto?photoId=" + e.response.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                   //
                    $(".avatar-myProfile").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
                    $("#PhotoId").val(e.response.fileId);
                }
            });

        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onFileUploadSuccess1(e) {
        //
        if (e.response.success) {
            // alert(e.response.fileId);
            //console.log(e);
            // set file id to hdden fileid proprty
            $.ajax({
                url: "/user/ChangeUserSignature?photoId=" + e.response.fileId,
                type: "GET",
                contentType: "application/json",
                dataType: "JSON",
                success: function (response) {
                    //
                    $(".avatar-mysign").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
                    $("#SignatureId").val(e.response.fileId);
                }
            });

        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onProfileDel() {
        //
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

        if ( $("#PhotoId").val()!='') {
         //
            kendo.confirm("Are you sure that you want to proceed?").then(function () {
                confirmDelete();
            }, function () {

            });
        }

    }
    function onSignatureDel() {
        //
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

        if ($("#SignatureId").val() != '') {
            //
            kendo.confirm("Are you sure that you want to proceed?").then(function () {
                $(".avatar-mysign").attr("src", "/images/200.png");
                $("#SignatureId").val('');
                var logoupload = $("#files2").data("kendoUpload");
                //console.log(logoupload);
                logoupload.clearFile(function (file) { return true; });
            }, function () {

            });
        }

    }

    function confirmDelete() {
     //
        //        alert("Banner Delete");
        $(".avatar-myProfile").attr("src", "/images/200.png");
        $("#PhotoId").val('');
        var logoupload = $("#files").data("kendoUpload");
        //console.log(logoupload);
        logoupload.clearFile(function (file) { return true; });
    }
    //function OnSave(event) {
    //
    //    var multiSelect = $("#UserRoles").data("kendoMultiSelect");
    //    var value = multiSelect.value();

    //   // $("#UserRoles").kendoMultiSelect.Data(Read);

    //}
</script>

