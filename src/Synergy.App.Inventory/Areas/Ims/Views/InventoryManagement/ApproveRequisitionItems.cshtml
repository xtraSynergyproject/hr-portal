@using Synergy.App.ViewModel
@using Synergy.App.Common
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Manage Direct Sales";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model ItemsViewModel

<script>
    var serviceStatus = '@Model.ServiceStatusCode';


    var columnDefs = [
        {
            field: "ItemName",
            headerName: "Item Name"
        },
        //{
        //    field: "ProposalDate",
        //    headerName: "Proposal Date"
        //},
        {
            field: "ItemDescription",
            headerName: "Item Specification"
        },
        {
            field: "ItemQuantity",
            headerName: "Quantity",

        },
        {
            field: "PurchaseRate",
            headerName: "Purchase Rate",

        },
        {
            field: "Amount",
            headerName: "Item Amount",

        },
        {
            headerName: "Actions",
            field: "NoteId",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuItem' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        $("#ItemsGrid").jsGrid({
            width: "100%",
            height: "600px",

            inserting: false,
            editing: true,
            sorting: true,
            paging: true,
            autoload: true,
            pageSize: 14,
            pageButtonCount: 5,
            deleteConfirm: "Do you really want to delete client?",

            //data: clients,
            controller: {
                loadData: function (filter) {
                    return $.ajax({
                        type: "GET",
                        url: "/IMS/InventoryManagement/ReadRequisitionItemsData?requisitionId=" + $("#RequisitionId").val(),
                        data: filter,
                        dataType: "json"
                    });
                },
                updateItem: function (item) {
                    //item.DataAction = "Edit";
                    ////if (item.Id!=null ) { }
                    //return $.ajax({
                    //    type: "POST",
                    //    url: "/IMS/InventoryManagement/ManageRequisitionItems",
                    //    data: item,
                    //    //dataType: "json",
                    //    //success: function (result) {
                    //    //    alert("Success", "updated successfully");
                    //    //},
                    //    //error: function (err) {
                    //    //    alert(err, "Error updating");
                    //    //}
                    //});
                },
                deleteItem: function (item) {
                    onDeleteItem(item.NoteId);
                }
            },
            //onItemEditing: function (e) {
            //    if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {
            //        //  
            //        e.grid.updateItem();
            //    }
            //},
            fields: [
                {
                    name: "ItemName",
                    title: "Item Name",
                    type: "text",
                    editing: false
                },
                //{
                //    field: "ProposalDate",
                //    headerName: "Proposal Date"
                //},
                {
                    name: "ItemSpecification",
                    title: "Item Specification",
                    type: "text",
                    editing: false
                },
                {
                    name: "ItemQuantity",
                    title: "Quantity",
                    type: "text",
                    editing: false
                },
                {
                    name: "PurchaseRate",
                    title: "Purchase Rate",
                    type: "text",
                    editing: false

                },
                {
                    name: "Amount",
                    title: "Item Amount",
                    type: "text",
                    editing: false
                },
                {
                    name: "ApprovedQuantity",
                    title: "Approved Quantity",
                    type: "text",
                    editing: true
                },
                //{
                //    name: "IsApproved",
                //    title: "IsApproved",
                //    type: "checkbox",
                //    editing: true
                //},
                {
                    type: "control",

                },
                //{
                //    headerName: "Actions",
                //    field: "NoteId",
                //    cellRenderer: params => {
                //        return "<div class='btn-group grid-menu' id='tree-menuItem' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
                //    }
                //}
            ]
        });

        if (serviceStatus != "SERVICE_STATUS_DRAFT") {
            $("#ItemsGrid").jsGrid("fieldOption", "Control", "visible", false);
        }
        //getItemsData();
        //$.contextMenu({
        //    selector: '#tree-menuItem',
        //    trigger: 'left',
        //    build: function ($trigger, e) {


        //        var id = $trigger.data('idvalue');

        //        var status = $trigger.data('status');

        //        switch (0) {
        //            case 0:

        //                return {
        //                    callback: function (key, options) {
        //                        switch (key) {
        //                            case 'delete':
        //                                onDeleteItem(id);
        //                                break;



        //                            default:
        //                        }
        //                    },
        //                    items: {
        //                        "delete": { name: "Delete", icon: "fas fa-trash" }
        //                    }
        //                };


        //        }
        //    }
        //});
    });
    function onDeleteItem(id) {
        var flag = confirm('Do you really want to delete this item?');

        if (flag) {
            $.ajax({
                url: '/IMS/InventoryManagement/DeleteRequisitionItem?NoteId=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {

                    var grid = $("#ItemsGrid").data("JSGrid");
                    if (result.success) {
                        grid.render();
                        //getItemsData();
                        kendo.alert("Deleted Successfully.");
                    } else {
                        grid.render();
                        //getItemsData();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //getItemsData();
                    var grid = $("#ItemsGrid").data("JSGrid");
                    grid.render();
                }
            });
            return false;
        }
    }
    function AddItem() {
        var win = GetMainWindow();
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterItemCreate&source=Create&dataAction=Create&templateCodes=N_IMS_IMS_ITEM_MASTER';
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Add Item', Width: 1000, Height: 800 });
        return false;
    }
    function getItemsData() {
        document.getElementById("ItemsGrid").innerHTML = "";
        gridConfig(
            "ItemsGrid",
            "/IMS/InventoryManagement/ReadRequisitionItemsData?requisitionId=" + $("#RequisitionId").val(),
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    function OnItemChange(e) {

        $.ajax({
            url: "/IMS/InventoryManagement/GetItemUnitDetails?itemId=" + $("#Item").data("kendoDropDownList").value(),
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                $("#ItemUnitName").val(response.ItemUnitName);
            }
        });
    }

    var onAjaxSuccess = function (res) {
        if (res.success) {
            closeNav();
        }
        else {
            alert(res)
            showError(res.error);
        }
    };


    function closeNav() {

        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    //function OnSave(event) {
    //    
    //    var multiSelect = $("#UserRoles").data("kendoMultiSelect");
    //    var value = multiSelect.value();

    //   // $("#UserRoles").kendoMultiSelect.Data(Read);

    //}
    function SaveData(e) {
        var selectedDataItems = [];
        debugger;
        var entityGrid = $("#ItemsGrid").data("JSGrid");
        if (entityGrid._editingRow != null) {
            entityGrid.updateItem();
        }

        for (var i = 0; i < entityGrid.data.length; i++) {
            selectedDataItems.push(entityGrid.data[i]);
            if (entityGrid.data[i].ApprovedQuantity == "" || entityGrid.data[i].ApprovedQuantity==null) {
                ShowNotification(" Enter Approved Quantity for [" + entityGrid.data[i].ItemName + "]", "error");
                $(".text-danger").removeClass("validation-summary-valid");
                $(".text-danger").addClass("validation-summary-errors");
                e.preventDefault();
                return false
                break;
            }else if (parseFloat(entityGrid.data[i].ApprovedQuantity) > parseFloat(entityGrid.data[i].ItemQuantity)) {
                ShowNotification("[" + entityGrid.data[i].ItemName + "] Approved Quantity [" + entityGrid.data[i].ApprovedQuantity + "] is exceeding Item Quantity [" + entityGrid.data[i].ItemQuantity + "]", "error");
                        $(".text-danger").removeClass("validation-summary-valid");
                        $(".text-danger").addClass("validation-summary-errors");
                        e.preventDefault();
                        return false
                        break;
                    }
        }

        /*$("#POItemsData").val(JSON.stringify(selectedDataItems));*/
        $("#RequisitionItemsData").val(JSON.stringify(selectedDataItems));

        if (selectedDataItems.length == 0) {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Please approve all items");
            e.preventDefault();
            return false;
        } else {
            ShowLoader($("#cms-content"));
        }
        $.ajax({
            url: "/Ims/InventoryManagement/ApprovedRequisitionItems",
            type: "POST",
            data: { RequisitionItemsData: $("#RequisitionItemsData").val() },
            dataType: "Json",
            success: function (result) {
                if (result.success) {
                    ShowNotification("Saved successfully");
                    closeNav();
                }
            }
        }).done(function () {
                ShowLoader($("#cms-content"));
            });
    }
</script>

<div class="row" style="margin:10px;margin-bottom:60px;">

    @*<form asp-controller="InventoryManagement" asp-action="ManageRequisitionItems" class="form-horizontal" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
        data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
        data-ajax="true" data-ajax-method="POST">*@
    <div class="text-danger" asp-validation-summary="All"></div>

    <div style="width: 100%;" class="p-3">
        <fieldset class="fieldset">
            <legend class="fs-legend">Item List</legend>
            <div id="ItemsGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

        </fieldset>
    
            <div class="row col-12" style="float:right;">
                <input id="btnSave" type="submit" class="btn btn-primary" value="Save" style="margin:5px;" onclick="SaveData(event)" />
                <input type="button" class="btn btn-danger" value="Close" style="margin:5px;" onclick="closeNav()" />
            </div>
      
        <fieldset class="fieldset">
            <div class="row pad-10">
                <div class="row col-4">
                    &nbsp;
                </div>
                <div class="row col-4">
                    &nbsp;
                </div>


            </div>
        </fieldset>

            @*@Html.HiddenFor(x => x.DataAction)
            @Html.HiddenFor(x => x.NoteId)
            @Html.HiddenFor(x => x.Amount)
            @Html.HiddenFor(x => x.ItemHead)*@
            @Html.HiddenFor(x => x.RequisitionId)
            @Html.HiddenFor(x => x.RequisitionItemsData)
            @*</form>*@
    </div>
    </div>


