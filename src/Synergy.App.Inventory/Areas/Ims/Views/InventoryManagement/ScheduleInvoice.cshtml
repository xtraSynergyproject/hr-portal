@using Synergy.App.ViewModel
@using Synergy.App.Common
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Manage Direct Sales";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model ScheduleInvoiceViewModel


<script src="~/js/IMS/InventoryManagement/RequisitionIssue.js" asp-append-version="true"></script>
<div style="width: 100%;" class="p-3">

    <form asp-controller="InventoryManagement" asp-action="ManageScheduleInvoice" class="form-horizontal" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div class="text-danger" asp-validation-summary="All"></div>
                <fieldset class="fieldset">
            <legend class="fs-legend">Customer Information</legend>
            <div class="row form-horizontal">
                <div class="col-3 form-group">
                    <div class="col-form-label ">
                        <label>Invoice Schedule Date</label>
                    </div>
                    <input type="text" asp-for="InvoiceScheduleDate" id="InvoiceScheduleDate" class="form-control"  />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Amount Base</label>
                    </div>
                    <input type="text" asp-for="AmountBase" id="AmountBase" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Item Type </label>
                    </div>
                    <input type="text" asp-for="ItemHeadId" id="ItemHeadId" class="form-control" />
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Customer Name</label>
                    </div>
                     @Html.DisplayFor(x => x.CustomerName)
                </div>
                <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Requisition From Date</label>
                    </div>
                    <input type="text" asp-for="RequisitionFromDate" id="RequisitionFromDate" class="form-control" />
                </div>
                 <div class="col-3 form-group">
                    <div class="col-form-label">
                        <label>Requisition To Date</label>
                    </div>
                    <input type="text" asp-for="RequisitionToDate" id="RequisitionToDate" class="form-control" />
                </div>
                   <div class="col-3 form-group">
                                <div class="col-form-label">
                                    &nbsp;
                                </div>
                                <input type="button" class="btn btn-primary btn-control" value="Get Requisition" style="color:white" onclick="OnReq()" />
                            </div>
                        </div>
                    </fieldset>

                         <fieldset class="fieldset" id="req" style="display:none">
                        <legend class="fs-legend">Requisition No.</legend>
                        <div class="text-danger" asp-validation-summary="All"></div>
                        <div class="row">
                            <div class="col-4 form-group">
                                <div class="col-form-label">
                                    <label>Requistion No.</label>
                                </div>
                                <input type="text" asp-for="RequisitionId" id="RequisitionId" class="form-control" />
                            </div>
                            <div class="col-4 form-group">
                                <div class="col-form-label">
                                    &nbsp;
                                </div>
                                <input type="button" class="btn btn-primary btn-control" value="Proceed" style="color:white" onclick="OnSearch()" />
                            </div>
                        </div>
                    </fieldset>
        <fieldset class="fieldset">
            <legend class="fs-legend">Requisition Details</legend>
            <div class="row">
                <div id="ISItemsGrid" style="width: 100%;height:50px" class="ag-theme-alpine"></div>
                <div class="col-4 form-group">
                    <div class="col-form-label ">
                        <label>&nbsp;</label>
                    </div>
                    <input type="submit" class="btn btn-primary" value="Save" style="margin:5px;" />
                    <input type="button" class="btn btn-secondary" value="Close" style="margin:5px;" onclick="closeNav()" />
                </div>
            </div>
        </fieldset>
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.ServiceId)
        @*@Html.HiddenFor(x => x.RequisitionId)*@
        @Html.HiddenFor(x => x.CustomerId)
        @Html.HiddenFor(x => x.POItemsData)
    </form>
</div>
 

<script>

    $(document).ready(function () {
        $("#ItemHeadId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--All--",
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/LOV/GetListOfValueList?type=IMS_ITEM_TYPE",
                    }
                }
            }
        });
        $("#AmountBase").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "--All--",
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/LOV/GetListOfValueList?type=IMS_AMOUNT_BASE",
                    }
                }
            }
        });
       
        $("#InvoiceScheduleDate").kendoDatePicker({
            value: new Date(),
            format: "dd/MM/yyyy"
        });

        var d = new Date();
        d.setDate(d.getDate() - 6);
        $("#RequisitionFromDate").kendoDatePicker({
            value: d,
            format: "dd.MM.yyyy"
        });
        $("#RequisitionToDate").kendoDatePicker({
            value: new Date(),
            format: "dd.MM.yyyy"
        });
  
        //$("#RequisitionId").kendoDropDownList({
        //    dataTextField: "ServiceNo",
        //    dataValueField: "Id",
        //    optionLabel: "--Select--",
        //    dataSource: {
        //        transport: {
        //            read: {
        //                url: "/Ims/InventoryManagement/GetRequisitiononFilters?ItemHead=" + $("#ItemHeadId").data("kendoDropDownList").value() + "&From=" + sd1 + "&To=" + ed1,
        //            }
        //        }
        //    }
        //});
        $("#RequisitionId").kendoDropDownList({
            optionLabel: "--All--",
            dataTextField: "ServiceNo",
            dataValueField: "Id",
            filter: "contains",
            
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Ims/InventoryManagement/GetRequisitiononFilters",
                        data: filterReq
                    }
                }
            }
        });
        function filterReq() {
            debugger;
            return {
               
                ItemHead: $("#ItemHeadId").val(),
                From : kendo.toString($("#RequisitionFromDate").data("kendoDatePicker").value(), 'yyyy-MM-dd HH:mm:ss'),
                To : kendo.toString($("#RequisitionToDate").data("kendoDatePicker").value(), 'yyyy-MM-dd HH:mm:ss')
            }
        }
        $('#ISItemsGrid').hide();
    $("#ISItemsGrid").jsGrid({
        width: "100%",
        inserting: false,
        editing: true,
        sorting: true,
        paging: true,
        autoload: false,
        pageSize: 14,
        pageButtonCount: 5,
        controller: {
            loadData: function (filter) {

                return $.ajax({
                    type: "GET",
                    url: "/IMS/InventoryManagement/GetRequisistionItemsByRequisitionId?requisitionIds" + requisitionId,
                    data: filter,
                    dataType: "json"
                });
            },
            onItemEditing: function (e) {
                debugger;
                if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {
                    //
                    e.grid.updateItem();
                }
            },
            updateItem: function (item) {
                debugger;
            },
            //deleteItem: function (item) {
            //    onDeleteItem(item.NoteId);
            //}
        },
        fields: [
            { name: "Select", type: "checkbox", width: 60, },
            {
                name: "ItemName",
                title: "Item Name",
                type: "text",
                editing: false
            },
            {
                name: "ItemQuantity",
                title: "Requisition Qty",
                type: "text",
                editing: false
            },
         
            //{
            //    name: "SalesRate",
            //    title: "Sale Rate",
            //    type: "text",
            //    editing: false
            //},
            {
                name: "DeliveredQuantity",
                title: "Delivery Qty",
                type: "text",
                editing: false
            },
            {
                type: "control", deleteButton: false,
            },
        ]
    })
    });


    function IsConfirmedChanged(e) {
        if ($('input[id=IsConfirmed]:checked') == false) {
            e.preventDefault();
            $("#btnSave").prop('disabled', true);
        }
        else {
            $("#btnSave").prop('disabled', false);
        }
    }

    var selectedDataItems = [];
    function pushPopinArray(arr) {
        for (var i = 0; i < arr.length; i++) {
            if (arr[i].Select == true) {
                selectedDataItems.push(arr[i].Id);
            }
        }
    }

    function SaveData(e) {
        debugger;
        var entityGrid = $("#ISItemsGrid").data("JSGrid");
        if (entityGrid._editingRow != null) {
            entityGrid.updateItem();
        }
        //pushPopinArray(entityGrid.data);
        for (var i = 0; i < entityGrid.data.length; i++) {
            if (entityGrid.data[i].Select == true) {
                selectedDataItems.push(entityGrid.data[i]);

            }
        }
        // console.log(selectedDataItems);

        $("#POItemsData").val(JSON.stringify(selectedDataItems));
       // $("#POId").val();
    }
   

    function OnSearch() {
        debugger;
        requisitionId = $("#RequisitionId").data("kendoDropDownList").value();
        $('#ISItemsGrid').show();
        $("#ISItemsGrid").jsGrid("loadData", { requisitionIds: requisitionId });
    }
    function OnReq() {
        debugger;
      
       
        document.getElementById('req').style.display = "block";
        $("#RequisitionId").data("kendoDropDownList").dataSource.read();

       
    }
    var onAjaxSuccess = function (res) {
        if (res.success) {
            closeNav()
        }
        else {
            alert(res)
            showError(res.error);
        }
    };


    function closeNav() {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }
    
</script>