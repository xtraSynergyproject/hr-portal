@*@using Kendo.Mvc.UI*@
@using System.Text
@using Synergy.App.ViewModel;
@model PositionChartIndexViewModel
@inject Synergy.App.Common.IUserContext _userContext
@{
    ViewBag.Title = "Hierarchy Chart";
    Layout = null;
}

<script src="~/js/positionchartmenu.js"></script>
<link href="~/css/orgchart.css" rel="stylesheet" />


<style>
    .hr-org-expand, .hr-org-collapse {
       
        top: 120px !important;
       
    }
    .hr-dhc {
        top: 117px !important;
    }
    .k-menu-group {
        position: initial !important
    }

    .context-menu-list {
        position: absolute;
        display: inline-block;
        min-width: 13em;
        max-width: 26em;
        padding: .25em 0;
        margin: .3em;
        font-family: inherit;
        font-size: inherit;
        list-style-type: none;
        background: #fff;
        border: 1px solid #bebebe;
        border-radius: .2em;
        -webkit-box-shadow: 0 2px 5px rgb(0 0 0 / 50%);
        box-shadow: 0 2px 5px rgb(0 0 0 / 50%);
    }

    #wrapper {
        height: 100%;
        display: inline-flex;
        align-items: center;
        justify-content: center;
    }

        #wrapper > ul {
            height: 75%;
            list-style: none;
            display: flex;
            align-content: center;
            flex-direction: column;
            flex-wrap: wrap;
        }

        #wrapper > li {
            flex-basis: calc(100% / 3 - 2px);
            color: firebrick;
            border: 1px solid firebrick;
            background-color: greenYellow;
            width: 200px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
    .tree {
        text-align: center;
        align-items: center;
        display: inline-block !important; /*initial center alignment*/
        overflow-x: auto;
        overflow-y: hidden;
    }
</style>





<script type="text/javascript">
    var reset = true, chartMode = 'Normal', hierarchyId, asonDate,
        allowedParentId, hierarchyRootNodeId, isAsOnDate , permissionCSV, isAdmin , loggedInEmpId
        , loggedInOrganizationId, loggedInUserOrganizationMapping
        , loggedInOrgId, isAdmin
    $(document).ready(function () {
        $("#menu").hide();
        $("#menu").find("ul").addClass("dropdown-menu");
        hierarchyId = '@Model.HierarchyId';
        allowedParentId = "7464d273-a5c0-473c-a32a-6e71805d5930";//'@Model.AllowedRootNodeId';
        InitialLoad('@Model.HierarchyId');

    });
    function OnAsOnDateChange(e) {
        var params = window.location.search;
        params = RemoveParams(params, 'date');
        var url = window.location.pathname + '?' + params + '&date='+kendo.toString(this.value(), 'yyyy-MM-dd');
        window.location.href = url;
        return false;
    }
    function InitialLoad(HierarchyId) {
        //if (HierarchyId != null && HierarchyId != '') {
        var url = "/CaseManagement/HierarchyChart/GetChildList?parentid=" + allowedParentId + "&levelUpto=3";
            var li = $('.root-li');
            GetChildList(url, li, allowedParentId, true, null);
        //}
    }
    function ExportToPdf() {
        $("#Width").val($(".root-li").width());
        $("#Height").val($(".root-li").height());
        var html = $('.tree').prop('outerHTML');
        $("#Content").val($('<div/>').text(html).html());
        document.getElementById('exportToPdf').submit();
        return true;
    }
    $(document).on('click', function (e) {
        if ($(e.target).closest("#menu").length === 0 && $(e.target).closest(".hr-org-menu").length === 0) {
            $("#menu").hide();
        }
    });
    @*function GotoDep(type) {
        if (type=='@ChartViewType.TopNode') {
            InitialLoad(null);
        }
        else if (type=='@ChartViewType.MyNode') {
            InitialLoad(loggedInOrganizationId);
        }
    }*@
    function OrganizationChartSearchCallBack(Organizations) {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
       // Search(Organizations.replace(',', ''));
        return false;
    }
    function Search(OrganizationId) {
        var url = "/hrs/Organizationchart/GetParentHierarchyWithAllChild?OrganizationId=" + OrganizationId
            + "&hierarchyId=" + hierarchyId + "&hierarchyRootId=" + hierarchyRootNodeId
            + "&allowedRootId=" + allowedParentId + "&date=" + asonDate;
        var li = $('.root-li');
        GetChildList(url, li, allowedParentId, true, OrganizationId);
    }
    function OnSearch() {

        var url = "/hrs/Organizationchart/search?hierarchyId=" + hierarchyId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Search Department', Width: 1200, Height: 650 });
    }
        function FillNode(data, liData, parentLvl) {

        liData.Level = parentLvl;
        var html = "";
        var template = kendo.template($("#template-org").html());
        html = template(liData);
        var items = $.grep(data, function (element, index) {
            return element.ParentId == liData.Id;
        });

        if (items != null && items.length > 0) {
            html = html.replace('hr-org-expand', 'hr-org-collapse');
            html += "<ul class='" + parentLvl + "'>"
            for (var i = 0; i < items.length; i++) {
                html += "<li id='" + items[i].Id +"' lvl='" + (eval(parentLvl) + 1) + "'>";
                html += FillNode(data, items[i], eval(parentLvl) + 1);
                html += "</li>"
            }
            html += "</ul>";
        }
        return html;
    }

    function GetChildList(url, li, OrganizationId,includeParent,searchId) {

        $.ajax({
            url: url,
            type: 'GET',
            cache: false,
            //async: false,
            success: function (data) {
                debugger
                if (includeParent) {

                    var parentData = $.grep(data, function (element, index) {
                        return element.Id == OrganizationId;
                    });
                    if (parentData != null && parentData.length > 0) {
                        var parentLvl = eval(li.attr('lvl'));
                        li.html("");
                        li.html(FillNode(data, parentData[0], parentLvl) );
                    }
                }
                else {

                    var childData = $.grep(data, function (element, index) {
                        return element.ParentId == OrganizationId;
                    });

                    if (childData != null && childData.length > 0) {
                        var parentLvl = eval(li.attr('lvl'));
                        var html = "<ul class='" + parentLvl + "'>"
                        for (var i = 0; i < childData.length; i++) {
                            html += "<li id='" + childData[i].Id+"' lvl='" + (eval(parentLvl) + 1) + "'>";
                            html += FillNode(data, childData[i], (eval(parentLvl) + 1));
                            html += "</li>"
                        }
                        html += "</ul>";
                        li.append(html);
                    }
                }

                if (searchId!=null) {
                    $("#org-" + searchId).addClass('focus');
                    FocusSearchResultNode();
                }
                HideLoader($('.viewdata'));
            },
            error: function (errData) {
                //OnError(errData);

            }
        });
        return false;
    }
    function Expand(e, rootli) {
        ShowLoader($('.viewdata'));
        var node = $(e).parent('div').parent('li');
        var lvl = eval(node.attr('lvl'));
        var id = node.attr('id');
        var ul = node.find('ul[class=' + lvl + ']');       
        if (ul.length <= 0) {
              //hierarchyId = $("#HierarchyId").val();
            //var url = "/hrs/Organizationchart/GetChildList?parentId=" + id + "&parentLevel=" + lvl
            //    + "&includeParent=false&uptoLevel=1&hierarchyId=" + hierarchyId + "&hierarchyRootId=" + hierarchyRootNodeId
            //    + "&allowedRootId=" + allowedParentId + "&date=" + asonDate;
            if (id == undefined) {
                var node1 = $(e).parent('div')
                var rootid = node1[0].id;
                rootid = rootid.split("org-");
                var url = "/CaseManagement/HierarchyChart/GetChildList?parentId=" + rootid[1] + "&levelUpto=1&hierarchyId=" + hierarchyId;
                GetChildList(url, node, rootid[1], false, null)
            }
            else {
                var url = "/CaseManagement/HierarchyChart/GetChildList?parentid=" + id + "&levelUpto=1&hierarchyId=" + hierarchyId;
                GetChildList(url, node, id, false, null)
            }


         //   var url = "/CHR/PositionHierarchy/GetChildList?parentid=" + id + "&levelUpto=1";
         //   var rootli = $('.root-li');
         //   GetChildList(url, node, id,false,null)
        }
        else {
            ul.show();
            //OnComplete();
        }


    }
    function MultiLevelExpandCollapse(OrganizationId, level) {       
        var node = $('#org-' + OrganizationId).parent('li');
        node.find('.hr-ec').toggleClass('hr-org-expand hr-org-collapse');
        var lvl = eval(node.attr('lvl'));
        var id = node.attr('id');
        var ul = node.find('ul[class=' + lvl + ']');
        var ec = node.find('.hr-ec');
        ec.removeClass("hr-org-expand");
        ec.addClass("hr-org-collapse");
        if (ul.length > 0) {
            ul.remove();
        }
        //hierarchyId = $("#HierarchyId").val();
        if (id == undefined) {
            var url = "/CaseManagement/HierarchyChart/GetChildList?parentId=" + OrganizationId + "&levelUpto=" + level;
            GetChildList(url, node, OrganizationId, false, null)
        }
        else {
            var url = "/CaseManagement/HierarchyChart/GetChildList?parentid=" + id + "&levelUpto=" + level;
            GetChildList(url, node, id, false, null)
        }
       // var url = "/CHR/PositionHierarchy/GetChildList?parentid=" + id + "&levelUpto=" + level;
       // GetChildList(url, node, id, false, null)
    }
    function CollapseAll(OrganizationId) {

        var node = $('#org-' + OrganizationId).parent('li');
        var lvl = eval(node.attr('lvl'));
        var ec = node.find('.hr-ec');
        ec.removeClass("hr-org-collapse");
        ec.addClass("hr-org-expand");
        var ul = node.find('ul[class=' + lvl + ']');
        ul.remove();
        //OnComplete();
    }
    function Collapse(e, rootli) {       
        var node = $(e).parent('div').parent('li');
        var lvl = eval(node.attr('lvl'));
        var ul = node.find('ul[class=' + lvl + ']');
        ul.remove();
        //OnComplete();
    }
        function OnExpandCollapseClick(e) {

        var rootli = $('.root-li');
        //OnBegin();
        var isExpand = $(e).hasClass('hr-org-expand');
        $(e).toggleClass('hr-org-expand hr-org-collapse');
        if (isExpand) {
            Expand(e, rootli);
        }
        else {
            Collapse(e, rootli);
        }

    }

    function OnManage(source, orgId, relationshipId, hierarchyId) {
        var rsv = encodeURIComponent("/hrs/organizationchart/index?a=1");
        if (type1 == "OrgExcel") {
            rsv = encodeURIComponent("/hrs/organizationchart/index?type=OrgExcel");
        }
        var url = "/hrs/Organizationhierarchy/" + source + (orgId == null ? "" : "?orgId=" + orgId) +  "&relationshipId=" + relationshipId + "&hierarchyId=" + hierarchyId+ "&ru=" + rsv;
        window.location.href = url;

    }
    function OnOrgManage(source, id) {
        var rsv = encodeURIComponent("/hrs/organizationchart/index?a=1");
        if (type1 == "OrgExcel") {
            rsv = encodeURIComponent("/hrs/organizationchart/index?type=OrgExcel");
        }

        var url = "/hrs/Organization/" + source + (id == null ? "" : "?id=" + id + "&ru=" + rsv +  "&hierarchyId=" + hierarchyId + "&orgId=" + orgId + "&date=" + asonDate);
        window.location.href = url;

    }
    function onAddRootNode() {
        var rsv = encodeURIComponent("//hrs/organizationchart/index?a=1");
        window.location.href = "/hrs/organization/create?parentOrganizationId=0&hierarchyid=1&rs=" + rsv;
    }

    $('#left').click(function () {
        event.preventDefault();
        $('#chartdiv').animate({
            scrollLeft: "-=1075px"
        }, "slow");

    });

    $('#right').click(function () {
        event.preventDefault();
        $('#chartdiv').animate({
            scrollLeft: "+=1075px"
        }, "slow");

    });

    $('#left1').click(function () {
        event.preventDefault();
        $('#chartdiv').animate({
            scrollLeft: "-=1075px"
        }, "slow");

    });

    $('#right1').click(function () {
        event.preventDefault();
        $('#chartdiv').animate({
            scrollLeft: "+=1075px"
        }, "slow");

    });

    function OnAfterCreate(note) {
       // alert(123);
//OnPosHier();
        InitialLoad('@Model.HierarchyId');

        //InitialLoad('@ViewBag.OrgAllowedRootNodeId');
    }

</script>


<script>
    $(function () {
        $.contextMenu({
            selector: '.hr-org-menu',
            trigger: 'left',
            build: function ($trigger, e) {              
                var Items;
                if (parentId == "") {
                    Items = {
                        "ManageUser": { name: "Manage User", icon: "fas fa-key" },
                        "AddExistingUser": { name: "Add Existing User Below", icon: "fas fa-chart-bullet" },
                    };                   
                }
                else
                {
                    Items = {
                        "ManageUser": { name: "Manage User", icon: "fas fa-key" },
                        "AddExistingUser": { name: "Add Existing User Below", icon: "fas fa-chart-bullet" },
                        "changeManager": { name: "Change Manager", icon: "fas fa-chart-bullet" },
                        "remove": { name: "Remove From Hierarchy", icon: "fas fa-chart-bullet" },
                    };
                }
                return {
                    callback: function (key, options) {
                        switch (key) {
                            case 'CreateNewPosition':
                                console.log(posId);
                                debugger;
                                var portalId = $('#GlobalPortalId').val();
                                var prms = encodeURIComponent('ParentPositionId=' + posId);
                                var roudfs = encodeURIComponent('ParentPositionId=true');
                                var url = '/Cms/Page?lo=Popup&source=Create&cbm=OnAfterCreate&dataAction=Create&templateCodes=HRPosition&pageType=Note&portalId=' + portalId + '&udfs=' + prms + '&roudfs=' + roudfs;
                                var win = GetMainWindow();
                                win.iframeOpenUrl = url;
                                win.OpenWindow({ Title: 'Position', Width: 1200, Height: 650 });
                                break;
                            case 'AddExistingPosition':
                                debugger;
                                var url = "/chr/PositionHierarchy/AddExistingPosition?parentPostionId=" + posId + "&parentPositionName=" + posName + "&hierarchyId=" + hierarchyId;
                                var win = GetMainWindow();
                                win.iframeOpenUrl = url;
                                win.OpenWindow({ Title: 'Add Existing Position', Width: 800, Height: 400 });
                                break;
                            case 'AddExistingUser':
                                var url = "/chr/UserHierarchy/AddExistingUser?parentUserId=" + posId + "&parentUserName=" + userName + "&hierarchy=" + hierarchyId;
                                var win = GetMainWindow();
                                win.iframeOpenUrl = url;
                                win.OpenWindow({ Title: 'Add Existing User', Width: 800, Height: 400 });
                                break;                           
                         
                            case 'Expand2':
                                MultiLevelExpandCollapse(posId, 2);
                                break;
                            case 'Expand3':
                                MultiLevelExpandCollapse(posId, 3);
                                break;
                            case 'Expand4':
                                MultiLevelExpandCollapse(posId, 4);
                                break;
                            case 'Expand5':
                                MultiLevelExpandCollapse(posId, 5);
                                break;
                            case 'ExpandAll':
                                debugger;
                                MultiLevelExpandCollapse(posId, 1000);
                                break;
                            case 'CollapseAll':
                                debugger;
                                CollapseAll(posId);
                                break;
                            default:
                        }

                    },
                    items: {
                        //"user": {
                        //    name: "User",
                        //    icon: "fas fa-user",
                        //    items: Items
                        //},
                     
                        "Expand": {
                            name: "Expand", icon: "fas fa-chart-bullet",
                            items: {
                                "Expand2": { name: "Expand 2 Levels Below", icon: "fas fa-chart-bullet" },
                                "Expand3": { name: "Expand 3 Levels Below", icon: "fas fa-chart-bullet" },
                                "Expand4": { name: "Expand 4 Levels Below", icon: "fas fa-chart-bullet" },
                                "Expand5": { name: "Expand 5 Levels Below", icon: "fas fa-chart-bullet" },
                                "ExpandAll": { name: "Expand All Levels Below", icon: "fas fa-chart-bullet" },
                            },
                        },
                        "CollapseAll": { name: "Collapse All", icon: "fas fa-chart-bullet" },
                    }
                };


            }
        });
    });


</script>


@Html.AntiForgeryToken()
@*@Html.ValidationSummary(false, "", new { @class = "k-block k-error-colored hr-v-summary text-danger" })*@

@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.ParentId)
@Html.HiddenFor(x => x.Name)


<div id="appWrapper">
    <div class="page" style="overflow-x: scroll">
        <div class="page-inner">
            <div class="page-section">
                <h5 class="text-center mt-5" style="width:100%">CMDB Hierarchy</h5>
                <input type="hidden" id="levelNo" value="@ViewBag.LevelNo" />
                <input type="hidden" id="optionNo" value="@ViewBag.OptionNo" />

                <script type="text/x-kendo-template" id="template-org">
        <div class="org-node org-node-1 #:data.CssClass#" id="org-#:data.Id#" style="Height:100px !important">

                <div class="hr-org-menu-div">
                <span id="hr-org-menu-#:data.Id#"
                      orgId="#:data.OrganizationId#" hc="0" lvl="0" assNId="#:data.AssignmentNoteId#" empId="#:data.PersonId#"
                      jobId="#:data.JobId#" rl="Abc" posId="#:data.Id#" posName="#:data.PositionName#"  posNId="#:data.NoteId#" jobNId="#:data.JobNoteId#"  empNId="#:data.PersonNoteId#"
                      orl="Xyz" pt="1"  hasUser="#:data.HasUser#" userName="#:data.DisplayName#" parentId="#:data.ParentId#"
                      pPosId="1" nt="A" ccHolderId="1" hierarchyId="#:data.HierarchyId#"
                      orgHierarchyId="1"
                      userId="#:data.UserId#" loggedInUser="@_userContext.UserId" noteId="#:data.NoteId#" posHierarchynoteId="#:data.PosHierarchyNoteId#"
                      class="hr-org-menu k-icon k-i-more-horizontal" onclick="OpenContextMenu(this,0,0)">
                </span>
            </div>

            @*<div>
                <img class="chartImage" src="/Cms/document/getimagemongo?id=#:data.PhotoId#"  onerror='OnPhotoError(this);' />
            </div>*@


            <div class="chartText borderTop pt-3" style="white-space:normal;font-size:14px;">
                #: Name #

             </div>

            # if (data.DirectChildCount>0) { #
            <span class="hr-org-expand hr-ec" onclick="OnExpandCollapseClick(this)"></span>
            <span class="hr-dhc" title="#:data.DirectChildCount# direct reportees">#:data.DirectChildCount#</span>
            # } #
        </div>
                </script>


                <div class="tree" id="chartdiv" style="min-width:100%;text-align:center;">
                    <div id="wrapper">
                        <ul class="0">
                            <li class="root-li" lvl='0' id="@Model.Id">
                            </li>
                        </ul>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>
