@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common

@{
    ViewBag.Title = "Communication Dashboard";

    Layout = null;
}
@model TemplateViewModel;
<style>

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    .banner-text {
        position: absolute;
        top: 35px;
        left: 30px;
    }

    .k-datepicker {
        width: 9em !important;
    }

    .cell-completed {
        background-image: linear-gradient(to right, #40FA06, #162636);
    }

    .cell-text-completed {
        color: #13b713;
    }

    .cell-pending {
        background-color: #007bff;
        background-image: linear-gradient(to right, #0379EF, #162636);
    }

    .cell-text-pending {
        color: #007bff;
    }

    .cell-info {
        background-color: #17a2b8;
    }

    .cell-text-info {
        color: #17a2b8;
    }

    .caticon {
        width: 100px;
        height: 100px;
        border-radius: 6px;
    }

    .summary-card-body {
        width: 400px;
    }

    .card-number-div {
        height: 100% !important;
    }

    .status-count {
        height: 100px;
    }
</style>

<script>

    //var templateId = "@ViewBag.TemplateId";
    var templateId = "";

    $(document).ready(function () {

        @*$("#DepartmentId").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            dataSource:
            {
                transport:
                {
                    read:
                    {
                        dataType: "json",
                        url: "/CHR/HRCore/GetAllOrganisation",
                    }
                }
            },
            filtering: function (ev) {
                var filterValue = ev.filter != undefined ? ev.filter.value : "";
                ev.preventDefault();

                this.dataSource.filter({
                    logic: "or",
                    filters: [
                        {
                            field: "Name",
                            operator: "contains",
                            value: filterValue
                        },
                    ]
                });
            }
        });*@

        @*$("#TemplateType").kendoDropDownList({
            dataTextField: "DisplayName",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/NtsService/ReadServiceTemplate?templateCode=@ViewBag.TemplateCodes&portalNames=@ViewBag.PortalNames",
                    }
                }
            }
        });

        $("#UserId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/cms/User/GetUserIdNameList?portalId=@ViewBag.PortalId",
                    }
                }
            }
        });*@

        $("#FromDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat",});
        $("#ToDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat",});

        CommDashboardGrid();
        caseSummaryGrid();
        getCommChart();
        getHeatMapChart();

    });

    //Grid
    var columnDefs = [
        {
            headerName: "Service Type",
            field: "TemplateId",
            cellRenderer: params => {
                return "<a style='cursor:pointer;color:blue;' href='javascript:OnClickTemplate(\"" + params.data.TemplateId + "\");'>" + params.data.TemplateName + " </a>";
            }
        },
        { field: "PendingCount", headerName:"Pending" },
        { field: "CompletedCount", headerName: "Completed" },

    ];

    function CommDashboardGrid(st, dt) {
        
        st = (st != "" && st != undefined) ? st : "";
        dt = (dt != "" && dt != undefined) ? dt : "";

        var url = "/CaseManagement/CaseManagement/ReadMonitoringDashboarGridData?templateCodes=@ViewBag.TemplateCodes&portalNames=@ViewBag.PortalNames&userId=@ViewBag.UserId&st=" + st + "&dt=" + dt + "&pageType=Communication";
        document.getElementById("commdashboardGridView").innerHTML = "";
        gridConfig(
           "commdashboardGridView",
           url,
           columnDefs,
           false,
           true,
           true,
           true,
           1,
           true,
           10);

    }
    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(EmailInboxTypeEnum)))';
    var statusObj = JSON.parse(status);

    function caseSummaryGrid(templatecode,deptId,tempId,st,dt) {

        templatecode = (templatecode != "" && templatecode != undefined) ? templatecode : "@ViewBag.TemplateCodes";
        deptId = (deptId != "" && deptId != undefined) ? deptId : "";
        tempId = (tempId != "" && tempId != undefined) ? tempId : "";
        st = (st != "" && st != undefined) ? st : "";
        dt = (dt != "" && dt != undefined) ? dt : "";

        var url = "/CaseManagement/CaseManagement/ReadCommEmailList?templateCodes=" + templatecode + "&portalNames=@ViewBag.PortalNames&userId=@ViewBag.UserId&deptId=" + deptId + "&tempId=" + tempId + "&st=" + st + "&dt=" + dt;

        var source ={
            datatype: "json",
            id: 'TargetId',
            url:url
        };
        var dataAdapter = new $.jqx.dataAdapter(source);
        $("#grid").jqxGrid(
            {
                width: '100%',// getWidth('Grid'),
                source: dataAdapter,
                columnsresize: true,
                showcolumnlines: false,
                showcolumnheaderlines: false,
                filterable: true,
                sortable: true,
                groupable: true,
                    columns : [
        {
                            datafield: "NtsNo", text: "Service/Task No", cellsrenderer: function (row, column, value) {
                var datarow = $("#grid").jqxGrid('getrowdata', row);
                return "<div class='p-2'><a href=\"javascript:OpenService('" + datarow.ServiceId + "','" + datarow.TemplateCode + "', '" + datarow.TargetId + "','" + datarow.TargetType +"')\">" + value + "</a></div>";
            }
        },
                        { datafield: "Subject" },
                        { datafield: "MessageUserDepartmentName",text:"Department" },
                        { datafield: "TemplateName", text: "Service Type" },
                        { datafield: "FromUserName", text: "Service Owner" },
        {
            datafield: "InboxStatus", text: "Service Status", cellclassname: function (row, columnfield, value) {
                if (value == "@((int)(EmailInboxTypeEnum.Completed))") {
                    return "cell-completed text-light";
                } else if (value == "@((int)(EmailInboxTypeEnum.Pending))") {
                    return "cell-pending text-light";
                } else if (value == "@((int)(EmailInboxTypeEnum.Drafted))") {
                    return "cell-info text-light";
                }
            }, cellsrenderer: function (row, column, value) {
                return "<div class='p-2'>" + statusObj[value]+"</div>";
                            }

        },
        {
            datafield: "CreatedDate",
                            text: "Start Date", cellsrenderer: function (row, column, value) {
                                return "<div class='p-2'>" +  moment(value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment') + "</div>";
                            }
        },
        {
            datafield: "DueDate",
            text: "Due Date", cellsrenderer: function (row, column, value) {
                                return "<div class='p-2'>" +  moment(value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment') + "</div>";
                            }
        }
                ]
            }
        );
    }

    function OnClickTemplate(tempId) {
        templateId = tempId;
        document.getElementById("commPendingCount").innerHTML = "";
        document.getElementById("commCompletedCount").innerHTML = "";

        @*templatecode = (templatecode != "" && templatecode != undefined) ? templatecode : "@ViewBag.TemplateCodes";*@
        //deptId = (deptId != "" && deptId != undefined) ? deptId : "";
        @*userId = (userId != "" && userId != undefined) ? userId : "@ViewBag.UserId";*@

        tempId = (tempId != "" && tempId != undefined) ? tempId : "";
        var st = kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');
        var dt = kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');

        CommDashboardGrid(st, dt);
        caseSummaryGrid("@ViewBag.TemplateCodes", "", tempId, st, dt);
        getHeatMapChart("@ViewBag.TemplateCodes", "", tempId, "", st, dt);
        getCommChart("@ViewBag.TemplateCodes", "", tempId, "", st, dt);


        var url = "/CaseManagement/CaseManagement/GetNtsEmailStatusCountByTemplate?templateCodes=@ViewBag.TemplateCodes&portalNames=@ViewBag.PortalNames&userId=@ViewBag.UserId&tempId=" + tempId + "&st=" + st + "&dt=" + dt + "&pageType=Communication";

        $.ajax({
                url: url,
                type: 'GET',
                data: {},
                dataType: 'json',
                success: function (result) {
                
                    if (result.success) {
                        document.getElementById("commPendingCount").innerHTML = result.serpending;
                        document.getElementById("commCompletedCount").innerHTML = result.sercompleted;
                        document.getElementById("chartTotCount").innerHTML = parseInt(result.serpending) + parseInt(result.sercompleted);

                    }
                    else {
                        evt.preventDefault();
                        return false;
                    }
                },
                error: function (ert) {
                    ShowNotification(ert, "error");
                }
        });
    }

    function getHeatMapChart(temp, deptId, tempId, userId, st, dt) {

        deptId = (deptId != "" && deptId != undefined) ? deptId : "";
        tempId = (tempId != "" && tempId != undefined) ? tempId : "";
        userId = (userId != "" && userId != undefined) ? userId : "@ViewBag.UserId";
        st = (st != "" && st != undefined) ? st : "";
        dt = (dt != "" && dt != undefined) ? dt : "";

        //Heatmap chart
        var url = "/CaseManagement/CaseManagement/GetCommHeatMapChart?tempCode=@ViewBag.TemplateCodes&userId=@ViewBag.UserId&deptId=" + deptId + "&tempId=" + tempId + "&st=" + st + "&dt=" + dt;
        //var url = "/cms/NtsService/GetSeriesData";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {                    
                    /*var dueList = res.dueDateList;*/
                    var seriesData = getSeriesData(res);
                    var options = {
                        series: seriesData,
                        theme: {
                            mode: skin == "dark" ? "dark" : "light",

                        },
                        chart: {
                            height: 210,
                            type: 'heatmap',
                            toolbar: {
                                show: false
                            },
                            zoom: {
                                enabled: false,
                            },
                            events: {
                                click: function (event, chartContext, config) {
                                   
                                    var el = event.target;
                                    var seriesIndex = parseInt(el.getAttribute("i"));
                                    var dataPointIndex = parseInt(el.getAttribute("j"));
                                    var sla = "";
                                    if (dataPointIndex == 0) {
                                        sla = "OneWeek";
                                    }
                                    else if (dataPointIndex == 1) {
                                        sla = "TwoWeek";
                                    }
                                    else if (dataPointIndex == 2) {
                                        sla = "ThreeWeek";
                                    }
                                    GoToInbox('@NtsEmailTargetTypeEnum.Service', '@NtsEmailTargetTypeEnum.StepTask', '', sla);

                                    //var seriesName = config.globals.seriesNames[seriesIndex];
                                    //var hr = config.config.series[seriesIndex].data[dataPointIndex].x;
                                    //var nexthr = hr + 1;
                                    //if (~~(hr / 10) == 0) {
                                    //    hr = '0' + hr;
                                    //}

                                    //if (~~(nexthr / 10) == 0) {
                                    //    nexthr = '0' + nexthr;
                                    //}
                                    //var todayDate = new Date().toISOString().split('T')[0];
                                    //var lt = todayDate + 'T' + hr + ':00:00.000Z';
                                    //var rt = todayDate + 'T' + nexthr + ':00:00.000Z';
                                    //onBlockClick(lt, rt, seriesName);
                                }
                            }
                        },
                        legends: {
                            formatter: function (seriesName, opts) {
                                
                                /*$('[seriesname="closed"]').hide();*/
                                //if (seriesname == "closed") {
                                //    $(this).hide();
                                //}
                                return [seriesName, " - ", opts.w.globals.series[opts.seriesIndex]]
                            }
                        },
                        yaxis: {
                            labels: {
                                style: {
                                    colors: [],
                                    fontSize: '10px',
                                    fontFamily: 'Lato',
                                    fontWeight: 400,
                                    cssClass: 'apexcharts-yaxis-label',
                                },
                                //formatter: (value) => { debugger; return val; },
                            }
                        },
                        xaxis: {
                            type: "categories",
                            //labels: noOfHrs,
                        },
                        plotOptions: {
                            heatmap: {
                                shadeIntensity: 1,
                                radius: 0,
                                //useFillColorAsStroke: true,
                                //colorScale: {
                                //    ranges: [
                                //    {
                                //        from: 1,
                                //        to: 7,
                                //        name: 'high(<1 week)',
                                //            color: '#007bff'
                                //    },
                                //    {
                                //        from: 7,
                                //        to: 40,
                                //        name: 'medium(2-3 weeks)',
                                //        color: '#ffc107'
                                //    },
                                //    {
                                //        from: 40,
                                //        to: 1000,
                                //        name: 'low(>3 weeks)',
                                //        color: '#f10b0b'
                                //    }
                                //    ]
                                //}
                            }
                        },
                        colors: ["#007bff", "#ffc107", "#f10b0b"],
                        dataLabels: {
                            enabled: true,
                            style: {
                                colors: ['#000']
                            }
                        },
                        stroke: {
                            width: 1
                        },
                        title: {
                            //text: 'HeatMap Chart with Color Range'
                        },
                        //tooltip: {
                        //    custom: function (opts) {
                        //        //debugger;
                        //        const desc =
                        //            opts.ctx.w.config.series[opts.seriesIndex].data[
                        //                opts.dataPointIndex
                        //            ].description;

                        //        const value = opts.series[opts.seriesIndex][opts.dataPointIndex];
                        //        if (desc == 0) {
                        //            //debugger;
                        //            return '<div disabled></div>';
                        //        }

                        //        return desc;
                        //    }
                        //},
                    };
                    document.getElementById("commheatmapChart").innerHTML = "";
                    var hchart = new ApexCharts(document.querySelector("#commheatmapChart"), options);
                    hchart.render();
                }
            }
        });
    }

    function getSeriesData(res) {

        var series = res.seriesList;
        
        var seriesList = [];
        for (var i = 0; i < series.length; i++) {
            var obj = {};
            obj["name"] = series[i].name;
            var seriesdata = res.seriesList[i].data;
            var data = [];
            for (var j = 0; j < seriesdata.length; j++) {
                var dataobj = {};
                dataobj["x"] = seriesdata[j].x;
                dataobj["y"] = seriesdata[j].y;

                dataobj["description"] = seriesdata[j].y;
                data.push(dataobj);
            }
            obj["data"] = data;
            seriesList.push(obj);
        }
        return seriesList;
    }



    function OnChangeServiceType() {
        var search = $("#TemplateType").data("kendoDropDownList").value();
        caseSummaryGrid(search);
    }

    function getCommChart(temp,deptId,tempId,userId,st,dt) {

        deptId = (deptId != "" && deptId != undefined) ? deptId : "";
        tempId = (tempId != "" && tempId != undefined) ? tempId : "";
        userId = (userId != "" && userId != undefined) ? userId : "@ViewBag.UserId";
        st = (st != "" && st != undefined) ? st : "";
        dt = (dt != "" && dt != undefined) ? dt : "";

        var url = "/CaseManagement/CaseManagement/GetCommChartByWorkflowStatus?tempCode=@ViewBag.TemplateCodes&userId=@ViewBag.UserId&deptId=" + deptId + "&tempId=" + tempId + "&st=" + st + "&dt=" + dt;
            $.ajax({
                type: 'GET',
                url: url,
                success: function (res) {
                    if (res) {

                        var chartid = "commChart";
                        var vals = res.ItemValueSeries;
                        itcode = res.Code;
                        var chart = "#"+chartid;
                        var options = {
                            series: vals,
                            //title: {
                            //    text: "Task By Status"
                            //},
                            chart: {
                                id: chartid,
                                width: 240,
                                height: 230,
                                type: 'pie',
                                events: {
                                    dataPointSelection: function (event, chartContext, config) {
                                        var status = config.w.config.labels[config.dataPointIndex];
                                        //var code = config.w.config.chart.id;
                                        //var statusCode = '';
                                        //if (status === 'Drafted') {
                                        //    statusCode = 'SERVICE_STATUS_DRAFT';
                                        //} else if (status === 'Pending') {
                                        //    statusCode = 'SERVICE_STATUS_INPROGRESS,SERVICE_STATUS_OVERDUE';
                                        //} else if (status === 'Overdue') {
                                        //    statusCode = 'SERVICE_STATUS_OVERDUE';
                                        //} else if (status === 'Completed') {
                                        //    statusCode = 'SERVICE_STATUS_COMPLETE';
                                        //} else if (status === 'Reject' || status === 'Canceled') {
                                        //    statusCode = 'SERVICE_STATUS_REJECT,SERVICE_STATUS_CANCEL';
                                        //}
                                        GoToInbox('@NtsEmailTargetTypeEnum.SubTask', '@NtsEmailTargetTypeEnum.AcceptanceTask', status);
                                    }
                                }
                            },
                            noData: {
                                text: "!No Data Found",
                                align: 'center',
                                verticalAlign: 'middle',
                                offsetX: 0,
                                offsetY: 0,
                                style: {
                                    color: "#363642",
                                    fontSize: '14px',
                                }
                            },
                            legend: {
                                position: 'bottom'
                            },
                            labels: res.ItemValueLabel,
                            //colors: ['#13b713', '#f2a818', '#008ffb', '#f10b0b', '#f2a818'],
                            colors: res.ItemStatusColor,
                            dataLabels: {
                                enabled: true,
                                style: {
                                    colors: ['#000']
                                },
                            },

                        };

                        document.getElementById(chartid).innerHTML = "";
                        var chart = new ApexCharts(document.querySelector(chart), options);
                        chart.render();
                    }
                }
            });

    }

    function GoToInbox(targetType1, targetType2, wfStatus, sla) {
        var st = kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');
        var dt = kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');

        LoadPartailView('@Url.Action("NtsEmailPage", "Nts")?userId=@ViewBag.UserId&portalNames=@ViewBag.PortalNames&returnPageName=@ViewBag.PageName&templateCodes=@ViewBag.TemplateCodes&catCodes=@ViewBag.CategoryCodes&groupCodes=@ViewBag.GroupCodes&tempId=' + templateId + '&targetType1=' + targetType1 + '&targetType2=' + targetType2 + '&wfStatus=' + wfStatus + '&slaType=' + sla+'&st='+st+'&dt='+dt, $('#cms-content'));
    }

    @*function OnOpen(id, templateCode, ntsType) {
        debugger;
        var portalId = $("#GlobalPortalId").val();
        var pageType = ntsType == "@((int)(NtsTypeEnum.Service))" ? "Service" : "Task";
        var title = ntsType == "@((int)(NtsTypeEnum.Service))" ? "Service Request" : "View Task";
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterCreate&source=Edit&dataAction=Edit&pageType=' + pageType + '&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: title, Width: 1200, Height: 700 });
        return false;
    }*@

    function OpenService(id, templateCode, tid, ttype) {
        var portalId = $("#GlobalPortalId").val();
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterServiceCreate&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + id + '&targetId=' + tid + '&targetType=' + ttype;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'View', Width: 1200, Height: 700 });
        return false;
    }

    function OnCreateService() {
        var url = '/Cms/NtsService/SelectServiceTemplate?templateCode=@ViewBag.TemplateCodes&userId=@ViewBag.UserId&cbm=OnAfterServiceCreate&portalNames=@ViewBag.PortalNames';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Select Service', Width: 1000, Height: 600, Position: 'Right1' });
        return false;
    }

    function OnFilter() {
        //var dept = $("#DepartmentId").data("kendoDropDownList").value();
        //var temp = $("#TemplateType").data("kendoDropDownList").value();
        //var user = $("#UserId").data("kendoDropDownList").value();
        var st = kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');
        var dt = kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');

        CommDashboardGrid(st, dt);
        OnClickTemplate(templateId);
        caseSummaryGrid();
        getCommChart("","","","",st,dt);
        getHeatMapChart("","","","",st,dt);
    }

    function OnResetFilter() {
        $("#FromDate").data("kendoDatePicker").value("");
        $("#ToDate").data("kendoDatePicker").value("");
        CommDashboardGrid();
        OnClickTemplate(templateId);
        caseSummaryGrid();
        getCommChart();
        getHeatMapChart();
    }

</script>


<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="page-inner">
            <div class="page-section">
                <div class="row no-gutters p-2">
                    <div class="col-lg-6 col-md-12">
                        <h5 class="text-dark">@ViewBag.Title</h5>
                    </div>
                    <div class="col-lg-6 col-md-12 text-right">
                        @if (ViewBag.AllowCreation != null && ViewBag.AllowCreation == true)
                        {
                            <button class="btn btn-primary  btn-primary-grd" onclick="OnCreateService();">Create New Service</button>
                        }
                    </div>
                </div>
                @*<div class="row p-2 mb-2">
                        <div class="col-lg-4 col-md-4 col-sm-12">Department
                            <input id="DepartmentId" style="width:100%!important" />
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-12">Template
                            <input id="TemplateType" style="width:100%!important" />
                        </div>
                        <div class="col-lg-4 col-md-4 col-sm-12">User
                            <input id="UserId" style="width:100%!important" />
                        </div>
                    </div>*@
                <div class="row p-3 mb-3 ml-2 mr-2 jumbotron">
                    <div class="col-lg-4 col-md-4 col-sm-12">
                        From Date
                        <input id="FromDate" style="width:100%!important" />
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12">
                        To Date
                        <input id="ToDate" style="width:100%!important" />
                    </div>

                    <div class="col-lg-4 col-md-4 col-sm-12" style="padding-top:20px;">
                        <button class="btn btn-primary  btn-primary-grd" onclick="OnFilter();">Search</button>
                        <button class="btn btn-secondary" onclick="OnResetFilter();" style="margin-right:10px;">Reset</button>
                    </div>
                </div>
                

                <div class="row-12" style="padding:10px;">
                    <div id="commdashboardGridView" style="width: 100%;height:250px" class="ag-theme-alpine"></div>
                </div>
                
                <div class="row" style="padding:10px;">

                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <div class="card">
                            <div class="card-header text-center bg-primary bg-primary-grd text-white">Service By Workflow Status</div>
                            <div class="card-body row summary-card-body" style="height:257px;">
                                <div class="col-5 row border-right">
                                    <div class="col-12" style="text-align:center;padding-top:30px;">
                                        <img class="caticon" src="/cms/Document/GetImageMongo?id=@ViewBag.IconFileId" onerror="OnDocumentError(this);">
                                    </div>
                                    <div class="col-12" style="text-align:center">
                                        <div style="font-weight:bold;font-size:25px;" id="chartTotCount">@ViewBag.TotalCount</div>
                                    </div>
                                </div>
                                <div class="col-7">
                                    <div id="commChart"></div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center bg-success bg-success-grd text-white">Service By SLA</div>
                            <!-- .card-body -->
                            <div class="card-body chart-body" style="height:257px;">
                                <div id="commheatmapChart"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>

                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center bg-danger bg-danger-grd text-white">Service By Status</div><!-- .card-body -->

                            <div class="card-body chart-body" style="height:257px;">
                                <div class="row">
                                    <div class="col-6 cell-text-pending status-count">
                                        <div class="p-2 m-2 mt-4 row" style="text-align:center;cursor:pointer;" onclick="GoToInbox('@NtsEmailTargetTypeEnum.Service','@NtsEmailTargetTypeEnum.StepTask');">
                                            <div class="col-5 " style="font-size:2em;"><i class="fa fa-check-double text-warning"></i></div>
                                            <div class="col-7 text-dark" style="font-size:2em;" id="commPendingCount">@ViewBag.PenCount</div>
                                            <div class="col-12 cell-pending" style="height:8px; border-radius:4px;">&nbsp;</div>
                                            <div class="col-12 pt-2" style="font-size:.8em;">PENDING</div>
                                        </div>
                                    </div>
                                    <div class="col-6 cell-text-completed status-count">
                                        <div class="p-2 m-2 mt-4 row" style="text-align:center;cursor:pointer;" onclick="GoToInbox('@NtsEmailTargetTypeEnum.Service','@NtsEmailTargetTypeEnum.StepTask');">
                                            <div class="col-5 " style="font-size:2em;"><i class="fa fa-clipboard-check text-complete"></i></div>
                                            <div class="col-7 text-dark" style="font-size:2em;" id="commCompletedCount">@ViewBag.ComCount</div>
                                            <div class="col-12 cell-completed" style="height:8px; border-radius:4px;">&nbsp;</div>
                                            <div class="col-12 pt-2" style="font-size:.8em;">COMPLETED</div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div><!-- /.card -->
                    </div>

                </div>

                <div style="padding:10px;">
                    <div class="row">
                        <div class="col-6"><h5  class="text-dark">Service Details</h5></div>
                        @*<div class="col-6"><div id="TemplateType" class="form-control" style="width:50%;float:right;"></div></div>*@
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-12 default">
                            <div id="grid">
                            </div>
                            @*<div id="casesummaryGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>*@
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
