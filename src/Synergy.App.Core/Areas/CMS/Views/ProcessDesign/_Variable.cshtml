@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Portal";
    Layout = null;
    //Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    //Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
}
@inject Synergy.App.Common.IUserContext _userContext
@model VariableViewModel

<style>
    .form-label-group {
        position: relative;
        margin-bottom: 0px;
    }

    .cms-manageportal-footer {
        /*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }

    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }

    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }

    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }
    /*    k-colorpicker {
        width: 100px;
    }

    .k-colorpicker .k-selected-color {
            width: 100px;
    }*/

</style>
<script type="text/javascript">
    function DataBound(e) {
        
        $(".selectcheckbox").bind("click", function (e) {
            e.stopPropagation();
            $(e.target).closest("tr").toggleClass("k-state-selected");
        });

        var rows = e.sender.element.find("tr");
        rows.each(function (e) {
            $(this).children().first().on("click", onFirstTDClick);
        })
        var abc = "@ViewBag.RowData";
        var arr = JSON.parse(abc.replace(/&quot;/g, '"'));

            for (var i = 0; i < arr.length; i++)
            {
                console.log(e.sender._data[0].Id);
                //if (e.sender._data[0].Id == arr[i].Id)
                //{
                    $("#selectcheckbox_"+ arr[i].Id).closest("tr").toggleClass("k-state-selected");
                    document.getElementById('selectcheckbox_' + arr[i].Id + '/').closest('tr').classList.add("k-state-selected");
                    document.getElementById('selectcheckbox_' + arr[i].Id + '/').checked = true;


                //}
            }

    }
    function onFirstTDClick(e) {
        e.stopPropagation();
        var tr = $(e.target).closest("tr");
        tr.find('[type=checkbox]').prop('checked', !tr.hasClass("k-state-selected"));
        tr.toggleClass("k-state-selected");

    }

    function ongridChange(arg) {
        
        var selectedRows = this.select();
        this.editRow(this.select());


        $('tr').find('[type=checkbox]').prop('checked', false);
        $('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);

        var selectedRows = this.select();
        var selectedDataItems = [];
        for (var i = 0; i < selectedRows.length; i++) {
            var dataItem = this.dataItem(selectedRows[i]);
            selectedDataItems.push(dataItem);
        }
        selectedRows = selectedDataItems;
    }
    function SaveData(e) {
        
        var selectedRows = [];
        var entityGrid = $("#grid").data("kendoGrid");
        var rows = entityGrid.select();
        rows.each(function (index, row) {
            var selectedItem = entityGrid.dataItem(row);
            selectedRows.push(selectedItem);
        });
        console.log(selectedRows);
        $("#RowData").val(JSON.stringify(selectedRows));
        if (selectedRows.length==0)
        {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("select at leaset one column");
            e.preventDefault();
            return false;
        }
    }

    function OnCancel(args) {

    }
    $(document).ready(function () {
        //alert($('#EnableDeletebtn').val());
        $('#EnableDeletebtn').change(function () {
            
            if (this.checked) {

                $('#confirmationdel').show();
            }
            else {
                $('#confirmationdel').hide();
            }

        });
        if ($('#EnableDeletebtn').val() == 'true')
        {
            $('#confirmationdel').show();
        }
    });

    function closeNavPortal() {
       
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }



    var onAjaxSuccess = function (res) {
        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                ShowNotification("Saved Successfully", "success");
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("Updated Successfully", "success");
            }
           // window.parent.parent.$("#documentTypeTreeView").data("kendoTreeView").dataSource.read();
            var TemplateId = res.templateId;
            LoadPartailView('@Url.Action("ManageIndex", "Template", new { @area = "Cms"})?templateId=' + TemplateId, $('#index'));
        }
        else {
            alert(res)
            showError(res.error);
        }
    };

    function getCaretCharacterOffsetWithin(content) {
        if ((content.selectionStart != null) && (content.selectionStart != undefined)) {
            return content.selectionStart;
        }
        return 0;


        var caretOffset = 0;
        var doc = element.ownerDocument || element.document;
        var win = doc.defaultView || doc.parentWindow;
        var sel;
        if (typeof win.getSelection != "undefined") {
            sel = win.getSelection();
            if (sel.rangeCount > 0) {
                var range = win.getSelection().getRangeAt(0);
                var preCaretRange = range.cloneRange();
                preCaretRange.selectNodeContents(element);
                preCaretRange.setEnd(range.endContainer, range.endOffset);
                caretOffset = preCaretRange.toString().length;
            }
        } else if ((sel = doc.selection) && sel.type != "Control") {
            var textRange = sel.createRange();
            var preCaretTextRange = doc.body.createTextRange();
            preCaretTextRange.moveToElementText(element);
            preCaretTextRange.setEndPoint("EndToEnd", textRange);
            caretOffset = preCaretTextRange.text.length;
        }
        return caretOffset;
    }

    function InsertVariable(variableName) {
        var element = $("#@Model.Element").data("kendoEditor");
        var variable = '<span contenteditable="false" style="font-size:small;border:1px solid #007bff;margin:2px;border-left:8px solid #007bff;border-radius:2px;">' + variableName + '</span>';

        element.exec("inserthtml", { value: variable });

    }


</script>
<style>
    .pd-var {
        font-size: small;
        border: 1px solid #007bff;
        border-left: 8px solid #007bff;
        padding: 3px;
        border-radius: 3px;
    }

    .pd-var-icon {
        font-size: small;
        background-color: #007bff;
        color: #fff;
        border-bottom-color: #007bff;
        border-top-color: #007bff;
        border-left-color: #007bff;
        border-bottom-left-radius: 3px;
        border-top-left-radius: 3px;
        padding-top: 5px;
        padding-bottom: 5px;
        padding-right: 6px;
        padding-left: 6px;
    }

    .pd-var-text {
        
    }
</style>
<div class="col-12 pad-15">
    @*@(Html.Kendo().TabStrip()
.HtmlAttributes(new { @Style="height:100%"})
.Name("tabstrip")
.Animation(animation =>
  animation.Open(effect =>
      effect.Fade(FadeDirection.In)))
//.TabPosition(TabStripTabPosition.Left)
.Items(tabstrip =>
{
    tabstrip.Add().Text("Static")
          .Selected(true)
            .LoadContentFrom(Url.Content("/Cms/ProcessDesign/ManageWorkFlow?TemplateId=" + @ViewBag.TemplateId));



    tabstrip.Add().Text("Process Design Flow")

                         .LoadContentFrom(Url.Content("/Cms/ProcessDesign/ManageStartEvent?TemplateId=" + @ViewBag.TemplateId));


    tabstrip.Add().Text("Context")

           .LoadContentFrom(Url.Content("/Cms/ProcessDesign/ManageContex?ProcessDesignId="+@ViewBag.ProcessDesignId));



})
    )*@
    @*<div class="cms-slidebar-footer ">
        <input type="button" class="btn btn-light" value="Close" onclick="CloseSideNav()" />
        <input type="submit" class="btn btn-primary" value="Insert" onclick="InsertVariable('Form.FirstName')" />
    </div>*@

</div>
@*<p class="inputlabel">Select database</p>
    <div class="dropme">Database 1 <i class="fad fa-sitemap"></i></div>
    <p class="inputlabel">Check properties</p>
    <div class="dropme">All<i class="fad fa-sitemap"></i></div>
    <div class="checkus"><i class="fad fa-sitemap"></i><p>Log on successful performance</p></div>
    <div class="checkus"><i class="fad fa-sitemap"></i><p>Give priority to this block</p></div>*@
@*<div id="divisionthing"></div>*@
@*<div id="removeblock">Delete blocks</div>*@