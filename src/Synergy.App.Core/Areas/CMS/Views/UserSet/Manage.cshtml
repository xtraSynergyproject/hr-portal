@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@using Newtonsoft.Json;


@{
    ViewData["Title"] = "Manage User Set";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model UserSetViewModel

<style>
    
    .required {
        color: red;
    }
</style>

<div class="row" style="margin-left:15px;">

    <form asp-controller="UserSet" asp-action="Manage" method="post" class="form-horizontal" id="myForm">                    
        <div class="text-danger" style="width:300px;" asp-validation-summary="All"></div>            
          
        <div class="row" style="padding:10px;margin-right:15px;">

            <div class="col-12 pad-15">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" required="required" autocomplete="off" />
                    <label for="Name">Name <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-15">
                <div class="form-label-group">
                    <input asp-for="Code" type="text" class="form-control" placeholder="Enter Code" autocomplete="off" />
                    <label for="Code">Code</label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="Description" type="text" class="form-control" placeholder="Description" autocomplete="off" />
                    <label for="Description">Description</label>
                </div>
            </div>

            <div class="col-12 pad-10">Status <span class="required">*</span></div>

            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(x=>x.Status)
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
        source.Read(read =>
        {
            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "StatusEnum" });
        });
        })
        .Value(Model.Status.ToString())
        .HtmlAttributes(new { @class = "form-control" })
        )*@

                <input asp-for="Status" id="Status" class="form-control"  />
            </div>
            <div class="col-12">Users <span class="required">*</span></div>
            <div class="col-12 pad-10">

                @*@(Html.Kendo().MultiSelectFor(x => x.UserId)
                                                       .AutoClose(false)
                                                       .Placeholder("Select Users...")
                                                       .DataSource(source =>
                                                       {
                                                           source.Read(read =>
                                                           {
                                                               read.Action("GetUserIdNameList", "User",new { @area="Cms"});
                                                           });

                                                       })
                                                       .Events(x=>x.Change("OnChange"))
                                                       .DataTextField("Name")
                                                       .DataValueField("Id")
                                                       .AutoBind(true)
                                                      .HtmlAttributes(new { @class = "form-control" })
                                                        .ValuePrimitive(true)
                                                       .Height(300)
        )*@
                <select asp-for="UserId" id="UserId" style="width:80%"></select>
            </div>
            <div class="col-12 pad-10">
                <label>Selected Users </label>
                <div id="UserlistView"></div>
                @*@(Html.Kendo().ListView<UserViewModel>()
        .Name("UserlistView")
        .TagName("div")
        .ClientTemplateId("template")
        .AutoBind(false)
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("GetUsersListView", "User",new { area="Cms"}).Data("FilterDDl"))
            .PageSize(21)
        )
        .Pageable()
        )*@
            </div>



            <div class="cms-slidebar-footer">
                <button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">Close</button>
                <input type="submit" class="btn btn-primary" value="Save" id="submitBtn" onclick="OnSave(event);" />
            </div>

        </div>
            @Html.HiddenFor(x => x.Id)
            @Html.HiddenFor(x => x.DataAction)
</form>
</div>
<script type="text/x-kendo-tmpl" id="template">
    <div class="row col-12" style="margin:5px;">
    @*<div class="col-3">
    <span>#:Id#</span>
    </div>*@
    <div class="col-9">
      <span>#:Name#</span>
    </div>
    </div>
</script>

<script type="text/javascript">
    function OnChange(e)
    {
        var search = FilterDDl();
        $("#UserlistView").data("kendoListView").dataSource.read(search)
    }

    function FilterDDl() {
        //alert($("#Users").val());
        var multiselect = $("#UserId").data("kendoMultiSelect");
        var multiselectvalue = multiselect.value();
        return {
            selectedValues: multiselectvalue.join()
        };
    }
    $(document).ready(function () {
        

        $("#Status").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.Status.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StatusEnum",
                    }
                }
            }
        });

      $("#UserId").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/User/GetUserIdNameList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select User...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.UserId)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
            change: OnChange
      });
        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Cms/User/GetUsersListView",
                    data: FilterDDl,
                    dataType: "json",
                }
            },
            pageSize: 21
        });

        $("#UserlistView").kendoListView({
            dataSource: dataSource,
            //change: OnChange,
            template: kendo.template($("#template").html())
        });

        var search = FilterDDl();
        $("#UserlistView").data("kendoListView").dataSource.read(search)
        if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();
            window.parent.getDataUserSet();
           // if (window.parent.$("#UserSetgrid").data("kendoGrid").dataSource.read()) { }
        }


    });
    function OnSave(evt) {

        if ($("#UserId").val() == "Select Users...") {
            //
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("User is required");
            evt.preventDefault();
            return false;

        }
        else {
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");
        }
    }

    function closeNavMemberGroup() {

        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

</script>