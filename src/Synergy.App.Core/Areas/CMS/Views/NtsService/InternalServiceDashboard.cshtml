@inject IStringLocalizer<CMS.UI.Web.Areas.CMS.Controllers.NtsServiceController> Resource
@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common

@model ProjectDashboardViewModel;

@{
    ViewBag.Title = @Resource["InternalDashboard"];

    Layout = null;
}

<style>
    /*.panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .k-listview {
        border: none !important;
    }

    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }*/
       

    /*.banner-container {
        position: relative;
        color: white;
    }

    .banner-text {
        position: absolute;
        top: 14px;
        left: 60px;
        font-size: 35px;
    }*/

   /* .banner-container {
        position: absolute;
        color: white;
        top: 0;
        left: 0;
        width: 100%;
    }*/

    .chart-body {
        height: 360px;
    }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    .banner-text {
        position: absolute;
        top: 35px;
        left: 30px;
    }

    .k-datepicker {
        width: 9em !important;
    }
</style>
<script>
    function onDatewiseSearch() {

        @*var dates = {
            StartDate: kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
            DueDate: kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
            TemplateCategoryCode:'@Model.CategoryCode',
            TemplateMasterCode:'@Model.TemplateCode'
        };*@

        var st = $("#FromDate").val();
        var dt = $("#ToDate").val();

        var starr = st.split('.');
        var dtarr = dt.split('.');

        st = starr[1] + "/" + starr[0] + "/" + starr[2];
        dt = dtarr[1] + "/" + dtarr[0] + "/" + dtarr[2];

        DateWiseChart(st, dt);

        //$("#chartDateWiseSearch").data("kendoChart").dataSource.read(dates);
    }

    $(document).ready(function () {

        //chartTaskByType
        var url = "/Cms/NtsService/GetInternalDashboardChartByStatus?categoryCodes=@Model.CategoryCode&templateCodes=@Model.TemplateCode";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    var chart = "#chartTaskByType";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Task By Type"
                        //},
                        chart: {
                            id: chartTaskByType,
                            width: 370,
                            height: 360,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {

                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var statusCode = '';
                                    if (status === 'Overdue') {
                                        statusCode = 'SERVICE_STATUS_OVERDUE';
                                    } else if (status === 'In progress') {
                                        statusCode = 'SERVICE_STATUS_INPROGRESS';
                                    } else if (status === 'Draft') {
                                        statusCode = 'SERVICE_STATUS_DRAFT';
                                    } else if (status === 'Completed') {
                                        statusCode = 'SERVICE_STATUS_COMPLETE';
                                    } else if (status === 'Reject') {
                                        statusCode = 'SERVICE_STATUS_REJECT';
                                    }
                                    getServiceList(statusCode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        //colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],
                        colors: res.ItemStatusColor,

                    };
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    document.getElementById("chartTaskByType").innerHTML = "";
                    chart.render();
                }
            }
        });

        //chart by status
        var url = "/Cms/NtsService/GetInternalDashboardTaskChart?categoryCodes=@Model.CategoryCode&templateCodes=@Model.TemplateCode";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    var vals = res.ItemValueSeries;
                    var chart = "#chartTaskByStatus";
                    var options = {
                        series: vals,
                        //title: {
                        //    text: "Task By Status"
                        //},
                        chart: {
                            id: chartTaskByStatus,
                            width: 370,
                            height: 360,
                            type: 'pie',
                            events: {
                                dataPointSelection: function (event, chartContext, config) {
                                    debugger;
                                    var status = config.w.config.labels[config.dataPointIndex];
                                    var code = config.w.config.chart.id;
                                    var tsCode = '';
                                    if (status === 'Overdue') {
                                        tsCode = 'TASK_STATUS_OVERDUE';
                                    } else if (status === 'In Progress') {
                                        tsCode = 'TASK_STATUS_INPROGRESS';
                                    } else if (status === 'Draft') {
                                        tsCode = 'TASK_STATUS_DRAFT';
                                    } else if (status === 'Completed') {
                                        tsCode = 'TASK_STATUS_COMPLETE';
                                    } else if (status === 'Reject') {
                                        tsCode = 'TASK_STATUS_REJECT';
                                    }
                                    getTaskList(tsCode);

                                }
                            }
                        },
                        noData: {
                            text: "!No Data Found",
                            align: 'center',
                            verticalAlign: 'middle',
                            offsetX: 0,
                            offsetY: 0,
                            style: {
                                color: "#363642",
                                fontSize: '14px',
                            }
                        },
                        legend: {
                            position: 'bottom'
                        },
                        labels: res.ItemValueLabel,
                        //colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],
                        colors: res.ItemStatusColor,

                    };
                    var chart = new ApexCharts(document.querySelector(chart), options);
                    document.getElementById("chartTaskByStatus").innerHTML = "";
                    chart.render();
                }
            }
        });

        $("#FromDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat", });
        $("#ToDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat", });

        onDatewiseSearch();

        $("#mdlServiceStatus").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Name",
            filter: "contains",
            autoBind: true,
            autoClose: false,
            change: onChangeServiceStatus,
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_SERVICE_STATUS" })",
                    }
                }
            }
        });


    });

    function getServiceList(statusCode) {
        var win = GetMainWindow();
        win.iframeOpenUrl = '/Cms/NtsService/ServiceListByFilters?&statusCodes=' + statusCode + '&templateCodes=@Model.TemplateCode&showAllOwnersService=true';
        win.OpenWindow({ Title: 'Services', Width: 1200, Height: 600 });
        return false;
    }

     function getTaskList(tsCode) {
        var win = GetMainWindow();
         win.iframeOpenUrl = '/Cms/NtsTask/TaskListByFilters?&statusCodes=' + tsCode + '&serTempCodes=@Model.TemplateCode';
        win.OpenWindow({ Title: 'Tasks', Width: 1200, Height: 600 });
        return false;
    }

    function DateWiseChart(st,dt) {
        //$("#chartDateWiseSearch").html("");
        document.getElementById("chartDateWiseSearch").innerHTML = "";

        var url = "/Cms/NtsService/GetRequestSLA?StartDate=" + st + "&DueDate=" + dt + "&TemplateCategoryCode=" + '@Model.CategoryCode' +
            "&TemplateMasterCode=" + '@Model.TemplateCode' ;
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    // var vals = res.ItemValueSeries;
                    var chart = "#chartDateWiseSearch";
                    var options = {
                        chart: {
                            height: 310,
                            type: "line",
                            stacked: false
                        },
                        dataLabels: {
                            enabled: false
                        },
                        colors: ["#FF1654", "#247BA0"],
                        //series: [
                        //    {
                        //        name: res.Days,
                        //        data: res.Type
                        //    },
                        //    {
                        //        name: res.ActualSLA,
                        //        data: res.Type
                        //    }
                        //],
                        series: [
                            {
                                name: "Service SLA",
                                data: res.LineChartValueSeries
                            },
                            {
                                name: "Actual SLA",
                                data: res.LineChartValueSeries1
                            }
                        ],
                        stroke: {
                            width: [4, 4]
                        },
                        plotOptions: {
                            bar: {
                                columnWidth: "20%"
                            }
                        },
                        xaxis: {
                            categories: res.ItemValueLabel
                        },
                        yaxis: [
                            {
                                axisTicks: {
                                    show: true
                                },
                                axisBorder: {
                                    show: true,
                                    color: "#FF1654"
                                },
                                labels: {
                                    style: {
                                        colors: "#FF1654"
                                    }
                                },
                                title: {
                                    text: "Service SLA",
                                    style: {
                                        color: "#FF1654"
                                    }
                                }
                            },
                            {
                                opposite: true,
                                axisTicks: {
                                    show: true
                                },
                                axisBorder: {
                                    show: true,
                                    color: "#247BA0"
                                },
                                labels: {
                                    style: {
                                        colors: "#247BA0"
                                    }
                                },
                                title: {
                                    text: "Actual SLA",
                                    style: {
                                        color: "#247BA0"
                                    }
                                }
                            }
                        ],
                        tooltip: {
                            shared: false,
                            intersect: true,
                            x: {
                                show: false
                            }
                        },
                        legend: {
                            horizontalAlign: "bottom",
                            offsetX: 40
                        }
                    };

                    var chart = new ApexCharts(document.querySelector("#chartDateWiseSearch"), options);

                    chart.render();

                }
            }
        });
    }

    function OnOpen(tempCode,itemId) {
        debugger;
        var portalId =  $("#GlobalPortalId").val();
         //e.preventDefault();
         //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterCreate&source=View&dataAction=View&templateCodes=' + tempCode + '&portalId=' + portalId + '&recordId=' + itemId;

        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Service Request', Width: 1200, Height: 700 });
        return false;
    }

    function GOWBS() {
        window.parent.LoadPartailView1("/pjm/ProjectTask/Index?ProjectId=@Model.Id&pageName=WorkBreakDownStructure", 'cms-content');
        AddBreadCrumb({ Text: 'Work BreakDown Structure', Name: 'WorkBreakDownStructure', Url: '/pjm/ProjectTask/Index?ProjectId=@Model.Id&pageName=WorkBreakDownStructure', PageType: 'Custom', LoadType: 'PartialView', IsNotClickable: false, IsClickDisabled: true }, true, 'Project Dashboard');

    }

    function GotoTask() {

    }

    function OnProjectChange(id) {
    }

    function AddTask() {

    }

    function onTaskSeriesClick(e) {

        //alert("onTaskSeriesClick");
        //console.log(e.dataItem);

        var selectvalue = e.dataItem.Type;
        var multiselect = $("#mdlServiceStatus").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length;i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);

      //  var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
      //  var assignedvalue = multiselectTaskAssigned.value();
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        //var stagevalue = multiselectTaskStages.value();

        var search = {
            ServiceStatusIds: newvalue,
          //  StatusIds: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);

        //var g = $("#kgdProjectGridView").data("kendoGrid");
        //console.log(g);
        //g.dataSource.group({ field: "NtsStatus" });
       //alert("\n category : " + e.category + "\n value : " + e.dataItem.Code);
        //window.lModelcation.href = "/pmt/pmthome/tasks?taskStatus=" + e.dataItem.Code;
    }

    function onTaskAssignedSeriesClick(e) {
        var selectvalue = e.dataItem.Type;
        //var multiselect = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        //var mdlvalue = multiselect.value();
        //var newvalue = new Array();
        //newvalue = mdlvalue;
        //var addflag = true;
        //if (newvalue.length > 0) {
        //    var i = 0;
        //    for (i = 0; i < newvalue.length; i++) {
        //        if (newvalue[i] == selectvalue) {
        //            addflag = false;
        //        }
        //    }
        //    if (addflag) {
        //        newvalue.push(selectvalue);
        //    }
        //} else {
        //    newvalue.push(selectvalue);
        //}
        //multiselect.value(newvalue);

        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        //var stagevalue = multiselectTaskStages.value();

        var search = {
            ServiceStatusIds: statusvalue,
          //  StatusIds: newvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
    }

    function onTaskStagesSeriesClick(e) {

        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlTaskStages").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length; i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
      //  var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
      //  var assignedvalue = multiselectTaskAssigned.value();

        var search = {
            //projectId: '@Model.Id',
           // projectIds: newvalue,
            ServiceStatusIds: statusvalue,
          //  StatusIds: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);


        //var g = $("#kgdProjectGridView").data("kendoGrid");
        //console.log(g);
        //g.dataSource.group({ field: "ServiceStage" });
    }
    function onChangeServiceStatus() {
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
      //var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
      //var assignedvalue = multiselectTaskAssigned.value();
      //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
      //var stagevalue = multiselectTaskStages.value();
        @*var search = {
            //projectId: '@Model.Id',
            //projectIds: stagevalue,
            ServiceStatusIds: statusvalue,
        //    StatusIds: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);*@
        getprojectGridinternalData(statusvalue);

    }
    function onChangeTaskAssigned() {
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
     //   var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
     //   var assignedvalue = multiselectTaskAssigned.value();
       // var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
       // var stagevalue = multiselectTaskStages.value();
        var search = {
            //projectId: '@Model.Id',
           // projectIds: stagevalue,
            ServiceStatusIds: statusvalue,
        //    StatusIds: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);

    }
    function onChangeTaskStages() {
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
      //  var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
       // var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var search = {
           //projectId: '@Model.Id',
           // projectIds: stagevalue,
            ServiceStatusIds: statusvalue,
         //   StatusIds: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);

    }
    function OnDataBound(arg) {

        document.getElementById('projectFiles').style.border = 'none';
        var data = $("#projectFiles").data("kendoListView").dataSource.data();
        var data1 = $("#ProjectTask12").data("kendoListView").dataSource.data();
        if (data.length == 0) {
            $('#no-data-file').show();
        } else {
            $('#no-data-file').hide();
        }
        if (data1.length == 0) {
            $('#no-data-notifi').show();
        } else {
            $('#no-data-notifi').hide();
        }
    }

    function OnTaskAssChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-taskchart').show();

        } else {
            $('#no-data-taskchart').hide();
        }
    }

    function OnTaskStatusChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-chart').show();

        } else {
            $('#no-data-chart').hide();
        }
    }

    function OnTaskTimeChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-timechart').show();

        } else {
            $('#no-data-timechart').hide();
        }
    }
    function OnProjectStageChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-stagechart').show();

        } else {
            $('#no-data-stagechart').hide();
        }
    }
    function onFilterReset() {
        var newvalue = new Array();
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        multiselectTaskStatus.value(newvalue);
        //var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        //multiselectTaskAssigned.value(newvalue);
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        //multiselectTaskStages.value(newvalue);
        @*var search = {
            projectId: '@Model.Id',
        };*@
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read();
        getprojectGridinternalData("");

    }
    function getDataServiceDashboard(search) {
        debugger
        var url = "/cms/NtsService/GetSEBIServiceList";
        if (search != undefined) {
            var ServiceStatusIds = search.ServiceStatusIds.length != 0 ? search.ServiceStatusIds : "";
            var StatusIds = search.StatusIds.length != 0 ? search.StatusIds : "";
            url = "/Cms/NtsService/GetInternalDashboardServiceList?categoryCodes=@Model.CategoryCode&templateCodes=@Model.TemplateCode";
        }
        document.getElementById("kgdProjectGridView").innerHTML = "";
        gridConfig(
            "kgdProjectGridView",
            url,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

</script>

<script>

    var columnDefs1 = [
        {
            field: "Id",
            headerName: "Action",
            cellRenderer: params => {
                return "<i class='fa fas fa-eye' title='Open' style='cursor:pointer;' onclick='OnOpen(\"" + params.data.TemplateCode + "\",\"" + params.data.Id + "\")' ></i>";
            }
        },
        {
            field: "ServiceNo",
            headerName: "@Resource["Service No"]",
        },
        {
            field: "ServiceSubject",
            headerName: "@Resource["Service Subject"]",
        },
        {
            field: "TemplateDisplayName",
            headerName: "@Resource["Service Type"]"
        },
        {
            field: "OwnerUserUserName",
            headerName: "@Resource["Service Owner"]"
        },
        {
            field: "ServiceStatusName",
            headerName: "@Resource["Service Status"]"
        },
        {
            field: "StartDate",
            headerName: "@Resource["Start Date"]",
            cellRenderer: params => {
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        {
            field: "DueDate",
            headerName: "@Resource["Due Date"]",
            cellRenderer: params => {
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
                //var date = new Date(params.value);
                //return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
    ];

    $(function () {
        getprojectGridinternalData("");
    });

    function getprojectGridinternalData(search) {
        debugger;
        document.getElementById("kgdProjectGridView").innerHTML = "";
        gridConfig(
            "kgdProjectGridView",
            "/Cms/NtsService/GetInternalDashboardServiceList?categoryCodes=@Model.CategoryCode&templateCodes=@Model.TemplateCode&ServiceStatusIds=" + search,
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

</script>

<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="banner-container">
            <img style="width:100%; height:100px" src="~/images/NTS/Service.jpeg" asp-append-version="true" />
            <h4 class="banner-text">@Resource["Dashboard"]</h4>
        </div>
        <div class="page-inner">
            <div class="page-section">
                <div class="row">
                    <div class="col-4"></div>
                    <div class="col-4"></div>
                    <div class="col-4">
                        <div class=" d-flex" style="justify-content:space-evenly;">
                            <div class="form-group">
                                <label class="control-label" for="FromDate">@SharedResource["From"]</label>
                                <input id="FromDate" class="date" value="@DateTime.Today.AddMonths(-1).ToString(ApplicationConstant.DateAndTime.DefaultJqueryDateFormat)" />
                            </div>
                            <div class="form-group">
                                <label class="control-label" for="ToDate">@SharedResource["To"]</label>
                                <input id="ToDate" class="date" value="@DateTime.Today.ToString(ApplicationConstant.DateAndTime.DefaultJqueryDateFormat)" />
                            </div>
                            <div class="form-group">
                                <button class="btn btn-filter-reset" onclick="onDatewiseSearch()" title="@Resource["Filter"]"><i class="fa fa-search"></i></button>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row ">
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">Internal Request</div><!-- .card-body -->
                            <div class="card-body">
                                <div id="chartTaskByType"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">Task</div><!-- .card-body -->
                            <div class="card-body">
                                <div id="chartTaskByStatus"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <!-- .card -->
                        <div class="card">
                            <div class="card-header text-center">Request SLA</div><!-- .card-body -->
                            <div class="card-body">
                                <div id="chartDateWiseSearch"></div>
                            </div><!-- /.card-body -->
                        </div><!-- /.card -->
                    </div>
                </div>

                <div id="accordion2" class="card-expansion">
                    <!-- .card -->
                    <div class="card card-expansion-item expanded">
                        <div class="card-header border-0" id="headingOne2">
                            <button class="btn btn-reset d-flex justify-content-between w-100" data-toggle="collapse" data-target="#collapseOne2" aria-expanded="true" aria-controls="collapseOne2"><span>Filter</span> <span class="collapse-indicator"><i class="fa fa-fw fa-chevron-down"></i></span></button>
                        </div>
                        <div id="collapseOne2" class="collapse show" aria-labelledby="headingOne2" data-parent="#accordion2">
                            <div class="card-body pt-0 row">
                                <div class="col-sm-12 col-md-5">
                                    <div class="form-group">
                                        <label class="col-form-label" for="mdlServiceStatus">Internal Service Status</label>
                                        <select id="mdlServiceStatus" data-placeholder="Filter Service Status"></select>
                                    </div>
                                </div>
                                <div class="col-sm-12 col-md-2">
                                    <div class="form-group">
                                        <label class="col-form-label">&nbsp;</label>
                                        <button class="btn btn-primary form-control" onclick="onFilterReset()" title="@Resource["ResetFilter"]">@SharedResource["Reset"]</button>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div><!-- /.card -->
                </div>

                <div>
                    <h5>@Resource["Service Details"]</h5>
                    <hr />
                    <div class="row">
                        <div class="col-12">
                            <div id="kgdProjectGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>
</div>

@*<div style=""><img style="width:100%; height:100px" src="~/images/ServiceHomeBanner.png" /></div>*@
<!--<div class="banner-container">
    <img style="width:100%; height:100px" src="~/images/NTS/Service.jpeg" />-->
    @*<div class="banner-text">@Resource["ServiceHomeDashboard"]</div>*@
    <!--<h4 class="banner-text">Dashboard</h4>
</div>-->


<!--<div id="appWrapper" class="pt-5">-->   

    @*<div class="row">
            <div class="col-sm-4">
                <div class="panel panel-info">
                    <div class="panel-heading">Internal Request</div>
                    <div class="panel-body">
                        <div id="chartTaskByType"></div>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="panel panel-success">
                    <div class="panel-heading">Task</div>
                    <div class="panel-body">
                        <div id="chartTaskByStatus"></div>
                    </div>
                </div>
            </div>
            <div class="col-sm-4">
                <div class="panel panel-warning">
                    <div class="panel-heading">Request SLA</div>
                    <div class="panel-body">
                        <div id="chartDateWiseSearch"></div>
                    </div>
                </div>
            </div>
        </div>*@  

    @*<div class="row">
        <div class="col-12">
            <div class="panel panel-filter">
                <div class="panel-heading">@SharedResource["Filter"]</div>
                <div class="panel-body">
                    <div class="row" style="padding:5px;">
                        <div class="col-3">
                            Internal Service Status
                            <select id="mdlServiceStatus" data-placeholder="@Resource["FilterServiceStatus"]" class="hr-x-large search-control"></select>
                        </div>
                        <div class="col-3" style="padding-top: 20px;">
                            <button class="btn btn-filter-reset" onclick="onFilterReset()" title="@Resource["ResetFilter"]">@SharedResource["Reset"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>*@   

    <!--<!--<div class="row">
        <div class="col-12">
            <div class="panel panel-primary">
                <div class="panel-heading">@Resource["ServiceDetails"]</div>
                <div class="panel-body">

                    <div id="kgdProjectGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>-->
    <!--@*@(Html.Kendo().Grid<ServiceViewModel>()
            .Name("kgdProjectGridView")
            .Columns(columns =>
            {
                columns.Command(command =>
                {
                    command.Custom("open").Text("<i class='fa fas fa-eye' title='Open'></i>").Click("OnOpen").HtmlAttributes(new { @class = "action-icon" });
                    //command.Custom("addtask").Text("<i class='fa fa-plus' title='Add Task'></i>").Click("OnEditJobDesc").HtmlAttributes(new { @class = "action-icon" });
                    //command.Custom("addStage").Text("<i class='fa fa-plus' title='View Job Description Request'></i>").Click("OnViewJobDesc").HtmlAttributes(new { @class = "action-icon" });
                }).Width(150).Title(SharedResource["Action"]);
                columns.Bound(p => p.ServiceNo).Title(@SharedResource["ServiceNo"]).Width(300);
                columns.Bound(p => p.ServiceSubject).Title(@Resource["ServiceSubject"]).Width(250);
                columns.Bound(p => p.TemplateDisplayName).Title(@Resource["TemplateType"]).Width(250);
                columns.Bound(p => p.OwnerUserUserName).Title(@Resource["OwnerUserName"]).Width(250);
                //columns.Bound(p => p.TemplateUserType).Title(@Resource["TemplateUserType"]).Width(200);
                // columns.Bound(p => p.Priority).Width(200);
                columns.Bound(p => p.ServiceStatusName).Title(@Resource["ServiceStatusName"]).Width(200);
                columns.Bound(p => p.StartDate).Title(@SharedResource["StartDate"]).Format("{0:dd MMM yyyy}").Width(150);
                columns.Bound(p => p.DueDate).Title(@SharedResource["EndDate"]).Format("{0:dd MMM yyyy}").Width(150);
            })
            .ToolBar(toolbar =>
            {

                toolbar.Search().Text(SharedResource["Search"]);
            })
            .ColumnMenu(col=>col.Filterable(true))
            .Height(700)
            .Editable()
            //.Pageable()
            .Sortable()
            .Navigatable()
            .Resizable(r=>r.Columns(true))
            .Reorderable(r => r.Columns(true))
            .Groupable(g=>g.ShowFooter(false))
            .Filterable()
            .Scrollable(x => x.Enabled(true))
            //.Events(events => events.DataBound("onDataBound"))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(20)
                .AutoSync(true)
                .ServerOperation(false)
                //.Events(events => events.Error("error_handler"))
                .Model(model =>
                {
                    model.Id(p => p.Id);

                })

                .Read("GetInternalDashboardServiceList", "NtsService", new { @area = "Cms", categoryCodes = Model.CategoryCode, templateCodes = Model.TemplateCode })

            )
        )*@-->
    <!--</div>
            </div>
        </div>
    </div>-->
<!--</div>-->
