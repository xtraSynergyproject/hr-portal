@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model DashboardItemMasterViewModel
@{
    ViewData["Title"] = "Report Item";
    Layout = Model.Layout?? null;
    //Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}



<style>
    .cms-footer {
        position: unset !important;
        background-color: unset !important;
    }

    .k-grid-header {
        display: none !important;
    }

    .k-grid-pager {
        display: none !important;
    }

    #Grid .k-grid-edit {
        display: none !important;
    }
</style>
<script>


    $(document).ready(function () {

        $("#Measures").kendoMultiSelect({
           dataTextField: "title",
           dataValueField: "name",
           autoBind: true,
           autoClose: false,
           change: onChangeMeasures,
           value: '@Model.measuresArray',
        });

        $("#Dimensions").kendoMultiSelect({
            dataTextField: "title",
            dataValueField: "name",
            autoBind: true,
            autoClose: false,
            change: onChangeDimensions,
            value: '@Model.dimensionsArray',
        });

        $("#chartTypeId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CMS/BusinessAnalytics/GetChartTemplateList",
                    }
                }
            }
        });

            if ($("#chartMetadata").val() == "") {
                //var metadata = "measures: [],dimensions: [],segment: [],filters: []";
                var metadata = "measures: [],dimensions: [],filters: []";
                $("#chartMetadata").val(metadata);
            }

    });
    function OnClear() {
      //  $("#Grid").data("kendoGrid").dataSource.data([]);
        $("#Grid").jsGrid('option', 'data', []);
        seqNo = 0;
        var chartMetadata = $("#chartMetadata").val();
        var result = chartMetadata.split('],');
        //var finalResult = result[0] + "]," + result[1] + "]," + result[2] + "],filters: []";
        var finalResult = result[0] + "]," + result[1] + "],filters: []";
        $("#chartMetadata").val(finalResult);
    }
    var onAjaxSuccess = function (res) {
        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                ShowNotification("Saved Successfully", "success");
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("Updated Successfully", "success");
            }

            closeNavMember();



        }
        else {
            showError(res.error);
        }
        HideLoader($('#template-content'));
    };


    function OnError(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

    var showError = function (error) {

        //#validation-summary-manageform
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }
    function onFilterGridSave(arg) {
        var filters = "filters: [";
        var filter = "{\"member\": \"" + arg.FilterField + "\",\"operator\": \"" + arg.FilterOperator + "\",\"values\": [" + arg.FilterText + "]},";
        filters += filter;
       // var datasource = $("#Grid").data("kendoGrid").dataSource.data();
        var datasource = $("#Grid").data("JSGrid");
        for (var i = 0; i < datasource.data.length; i++) {
            var item = datasource.data[i];
            if (item.SeqNo != arg.SeqNo) {
                var filter = "{\"member\": \"" + item.FilterField + "\",\"operator\": \"" + item.FilterOperator + "\",\"values\": [" + item.FilterText + "]},";
                filters += filter;
            }
        }
        filters += "]";
        var chartMetadata = $("#chartMetadata").val();
        var result = chartMetadata.split('],');
        //var finalResult = result[0] + "]," + result[1] + "]," + result[2] + "]," + filters;
        var finalResult = result[0] + "]," + result[1] + "]," + filters;
        $("#chartMetadata").val(finalResult);


    }
    function onChangeMeasures() {
        var str = "";
        var items = $("#Measures").data("kendoMultiSelect").dataItems();
        for (var i = 0; i < items.length; i++) {
            var item = "\"" + items[i].name + "\"";
            if (i == items.length - 1) {
                str = str + item;
            }
            else {
                str = str + item + ",";
            }

        }
        var chartMetadata = $("#chartMetadata").val();
        var result = chartMetadata.split('],');
        //var finalResult = "measures: [" + str + "]," + result[1] + "]," + result[2] + "]," + result[3];
        var finalResult = "measures: [" + str + "]," + result[1] + "]," + result[2];
        $("#chartMetadata").val(finalResult);

    }
    function onChangeDimensions() {
        var str = "";
        var items = $("#Dimensions").data("kendoMultiSelect").dataItems();
        for (var i = 0; i < items.length; i++) {
            var item = "\"" + items[i].name + "\"";
            if (i == items.length - 1) {
                str = str + item;
            }
            else {
                str = str + item + ",";
            }

        }
        var chartMetadata = $("#chartMetadata").val();
        var result = chartMetadata.split('],');
        //var finalResult = result[0] + "]," + "dimensions: [" + str + "]," + result[2] + "]," + result[3];
        var finalResult = result[0] + "]," + "dimensions: [" + str + "]," + result[2] ;
        $("#chartMetadata").val(finalResult);

    }
    //function onChangeSegment() {
    //    var str = "";
    //    var items = $("#Segment").data("kendoMultiSelect").dataItems();
    //    for (var i = 0; i < items.length; i++) {
    //        var item = "\"" + items[i].name + "\"";
    //        if (i == items.length - 1) {
    //            str = str + item;
    //        }
    //        else {
    //            str = str + item + ",";
    //        }

    //    }
    //    var chartMetadata = $("#chartMetadata").val();
    //    var result = chartMetadata.split('],');
    //    var finalResult = result[0] + "]," + result[1] + "]," + "segment: [" + str + "],"+ result[3];
    //    $("#chartMetadata").val(finalResult);

    //}
    function SaveData() {
       // var grid = JSON.stringify($("#Grid").data("kendoGrid").dataSource.data());
        var grid = JSON.stringify($("#Grid").data("JSGrid").data);
        $("#filterField").val(grid);
        var measuresItems = $("#Measures").data("kendoMultiSelect").dataItems();
        var measures = "";
        for (var i = 0; i < measuresItems.length; i++) {
            if (i == measuresItems.length - 1) {
                measures += measuresItems[i].name;
            }
            else {
                measures += measuresItems[i].name + ",";
            }

        }
        $("#measuresField").val(measures);
        var dimensionsItems = $("#Dimensions").data("kendoMultiSelect").dataItems();
        var dimensions = "";
        for (var i = 0; i < dimensionsItems.length; i++) {
            if (i == dimensionsItems.length - 1) {
                dimensions += dimensionsItems[i].name;
            }
            else {
                dimensions += dimensionsItems[i].name + ",";
            }

        }
        $("#dimensionsField").val(dimensions);
        var segmentItems = $("#Segment").data("kendoMultiSelect").dataItems();
        var segment = "";
        for (var i = 0; i < segmentItems.length; i++) {
            if (i == segmentItems.length - 1) {
                segment += segmentItems[i].name;
            }
            else {
                segment += segmentItems[i].name + ",";
            }

        }
        $("#segmentsField").val(segment);



    }
    function closeNavMember() {
        var win = GetMainWindow();
        win.CloseWindow();
        win.location.reload();
        return false;
    }
</script>


<div class="row  pad-10 no-gutters">
    <div class="container card-header" style="padding:10px;">
        

                <div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

                    <form asp-controller="BusinessAnalytics" asp-action="ManageReportItemNote" class="form-horizontal"
                          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
                          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
                          data-ajax="true" data-ajax-method="POST">
                        <div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>



                        <div class="row" style="padding:10px;">

                            <div class="row col-12 pad-10">
                                <div class="col-12">
                                    <h4>Report Item</h4>
                                    <hr />
                                </div>

                            </div>

                            <div class="row col-12 pad-10">
                                <div class="col-3">
                                    <label for="Name">Name<span class="required" style="color:red;">*</span></label>
                                </div>
                                <div class="col-9">
                                    @*@if (Model.DataAction == DataActionEnum.Create)
                                    {
                                        <input asp-for="NoteSubject" type="text" class="form-control" placeholder="Name" autocomplete="off" />

                                    }
                                    else
                                    {*@
                                        <input asp-for="NoteSubject" type="text" class="form-control" placeholder="Name" autocomplete="off" />

                                    

                                </div>
                            </div>
                            <div class="row col-12 pad-10">
                                <div class="col-3">
                                    <label>Tables</label>
                                </div>
                                <div class="col-9">
                                    @*@(Html.Kendo().MultiSelect()
                                       .Name("Measures")
                                       .Placeholder("Select tables...")
                                       .DataTextField("title")
                                       .DataValueField("name")
                                       .Events(e => e.Change("onChangeMeasures"))
                                       .BindTo(Model.measures)
                                       .Value(Model.measuresArray)
                                     .HtmlAttributes(new { @class = "", @style = "width:100%"})
                                    )*@
                                    <select id="Measures" multiple="multiple" data-placeholder="Select tables..." style="width:100%">
                                        @if (Model.measures != null)
                                        {
                                            foreach (var item in Model.measures)
                                            {
                                                if (item.title != null)
                                                {
                                                    <option value="@item.name">
                                                        @item.title
                                                    </option>

                                                }
                                            }
                                        }
                                    </select>

                                </div>
                            </div>
                            <div class="row col-12 pad-10">
                                <div class="col-3">
                                    <label>Columns</label>
                                </div>
                                <div class="col-9">
                                    @*@(Html.Kendo().MultiSelect()
                                       .Name("Dimensions")
                                       .Placeholder("Select Columns...")
                                       .DataTextField("title")
                                       .DataValueField("name")
                                       .Events(e => e.Change("onChangeDimensions"))
                                       .BindTo(Model.dimensions)
                                       .Value(Model.dimensionsArray)
                                     .HtmlAttributes(new { @class = "", @style = "width:100%"})
                                    )*@
                                    <select id="Dimensions" multiple="multiple" data-placeholder="Select Columns..." style="width:100%">
                                        @if (Model.dimensions != null)
                                        {
                                            foreach (var item in Model.dimensions)
                                            {
                                                if (item.title != null)
                                                {
                                                    <option value="@item.name">
                                                        @item.title
                                                    </option>

                                                }
                                            }
                                        }
                                    </select>

                                </div>
                            </div>                           
                            <div class="row col-12 pad-10">
                                <div class="col-3">
                                    <label for="height">Height</label>
                                </div>
                                <div class="col-9">
                                    <input asp-for="height" type="text" class="form-control" placeholder="Height" autocomplete="off" />
                                </div>
                            </div>
                            <div class="row col-12 pad-10">
                                <div class="col-3">
                                    <label for="width">Width</label>
                                </div>
                                <div class="col-9">
                                    <input asp-for="width" type="text" class="form-control" placeholder="Width" autocomplete="off" />
                                </div>
                            </div>
                            @*<div class="row col-12 pad-10">
                                <div class="col-12">
                                    <b>Parameter References</b><br>
                                    <span>
                                        * Static value  => use  ""  for static value ex: "Test"
                                        <br>* Parameter variable  => use  {}  for parameter value ex: {firstName}
                                        <br>* Session variable  => use  ^^ ^^  for Session variable ex:  ^^UserId^^
                                        <br>* All Session variable  => ^^UserId^^  ||  ^^UserUniqueId^^  ||  ^^Name^^  ||  ^^CompanyId^^  ||  ^^CompanyCode^^  ||  ^^CompanyName^^
                                        ||  ^^Email^^  ||  ^^JobTitle^^  ||  ^^PhotoId^^  ||  ^^IsSystemAdmin^^  ||  ^^IsGuestUser^^  ||  ^^UserRoleIds^^  ||
                                        ^^UserRoleCodes^^  ||  ^^PortalTheme^^  ||  ^^UserPortals^^  ||  ^^PortalId^^  ||  ^^CurrentDate^^  ||  ^^CurrentDateTime^^  ||
                                        ^^LoggedInAsType^^  ||  ^^LoggedInAsByUserId^^  ||  ^^LoggedInAsByUserName^^  ||  ^^LegalEntityId^^  ||  ^^CultureName^^
                                    </span>

                                </div>
                            </div>*@
                            <div class="row col-12 pad-10">
                                <div class="col-12">
                                    <label>Filters</label>
                                </div>
                                <div class="col-12" id="filter">

                                    @*@(Html.Kendo().Grid<DashboardItemFilterViewModel>()
        .Name("Grid")

        .ToolBar(toolbar =>
        {
            toolbar.Create().Text("Add Filter");
            toolbar.Custom().Text("Clear").HtmlAttributes(new { id = "customCommand", href = "javascript:OnClear();" });
        })

        .Columns(columns =>
        {

            columns.Command(command => {
                command.Edit().Text(" ").UpdateText(" ").CancelText(" ");
                //command.Destroy().Text(" ");
            }).Width(70);

            columns.Bound(c => c.FilterField).EditorTemplateName("FilterField").EditorViewData(new {dimensions=Model.dimensions }).ClientTemplateId("FilterField_template").Width(180);
            columns.Bound(c => c.FilterOperator).EditorTemplateName("FilterOperator").ClientTemplateId("FilterOperator_template").Width(100);
            columns.Bound(c => c.FilterText).Width(80);


        })
        .Events(e => e.Save("onFilterGridSave"))

        .Editable(editable => editable.Mode(GridEditMode.InLine)

        )
        .Scrollable(x => x.Enabled(false))
        .Sortable(srt => srt.Enabled(true))
        .Selectable(select => select.Enabled(false))
        .Filterable(f => f.Extra(false)
                    .Operators(o => o.ForString(s => s.Clear()
                    .Contains("Contains")
                    .IsEqualTo("Is equal to")
                )))
        .Pageable(pageable => pageable
        .Refresh(true)

        .PageSizes(true)
        .ButtonCount(5))
        .AutoBind(true)
        .DataSource(
        dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Batch(true)
        .ServerOperation(false)

        .Read(read => read.Action("GetFilters", "BusinessAnalytics",new {id=Model.NoteId }))

        .Model(model =>
        {
            model.Id(p => p.FilterField);

        })
        ))*@
                                    <script>
                                        var seqNo = 0;

                                        var dimen = JSON.parse($("#dimensionsJson").val());

    $(document).ready(function () {

        $.ajax({
            type: "GET",
            url: "/Home/GetEnumIdNameList?enumType=FilterOperatorEnum",

            dataType: "json",
            success: function (data) {
                
                $("#Grid").jsGrid({
                    width: "100%",
                    height: "600px",

                    inserting: false,
                    editing: true,
                    sorting: true,
                    paging: true,
                    autoload: true,
                    pageSize: 14,
                    pageButtonCount: 5,
                   // deleteConfirm: "Do you really want to delete client?",

        //data: clients,
        controller: {
            loadData: function (filter) {
                return $.ajax({
                    type: "GET",
                    url: "/cms/BusinessAnalytics/GetFilters?id=@Model.NoteId",
                    data: filter,
                    dataType: "json"
                });
            },

            updateItem: function (item) {
                onFilterGridSave(item);
            },

        },


          fields: [
              { type: "control",  deleteButton: false},
              {
                  name: "FilterField", title: '', type: "select", width: 150, items: dimen, valueField: "name", textField: "title"
            },
            { name: "FilterOperator", title: '', type: "select", width: 150, items: data, valueField: "Id", textField: "Name" },

        {
            name: "FilterText", title: '', type: "text", width: 80,
                        },
        


        ]
    });


            }
        });


    });

                                        function AddFilter()
                                        {
                                            seqNo++;
         var Id="@Guid.NewGuid().ToString()";
        $("#Grid").jsGrid("insertItem", {
            FilterField: "",
            FilterOperator: "",
            FilterText: "",
            DefaultValue: "",
                DataAction: "@DataActionEnum.Create",
             //   Id: Id,
            SeqNo: seqNo,

        }).done(function ()
        {
            //$("#GridJobCriteria").data("JSGrid").updateItem();
        });
    }


                                    </script>
                                </div>
                            </div>

                            <div class="row col-12 pad-10">
                                <div class="col-3">
                                    <label for="chartTypeId">Reporting Type<span class="required" style="color:red;">*</span></label>
                                </div>
                                <div class="col-9">

                                    @*@(Html.Kendo().DropDownListFor(x=>x.chartTypeId)
                                    .DataTextField("Name")
                                    .DataValueField("Id")
                                    .DataSource(source =>
                                    {
                                        source.Read(read =>
                                        {
                                        read.Action("GetChartTemplateList", "BusinessAnalytics");
                                    });
                                        })
                                    .OptionLabel("Select")
                                    .HtmlAttributes(new { @class = "", @style = "width:100%"})
                                )*@

                                    <input asp-for="chartTypeId" id="chartTypeId" style="width:100%" />

                                </div>
                            </div>


                            <!--<div class="row col-12 pad-10">
                                <div class="col-3">
                                    <label for="chartMetadata">Chart Metadata-->@*<span class="required" style="color:red;">*</span>*@<!--</label>
                                </div>
                                <div class="col-9">
                                    @if (Model.DataAction == DataActionEnum.Create)
                                    {
                                        <textarea asp-for="chartMetadata" type="text" rows="15" class="form-control"></textarea>

                                    }
                                    else
                                    {
                                        <textarea asp-for="chartMetadata" type="text" rows="15" class="form-control" readonly></textarea>

                                    }
                                </div>
                            </div>-->
                        </div>

                        <div class="cms-footer">
                            <input type="submit" class="btn btn-primary" value="Save" onclick="SaveData()" />
                        </div>

                        @Html.HiddenFor(x => x.Id)
                        @Html.HiddenFor(x => x.ParentNoteId)
                        @Html.HiddenFor(x => x.DataAction)
                        @Html.HiddenFor(x => x.NoteId)
                        @Html.HiddenFor(x => x.chartTypeId)
                        @Html.HiddenFor(x => x.chartMetadata)
                        @Html.HiddenFor(x => x.measuresField)
                        @Html.HiddenFor(x => x.dimensionsField)
                        @Html.HiddenFor(x => x.segmentsField)
                        @Html.HiddenFor(x => x.filterField)
                        @Html.HiddenFor(x => x.width)
                        @Html.HiddenFor(x => x.height)
                        @Html.HiddenFor(x => x.Json)
                        @Html.HiddenFor(x => x.DataJson)
                        @Html.HiddenFor(x => x.CompanyId)
                        @Html.HiddenFor(x => x.CreatedBy)
                        @Html.HiddenFor(x => x.CreatedDate)
                        @Html.HiddenFor(x => x.LastUpdatedBy)
                        @Html.HiddenFor(x => x.LastUpdatedDate)

                    </form>
                </div>
           

    </div>
</div>

<script id="FilterOperator_template" type="text/x-kendo-template">
    #=data.FilterOperator#
</script>
<script id="FilterField_template" type="text/x-kendo-template">
    #=data.FilterField#
</script>








