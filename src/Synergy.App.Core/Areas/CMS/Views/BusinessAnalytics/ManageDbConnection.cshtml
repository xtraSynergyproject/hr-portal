@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model DbConnectionViewModel
@{
    ViewData["Title"] = "DB Connection";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}



<style>
    .cms-footer {
        position: unset !important;
        background-color: unset !important;
    }
</style>
<script>

    var win = GetMainWindow();

    $(document).ready(function () {
        var databaseTypeValue = "";
      

        $("#databaseType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Name",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
          
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=DatabaseTypeEnum",
                    }
                }
            }
        });

    });

    var onAjaxSuccess = function (res) {
        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                ShowNotification("Saved Successfully", "success");
                $("#Id").val(res.id);
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("Updated Successfully", "success");
            }
            //closeNavMember();
            win.refreshGridview();
        }
        else {
            ShowErrors(res.error);
        }
        HideLoader($('#template-content'));
    };
    var showError = function (error) {
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }
    function ShowErrors(err) {
        $("#validation-summary").removeClass("validation-summary-valid");
        $("#validation-summary").addClass("validation-summary-errors");
        var msg = ExtractError(err);
        $("#validation-summary ul").html(msg);
    }
    function closeNavMember() {
        //var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }
    function ExtractError(err, exludeLi) {
        var msg = "";
        $.each(err, function (key, value) {

            $.each(value, function (key1, value1) {
                $.each(value1, function (key2, value2) {
                    if (exludeLi) {
                        msg += value2 + "\n";
                    }
                    else {
                        msg += "<li>" + value2 + "</li>";
                    }

                });

            });
        });
        return msg;
    }
    function OnTestConnection() {
        var id = $("#Id").val();
        if (id != null && id != "") {
            $.ajax({
                url: '@Url.Action("TestDbConnection", "BusinessAnalytics", new { @area="Cms"})?id=' + id,
                type: 'GET',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        kendo.alert("Connection Establish Successfully.");
                    }
                    else {
                        kendo.alert("Authentication Failed !");
                    }
                },
                error: function (ert) {
                    //
                    kendo.alert("Connection Failed !");
                }
            });
        }
        else {
            kendo.alert("Create Connection first !");
        }
    }
    function OnFetchTables() {
        var dbid = $("#Id").val();
        if (dbid != null && dbid != "") {
            getPropertyTree(dbid);
            @*$.ajax({
                url: '@Url.Action("GetAllTablesNameFromDB", "BusinessAnalytics", new { @area="Cms"})?id=' + dbid,
                type: "GET",
                success: function (result) {
                    $("#Propertytreeview").data("kendoTreeView").setDataSource(result);
                    $("#divTable").show();
                }
            });*@
        }
        else {
            //$("#fetchTable").show();
        }

    }

</script>


<div class="row  pad-10 no-gutters">
    <div @*class="container card-header"*@ style="padding:10px;">
        <ul class="nav nav-tabs" role="tablist">
            <li class="nav-item"><a data-toggle="tab" href="#fuzzy" class="nav-link active" role="tab" aria-controls="fuzzy" aria-selected="true"><i class="fas fa-plug" style="margin-left:15px;"></i><br />Connection</a></li>

            <li class="nav-item"><a data-toggle="tab" href="#advance" class="nav-link" aria-controls="advance" aria-selected="false" onclick="OnFetchTables()"><i class="fas fa-table" style="margin-left:3px;"></i><br />Table</a></li>

        </ul>
        <div class="tab-content">
            <div id="fuzzy" class="tab-pane  in active" role="tabpanel" aria-labelledby="design-tab">
                <form asp-controller="BusinessAnalytics" asp-action="ManageDbConnection" class="form-horizontal"
                      data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
                      data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
                      data-ajax="true" data-ajax-method="POST">
                    <div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>



                    <div class="row" style="padding:10px;">
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="NoteSubject">Name<span class="required" style="color:red;">*</span></label>
                            </div>
                            <div class="col-9">
                                @if (Model.DataAction == DataActionEnum.Create)
                                {
                                    <input asp-for="NoteSubject" type="text" class="form-control" placeholder="Name" autocomplete="off" />

                                }
                                else
                                {
                                    <input asp-for="NoteSubject" type="text" class="form-control" placeholder="Name" autocomplete="off" readonly />

                                }

                            </div>
                        </div>
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="databaseType">Database Type<span class="required" style="color:red;">*</span></label>
                            </div>
                            <div class="col-9">

                                @*@(Html.Kendo().DropDownListFor(x=>x.databaseType)
                        .DataTextField("Name")
                        .DataValueField("Name")
                        .DataSource(source =>
                        {
                        source.Read(read =>
                        {
                            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "DatabaseTypeEnum" });
                        });
                        })
                        .Value(Model.Status.ToString())
                        .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                        )*@

                                <input asp-for="databaseType" id="databaseType" class = "form-control" style = "width:80%" />
                            </div>
                        </div>
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="hostName">Host Name<span class="required" style="color:red;">*</span></label>
                            </div>
                            <div class="col-9">
                                <input asp-for="hostName" type="text" class="form-control" placeholder="Host Name" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="port">Port<span class="required" style="color:red;">*</span></label>
                            </div>
                            <div class="col-9">
                                <input asp-for="port" type="text" class="form-control" placeholder="Port" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="maintenanceDatabase">Maintenance Database<span class="required" style="color:red;">*</span></label>
                            </div>
                            <div class="col-9">
                                <input asp-for="maintenanceDatabase" type="text" class="form-control" placeholder="Maintenance Database" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="username">Username<span class="required" style="color:red;">*</span></label>
                            </div>
                            <div class="col-9">
                                <input asp-for="username" type="text" class="form-control" placeholder="Username" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="role">Role</label>
                            </div>
                            <div class="col-9">
                                <input asp-for="role" type="text" class="form-control" placeholder="Role" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="service">Service</label>
                            </div>
                            <div class="col-9">
                                <input asp-for="service" type="text" class="form-control" placeholder="Service" autocomplete="off" />
                            </div>
                        </div>
                        <div class="row col-12 pad-10">
                            <div class="col-3">
                                <label for="password">Password<span class="required" style="color:red;">*</span></label>
                            </div>
                            <div class="col-9">
                                <input asp-for="password" type="password" class="form-control" placeholder="Password" value="@Model.password" autocomplete="off" />
                            </div>
                        </div>
                    </div>

                    <div class="cms-footer">
                        @if (Model.DataAction == DataActionEnum.Edit)
                        {
                            <input type="button" class="btn btn-primary" value="Test Connection" onclick="OnTestConnection()" />

                        }
                        <input type="submit" class="btn btn-primary" value="Save" />
                    </div>

                    @Html.HiddenFor(x => x.Id)
                    @Html.HiddenFor(x => x.ParentNoteId)
                    @Html.HiddenFor(x => x.DataAction)
                    @Html.HiddenFor(x => x.NoteId)
                    @Html.HiddenFor(x => x.Json)
                    @Html.HiddenFor(x => x.DataJson)
                    @Html.HiddenFor(x => x.CompanyId)
                    @Html.HiddenFor(x => x.CreatedBy)
                    @Html.HiddenFor(x => x.CreatedDate)
                    @Html.HiddenFor(x => x.LastUpdatedBy)
                    @Html.HiddenFor(x => x.LastUpdatedDate)

                </form>
            </div>
            <div id="advance" class="tab-pane " role="tabpanel" aria-labelledby="pageCss-tab">
                <div id="fetchTable" class="row" style="padding:10px;">
                    <input type="button" class="btn btn-primary" value="Fetch Tables" onclick="OnFetchTables()" />

                </div>
                <div class="row" style="padding:10px;">
                  
                    <div id="Propertytreeview"></div>
                    
                    <script>
                        function getPropertyTree(dbid) {

                         

                            $("#Propertytreeview").fancytree({
                                checkbox: true,
                                source: $.ajax({
                                    url: "/Cms/BusinessAnalytics/GetAllTablesNameFromDBTree?id=" + dbid,
                                    dataType: "json"
                                }),
                                lazyLoad: function (event, data) {
                                    var node = data.node;
                                    // Issue an Ajax request to load child nodes
                                    data.result = {
                                        url: "/Cms/BusinessAnalytics/GetAllTablesNameFromDBTree",
                                        data: { id: node.key }
                                    }

                                },
                                
                                select: function (event, data) {
                                    
                                    var dataItem = data.node.data;
                                    if (checkedNodes.some(e => e.Name == dataItem.Name)) {
                                        checkedNodes.pop(dataItem);
                                    }
                                    else {
                                        checkedNodes.push(dataItem);
                                    }
                                  
                                    //var selKeys = $.map(data.tree.getSelectedNodes(), function (node) {
                                    //    return node.data;
                                    //});
                                    //$("#echoSelection3").text(selKeys.join(", "));
                                    //
                                    //// Get a list of all selected TOP nodes
                                    //var selRootNodes = data.tree.getSelectedNodes(true);
                                    //// ... and convert to a key array:
                                    //var selRootKeys = $.map(selRootNodes, function (node) {
                                    //    return node.data;
                                    //});
                                    //$("#echoSelectionRootKeys3").text(selRootKeys.join(", "));

                                },
                                renderNode: function (event, data) {
                                    // Optionally tweak data.node.span
                                    
                                    var node = data.node;
                                    node.renderTitle();
                                    if (data.node.data.Code == "true") {
                                        checkedNodes.push(data.node.data); 
                                    }

                                },
                                dblclick: function (event, data) {
                                    var node = data.node;
                                },
                                contextMenu: {
                                    menu: function (data) {
                                        
                                        return {
                                        }
                                    },
                                    actions: function (node, action, options) {
                                    }
                                }
                            });
                        }
                    </script>
                    @*@(Html.Kendo().TreeView()
            .Name("Propertytreeview").HtmlAttributes( new {@class="treeview"})
            //.Events(e=>e.Select("OnSelect"))
            .DataTextField("DisplayName")
            .TemplateId("property-template")
             .Checkboxes(checkboxes => checkboxes
                    .Name("checkedFiles")
                    .CheckChildren(true)
                )
         .Events(events => events
            .Check("onCheck").DataBound("OnDataBound")

        )
         //.AutoBind(false)
         //.DataSource(dataSource => dataSource
         //    .Read(read => read
         //        .Action("GetAllTablesNameFromDB", "BusinessAnalytics", new { name = "cms" })
         //    )
         //)
         )*@
                </div>
                <div id="divTable" class="cms-footer" style="position:absolute !important;display:none">
                    
                    <input type="button" class="btn btn-primary" value="Save Tables" onclick="OnTableSave()" />

                    
                </div>
            </div>


        </div>


    </div>
</div>

<script>
    var selectedCollection;
    var checkedNodes = [];
    // show checked node IDs on datasource change
    function onCheck() {
        
        checkedNodes = [];
        var treeView = $("#Propertytreeview").data("kendoTreeView");
        checkedNodeIds(treeView.dataSource.view(), checkedNodes);
        if (checkedNodes.length > 0) {
            console.log(checkedNodes);
        } else {
            console.log("No nodes checked.");
        }
    }
    function checkedNodeIds(nodes, checkedNodes) {
        for (var i = 0; i < nodes.length; i++) {
            if (nodes[i].checked) {
                checkedNodes.push(nodes[i]);
            }
            if (nodes[i].hasChildren) {
                checkedNodeIds(nodes[i].children.view(), checkedNodes);
            }
        }
    }
    function OnDataBound(e) {
               
        var rootNodes = $("#Propertytreeview").getKendoTreeView().dataSource.data();
        for (var i = 0; i < rootNodes.length; i++) {
            var node = rootNodes[i];
            
            if (node.Code =="true") {
                node.set("checked", true);
            }
        }
    }
    function OnTableSave() {
        var parentId = $("#Id").val();
        for (var i = 0; i < checkedNodes.length; i++) {
            $.ajax({
                url: '@Url.Action("ManageDbTables", "BusinessAnalytics", new { @area="Cms"})?subject=' + checkedNodes[i].Name + '&parentId=' + parentId,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {

                    if (result.success) {

                    }

                },
                error: function (ert) {
                    ShowNotification("error", "danger");
                }
            });
        }
        ShowNotification("Saved Successfully", "success");
    }
</script>

<script id="property-template" type="text/kendo-ui-template">
    #: item.Name #
</script>



