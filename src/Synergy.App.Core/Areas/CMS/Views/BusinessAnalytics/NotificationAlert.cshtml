@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@{
    ViewData["Title"] = "Manage Alert Rule";
    Layout = "~/Areas/Core/Views/Shared/_Reference.cshtml";
}
@model AlertViewModel
<style>
    .card {
        margin-bottom: 5px;
    }

    .cms-footer {
        position: unset !important;
        background-color: unset !important;
    }

    .rules-group-container {
        width: 100%;
    }
</style>
<div class="container">
    <form asp-controller="BusinessAnalytics" asp-action="ManageNotificationAlert" class="form-horizontal"
          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">
        <div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>
        <div class="card">
            <div class="card-header">1. Rule Type</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="NoteSubject">Rule Name<span class="required" style="color:red;">*</span></label>
                    </div>
                    <div class="col-10">
                        @if (Model.DataAction == DataActionEnum.Create)
                        {
                                <input asp-for="NoteSubject" type="text" class="form-control" placeholder="" autocomplete="off" />

                        }
                        else
                        {
                                <input asp-for="NoteSubject" type="text" class="form-control" placeholder="" autocomplete="off" readonly />

                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">2. Create Query</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label>Table<span class="required" style="color:red;">*</span></label>
                    </div>
                    <div class="col-10">
                        <input asp-for="queryTableId" id="queryTableId" style="width:100%" />
                    </div>
                </div>
                <div class="row col-12 pad-10" style="display:none">
                    <div class="col-2">
                        <label>Coulmn</label>
                    </div>
                    <div class="col-10">                       
                        <input @*asp-for="queryColumns"*@ id="queryColumns1" style="width:100%" />
                    </div>
                </div>
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="Query">Filters</label>
                    </div>
                    <div class="col-10">
                        <div id="builder"></div>
                    </div>

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="Query">Time Dimension</label>
                    </div>
                    <div class="col-4">
                        <input asp-for="timeDimensionId" id="timeDimensionId" style="width: 100%" />
                    </div>
                    <div class="col-3">
                        <input asp-for="timeDimensionDuration" id="timeDimensionDuration" style="width: 100%" />
                    </div>
                    <div class="col-3">
                        <input asp-for="granularity" id="granularity" style="width: 100%" />
                    </div>                   

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="ConditionValue">Condition</label>
                    </div>
                     <div class="col-4">                       
                        <input asp-for="groupbyColumns" id="groupbyColumns" style="width:100%" />
                    </div>
                    <div class="col-1">
                        <label style=" background: aliceblue; padding: 10px; color: highlight; font-weight: 400;">WHEN</label>
                    </div>
                    <div class="col-2">
                        <select class="form-control" asp-for="conditionFunction" id="ConditionFunctionName">
                            <option value="count">count()</option>
                           @* <option value="group_count">groupCount()</option>*@
                        </select>
                    </div>
                    <div class="col-2">
                        <select class="form-control" id="ConditionTypeName">
                            <option value="isAbove">IS ABOVE</option>
                            <option value="isBelow">IS BELOW</option>
                        </select>
                    </div>                   
                    <div class="col-1">
                        <input asp-for="conditionValue" type="number" class="form-control" />
                    </div>
                    @* <div class="col-2">                       
                    </div>
                     <div class="col-1">
                        <label style=" background: aliceblue; padding: 10px; color: highlight; font-weight: 400;">By</label>
                    </div>
                    <div class="col-1">
                        <input asp-for="frequency" type="number" class="form-control" />
                    </div>*@
                </div>
                 <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="builderGroupFilter">Group Filters</label>
                    </div>
                    <div class="col-10">
                        <div id="builderGroupFilter"></div>
                    </div>

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="limit">Limit</label>
                    </div>                     
                    <div class="col-2">
                        <input asp-for="limit" type="number" class="form-control" />
                    </div>
                </div>
                @if (Model.DataAction == DataActionEnum.Edit)
                {
                    <div class="row col-12 pad-10">
                        <div class="col-2">
                            <label for="cubeJsFilter">CubeJs Filter</label>
                        </div>
                        <div class="col-10">
                            <textarea asp-for="cubeJsFilter" type="text" rows="12" class="form-control"></textarea>
                        </div>

                    </div>
                }
                else
                {
                    @Html.HiddenFor(x => x.cubeJsFilter)
                }
                @if (Model.DataAction == DataActionEnum.Edit)
                {
                    <div class="row col-12 pad-10">
                        <div class="col-2">
                            <label for="timeDimensionFilter">Time Filter</label>
                        </div>
                        <div class="col-10">
                            <textarea asp-for="timeDimensionFilter" type="text" rows="12" class="form-control"></textarea>
                        </div>

                    </div>
                }
                else
                {
                    @Html.HiddenFor(x => x.timeDimensionFilter)
                }
            </div>
        </div>
        <div class="card">
            <div class="card-header">3. Evaluate</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="evaluateTime">Evaluate Every Cron</label>
                    </div>
                    <div class="col-2">
                        <input asp-for="evaluateTime" type="text" class="form-control" />
                    </div>
                    <div class="col-6">
                        <p>(* * * * *  ->  Minute Hour DayOfTheMonth Month DayOfTheWeek) <span class="required"> Exp: */15 * * * * </span></p>
                    </div>
                    @*<div class="col-1">
            <label style=" background: aliceblue; padding: 10px; color: highlight; font-weight: 400;">FOR</label>
        </div>
        <div class="col-1">
            <input type="text" name="Evalute12" class="form-control" />
        </div>*@
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">4. Reference Column</div>
            <div class="card-body">
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label>Coulmn<span class="required" style="color:red;">*</span></label>
                    </div>
                    <div class="col-10">
                        <input asp-for="columnReferenceId" id="columnReferenceId" style="width:100%" />
                    </div>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header">5. Alert Format</div>
            <div class="card-body">
                <div class="row col-12 pad-10" style="display:none">
                    <div class="col-2">
                        <label for="chartTypeId">Chart Type</label>
                    </div>
                    <div class="col-10">
                        <input asp-for="chartTypeId" id="chartTypeId" style="width:100%" />
                    </div>

                </div>
                <div class="row col-12 pad-10"  style="display:none">
                    <div class="col-2">
                        <label for="userRole">User Role</label>
                    </div>
                    <div class="col-10">
                        <input asp-for="userRole" id="userRole" style="width:100%" />
                    </div>

                </div>
                <div class="row col-12 pad-10"  style="display:none">
                    <div class="col-2">
                        <label for="isReporting">Is Reporting</label>
                    </div>
                    <div class="col-10">
                        <input asp-for="isReporting" type="checkbox" />
                    </div>

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="summary">Summary<span class="required" style="color:red;">*</span></label>
                    </div>
                    <div class="col-10">
                        <textarea asp-for="summary" type="text" rows="4" class="form-control"></textarea>
                    </div>

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="NoteDescription">Description</label>
                    </div>
                    <div class="col-10">
                        <textarea asp-for="NoteDescription" type="text" rows="4" class="form-control"></textarea>
                    </div>

                </div>
                <div class="row col-12 pad-10">
                    <div class="col-2">
                        <label for="ColorCode">Color Code</label>
                    </div>
                    <div class="col-10">                        
                        <input asp-for="colorCode" id="colorCode" />
                    </div>

                </div>

            </div>
        </div>
        <div class="cms-footer">
            <input type="submit" class="btn btn-primary" value="Save" onclick="SaveData()" />
        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ParentNoteId)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.NoteId)
        @Html.HiddenFor(x => x.query)        
        @Html.HiddenFor(x => x.groupFilters)        
        @Html.HiddenFor(x => x.queryColumns)        
        @Html.HiddenFor(x => x.conditionFunction)
        @Html.HiddenFor(x => x.conditionType)        
        @Html.HiddenFor(x => x.timeDimensionDuration)        
        @Html.HiddenFor(x => x.Json)
        @Html.HiddenFor(x => x.DataJson)
        @Html.HiddenFor(x => x.CompanyId)
        @Html.HiddenFor(x => x.CreatedBy)
        @Html.HiddenFor(x => x.CreatedDate)
        @Html.HiddenFor(x => x.LastUpdatedBy)
        @Html.HiddenFor(x => x.LastUpdatedDate)
    </form>

</div>


<script>
    $(document).ready(function () {
        //$("#startDate").kendoDatePicker();
        //$("#endDate").kendoDatePicker();
        loadTableDll();
        loadQueryColumnsDll();
        loadGroupByColumnsDll();
        loadFilterTypeDll();
        loadGranularityDll();
        loadColumnReferenceDll();
        loadTimeDimensionDll();
        loadChartTypeDll();
        loadUserRoleDll();
        loadColorPicker();

        if ('@Model.DataAction' == '@DataActionEnum.Edit') {
            $("#queryColumns1").data("kendoMultiSelect").dataSource.read();            
            $.ajax({
                url: '@Url.Action("GetDimensionsColumnData", "BusinessAnalytics", new { @area="CMS"})?measure=@Model.queryTableId',
                type: 'GET',
                success: function (result) {
                    $('#builder').queryBuilder({
                        operators: [
                            { type: 'contains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'notContains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'equals', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'notEquals', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'set', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'notSet', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'inDateRange', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'notInDateRange', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'afterDate', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'beforeDate', nb_inputs: 1, multiple: false, apply_to: ['string'] },

                        ],
                        filters: result,
                        rules: @Html.Raw(Model.query)
                    });
                },
                error: function (ert) {

                }
            });
            $.ajax({
                url: '@Url.Action("GetDimensionsColumnDataForGroupFilter", "BusinessAnalytics", new { @area="CMS"})?measure=@Model.queryTableId',
                type: 'GET',
                success: function (result) {                   
                    $('#builderGroupFilter').queryBuilder({
                        operators: [                                               
                            { type: 'exist', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'contains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'greater than', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                            { type: 'less than', nb_inputs: 1, multiple: false, apply_to: ['string'] },

                        ],
                        filters: result,
                        rules: @Html.Raw(Model.groupFilters)
                    });
                },
                error: function (ert) {

                }
            });

        }

    });
    var onAjaxSuccess = function (res) {
        if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                ShowNotification("Saved Successfully", "success");
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                ShowNotification("Updated Successfully", "success");
            }

            var win = GetMainWindow();
            win.CloseWindow({ MethodName: "getDataGridNotificationAlert"});

        }
        else {
            showError(res.error);
        }
        HideLoader($('#template-content'));

    };
    var showError = function (error) {

        //#validation-summary-manageform
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }
    function onChangeMeasures() {
        var tabId = $("#queryTableId").data("kendoDropDownList").value();
        $("#queryColumns1").data("kendoMultiSelect").dataSource.read();
        $("#groupbyColumns").data("kendoMultiSelect").dataSource.read();
        $("#columnReferenceId").data("kendoDropDownList").dataSource.read({ measure: tabId});
        $("#timeDimensionId").data("kendoDropDownList").dataSource.read({ measure: tabId});
        var result = $('#builder').html();
        if (!$.isEmptyObject(result)) {
            $('#builder').queryBuilder('reset');
             $.ajax({
                url: '@Url.Action("GetDimensionsColumnData", "BusinessAnalytics", new { @area="CMS"})?measure=' + tabId,
                type: 'GET',
                 success: function (result) {
                     $('#builder').queryBuilder('setFilters', result);
                },
                error: function (ert) {

                }
            });
        }
        else {
         $.ajax({
                        url: '@Url.Action("GetDimensionsColumnData", "BusinessAnalytics", new { @area="CMS"})?measure=' + tabId,
                        type: 'GET',
             success: function (result) {
                 $('#builder').queryBuilder({
                     operators: [
                         { type: 'contains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'notContains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'equals', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'notEquals', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'set', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'notSet', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'inDateRange', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'notInDateRange', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'afterDate', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'beforeDate', nb_inputs: 1, multiple: false, apply_to: ['string'] },

                     ],
                                filters: result
                            });
                        },
                        error: function (ert) {

                        }
                    });
        }




    }
    function FilterDimDLL() {
        var tabId = $("#queryTableId").data("kendoDropDownList").value();
        return {
            measure: tabId
        };
    }
    function SaveData() {
        debugger;
        $("#conditionFunction").val($("#ConditionFunctionName").val());
        $("#conditionType").val($("#ConditionTypeName").val());
        var colItems = $("#groupbyColumns").data("kendoMultiSelect").dataItems();
        var col = "";
        for (var i = 0; i < colItems.length; i++) {
            if (i == colItems.length - 1) {
                col += colItems[i].name;
            }
            else {
                col += colItems[i].name + ",";
            }

        }
        $("#groupbyColumns").val(col);
        var dd = $("#queryColumns1").data("kendoMultiSelect");
        var dt = dd.dataSource._data;
        if (dt.length > 0) {
            var kd = dt.map(a => a.name);
            var json = JSON.stringify(kd);
            $("#queryColumns").val(json);
        }
        var result = $('#builder').queryBuilder('getRules');
        if (!$.isEmptyObject(result)) {
            var json = JSON.stringify(result, null, 2);
            $("#query").val(json);
        }
        else{
            $("#query").val("[]");
        }
        var gfilters = $('#builderGroupFilter').queryBuilder('getRules');
        if (!$.isEmptyObject(gfilters)) {
            var json = JSON.stringify(gfilters, null, 2);
            $("#groupFilters").val(json);
        }
        else{
             $("#groupFilters").val("[]");
        }
       
    }
    function onDateFilterchange() {
        //var filter = $("#timeDimensionDuration").data("kendoDropDownList").value();
        //if (filter == "Custom") {
        //    $("#divStart").show();
        //    $("#divEnd").show();
        //} else {
        //    $("#divStart").hide();
        //    $("#divEnd").hide();
        //}
    }
    function loadTableDll() {
        $("#queryTableId").kendoDropDownList({
                dataTextField: "title",
                dataValueField: "name",
                dataSource: {
                    serverFiltering: false,
                    transport: {
                        read: {
                            url: "/Cms/BusinessAnalytics/GetMeasuresData",
                        }
                    },
                },
                change: onChangeMeasures,
                optionLabel: "Select Table",
                filter: '@FilterType.Contains',
            }).data("kendoDropDownList");
    }
    function loadQueryColumnsDll() {
        $("#queryColumns1").kendoMultiSelect({
            placeholder: "Select columns...",
            dataTextField: "title",
            dataValueField: "name",
            autoClose:false,
            dataSource: {
                serverFiltering: false,
                transport: {
                    read: {
                        url: "/Cms/BusinessAnalytics/GetDimensionsData",
                        data: function () {
                            return FilterDimDLL();
                        }
                    }
                }
            },
            //value: ['@Html.Raw(Model.queryColumns)']
        });
    }
     function loadGroupByColumnsDll() {
        $("#groupbyColumns").kendoMultiSelect({
            placeholder: "Select group columns...",
            dataTextField: "title",
            dataValueField: "name",
            change: onGroupColumnChange,
            autoClose:false,
            dataSource: {
                serverFiltering: false,
                transport: {
                    read: {
                        url: "/Cms/BusinessAnalytics/GetDimensionsData",
                        data: function () {
                            return FilterDimDLL();
                        }
                    }
                }
            },
            value: ['@Html.Raw(Model.groupbyColumns)']
        });
    }
    function loadFilterTypeDll() {
        $("#timeDimensionDuration").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",            
            //change: onDateFilterchange,
            //dataSource: {
            //    transport: {
            //        read: {
            //            url: "/Home/GetEnumIdNameList?enumType=CubeJsDatefilters",
            //        }
            //    },
            //    filter: { field: "Name", operator: "neq", value: "Custom" }
            //}
            //value: "AllTime",           
            dataSource: [
                { Name: "AllTime", Id: "AllTime" },
                { Name: "Today", Id: "Today" },
                { Name: "Yesterday", Id: "Yesterday" },
                { Name: "This Week", Id: "This Week" },
                { Name: "This Month", Id: "This Month" },
                { Name: "This Year", Id: "This Year" },
                { Name: "Last 7 Days", Id: "Last 7 Days" },
                { Name: "Last 30 Days", Id: "Last 30 Days" },
                { Name: "Last Week", Id: "Last Week" },
                { Name: "Last Month", Id: "Last Month" },
                { Name: "Last Year", Id: "Last Year" },
                { Name: "Last 5 Minutes", Id: "Last 5 Minutes" },
                { Name: "Last 15 Minutes", Id: "Last 15 Minutes" },
                { Name: "Last 30 Minutes", Id: "Last 30 Minutes" },
                { Name: "Last 1 Hours", Id: "Last 1 Hours" },
                { Name: "Last 90 Minutes", Id: "Last 90 Minutes" },
                { Name: "Last 4 Hours", Id: "Last 4 Hours" },
                { Name: "Last 8 Hours", Id: "Last 8 Hours" },
                { Name: "Last 12 Hours", Id: "Last 12 Hours" },
                { Name: "Last 24 Hours", Id: "Last 24 Hours" }                
            ],
        });
    }
    function loadGranularityDll() {
        $("#granularity").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=GranularityEnum",
                    }
                }
            }
        });
    }
    function loadColumnReferenceDll() {
        $("#columnReferenceId").kendoDropDownList({
                dataTextField: "title",
                dataValueField: "name",
                dataSource: {
                    serverFiltering: false,
                    transport: {
                        read: {
                            url: "/Cms/BusinessAnalytics/GetDimensionsData",
                            data: function () {
                                return FilterDimDLL();
                            }
                        }
                    },
                },
                optionLabel: "Select column",
                filter: '@FilterType.Contains',
         }).data("kendoDropDownList");
    }
    function loadTimeDimensionDll() {
        $("#timeDimensionId").kendoDropDownList({
                dataTextField: "title",
                dataValueField: "name",
                dataSource: {
                    serverFiltering: false,
                    transport: {
                        read: {
                            url: "/Cms/BusinessAnalytics/GetTimeDimensionsData",
                            data: function () {
                                return FilterDimDLL();
                            }
                        }
                    },
                },
                optionLabel: "Select column",
                filter: '@FilterType.Contains',
         }).data("kendoDropDownList");
    }
    function loadChartTypeDll() {
        $("#chartTypeId").kendoDropDownList({
                dataTextField: "Name",
                dataValueField: "Id",
                filter: "contains",
                //select: onSelect,
                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                dataSource: {
                    serverFiltering: true,
                    transport: {
                        read: {
                            url: "/CMS/BusinessAnalytics/GetChartTemplateList",
                        }
                    }
                }
        });
    }
    function loadUserRoleDll() {
         $("#userRole").kendoDropDownList({
                dataTextField: "Name",
                dataValueField: "Id",
                filter: "contains",
                //select: onSelect,
                optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
                dataSource: {
                    serverFiltering: true,
                    transport: {
                        read: {
                            url: "/CMS/UserRole/GetUserRoleIdNameList",
                        }
                    }
                }
            });
    }
    function loadColorPicker() {
        $("#colorCode").kendoColorPicker({
            palette: ["#f71fa8", "#ffea00", "#32B232", "#1f00ff"],
            tileSize: 32,
            value:"#1f00ff"
        });
    }
    function onGroupColumnChange() {
        var tabId = $("#queryTableId").data("kendoDropDownList").value();       
        var result = $('#builderGroupFilter').html();
        if (!$.isEmptyObject(result)) {
            $('#builderGroupFilter').queryBuilder('reset');
             $.ajax({
                url: '@Url.Action("GetDimensionsColumnDataForGroupFilter", "BusinessAnalytics", new { @area="CMS"})?measure=' + tabId,
                type: 'GET',
                 success: function (result) {
                     $('#builder').queryBuilder('setFilters', result);
                },
                error: function (ert) {

                }
            });
        }
        else {
         $.ajax({
                        url: '@Url.Action("GetDimensionsColumnDataForGroupFilter", "BusinessAnalytics", new { @area="CMS"})?measure=' + tabId,
                        type: 'GET',
             success: function (result) {
                 $('#builderGroupFilter').queryBuilder({
                     operators: [                                               
                         { type: 'exist', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'contains', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'greater than', nb_inputs: 1, multiple: false, apply_to: ['string'] },
                         { type: 'less than', nb_inputs: 1, multiple: false, apply_to: ['string'] },

                     ],
                                filters: result
                            });
                        },
                        error: function (ert) {

                        }
                    });
        }




    }
</script>









