@inject IStringLocalizer<CMS.UI.Web.Areas.CMS.Controllers.NtsTaskController> Resource
@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common

@model ProjectDashboardViewModel;

@{
    ViewBag.Title = @Resource["TaskHomeDashboard"];

    Layout = null;
}

<style>
    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .k-listview {
        border: none !important;
    }

    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }
    .banner-container {
        position: relative;
        color: white;
    }

    .banner-text {
        position: absolute;
        top: 14px;
        left: 60px;
        font-size: 35px;
    }
</style>
<script>
    function onDatewiseSearch() {

        var dates = {
            StartDate: kendo.toString($("#FromDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
            DueDate: kendo.toString($("#ToDate").data("kendoDatePicker").value(), 'yyyy/MM/dd'),
        };

        $("#chartDateWiseSearch").data("kendoChart").dataSource.read(dates);
    }

    $(document).ready(function () {

        $("#mdlTaskStatus").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            autoBind: true,
            autoClose: false,
            change: onChangeTaskStatus,
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_TASK_STATUS" })",
                    }
                }
            }
        });

        $("#mdlTaskOwner").kendoMultiSelect({
            dataTextField: "OwnerName",
            dataValueField: "Id",
            filter: "contains",
            autoBind: true,
            autoClose: false,
            change: onChangeTaskOwner,
            dataSource: {
                transport: {
                    read: {
                        url: "@Url.Action("GetOwnerIdNameList", "NtsTask", new { area = "Cms" })",
                    }
                }
            }
        });

        $("#mdlTaskUser").kendoMultiSelect({
            dataTextField: "AssignedToUserName",
            dataValueField: "Id",
            filter: "contains",
            autoBind: true,
            autoClose: false,
            change: onChangeTaskAssigned,
            dataSource: {
            transport: {
            read: {
            url: "@Url.Action("GetUserIdNameList", "NtsTask", new { area = "Cms" })",
            }
            }
            }
        });

        $("#FromDate").kendoDatePicker();
        $("#ToDate").kendoDatePicker();
        onDatewiseSearch();
    });

    function onTaskSeriesClick(e) {

        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlTaskStatus").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length; i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);

        var multiselectTaskOwner = $("#mdlTaskOwner").data("kendoMultiSelect");
        var ownervalue = multiselectTaskOwner.value();
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        //var stagevalue = multiselectTaskStages.value();

        var search = {
            TaskStatusIds: newvalue,
            TaskOwnerIds: ownervalue,
        };
        //$("#kgdTaskGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);

        //var g = $("#kgdProjectGridView").data("kendoGrid");
        //console.log(g);
        //g.dataSource.group({ field: "NtsStatus" });
        //alert("\n category : " + e.category + "\n value : " + e.dataItem.Code);
        //window.lModelcation.href = "/pmt/pmthome/tasks?taskStatus=" + e.dataItem.Code;
    }

    function onTaskAssignedSeriesClick(e) {

        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlTaskOwner").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length; i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);

        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        //var stagevalue = multiselectTaskStages.value();

        var search = {
            TaskStatusIds: statusvalue,
            TaskOwnerIds: newvalue,
        };
        //$("#kgdTaskGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);

    }

    function onChangeTaskStatus() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskOwner = $("#mdlTaskOwner").data("kendoMultiSelect");
        var ownervalue = multiselectTaskOwner.value();
        var multiselectTaskUser = $("#mdlTaskUser").data("kendoMultiSelect");
        var uservalue = multiselectTaskUser.value();

        var search = {
            TaskStatusIds: statusvalue,
            TaskOwnerIds: ownervalue,
            TaskAssigneeIds: uservalue
        };
        //$("#kgdTaskGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);
    }

    function onChangeTaskOwner() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskOwner = $("#mdlTaskOwner").data("kendoMultiSelect");
        var ownervalue = multiselectTaskOwner.value();
        var multiselectTaskUser = $("#mdlTaskUser").data("kendoMultiSelect");
        var uservalue = multiselectTaskUser.value();

        var search = {
            TaskStatusIds: statusvalue,
            TaskOwnerIds: ownervalue,
            TaskAssigneeIds: uservalue
        };
       // $("#kgdTaskGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);
    }

    function onChangeTaskAssigned() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskOwner = $("#mdlTaskOwner").data("kendoMultiSelect");
        var ownervalue = multiselectTaskOwner.value();
        var multiselectTaskUser = $("#mdlTaskUser").data("kendoMultiSelect");
        var uservalue = multiselectTaskUser.value();

        var search = {
            TaskStatusIds: statusvalue,
            TaskOwnerIds: ownervalue,
            TaskAssigneeIds: uservalue
        };
        //$("#kgdTaskGridView").data("kendoGrid").dataSource.read(search);
        getDataServiceDashboard(search);
    }

    function OnDataBound(arg) {

        document.getElementById('projectFiles').style.border = 'none';
        var data = $("#projectFiles").data("kendoListView").dataSource.data();
        var data1 = $("#ProjectTask12").data("kendoListView").dataSource.data();
        if (data.length == 0) {
            $('#no-data-file').show();
        } else {
            $('#no-data-file').hide();
        }
        if (data1.length == 0) {
            $('#no-data-notifi').show();
        } else {
            $('#no-data-notifi').hide();
        }
    }

    function OnTaskAssChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-taskchart').show();

        } else {
            $('#no-data-taskchart').hide();
        }
    }

    function OnTaskStatusChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-chart').show();

        } else {
            $('#no-data-chart').hide();
        }
    }

    function OnTaskDateChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-timechart').show();

        } else {
            $('#no-data-timechart').hide();
        }
    }
    function OnProjectStageChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-stagechart').show();

        } else {
            $('#no-data-stagechart').hide();
        }
    }

    function onFilterReset() {
        var newvalue = new Array();
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        multiselectTaskStatus.value(newvalue);
        var multiselectTaskOwner = $("#mdlTaskOwner").data("kendoMultiSelect");
        multiselectTaskOwner.value(newvalue);
        var multiselectTaskUser = $("#mdlTaskUser").data("kendoMultiSelect");
        multiselectTaskUser.value(newvalue);

       // $("#kgdTaskGridView").data("kendoGrid").dataSource.read();
        getDataServiceDashboard();
    }
    var columnDefs = [
      
        {
            field: "TaskNo",
        },
        { field: "TaskSubject" },
        { field: "AssigneeDisplayName" },
        { field: "TemplateUserType" },
        { field: "OwnerUserName" },
        { field: "TaskStatusName" },
        { field: "StartDate" },
        { field: "DueDate" }


    ];

    $(function () {

        getDataServiceDashboard();





    });


    function getDataServiceDashboard() {
        document.getElementById("kgdTaskGridView").innerHTML = "";
        gridConfig(
            "kgdTaskGridView",
            "/cms/NtsTask/ReadTaskDashBoardGridData",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<div class="banner-container">
    <img style="width:100%; height:100px" src="~/images/HRBanners/Task Home Dashboard.png" />
    <div class="banner-text">@Resource["TaskHomeDashboard"]</div>
</div>
@*<div style=""><img style="width:100%; height:100px" src="~/images/TaskHomeBanner.png" /></div>*@
<div class="row hr-pad-top-10">
    <div class="col-md-6">
        <h4>
        </h4>
    </div>
</div>


<div id="appWrapper" class="hr-pad-top-15" style="padding:10px;">
    @*@if (Model.TemplateUserType == NtsUserTypeEnum.Owner)
        {
            <div class="row no-gutter btn-group btn-group-sm" role="group" style="margin:5px;margin-left:10px;">-->
                <button type="button" onclick="GOWBS();" class="btn btn-sm btn-primary">
                    <i class="fad fa-network-wired"></i>&nbsp;&nbsp;Go To WorkBreakdown Structure
                </button>
            </div>
        }*@
    @*<div class="row no-gutter btn-group btn-group-sm" role="group" style="width:100%;margin:5px;">
            <button type="button" class="btn btn-success col-sm-2">Project Progress&nbsp;<b>@Model.ProgressPercentage%</b></button>
            <button type="button" onclick="GotoTask();" class="btn btn-success col-sm-2">View All Tasks&nbsp;<b>@Model.TaskCount</b></button>
            <button type="button" class="btn btn-success col-sm-2">Time Entry&nbsp;<b>@Model.TaskTimeEntryHours</b></button>
            <button type="button" class="btn btn-success col-sm-2">Activities&nbsp;<b>@Model.ActivityCount</b></button>
            <button type="button" class="btn btn-success col-sm-2">Project Estimate&nbsp;<b>@Model.ProjectEstimatedHours</b></button>
            <button type="button" class="btn btn-success col-sm-2">Task Estimate&nbsp;<b>@Model.TaskEstimatedHours</b></button>
        </div>*@

    <div class="row">
        <div class="col-sm-4"></div>
        <div class="col-sm-4"></div>
        <div class="col-sm-4">
            <div class=" d-flex justify-content-center">
                @SharedResource["From"]
                @*@(Html.Kendo().DatePicker()
                     .Name("FromDate")
                     .Value(DateTime.Today.AddMonths(-1))
                     .HtmlAttributes(new {@class="date" })
                    )*@
                <input id="FromDate" class="date" value="@DateTime.Today.AddMonths(-1)" />
                @SharedResource["To"]<br />
                @*@(Html.Kendo().DatePicker()
                     .Name("ToDate")
                     .Value(DateTime.Today).HtmlAttributes(new { @class = "date" })
                    )*@
                <input id="ToDate" class="date" value="@DateTime.Today" />
                <br />
                <button class="btn btn-filter-reset" onclick="onDatewiseSearch()" title="@SharedResource["Search"]"><i class="fa fa-search"></i></button>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-sm-4">

            <div class="panel panel-success">
                <div class="panel-heading">@Resource["TaskStatus"]</div>
                <div class="panel-body">
                    @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                            .Name("chartTaskByStatus")
                            .Legend(legend => legend
                            .Position(ChartLegendPosition.Bottom)
                            )
                            .DataSource(ds => ds
                            .Read(read => read.Action("GetTaskChartByStatus", "NtsTask", new { @area = "Cms" }))
                            )
                            .SeriesColors(new string[] { "#ff9800", "#fad84a", "#4caf50", "#03a9f4" })
                            .Series(series =>
                            {
                                series.Donut(model => model.Value, model => model.Type)
                                .Labels(labels => labels
                                    .Visible(true)
                                    .Position(ChartPieLabelsPosition.Center)
                                    //.Template("#= category # - #= kendo.format(' {0:n0}', value) # ")
                                    .Background("transparent")
                                );
                            }).HtmlAttributes(new { @style = "height:300px;" })
                            .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Template("#= category # - #= kendo.format('{0:P}', percentage) #")
                            //.Template("#= category # ")
                            )
                                .Events(events => events
                                .SeriesClick("onTaskSeriesClick")
                                .DataBound("OnTaskStatusChartDataBound")
                            )
                    )*@

                    <div id="no-data-chart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>@SharedResource["NoDataFound"]</span></div>

                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="panel panel-info">
                <div class="panel-heading">@Resource["TaskAssigned/Requested/Shared"]</div>
                <div class="panel-body">
                    @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                              .Name("chartTaskByType")
                              .Legend(legend => legend
                              .Position(ChartLegendPosition.Bottom)
                              )
                              .DataSource(ds => ds
                              .Read(read => read.Action("GetTaskChartByUserType", "NtsTask", new { @area = "Cms" }))

                              )
                              .SeriesColors(new string[] { "#03a9f4", "#ff9800", "#fad84a", "#4caf50" })
                              .Series(series =>
                              {
                                  series.Pie(model => model.Value, model => model.Type)
                                  .Labels(labels => labels
                                  .Visible(true)
                                  .Position(ChartPieLabelsPosition.Center)
                                  .Background("transparent"));
                              }).HtmlAttributes(new { @style = "height:300px;" })
                               .Tooltip(tooltip => tooltip
                               .Visible(true)
                               .Template("#= category # - #= kendo.format('{0:P}', percentage) #"))
                               .Events(e => e
                               //.SeriesClick("onTaskAssignedSeriesClick")
                               .DataBound("OnTaskAssChartDataBound"))
                        )*@
                    <div id="no-data-taskchart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>@SharedResource["NoDataFound"]</span></div>


                </div>
            </div>
        </div>
        <div class="col-sm-4">
            <div class="panel panel-warning">
                <div class="panel-heading">@Resource["TaskSLA"]</div>

                <div class="panel-body">
                    @*@(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                                .Name("chartDateWiseSearch")
                                .Legend(legend => legend
                                .Position(ChartLegendPosition.Bottom)
                                )
                                .DataSource(ds => ds
                                .Read(read => read.Action("ReadDatewiseTaskSLA", "NtsTask", new { @area = "Cms" }))
                                )
                                .Series(series =>
                                {
                                    //series.Pie(model => model.ActualSLA, model => model.Type)
                                    series.Line(model => model.ActualSLA, model=>model.Type)
                                    .Labels(labels => labels
                                    .Visible(true)
                                    .Background("transparent")
                                    ).Name("Actual SLA");
                                    series.Line(model => model.Days, model => model.Type)
                                    .Labels(labels => labels
                                    .Visible(true)
                                    .Background("transparent")
                                    ).Name("Task SLA");
                                })
                                .CategoryAxis(axis => axis.Categories(model => model.Type).Labels(l => l.Rotation("auto")))
                                .HtmlAttributes(new { @style = "height:300px;" })
                                .Tooltip(tooltip => tooltip
                                .Visible(true)
                                .Template("#= category #"))
                                .Events(e => e.DataBound("OnTaskDateChartDataBound"))

                        )*@
                    <div id="no-data-timechart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>@SharedResource["NoDataFound"]</span></div>

                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-12">
            <div class="panel panel-filter">
                <div class="panel-heading">@SharedResource["Filter"]</div>
                <div class="panel-body">
                    <div class="row" style="padding:5px;">
                        <div class="col-3">
                            @Resource["TaskStatus"]
                            @*@(Html.Kendo().MultiSelect().Name("mdlTaskStatus")
                                 .DataSource(source =>
                                 {
                                     source.Read(read =>
                                     {
                                         read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_TASK_STATUS" });
                                     });
                                 })
                                 .AutoClose(false)
                                 .Placeholder(@Resource["FilterByTaskStatus"])
                                 .DataTextField("Name")
                                 .DataValueField("Id")
                                 .Events(e=>e.Change("onChangeTaskStatus"))
                                 .HtmlAttributes(new { @class = "hr-x-large search-control" })
                                )*@
                            <select id="mdlTaskStatus" data-placeholder="@Resource["FilterByTaskStatus"]" class="hr-x-large search-control"></select>

                        </div>
                        <div class="col-3">
                            @Resource["TaskOwner"]
                            @*@(Html.Kendo().MultiSelect().Name("mdlTaskOwner")
                                 .DataSource(source =>
                                 {
                                     source.Read(read =>
                                     {
                                         read.Action("GetOwnerIdNameList", "NtsTask", new {area="Cms"});
                                     });
                                 })
                                 .AutoClose(false)
                                 .Placeholder(Resource["FilterByTaskOwner"])
                                 .DataTextField("OwnerName")
                                 .DataValueField("Id")
                                 .Events(e => e.Change("onChangeTaskOwner"))
                                 .HtmlAttributes(new { @class = "hr-x-large search-control" })
                                )*@
                            <select id="mdlTaskOwner" data-placeholder="@Resource["FilterByTaskOwner"]" class="hr-x-large search-control"></select>

                        </div>
                        <div class="col-3">
                            @Resource["TaskAssignedTo"]
                            @*@(Html.Kendo().MultiSelect().Name("mdlTaskUser")
                                 .DataSource(source =>
                                 {
                                     source.Read(read =>
                                     {
                                         read.Action("GetUserIdNameList", "NtsTask", new {area="Cms"});
                                     });
                                 })
                                 .AutoClose(false)
                                 .Placeholder(Resource["FilterByTaskAssignedTo"])
                                 .DataTextField("AssignedToUserName")
                                 .DataValueField("Id")
                                 .Events(e => e.Change("onChangeTaskAssigned"))
                                 .HtmlAttributes(new { @class = "hr-x-large search-control" })
                                )*@
                            <select id="mdlTaskUser" data-placeholder="@Resource["FilterByTaskAssignedTo"]" class="hr-x-large search-control"></select>

                        </div>

                        <div class="col-3" style="text-align:center;">
                            <br />
                            <button class="btn btn-filter-reset" onclick="onFilterReset()" title="@Resource["ResetFilter"]">@SharedResource["Reset"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div>
        <h4>@Resource["TaskDetails"]</h4>

        <hr />


        <div class="row">
            <div class="col-12">

                <div id="kgdTaskGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            </div>
        </div>
    </div>
    @*<div class="row">
        <div class="col-12">
            <div class="panel panel-primary">
                <div class="panel-heading">@Resource["TaskDetails"]</div>
                <div class="panel-body">
                    @(Html.Kendo().Grid<TaskViewModel>
    ()
    .Name("kgdTaskGridView")
    .Columns(columns =>
    {
        columns.Bound(p => p.TaskNo).Title(@Resource["TaskNo"]).Width(300);
        columns.Bound(p => p.TaskSubject).Title(@Resource["TaskSubject"]).Width(250);
        columns.Bound(p => p.AssigneeDisplayName).Title(@Resource["AssignedTo"]).Width(250);
        columns.Bound(p => p.OwnerUserName).Title(@Resource["TaskOwner"]).Width(250);
        columns.Bound(p => p.TemplateUserType).Title(@Resource["TemplateUserType"]).Width(200);
        // columns.Bound(p => p.Priority).Width(200);
        columns.Bound(p => p.TaskStatusName).Title(@Resource["TaskStatus"]).Width(200);
        columns.Bound(p => p.StartDate).Title(@SharedResource["StartDate"]).Format("{0:dd MMM yyyy}").Width(150);
        columns.Bound(p => p.DueDate).Title(@SharedResource["EndDate"]).Format("{0:dd MMM yyyy}").Width(150);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Search().Text(@SharedResource["Search"]);
    })
    .ColumnMenu(col=>col.Filterable(false))
    .Height(700)
    .Editable()
    //.Pageable()
    .Sortable()
    .Navigatable()
    .Resizable(r=>r.Columns(true))
    .Reorderable(r => r.Columns(true))
    .Groupable(g=>g.ShowFooter(false))
    .Filterable()
    .Scrollable(x => x.Enabled(true))
    //.Events(events => events.DataBound("onDataBound"))
    .DataSource(dataSource => dataSource
    .Ajax()
    .Read("ReadTaskDashBoardGridData", "NtsTask", new { @area = "Cms" })
    .Batch(true)
    //.PageSize(20)
    .AutoSync(true)
    .ServerOperation(false)
    //.Events(events => events.Error("error_handler"))
    .Model(model =>
    {
        model.Id(p => p.Id);
    })

    )
    )
                </div>
            </div>
        </div>
    </div>*@
</div>
