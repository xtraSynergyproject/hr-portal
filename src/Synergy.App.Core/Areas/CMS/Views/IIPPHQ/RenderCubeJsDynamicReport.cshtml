
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model DynamicReportViewModel
<div class="row">
    <div class="col-12" style="margin-bottom:1px;">
        <button class="btn btn-primary" onclick="onBtPrevious()">Previous</button>
        <button class="btn btn-primary pull-right" onclick="onBtNext()">Next</button>
    </div>
    <div class="col-12">
        <div id="KgridDynamicReport" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
       
    </div>
</div>

<script>    
    var query = JSON.parse('@Html.Raw(ViewBag.Query)');
    cubejsApi.load(query).then((resultSet) => {
        const labels = resultSet.categories().map((c) => c.category);
        var inputs = query;
var mes=inputs.measures[0];
var mesName=mes.split(".")[0];
	var columns=[];
	var objDimension=resultSet.loadResponses[0].annotation.dimensions;			
	for (const [key, value] of Object.entries(objDimension)) {			
		console.log(`${key}: ${value.shortTitle}`);			  
		key1 = key.replaceAll(".", "_");
if(value.shortTitle.toLowerCase().endsWith("date"))
		{
			var obj = { field: key1, headerName: value.shortTitle,minWidth: 200,filter: "agDateColumnFilter",cellRenderer: (data) => {
			
                return data.value ? (new Date(Date(data.value))).toLocaleDateString("en-GB", {
    day : "numeric",
    month : "numeric",
    year : "numeric"
}).split("/").join("-") : "";
            },filterParams: {
                comparator: function (filterLocalDateAtMidnight, cellValue) {                    
                    if (cellValue === null) return -1;
                    let cellDate = new Date(Date(cellValue));
                    if (filterLocalDateAtMidnight.toDateString() === cellDate.toDateString()) {
                        return 0;
                    }
                    if (cellDate < filterLocalDateAtMidnight) {
                        return -1;
                    }
                    if (cellDate > filterLocalDateAtMidnight) {
                        return 1;
                    }
                },
                browserDatePicker: true
            }
            };								
			columns.push(obj);
		}				
		else{
			var obj = { field: key1,headerName:value.shortTitle,minWidth: 200};			
			columns.push(obj);
		}		
				
		
	};    
	var datastring = JSON.stringify(resultSet.loadResponse.results[0].data);

var oldmesName=mesName+".";
var newmesName=mesName+"_";
	datastring = datastring.replaceAll(oldmesName, newmesName);                
	var dataSource = JSON.parse(datastring); 
	gridOptionCubeJs = {
        defaultColDef: {
            editable: false,
            sortable: true,
            resizable: true,
            filter: true,
            flex: 1,
        },
        columnDefs: columns,
        rowData: dataSource,
        pagination: false,
        paginationPageSize: 10,

    };
	document.getElementById("KgridDynamicReport").innerHTML = "";	
	const eGridDiv = document.querySelector("#KgridDynamicReport");
	new agGrid.Grid(eGridDiv, gridOptionCubeJs);
       
                
        });
   
function onBtNext() {
    gridOptionCubeJs.api.paginationGoToNextPage();
}

function onBtPrevious() {
    gridOptionCubeJs.api.paginationGoToPreviousPage();
}
</script>