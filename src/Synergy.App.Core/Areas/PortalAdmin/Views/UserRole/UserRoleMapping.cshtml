@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "User Role Mapping";
    Layout = null;
}

@model UserRoleUserViewModel

<style>
    .cms-manageportal-footer {
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }

    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }

    .style-mylogoimage {
        height: 100px;
        width: 100px;
    }

    .style-mybannerimage {
        height: 100px;
        width: 100px;
    }

    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }

    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }

    .table tbody tr {
        box-shadow: 0 2px 10px rgb(0 0 0 / 10%);
        border-radius: 5px;
    }

    .table {
        border-spacing: 0 15px;
        border-collapse: separate;
    }

    .user-info {
        display: flex;
        align-items: center;
    }

    .table thead tr th, .table thead tr td, .table tbody tr th, .table tbody tr td {
        vertical-align: middle;
        border: none;
    }
</style>

<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="page-inner">
            <div class="col-12"><h5>User Role Mapping</h5></div>

            <div class="row">
                <div class="col-3">
                    <label>Location</label>
                    <input id="LegalEntityId" class="form-control" disabled />
                </div>
                <div class="col-3">
                    <button type="button" class="btn btn-primary" style="margin-top:30px;" onclick="OnSave(e);">Save</button>
                </div>
            </div>
            <hr />
            <div class="col-12">
                <table class="table">
                    <thead>
                        <tr>
                            <th>User</th>
                            @foreach (var col in Model.UserRoleList)
                            {
                                <th>@col.Name</th>
                            }
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.UserList)
                        {
                            <tr>
                                <td>
                                    <div class="user-info">
                                        <span class="user-avatar user-avatar-md">
                                            <img src="@Url.Action("getimagemongo", "document", new { @area = "Cms", id = user.PhotoId})" onerror="OnPhotoError(this);">
                                        </span>
                                        <span class="user-info__basic">
                                            <h6 class="mb-0 pl-2">@user.Name</h6>
                                        </span>
                                    </div>
                                </td>
                                @foreach (var role in Model.UserRoleList)
                                {
                                    var chk = "";
                                    if (Model.UserRoleUserList.Any(x => x.UserId == user.Id && x.UserRoleId == role.Id))
                                    {
                                        chk = "checked='checked'";
                                    }
                                    <td>
                                        <span><input name="userRole" data-userid="@user.Id" data-roleid="@role.Id" type="checkbox" @chk /></span>
                                    </td>
                                }

                            </tr>

                        }

                    </tbody>
                </table>

            </div>

            @*<div>
                    <script>

                    $("#kgrdUserRoleMapping").jsGrid({
                        width: "100%",
                        height: "600px",
                        inserting: false,
                        editing: true,
                        sorting: true,
                        paging: true,
                        autoload: true,
                        pageSize: 14,
                        pageButtonCount: 5,
                        deleteConfirm: "Do you really want to delete client?",
                        controller: {
                            loadData: function (filter) {
                                return $.ajax({
                                    type: "GET",
                                    url: "/PortalAdmin/UserRole/ReadUserRoleMappingData?portalId=@Model.PortalId",
                                    data: filter,
                                    dataType: "json"
                                });
                            },

                            updateItem: function (item) {
                                return $.ajax({
                                    type: "POST",
                                    url: "/cms/Content/UpdateUserPermissionData",
                                    data: item,
                                    success: function (result) {
                                        var grid = $("#kgrdUserRoleMapping").data("JSGrid")
                                        grid.render();
                                    },
                                });
                            },
                        },

                        fields: [
                            { name: "UserName", type: "text", width: 60, editing: false },
                                @for (var j=0;j< Model.Columns.Count();j++)
                                {
                                    var a = j + 1;
                                    @:{ name: 'Check' +@a, title: '@Model.Columns[j]', type: "checkbox" },
                                }
                        ]
                    });

                    function SaveUserPermissionData(e) {
                        var entityGrid = $("#kgrdUserPermission").data("JSGrid");
                        entityGrid.updateItem();
                        $.ajax({
                            type: "POST",
                            url: "/cms/Content/UpdateUserPermissionData",
                            data: item,
                            dataType: "json",
                            success: function (result) {
                                alert("Success", "updated successfully");
                            },

                            error: function (err) {
                                alert(err, "Error updating");
                            }
                        });
                    }

                    </script>

                    <div id="kgrdUserRoleMapping"></div>
                </div>*@

        </div>
    </div>
</div>


<script type="text/javascript">


    $(document).ready(function () {
        $("#LegalEntityId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            value: '@Model.LegalEntityId',
            dataSource: {
                transport: {
                    read: {
                        url: "/cms/legalentity/ReadLegalEntityByLocationData",
                    }
                }
            }
        });
    });

    function OnPhotoError(obj) {
        obj.onerror = null;
        obj.src = '/images/profile.jpg';
    }



    function OnSave() {
        debugger;
        var list = document.getElementsByName('userRole');

        var urdata = [];

        for (var i = 0; i < list.length; i++) {
            urdata.push({ UserId: list[i].dataset.userid, UserRoleId: list[i].dataset.roleid, IsChecked: list[i].checked });
        }

        urdata = JSON.stringify(urdata);

        ShowLoader($('#appWrapper'));
        $.ajax({
            type: "POST",
            url: "/PortalAdmin/UserRole/ManageUserRoleMapping?userRoleData=" + urdata,            
            dataType: "json",
            success: function (res)
            {
                if (res.success) {
                    ShowNotification("Saved Successfully", "success");
                    HideLoader($('#appWrapper'));
                }
                else {
                    ShowNotification(res.error, "success");
                    HideLoader($('#appWrapper'));
                }
            },
            error: function (res) {

                alert("error");
            },
        });

        return false;
    }
</script>