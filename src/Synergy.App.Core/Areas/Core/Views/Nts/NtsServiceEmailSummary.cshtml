@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@*@using Kendo.Mvc.UI*@
@using Synergy.App.Common

@{
    ViewBag.Title = "Service Summary";

    Layout = null;
}
@model TemplateViewModel;
<style>

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    .banner-text {
        position: absolute;
        top: 35px;
        left: 30px;
    }

    .k-datepicker {
        width: 9em !important;
    }

    .cell-completed {
        background-color: #13b713;
    }

    .cell-pending {
        background-color: #007bff;
    }

    .cell-info {
        background-color: #17a2b8;
    }

    .caticon {
        width: 100px;
        height: 100px;
        border-radius: 6px;
    }
    .summary-card-body {
        width: 400px;
    }    
    .card-number-div {
        height: 100% !important;
    }

    .status-count {
        height: 100px;
    }
</style>

<script>

    var itcode = "";
    var rtcode = "";
    var ptcode = "";
    var ctcode = "";

    $(document).ready(function () {

        $("#DepartmentId").kendoDropDownList({
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            @*value: '@Model.DepartmentId',*@
            dataSource:
            {
                //serverFiltering: true,
                transport:
                {
                    read:
                    {
                        dataType: "json",
                        url: "/CHR/HRCore/GetAllOrganisation",
                    }
                }
            },
            filtering: function (ev) {
                var filterValue = ev.filter != undefined ? ev.filter.value : "";
                ev.preventDefault();

                this.dataSource.filter({
                    logic: "or",
                    filters: [
                        {
                            field: "Name",
                            operator: "contains",
                            value: filterValue
                        },
                    ]
                });
            }
        });

        $("#TemplateType").kendoDropDownList({
            dataTextField: "DisplayName",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/NtsService/ReadServiceTemplate?templateCode=@ViewBag.TemplateCodes&portalNames=@ViewBag.PortalNames",
                    }
                }
            }
        });

        $("#UserId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_AllOption",
            filter: "contains",
            dataSource: {
                transport: {
                    read: {
                        url: "/cms/User/GetUserIdNameList?portalId=@ViewBag.PortalId",
                    }
                }
            }
        });

        $("#FromDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat",});
        $("#ToDate").kendoDatePicker({ format: "@ApplicationConstant.DateAndTime.DefaultJqueryDateFormat",});

        var t = '@String.Join(',',Model.Templates)';
        const tem = t.split(",");
        for (var i = 0; i < tem.length; i++) {
            var temp = tem[i];
            getIssueChart(temp);
        }

        caseSummaryGrid();

        getHeatMapChart();

        getNtsEmailCount();

    });

    function getNtsEmailCount(deptId, tempId, userId, st, dt) {
        document.getElementById("pendingCount").innerHTML = "";
        document.getElementById("completedCount").innerHTML = "";

        @*templatecode = (templatecode != "" && templatecode != undefined) ? templatecode : "@ViewBag.TemplateCodes";*@
        deptId = (deptId != "" && deptId != undefined) ? deptId : "";
        tempId = (tempId != "" && tempId != undefined) ? tempId : "";
        userId = (userId != "" && userId != undefined) ? userId : "@ViewBag.UserId";
        st = (st != "" && st != undefined) ? st : "";
        dt = (dt != "" && dt != undefined) ? dt : "";

        var url = "/core/Nts/GetNtsEmailListCount?templateCodes=@ViewBag.TemplateCodes&portalNames=@ViewBag.PortalNames&userId=" + userId + "&deptId=" + deptId + "&tempId=" + tempId + "&st=" + st + "&dt=" + dt;

        $.ajax({
                url: url,
                type: 'GET',
                data: {},
                dataType: 'json',
                success: function (result) {

                    if (result.success) {
                        document.getElementById("pendingCount").innerHTML = result.pending;
                        document.getElementById("completedCount").innerHTML = result.completed;
                        document.getElementById("reqCount").innerHTML = result.pending + result.completed;
                    }
                    else {

                        evt.preventDefault();
                        return false;
                    }
                },
                error: function (ert) {
                    ShowNotification(ert, "error");
                }
            });
    }

    function getHeatMapChart(temp, deptId, tempId, userId, st, dt) {

        deptId = (deptId != "" && deptId != undefined) ? deptId : "";
        tempId = (tempId != "" && tempId != undefined) ? tempId : "";
        userId = (userId != "" && userId != undefined) ? userId : "@ViewBag.UserId";
        st = (st != "" && st != undefined) ? st : "";
        dt = (dt != "" && dt != undefined) ? dt : "";

        //Heatmap chart
        var url = "/CaseManagement/CaseManagement/GetHeatMapChart?tempCode=@ViewBag.TemplateCodes&userId=" + userId + "&deptId=" + deptId + "&tempId=" + tempId + "&st=" + st + "&dt=" + dt;
        //var url = "/cms/NtsService/GetSeriesData";
        $.ajax({
            type: 'GET',
            url: url,
            success: function (res) {
                if (res) {
                    debugger;
                    /*var dueList = res.dueDateList;*/
                    var seriesData = getSeriesData(res);
                    var options = {
                        series: seriesData,
                        theme: {
                            mode: skin == "dark" ? "dark" : "light",

                        },
                        chart: {
                            height: 210,
                            type: 'heatmap',
                            toolbar: {
                                show: false
                            },
                            zoom: {
                                enabled: false,
                            },
                            events: {
                                click: function (event, chartContext, config) {
                                    debugger;
                                    var el = event.target;
                                    var seriesIndex = parseInt(el.getAttribute("i"));
                                    var dataPointIndex = parseInt(el.getAttribute("j"));

                                    var seriesName = config.globals.seriesNames[seriesIndex];
                                    //var hr = config.config.series[seriesIndex].data[dataPointIndex].x;
                                    //var nexthr = hr + 1;
                                    //if (~~(hr / 10) == 0) {
                                    //    hr = '0' + hr;
                                    //}

                                    //if (~~(nexthr / 10) == 0) {
                                    //    nexthr = '0' + nexthr;
                                    //}
                                    //var todayDate = new Date().toISOString().split('T')[0];
                                    //var lt = todayDate + 'T' + hr + ':00:00.000Z';
                                    //var rt = todayDate + 'T' + nexthr + ':00:00.000Z';
                                    //onBlockClick(lt, rt, seriesName);
                                }
                            }
                        },
                        legends: {
                            formatter: function (seriesName, opts) {
                                debugger;
                                /*$('[seriesname="closed"]').hide();*/
                                //if (seriesname == "closed") {
                                //    $(this).hide();
                                //}
                                return [seriesName, " - ", opts.w.globals.series[opts.seriesIndex]]
                            }
                        },
                        yaxis: {
                            labels: {
                                style: {
                                    colors: [],
                                    fontSize: '10px',
                                    fontFamily: 'Lato',
                                    fontWeight: 400,
                                    cssClass: 'apexcharts-yaxis-label',
                                },
                                //formatter: (value) => { debugger; return val; },
                            }
                        },
                        xaxis: {
                            type: "categories",
                            //labels: noOfHrs,
                        },
                        plotOptions: {
                            heatmap: {
                                shadeIntensity: 1,
                                radius: 0,
                                //useFillColorAsStroke: true,
                                colorScale: {
                                    ranges: [
                                    {
                                        from: 1,
                                        to: 7,
                                        name: 'high(<1 week)',
                                        color: '#7EC8E3'
                                    },
                                    {
                                        from: 7,
                                        to: 40,
                                        name: 'medium(between 7 to 40 days)',
                                        color: '#FFFF8A'
                                    },
                                    {
                                        from: 40,
                                        to: 1000,
                                        name: 'low(>40 days)',
                                        color: '#FF2E2E'
                                    }
                                    ]
                                }
                            }
                        },
                        dataLabels: {
                            enabled: false
                        },
                        stroke: {
                            width: 1
                        },
                        title: {
                            //text: 'HeatMap Chart with Color Range'
                        },
                        //tooltip: {
                        //    custom: function (opts) {
                        //        //debugger;
                        //        const desc =
                        //            opts.ctx.w.config.series[opts.seriesIndex].data[
                        //                opts.dataPointIndex
                        //            ].description;

                        //        const value = opts.series[opts.seriesIndex][opts.dataPointIndex];
                        //        if (desc == 0) {
                        //            //debugger;
                        //            return '<div disabled></div>';
                        //        }

                        //        return desc;
                        //    }
                        //},
                    };
                    document.getElementById("heatmap").innerHTML = "";
                    var hchart = new ApexCharts(document.querySelector("#heatmap"), options);
                    hchart.render();
                }
            }
        });
    }

    function getSeriesData(res) {

        var series = res.seriesList;
        var seriesdata = res.seriesList[0].data;

        var seriesList = [];
        for (var i = 0; i < series.length; i++) {
            var obj = {};
            obj["name"] = series[i].name;
            var data = [];
            for (var j = 0; j < seriesdata.length; j++) {
                var dataobj = {};
                dataobj["x"] = seriesdata[j].x;
                dataobj["y"] = seriesdata[j].y;

                dataobj["description"] = seriesdata[j].y;
                data.push(dataobj);
            }
            obj["data"] = data;
            seriesList.push(obj);
        }
        return seriesList;
    }

    

    function OnChangeServiceType() {
        var search = $("#TemplateType").data("kendoDropDownList").value();
        caseSummaryGrid(search);
    }

    function getIssueChart(temp,deptId,tempId,userId,st,dt) {

        deptId = (deptId != "" && deptId != undefined) ? deptId : "";
        tempId = (tempId != "" && tempId != undefined) ? tempId : "";
        userId = (userId != "" && userId != undefined) ? userId : "@ViewBag.UserId";
        st = (st != "" && st != undefined) ? st : "";
        dt = (dt != "" && dt != undefined) ? dt : "";

        var url = "/CaseManagement/CaseManagement/GetStatusChartByTemplateCode?tempCode=" + temp + "&userId=" + userId + "&deptId=" + deptId + "&tempId=" + tempId + "&st=" + st + "&dt=" + dt;
            $.ajax({
                type: 'GET',
                url: url,
                success: function (res) {
                    if (res) {

                        var chartid = "requestchart";
                        var vals = res.ItemValueSeries;
                        itcode = res.Code;
                        var chart = "#"+chartid;
                        var options = {
                            series: vals,
                            //title: {
                            //    text: "Task By Status"
                            //},
                            chart: {
                                id: chartid,
                                width: 240,
                                height: 230,
                                type: 'pie',
                                events: {
                                    dataPointSelection: function (event, chartContext, config) {

                                        var status = config.w.config.labels[config.dataPointIndex];
                                        var code = config.w.config.chart.id;
                                        var statusCode = '';
                                        if (status === 'Drafted') {
                                            statusCode = 'SERVICE_STATUS_DRAFT';
                                        } else if (status === 'Pending') {
                                            statusCode = 'SERVICE_STATUS_INPROGRESS,SERVICE_STATUS_OVERDUE';
                                        } else if (status === 'Overdue') {
                                            statusCode = 'SERVICE_STATUS_OVERDUE';
                                        } else if (status === 'Completed') {
                                            statusCode = 'SERVICE_STATUS_COMPLETE';
                                        } else if (status === 'Reject' || status === 'Canceled') {
                                            statusCode = 'SERVICE_STATUS_REJECT,SERVICE_STATUS_CANCEL';
                                        }
                                        getServiceList(statusCode, itcode);
                                    }
                                }
                            },
                            noData: {
                                text: "!No Data Found",
                                align: 'center',
                                verticalAlign: 'middle',
                                offsetX: 0,
                                offsetY: 0,
                                style: {
                                    color: "#363642",
                                    fontSize: '14px',
                                }
                            },
                            legend: {
                                position: 'bottom'
                            },
                            labels: res.ItemValueLabel,
                            //colors: ['#f10b0b', '#13b713', '#f2a818', '#008ffb', '#f2a818'],
                            colors: res.ItemStatusColor,
                            dataLabels: {
                                enabled: true,
                                style: {
                                    colors: ['#000']
                                },
                            },

                        };

                        document.getElementById(chartid).innerHTML = "";
                        var chart = new ApexCharts(document.querySelector(chart), options);
                        chart.render();
                    }
                }
            });

    }

    function getServiceList(statusCode, temcode) {
        //debugger;
        //var win = GetMainWindow();
        //win.iframeOpenUrl = '/Cms/NtsService/ServiceListByFilters?&statusCodes=' + statusCode + '&templateCodes=' + temcode + '&showAllOwnersService=false&cbm=OnAfterServiceCreate';
        //win.OpenWindow({ Title: 'Services', Width: 1200, Height: 600 });
        //return false;
        LoadPartailView('@Url.Action("NtsEmailPage", "Nts")?serTempCodes=' + temcode + '&statusCodes=' + statusCode + '&userId=@Model.UserId&portalNames=@ViewBag.PortalNames&returnPageName=@ViewBag.PageName&templateCodes=@Model.TemplateCodes&catCodes=@Model.CategoryCodes&groupCodes=@Model.GroupCodes', $('#cms-content'));
    }

    function OnOpen(id, templateCode) {

        var portalId =  $("#GlobalPortalId").val();
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterCreate&source=Edit&dataAction=Edit&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + id;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Service Request', Width: 1200, Height: 700 });
        return false;
    }

    function OnCreateService() {
        var url = '/Cms/NtsService/SelectServiceTemplate?templateCode=@ViewBag.TemplateCodes&userId=@ViewBag.UserId&cbm=OnAfterServiceCreate&portalNames=@ViewBag.PortalNames';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Select Service', Width: 1000, Height: 600, Position: 'Right1' });
        return false;
    }

    function OnAfterServiceCreate() {
        //GetChart();
        window.location.href = window.location.href;
        //caseSummaryGrid();
    }

    var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(EmailInboxTypeEnum)))';
    var statusObj = JSON.parse(status);

    var columnDefs = [
        {
            headerName: "Action",
            field: "ServiceId",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' style='cursor:pointer;' id='casesummary-grdmenu' data-templatecode='" + params.data.TemplateCode + "' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
        {
            field: "ServiceNo", headerName:"Service No"
        },
        { field: "Subject" },
        { field: "TemplateName", headerName: "Service Type" },
        { field: "FromUserName", headerName: "Service Owner" },
        {
            field: "InboxStatus", headerName: "Service Status",
            cellStyle: params => {
                debugger;
                if (params.value == "@((int)(EmailInboxTypeEnum.Completed))") {
                    return { color: 'white', backgroundColor: '#13b713' };
                } else if (params.value == "@((int)(EmailInboxTypeEnum.Pending))") {
                    return { color: 'white', backgroundColor: '#007bff' };
                } else if (params.value == "@((int)(EmailInboxTypeEnum.Drafted))") {
                    return { color: 'white', backgroundColor: '#17a2b8' };
                }
            },
            cellRenderer: params => {
                return statusObj[params.value]; //only for enum
            }
        },
        {
            field: "CreatedDate",
            headerName: "Start Date",
            cellRenderer: params => {
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }
        },
        {
            field: "DueDate",
            headerName: "Due Date",
            cellRenderer: params => {
                return moment(params.value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment');
            }
        },
    ];

    $(function () {

        $.contextMenu({
            selector: '#casesummary-grdmenu',
            trigger: 'left',
            build: function ($trigger, e) {

                var id = $trigger.data('idvalue');
                var templateCode = $trigger.data('templatecode');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'open':
                                        OnOpen(id, templateCode);
                                        break;
                                    default:
                                }
                            },
                            items: {
                                "open": { name: "Open", icon: "fas fa-edit" },
                            }
                        };
                }
            }
        });

    });


    function caseSummaryGrid(templatecode,deptId,tempId,userId,st,dt) {

        templatecode = (templatecode != "" && templatecode != undefined) ? templatecode : "@ViewBag.TemplateCodes";
        deptId = (deptId != "" && deptId != undefined) ? deptId : "";
        tempId = (tempId != "" && tempId != undefined) ? tempId : "";
        userId = (userId != "" && userId != undefined) ? userId : "@ViewBag.UserId";
        st = (st != "" && st != undefined) ? st : "";
        dt = (dt != "" && dt != undefined) ? dt : "";

        var url = "/Nts/ReadNtsEmailList?templateCodes=" + templatecode + "&portalNames=@ViewBag.PortalNames&userId=" + userId + "&deptId=" + deptId + "&tempId=" + tempId + "&st=" + st + "&dt=" + dt;
        //document.getElementById("casesummaryGridView").innerHTML = "";
        //gridConfig(
        //   "casesummaryGridView",
        //   url,
        //   columnDefs,
        //   false,
        //   true,
        //   true,
        //   true,
        //   1,
        //   true,
        //    10);

        var source ={
            datatype: "json",
            id: 'TargetId',
            url: url
        };
        var dataAdapter = new $.jqx.dataAdapter(source);
        $("#grid").jqxGrid(
            {
                width: '100%',// getWidth('Grid'),
                source: dataAdapter,
                columnsresize: true,
                showcolumnlines: false,
                showcolumnheaderlines: false,
                filterable: true,
                sortable: true,
                groupable: true,
                    columns : [
        {
            datafield: "ServiceNo", text: "Request No", cellsrenderer: function (row, column, value) {
                var datarow = $("#grid").jqxGrid('getrowdata', row);
                return "<div class='p-2'><a href=\"javascript:OnOpen('" + datarow.TargetId + "','" + datarow.TemplateCode + "')\">" + value + "</a></div>";
            }
        },
                        { datafield: "Subject" },
                        { datafield: "MessageUserDepartmentName",text:"Department" },
                        { datafield: "TemplateName", text: "Request Type" },
                        { datafield: "FromUserName", text: "Request Owner" },
        {
            datafield: "InboxStatus", text: "Request Status", cellclassname: function (row, columnfield, value) {
                if (value == "@((int)(EmailInboxTypeEnum.Completed))") {
                    return "cell-completed text-light";
                } else if (value == "@((int)(EmailInboxTypeEnum.Pending))") {
                    return "cell-pending text-light";
                } else if (value == "@((int)(EmailInboxTypeEnum.Drafted))") {
                    return "cell-info text-light";
                }
            }, cellsrenderer: function (row, column, value) {
                return "<div class='p-2'>" + statusObj[value]+"</div>";
                            }

        },
        {
            datafield: "CreatedDate",
                            text: "Start Date", cellsrenderer: function (row, column, value) {
                                return "<div class='p-2'>" +  moment(value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment') + "</div>";
                            }
        },
        {
            datafield: "DueDate",
            text: "Due Date", cellsrenderer: function (row, column, value) {
                                return "<div class='p-2'>" +  moment(value).format('@ApplicationConstant.DateAndTime.DefaultJqueryDateTimeFormatForMoment') + "</div>";
                            }
        }
                ]
            }
        );
    }


    function OnFilter() {
        var dept = $("#DepartmentId").data("kendoDropDownList").value();
        var temp = $("#TemplateType").data("kendoDropDownList").value();
        var user = $("#UserId").data("kendoDropDownList").value();
        var st = $("#FromDate").data("kendoDatePicker").value();
        var dt = $("#ToDate").data("kendoDatePicker").value();

        getIssueChart("", dept, temp, user, st, dt);
        getHeatMapChart("", dept, temp, user, st, dt)
        getNtsEmailCount(dept, temp, user, st, dt);
        caseSummaryGrid("", dept, temp, user, st, dt);
    }

    function OnResetFilter() {

    }



</script>


<div id="appWrapper" class="wrapper">
    <div class="page">
        <div class="page-inner">
            <div class="page-section">
                <div class="row no-gutters p-2">
                    <div class="col-lg-6 col-md-12">
                        <h5>@ViewBag.Title</h5>
                    </div>
                    <div class="col-lg-6 col-md-12 text-right">
                        <button class="btn btn-primary" onclick="OnCreateService();">Create Service</button>
                    </div>
                </div>
                <div class="row p-2 mb-2">
                    <div class="col-lg-4 col-md-4 col-sm-12">Department
                        <input id="DepartmentId" style="width:100%!important" />
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12">Template
                        <input id="TemplateType" style="width:100%!important" />
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12">User
                        <input id="UserId" style="width:100%!important" />
                    </div>
                </div>
                <div class="row p-2 mb-2">
                    <div class="col-lg-4 col-md-4 col-sm-12">From Date
                        <input id="FromDate" style="width:100%!important" />
                    </div>
                    <div class="col-lg-4 col-md-4 col-sm-12">To Date
                        <input id="ToDate" style="width:100%!important" />
                    </div>

                    <div class="col-lg-4 col-md-4 col-sm-12" style="padding-top:20px;">
                        <button class="btn btn-primary" onclick="OnFilter();" >Search</button>
                        <button class="btn btn-secondary" onclick="OnResetFilter();" style="margin-right:10px;">Reset</button>
                    </div>
                </div>
                <hr />

                <div class="row" style="padding:10px;">

                    @*@foreach (var temp in Model.TemplatesList)
        {*@
                    @*<div class="col-sm-12 col-md-6 col-lg-3">
            <div class="card">
                <div class="card-header text-center bg-success text-white">Incident Summary</div>
                <div class="card-body chart-body">
                    <div id="chart_@temp.Code"></div>
                </div>
            </div>
        </div>*@

                    <!--<div class="col-sm-12 col-md-6 col-lg-4">
        <div class="card">
            <div class="card-header text-center bg-success text-white">Incident Summary</div>
            <div class="card-body row summary-card-body">
                <div class="col-5 row border-right">
                    <div class="col-12" style="text-align:center">
                        <img class="caticon" src="/cms/Document/GetImageMongo?id=#=IconFileId#" onerror="OnDocumentError(this);">
                    </div>
                    <div class="col-12" style="text-align:center"><div style="font-weight:bold;font-size:25px;">-->
                    @*@temp.TotalCount*@
                    <!--5</div></div>
                </div>
                <div class="col-7">
                    <div id="chart_Code">
                    </div>
                </div>
            </div>
        </div>
    </div>-->
                    @*}*@

                    <div class="col-sm-12 col-md-6 col-lg-4">
                        <div class="card">
                            <div class="card-header text-center bg-success text-white">Service Summary</div>
                            <div class="card-body row summary-card-body" style="height:257px;">
                                <div class="col-5 row border-right">
                                    <div class="col-12" style="text-align:center;padding-top:30px;">
                                        <img class="caticon" src="/cms/Document/GetImageMongo?id=@ViewBag.IconFileId" onerror="OnDocumentError(this);">
                                    </div>
                                    <div class="col-12" style="text-align:center">
                                        <div style="font-weight:bold;font-size:25px;" id="reqCount">@ViewBag.TotalCount</div>
                                    </div>
                                </div>
                                <div class="col-7">
                                     <div id="requestchart"></div>
                                </div>
                            </div>
                        </div>
                    </div>


                            <div class="col-sm-12 col-md-6 col-lg-4">
                                <!-- .card -->
                                            <div class="card">
                                                <div class="card-header text-center bg-success text-white">Service By SLA</div>
                                                <!-- .card-body -->
                                                <div class="card-body chart-body">
                                                    <div id="heatmap"></div>
                                                </div><!-- /.card-body -->
                                            </div><!-- /.card -->
                                        </div>
                                        <div class="col-sm-12 col-md-6 col-lg-4">
                                            <!-- .card -->
                                            <div class="card">
                                                <div class="card-header text-center bg-success text-white">Service By Status</div><!-- .card-body -->
                                                <div class="card-body chart-body" style="height:257px;">
                                                    <div class="row no-gutters" style="padding-top:70px;">

                                                        @*<div class="col-4 text-primary mx-auto" style="text-align:center;cursor:pointer;border:1px solid;border-radius:6px;">
                                                            <div class="p-1 card-number-div" >
                                                                <div class="pb-1" style="font-size:1.2em" id="pendingCount"></div>
                                                                <div class="bg-primary" style="height:8px; border-radius:4px;">&nbsp;</div>
                                                                <div class="pt-1" style="font-size:.6em;">PENDING</div>
                                                            </div>
                                                        </div>
                                                        <div class="col-4 text-success mx-auto" style="text-align:center;cursor:pointer;border:1px solid;border-radius:6px;">
                                                            <div class="p-1 card-number-div" >
                                                                <div class="pb-1" style="font-size:1.2em" id="completedCount"></div>
                                                                <div class="bg-success" style="height:8px; border-radius:4px;">&nbsp;</div>
                                                                <div class="pt-1" style="font-size:.6em;">COMPLETED</div>
                                                            </div>
                                                        </div>*@

                                                        <div class="col-4 text-primary mx-auto status-count" style="text-align:center;cursor:pointer;border:1px solid;border-radius:6px;">
                                                            <div class="p-1 card-number-div" onclick="getServiceList('SERVICE_STATUS_INPROGRESS,SERVICE_STATUS_OVERDUE', '@ViewBag.TempalteCodes');">
                                                                <div class="pb-1" style="font-size:2.2em;height:50%;" id="pendingCount"></div>
                                                                <div class="bg-primary" style="height:8px; border-radius:4px;">&nbsp;</div>
                                                                <div class="pt-1" style="font-size:.8em;margin-top:10px;">PENDING</div>
                                                            </div>
                                                        </div>
                                                        <div class="col-4 text-success mx-auto status-count" style="text-align:center;cursor:pointer;border:1px solid;border-radius:6px;">
                                                            <div class="p-1 card-number-div" onclick="getServiceList('SERVICE_STATUS_COMPLETE', '@ViewBag.TempalteCodes');">
                                                                <div class="pb-1" style="font-size:2.2em;height:50%;" id="completedCount"></div>
                                                                <div class="bg-success" style="height:8px; border-radius:4px;">&nbsp;</div>
                                                                <div class="pt-1" style="font-size:.8em;margin-top:10px;">COMPLETED</div>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div><!-- /.card-body -->
                                            </div><!-- /.card -->
                                        </div>
                                    </div>

                                    <div style="padding:10px;">
                                        <div class="row">
                                            <div class="col-6"><h5>Service Details</h5></div>
                                            @*<div class="col-6"><div id="TemplateType" class="form-control" style="width:50%;float:right;"></div></div>*@
                                        </div>
                                        <hr />
                                        <div class="row">
                                            <div class="col-12 default">
                                                <div id="grid">
                                                </div>
                                                @*<div id="casesummaryGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>*@
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
