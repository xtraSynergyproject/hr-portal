@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Portal";
    Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    //Layout = null;
}
@inject Synergy.App.Common.IUserContext _userContext
@model NtsLogViewModel
<style>
    .k-upload {
        width: 100%;
    }

    .SYN-Main-wrapper {
        width: 700px;
        height: auto;
        padding: 0;
        margin: 20px auto;
        box-shadow: 4px 4px 10px #CBD0CE;
        border-radius: 6px;
    }

    .SYN-upload-row {
        width: 96%;
        padding: 0;
        margin: 4px auto;
        background-color: #10B0ED;
        border-radius: 6px;
    }

    .SYN-ico-pdf {
        width: 96%;
        padding: 20px;
        margin: 0 auto;
    }

    .SYN-ico-action {
        padding: 26px 4px;
        margin: 4px;
        float: left;
    }

    .SYN-ico-action-eye {
        padding: 26px 4px;
        margin: 4px;
        float: left;
        color: blue;
        cursor: pointer;
    }

    .SYN-ico-action-down {
        padding: 26px 4px;
        margin: 4px;
        float: left;
        color: greenyellow;
        cursor: pointer;
    }

    .SYN-ico-action-del {
        padding: 26px 4px;
        margin: 4px;
        float: left;
        color: red;
        cursor: pointer;
    }

    .SYN-tag-field {
        padding: 0;
        margin: 0;
        font-size: 14px;
        color: #939598;
    }

    .SYN-txt-field {
        padding: 0;
        margin: 0;
    }

    .SYN-row-gap {
        padding: 0;
        margin: 12px 0;
    }

    .SYN-dummy-row {
        width: 96%;
        padding: 4px;
        margin: 4px auto;
    }

    .SYN-list-box {
        width: 96%;
        padding: 0;
        margin: 4px auto;
        background-color: #ffffff;
        border-radius: 6px;
        border: 1px solid #C4C4C4;
    }

    .SYN-sub-docName {
        padding: 2px 0 2px 0;
        font-size: 14px;
    }

    .SYN-sub-white-txt {
        padding: 2px 0 2px 12px;
        font-size: 14px;
    }

    .SYN-inn-title-row {
        width: 96%;
        padding: 0;
        margin: 4px auto;
        background-color: #353535;
        border-radius: 6px;
        color: #fff;
    }

    .SYN-ico-close {
        width: 96%;
        padding: 6px;
        margin: 6px auto;
        height: auto;
    }

    .SYN-ico-expand {
        width: 96%;
        padding: 6px;
        margin: 6px auto;
        height: auto;
    }

    .SYN-inn-row {
        width: 96%;
        padding: 0;
        margin: 4px auto;
    }

    .SYN-sub-title {
        font-weight: 500;
        font-size: 14px;
    }

    .SYN-white-text {
        font-weight: 500;
        font-size: 16px;
        color: #fff;
    }

    .SYN-main-title {
        font-weight: 500;
        font-size: 16px;
        padding: 16px 0;
    }

    /*.k-button {
        border-color: #353535;
        color: #fff;
        background-color: #353535;
    }*/

    .k-upload .k-dropzone {
        border-color: #dee2e6;
        color: #bababa;
        background-color: #10B0ED;
    }

        .k-upload .k-dropzone .k-dropzone-hint, .k-upload .k-dropzone .k-upload-status {
            color: #ffff;
        }
</style>

<script>
    @*function OnView(e) {
        
        var portalId = '@ViewBag.PortalId';

        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        var url = '/Cms/Page?lo=Popup&popup=true&source=View&dataAction=View&templateCodes=' + dataItem.TemplateCode + '&portalId=' + portalId + '&recordId=' + dataItem.RecordId + '&logId=' + dataItem.Id;

        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'View Version Details', Width: 1200, Height: 600 });
        return false;
    }*@
    function OnView(Id,code,recId) {
        
        var portalId = '@ViewBag.PortalId';

        var url = '/Cms/Page?lo=Popup&popup=true&source=View&dataAction=View&templateCodes=' + code + '&portalId=' + portalId + '&recordId=' + recId + '&logId=' + Id;

        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'View Version Details', Width: 1200, Height: 600 });
        return false;
    }

    $(document).ready(function () {
        getData();
    });

    var columnDefs = [
        {
            field: "Id", headerName: "Action",
            cellRenderer: params => {
                if (params.data.Id != null) {
                    return "<i class='fa fas fa-eye' title='View' onclick='OnView(\"" + params.data.Id + "\",\"" + params.data.TemplateCode + "\",\"" + params.data.RecordId + "\");'></i>";
                }
            }
        },
        { headerName: "Version No", field: "VersionNo", },
        { headerName: "Subject", field: "Subject" },
        { headerName: "Log Time", field: "LogStartDateTime" },
    ];

    function getData() {
        var recordId = '@Model.RecordId';

        document.getElementById("NtsVersionGrid").innerHTML = "";
        gridConfig(
            "NtsVersionGrid",
            "/Cms/ReadNtsVersionData?recordId=" + recordId +"&type="+'@Model.NtsType',
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>


<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

    <div class="row-12">
        <div class="col-12">
            <div id="NtsVersionGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

            @*@(Html.Kendo().Grid<NtsLogViewModel>
    ()
    .Name("NtsVersionGrid")
    .Columns(columns =>
    {
        columns.Command(command =>
        {
            command.Custom("View").Text("<i class='fa fas fa-eye'></i>").Click("OnView").HtmlAttributes(new { @class = "action-icon" });
            //command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteModule").HtmlAttributes(new { @class = "action-icon" });
        }).Title("Action").Width(100);
        columns.Bound(c => c.VersionNo).Title("Version No");
        columns.Bound(c => c.Subject);
        columns.Bound(c => c.LogStartDateTime).Title("Log Date").Format(ApplicationConstant.DateAndTime.DefaultDateTimeFormat);
    })
    .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                      .Operators(o => o.ForString(s => s.Clear()
                      .Contains("Contains")
                      .IsEqualTo("Is equal to")
                      )))
                .Pageable(pageable => pageable
                .Refresh(true)
                .PageSizes(true)
                .ButtonCount(5))
                .Resizable(resize => resize.Columns(true))
                .AutoBind(true)
                .DataSource(dataSource => dataSource
                .Ajax()
                .PageSize(20)
                //.Events(events => events.Error("OnError"))
                .Read(read => read.Action("ReadNtsVersionData", "Cms", new { recordId = Model.RecordId, type=Model.NtsType  }))
                .Model(model => model.Id(p => p.Id))
                )
          )*@

        </div>
    </div>
</div>


