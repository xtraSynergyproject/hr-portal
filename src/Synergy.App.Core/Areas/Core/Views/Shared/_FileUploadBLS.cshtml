@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model FileUploadViewModel
@{

    Layout = null;
}
<div id="div_@Model.Property" class="dm-uploader row no-gutters" style="text-align:left;border:none;">
    <div class="col-12 no-gutters" style="padding-left: 0px;">
        <div class="upload-image-div">
            @{
                var ht = "";
                if (Model.ImageHeight.IsNotNullAndNotEmpty())
                {
                    ht = $"height:{Model.ImageHeight};";
                }
                var wdth = "";
                if (Model.ImageWidth.IsNotNullAndNotEmpty())
                {
                    wdth = $"width:{Model.ImageWidth};";
                }
            }
            <div class="upload-image-div" style="@ht @wdth">
                @if (Model.Value.IsNotNullAndNotEmpty())
                {
                    @: <img style="border: 1px solid gray; border-radius: 5px; @ht @wdth" id="img_@Model.Property" class="upload-image-preview" src="/cms/Document/GetImageMongo?id=@Model.Value" onerror='OnPreviewError(this);' />
                }
                else
                {
                    @:<img style="border: 1px solid gray; border-radius: 5px; background-color: gray; @ht @wdth" id="img_@Model.Property" class="upload-image-preview" src="/images/nofile.png" />
                }

            </div>
            <div class="btn btn-link pl-4">
                <span style="cursor:pointer;">Browse file<input type="file" title='Browse file' /></span>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

            upload_@(Model.Property)();
    });
    function upload_@(Model.Property)() {


        var postUrlString = "/Cms/Document/SaveBlsAppointment?appointmentId=@Model.ReferenceId";
        $("#div_@Model.Property").dmUploader({ //
            url: postUrlString,
            multiple: false,
            // extFilter: extFilter,*///["jpg", "jpeg", "png", "gif"],
            maxFileSize: 10000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                debugger;
                if (file.type == "application/x-msdownload") {
                    alert("File not supported")
                    return false;
                }
                        ui_multi_add_file_@(Model.Property)(id, file);
            },
            onBeforeUpload: function (id) {
                        ui_multi_update_file_status_@(Model.Property)(id, 'uploading', 'Uploading...');
                        ui_multi_update_file_progress_@(Model.Property)(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                        ui_multi_update_file_status_@(Model.Property)(id, 'warning', 'Canceled by User');
                        ui_multi_update_file_progress_@(Model.Property)(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                        ui_multi_update_file_progress_@(Model.Property)(id, percent);
            },
            onUploadSuccess: function (id, data) {
                debugger;

                if (!data.filename.includes(".csv")) {
                    if (data.filename.includes(".pdf") ||
                    data.filename.includes(".doc") ||
                    data.filename.includes(".docx") ||
                    data.filename.includes(".htm") ||
                    data.filename.includes(".html") ||
                    data.filename.includes(".mp3") ||
                    data.filename.includes(".mp4") ||
                    data.filename.includes(".mov") ||
                    data.filename.includes(".ppt") ||
                    data.filename.includes(".txt") ||
                    data.filename.includes(".xls") ||
                    data.filename.includes(".xlsx") ||
                    data.filename.includes(".zip")) {
                    $("#img_@Model.Property").attr("src", "/images/document1.jpg");

                }
                else {
                    $("#img_@Model.Property").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);

                }

                $("#@Model.Property").val(data.fileId);
                ui_multi_update_file_status_@(Model.Property)(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress_@(Model.Property)(id, 100, 'success', false);

                }

                @if (Model.CallbackMethod.IsNotNullAndNotEmpty())
                {
                    @:window['@Model.CallbackMethod'](data);
                }


                    },
            onUploadError: function (id, xhr, status, message) {
                alert("Invalid file uploaded");
                        delete_@(Model.Property)();
                        ui_multi_update_file_status_@(Model.Property)(id, 'danger', message);
                        ui_multi_update_file_progress_@(Model.Property)(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
                alert("fallback")
            },
            onFileSizeError: function (file) {
                    alert("File not supported")
            }
        });
    }
    function delete_@(Model.Property)() {

        $("#img_@Model.Property").attr("src", "/images/nofile.png");
        $("#@Model.Property").val('');
        $("#div_@Model.Property").dmUploader("reset");
        document.getElementById("files_@Model.Property").innerHTML = "";
    }

    function downloadFile_@(Model.Property)() {
        var id = document.getElementById('@(Model.Property)').value;
        window.open('/cms/Document/GetFileMongo?fileId=' + id, '_blank');
        return false;
    }

    /*
    * Some helper functions to work with our UI and keep our code cleaner
    */

    // Adds an entry to our debug area
    function ui_add_log_@(Model.Property)(message, color) {
        var d = new Date();

        var dateString = (('0' + d.getHours())).slice(-2) + ':' +
            (('0' + d.getMinutes())).slice(-2) + ':' +
            (('0' + d.getSeconds())).slice(-2);

        color = (typeof color === 'undefined' ? 'muted' : color);

        var template = $('#debug-template').text();
        template = template.replace('%%date%%', dateString);
        template = template.replace('%%message%%', message);
        template = template.replace('%%color%%', color);

        $('#debug').find('li.empty').fadeOut(); // remove the 'no messages yet'
        $('#debug').prepend(template);
    }

    // Creates a new file and add it to our list
    function ui_multi_add_file_@(Model.Property)(id, file) {
        var template = $('#files-template').text();
        template = template.replace('%%filename%%', file.name);

        template = $(template);
        template.prop('id', 'uploaderFile' + id);
        template.data('file-id', id);
    }

    // Changes the status messages on our list
    function ui_multi_update_file_status_@(Model.Property)(id, status, message) {
        $('#uploaderFile' + id).find('span').html(message).prop('class', 'status text-' + status);
    }

    // Updates a file progress, depending on the parameters it may animate it or change the color.
    function ui_multi_update_file_progress_@(Model.Property)(id, percent, color, active) {

        color = (typeof color === 'undefined' ? false : color);
        active = (typeof active === 'undefined' ? true : active);

        var bar = $('#uploaderFile' + id).find('div.progress-bar');

        bar.width(percent + '%').attr('aria-valuenow', percent);
        bar.toggleClass('progress-bar-striped progress-bar-animated', active);

        if (percent === 0) {
            bar.html('');
        } else {
            bar.html(percent + '%');
        }

        if (color !== false) {
            bar.removeClass('bg-success bg-info bg-warning bg-danger');
            bar.addClass('bg-' + color);
        }
    }
</script>
