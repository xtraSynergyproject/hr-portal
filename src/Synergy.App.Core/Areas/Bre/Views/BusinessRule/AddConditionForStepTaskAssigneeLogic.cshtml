@*@using Kendo.Mvc.UI;*@
@using Synergy.App.Common
@model Synergy.App.ViewModel.BusinessRuleModelViewModel
@{
    ViewData["Title"] = "Create Business Rule";
    Layout = "/Areas/Core/Views/Shared/_PopupLayout.cshtml";

}

<script>

</script>
<form asp-controller="BreRuleModel" asp-action="ManageBusinessRuleForStepTask" asp-area="BRE"
      data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
      data-ajax-failure="onAjaxFailed"
      data-ajax-success="onAjaxSuccess"
      data-ajax="true" data-ajax-method="POST"
      method="post" class="form-horizontal">
    <div class="text-danger" asp-validation-summary="All"></div>
    <div class="row p-5">
        <div class="col-12">
            <div id="formio-container"></div>
        </div>
        <div class="col-12">
            <button type="submit" class="btn btn-success" onclick="return OnSubmitLogic();">Save</button>
        </div>

    </div>
    @Html.HiddenFor(x => x.BusinessRuleNodeId)
    @Html.HiddenFor(x => x.DataJson)

    @Html.HiddenFor(x => x.BreMasterTableMetadataId)
    @Html.HiddenFor(x => x.BusinessRuleSource)
    @Html.HiddenFor(x => x.ParentId)
    @Html.HiddenFor(x => x.DataAction)
    @Html.HiddenFor(x => x.Condition)
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.RuleId)
    @Html.HiddenFor(x => x.Field)
    @*@Html.HiddenFor(x => x.FieldId)*@
    @Html.HiddenFor(x => x.Value)
    @Html.HiddenFor(x => x.ValueId)
    @Html.HiddenFor(x => x.FieldSourceType)
    @Html.HiddenFor(x => x.BusinessRuleType)
    @Html.HiddenFor(x => x.ValueSourceType)
    @Html.HiddenFor(x => x.TemplateId)
    @Html.HiddenFor(x => x.ParentFieldId)
    @Html.HiddenFor(x => x.ParentValueId)
    @Html.HiddenFor(x => x.DecisionScriptComponentId)
    @Html.HiddenFor(x => x.FieldDataType)
    @Html.HiddenFor(x => x.FieldDataType)
    @Html.HiddenFor(x => x.ReferenceId)
</form>
<script>
    var frm = null;
    $(document).ready(function () {
        var uiJson =@Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model.UIJson));
        var dataJson = $("#DataJson").val();
        var formio = document.getElementById('formio-container');
        Formio.createForm(formio, JSON.parse(uiJson)).then(function (form) {
            form.submission = { data: JSON.parse(dataJson) };
            frm = form;
        })
          });
     var onAjaxSuccess = function (res) {
         if (res.success) {
             ShowNotification("Saved Successfully", "success");
            if ($("#DecisionScriptComponentId").val() != null && $("#DecisionScriptComponentId").val() != undefined && $("#DecisionScriptComponentId").val() != '') {
                var win = GetMainWindow();
                win.CloseWindow({ MethodName: "reloadtreeview" });
            }
            else
            {

                var win = GetMainWindow();
                win.CloseWindow({ MethodName:"reloadtreeview"});
                return false;
            }

        }
        else {
            showError(res.error);
        }
    };


    function OnSubmitLogic() {

        $("#DataJson").val(JSON.stringify(frm.submission.data, null, 4));
        return true;
    }


    function getInputTree() {
        $("#inputtreeview").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/Bre/Bre/BreInputDataFancyTree?templateId=@Model.TemplateId",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/Bre/Bre/BreInputDataFancyTree",
                    data: { id: node.key, templateId: '@Model.TemplateId' }
                }

            },
            select: function (event, data) {

                var dataItem = data.node.data;
                $("#FieldId").val(data.node.key);
                $("#Field").val(data.node.title);
                $("#ParentFieldId").val(data.node.parent.key);
                $("#FieldDataType").val(dataItem.FieldDataType);
            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                var node = data.node;
                node.renderTitle();


            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {

                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });
    }

    function getValueInputtreeviewTree() {
        $("#ValueInputtreeview").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/Bre/Bre/BreInputDataFancyTree?templateId=@Model.TemplateId",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/Bre/Bre/BreInputDataFancyTree",
                    data: { id: node.key, templateId: '@Model.TemplateId' }
                }

            },
            select: function (event, data) {

                var dataItem = data.node.data;
                if (dataItem.node.key == $("#ValueId").val()) {
                    $("#ParentValueId").val(ata.node.parent.key);
                    $("#ValueDataType").val(dataItem.FieldDataType);
                //    node.set("checked", true);
                }
            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                var node = data.node;
                node.renderTitle();


            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {

                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });
    }


    function getMasterInputTree() {
        $("#mastertreeview").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/Bre/Bre/BreMasterFancyTreeData?ruleId=@Model.RuleId",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/Bre/Bre/BreMasterFancyTreeData",
                    data: { id: node.key, ruleId: '@Model.RuleId' }
                }

            },
            select: function (event, data) {

                var dataItem = data.node.data;
                $("#FieldId").val(data.node.key);
                $("#Field").val(data.node.title);
                $("#ParentFieldId").val(data.node.parent.key);
                $("#FieldDataType").val(dataItem.FieldDataType);
            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                var node = data.node;
                node.renderTitle();


            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {

                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });
    }

    function getValueMastertreeviewTree() {
         $("#ValueMastertreeview").fancytree({
            checkbox: true,
            source: $.ajax({
                url: "/Bre/Bre/BreMasterFancyTreeData?ruleId=@Model.RuleId",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/Bre/Bre/BreMasterFancyTreeData",
                    data: { id: node.key, ruleId: '@Model.RuleId' }
                }

            },
            select: function (event, data) {

                var dataItem = data.node.data;
                //$("#FieldId").val(data.node.key);
                //$("#Field").val(data.node.title);
                //$("#ParentFieldId").val(data.node.parent.key);
                //$("#FieldDataType").val(data.node.data.FieldDataType);

                $("#ValueId").val(data.node.key);
                $("#Value").val(data.node.title);
                $("#ParentValueId").val(data.node.parent.title);
                $("#ValueDataType").val(data.node.data.FieldDataType);
            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                var node = data.node;
                node.renderTitle();


            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {

                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });
    }




    function change() {

        var type = this.dataItem();
        $("Field").val(type.Code);
        @*if (type == "@BreMetadataTypeEnum.InputData") {
            $("#inputdiv").show();
            $("#constdiv").hide().prop('required', false);
            $("#masterdModelv").hide();
            //$("#FieldSourceType").val("InputData");
          $("#Field").val("");

        }
        else if (type == "@BreMetadataTypeEnum.MasterData") {
            $("#inputdiv").hide();
            $("#constdiv").hide().prop('required', false);
            $("#masterdiv").show();
           // $("#FieldSourceType").val("MasterModelata");
            $("#Field").val("");
        }
        else {
            $("#Field").val("");
            $("#inputdiv").hide();
            $("#constdiv").show();
            $("#masterdiv").hide();
          //  $("#FieldSourceType").val("Constant");
            $("#FieldId").val("");
        }*@
    }

    function OnInputTreeViewBound(e) {
        var rootNodes = $("#inputtreeview").data("kendoTreeView").dataSource.data();
        traverse(rootNodes, function (node) {
            if (node.id == $("#FieldId").val()) {
                $("#ParentFieldId").val(node.ParentId);
                $("#FieldDataType").val(node.DataType);
                node.set("checked", true);
            }
        });
    }
    function OnValueInputTreeViewBound(e) {
        var rootNodes = $("#ValueInputtreeview").data("kendoTreeView").dataSource.data();
        traverse(rootNodes, function (node) {
            if (node.id == $("#ValueId").val()) {
                $("#ParentValueId").val(node.ParentId);
                $("#ValueDataType").val(node.DataType);
                node.set("checked", true);
            }
        });
    }
    function OnMasterTreeViewBound(e) {
        var rootNodes = $("#mastertreeview").data("kendoTreeView").dataSource.data();
        traverse(rootNodes, function (node) {
            if (node.id == $("#FieldId").val()) {
                $("#ParentFieldId").val(node.ParentId);
                $("#FieldDataType").val(node.DataType);
                node.set("checked", true);
            }
        });
    }
    function OnValueMasterTreeViewBound(e) {
        var rootNodes = $("#ValueMastertreeview").data("kendoTreeView").dataSource.data();
        traverse(rootNodes, function (node) {
            if (node.id == $("#ValueId").val()) {
                $("#ParentValueId").val(node.ParentId);
                $("#ValueDataType").val(node.DataType);
                node.set("checked", true);
            }
        });
    }

    function Valuechange() {
        var type = this.text();
        if (type == "@BreMetadataTypeEnum.InputData") {
            $("#valueinputdiv").show();
            $("#valueconstdiv").hide().prop('required', false);
            $("#valuemasterdiv").hide();
            //$("#ValueSourceType").val("InputData");
            $("#Value").val("");
        }
        else if (type == "@BreMetadataTypeEnum.MasterData") {
            $("#valueinputdiv").hide();
            $("#valueconstdiv").hide().prop('required', false);
            $("#valuemasterdiv").show();
            //$("#ValueSourceType").val("MasterData");
            $("#Value").val("");
        }
        else {
            $("#Value").val("");
            $("#valueinputdiv").hide();
            $("#valueconstdiv").show();
            $("#valuemasterdiv").hide();
           // $("#ValueSourceType").val("Constant");
            $("#ValueId").val("");
        }
    }


    //$('input[type=radio][name=ValueSourceType]').change(function () {
    //    if ($('input[name=ValueSourceType]:checked').val() == "InputData") {
    //        $("#valueinputdiv").show();
    //        $("#valueconstdiv").hide().prop('required', false);
    //        $("#valuemasterdiv").hide();
    //        $("#ValueSourceType").val("InputData");
    //        $("#Value").val("");
    //    }
    //    else if ($('input[name=ValueSourceType]:checked').val() == "Master") {
    //        $("#valueinputdiv").hide();
    //        $("#valueconstdiv").hide().prop('required', false);
    //        $("#valuemasterdiv").show();
    //        $("#ValueSourceType").val("MasterData");
    //        $("#Value").val("");
    //    }
    //    else {
    //        $("#valueinputdiv").hide();
    //        $("#valueconstdiv").show();
    //        $("#valuemasterdiv").hide();
    //        $("#ValueSourceType").val("Constant");
    //        $("#ValueId").val("");
    //    }
    //});


    function onCheck(e) {

        var dataItem = this.dataItem(e.node);
        $("#FieldId").val(dataItem.id);
        $("#Field").val(dataItem.Name);
        $("#ParentFieldId").val(dataItem.ParentId);
        $("#FieldDataType").val(dataItem.FieldDataType);
        var rootNodes = $("#inputtreeview").getKendoTreeView().dataSource.data();
        traverse(rootNodes, function (node) {
            if (node != dataItem) {
                node.set("checked", false);
            }
        });
    }
    function onMasterCheck(e) {
        var dataItem = this.dataItem(e.node);
        $("#FieldId").val(dataItem.id);
        $("#Field").val(dataItem.Name);
        $("#ParentFieldId").val(dataItem.ParentId);
        $("#FieldDataType").val(dataItem.FieldDataType);
        var rootNodes = $("#mastertreeview").getKendoTreeView().dataSource.data();
        traverse(rootNodes, function (node) {
            if (node != dataItem) {
                node.set("checked", false);
            }
        });
    }
    function onValueInputCheck(e) {

        var dataItem = this.dataItem(e.node);
        $("#ValueId").val(dataItem.id);
        $("#Value").val(dataItem.Name);
        $("#ParentValueId").val(dataItem.ParentId);
        $("#ValueDataType").val(dataItem.FieldDataType);
        var rootNodes = $("#ValueInputtreeview").getKendoTreeView().dataSource.data();
        traverse(rootNodes, function (node) {
            if (node != dataItem) {
                node.set("checked", false);
            }
        });
    }
    function onValueMasterCheck(e) {
        var dataItem = this.dataItem(e.node);
        $("#ValueId").val(dataItem.id);
        $("#Value").val(dataItem.Name);
        $("#ParentValueId").val(dataItem.ParentName);
        $("#ValueDataType").val(dataItem.FieldDataType);
        var rootNodes = $("#ValueMastertreeview").getKendoTreeView().dataSource.data();
        traverse(rootNodes, function (node) {
            if (node != dataItem) {
                node.set("checked", false);
            }
        });
    }
    function traverse(nodes, callback) {
        for (var i = 0; i < nodes.length; i++) {
            var node = nodes[i];
            var children = node.hasChildren && node.children.data();
            callback(node);
            if (children) {
                traverse(children, callback);
            }
        }
    }
</script>