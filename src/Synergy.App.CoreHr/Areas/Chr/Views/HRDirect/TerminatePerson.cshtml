@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.HRDirectController> Resource
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@using Kendo.Mvc.UI;
@inject IUserContext _userContext;
@model TerminatePersonViewModel
@{
    ViewData["Title"] = @Resource["TerminatePerson"];
    Layout = null;
}

<style>
    #introdisplay {
        color: darkblue;
    }

    .tree-item-status {
        cursor: pointer;
    }

    .left {
        min-width: 300px;
        max-width: 600px;
    }

    .splitter-container {
        height: 90vh !important;
        width: 100%;
    }

    .treeview .k-in {
        width: 100% !important;
    }
    /*Portal Start*/
    .sidenav {
        height: 100%; /* 100% Full-height */
        width: 0; /* 0 width - change this with JavaScript */
        position: fixed; /* Stay in place */
        z-index: 100; /* Stay on top */
        top: 0; /* Stay at the top */
        right: 0;
        background-color: #fff; /* Black*/
        border-left: 1px solid silver;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 30px; /* Place content 60px from the top */
        transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    }



        /* Position and style the close button (top right corner) */
        .sidenav .closebtn {
            position: absolute;
            top: 0;
            right: 15px;
            font-size: 30px;
            font-weight: bold;
            margin-left: 20px;
            color: gray;
            border: none;
            text-decoration: none;
        }

            .sidenav .closebtn:hover {
                color: red;
            }

    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }

    #portal-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #overlay {
        position: fixed;
        background: rgba(0,0,0,.5);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
        width: 100%;
        height: 100%;
        z-index: 99;
        right: 100%;
        top: 0;
        /*  transition: right .5s ease;*/
    }

    .overlay {
        right: 0 !important;
        /* transition: right .5s ease !important;*/
    }

    .cms-panel-header-name {
        font-size: 16px;
        font-weight: 700;
        padding: 0 10px;
        width: 80%;
    }
    /*Portal End*/
    .drp-user-text {
        font-size: 12px;
        /* color: gray;*/
    }

    .drp-user-name {
        font-size: 14px;
    }
</style>
<style>
    #SwitchToUserId-list .k-item {
        width: 100%;
        background-color: #fff;
        padding-top: 3px;
        padding-bottom: 3px;
        border-bottom: 1px solid #f2f2f2;
        border-collapse: collapse;
    }

        #SwitchToUserId-list .k-item:hover {
            background-color: rgb(182,189,202);
        }

    #SwitchToUserId-list .k-state-selected, #SwitchToUserId-list .k-state-selected:hover {
        background-color: #1984c8;
        border-color: #1984c8;
    }

    .drp-user .k-dropdown-wrap, .drp-user .k-dropdown-wrap .k-input {
        height: 40px;
    }

    .drp-user-photo {
        width: 72px;
        height: 72px;
        border: 1px solid silver;
        border-radius: 72px;
    }

    .drp-user-value-photo {
        width: 32px;
        height: 32px;
        border: 1px solid silver;
        border-radius: 32px;
    }

    .drp-user-name {
        color: #193c4b;
        font-size: 20px;
    }

    .drp-user-text {
        color: #193c4b;
        font-size: 12px;
        line-height: 18px;
    }

    .drp-small-icon {
        padding-left: 5px;
    }
</style>

<script>

    $(document).ready(function () {

        $("#PersonTerminateDate").kendoDatePicker({ value:'@Model.PersonTerminateDate' });

        @*$("#PersonId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CHR/HRDirect/GetPersonList",
                    }
                }
            }
        });*@
          $("#PersonId").kendoDropDownList({

              dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "Select",
           

            virtual: {
                itemHeight: 26,
                valueMapper: function (options) {
                    $.ajax({

                        url: "/CHR/HRDirect/GetPersonValueMapper",
                        type: "GET",
                        dataType: "json",
                        data: convertValues(options.value),
                        success: function (data) {
                            options.success(data);
                        }
                    })
                }
            },
            height: 260,
            dataSource: {
                type: "json",
                transport: {
                    read: function (options) {

                        console.log(options.data)
                        $.ajax({
                            url: "/CHR/HRDirect/GetPersonVirtualData",

                                        dataType: 'json',
                                        type: 'GET',
                                        data: ConvertOptions(options.data),
                                        success: function (result) {
                                            options.success(result);
                                        }
                                    })
                                }
                            },

                schema: {
                    model: {
                        fields: {
                            Id: { type: "string" },
                            Name: { type: "string" }
                        }
                    },
                    data: "Data",
                    total: "Total"
                },
                pageSize: 40,
                serverPaging: true,
                serverFiltering: true,

            }
        });
        $("#ProposedUserHierarchyReplacement").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            template: '<div class="row no-gutter pb-1 pt-1">'+
                '<div style="width:80px;">'+
            '#if(data.PhotoId != null)'+
        '{# <img class="avatar-drp-profile" src="/Cms/document/getimagemongo?id=#:data.PhotoId#" /> # }'+
                      'else'+
        '{# <img class="avatar-drp-profile" style="background-color:gray;" src="/images/profile.jpg" /># }#'+
                     '</div>'+
                '<div style = "width:460px;">'+
                '<span>#: Name#</span> '+
                    '#if(data.GradeName != null) { # <br /> <span class="drp-user-text" title="Grade">#:GradeName#</span> # } #'+
    '#if(data.Email != null) { # <span style = "float:right;" class= "drp-user-text" title="Email" >#: Email# <i class= "fa fas fa-envelope" style="font-size:12px" ></i></span > # } #'+
                    '#if(data.JobName != null) { # <br/> <span class="drp-user-text" title="Job Title">#:JobName#</span>  # } #'+
                    '#if(data.PersonNo != null){ #<span style = "float:right;" class= "drp-user-text" title="Person No" >#: PersonNo# <i class= "fa fas fa-user" style="font-size:12px"></i></span ># } #'+
                    '#if(data.DepartmentName != null) { # <br/> <span class="drp-user-text" title="Organization">#:OrganizationName#</span># } #'+
     '#if(data.SponsorshipNo != null) { # <span style = "float:right;" title = "Iqamah No" class= "drp-user-text" >#: SponsorshipNo#</span> # } #'+
                   '#if(data.PersonStatus != null) { #<br/> <span class="drp-user-text" title="Person Status">#:PersonStatus#</span> # } #'+
                       '</div> '+
                '</div>',
            valueTemplate: '#if (data.Name!=null) {# <span style="margin-left:15px;">#: Name#</span> # } #',
            virtual: {
                itemHeight: 100,
                valueMapper: "UserValueMapper",
            },
            height: 300,
            dataSource: {
                serverFiltering: true,
                pageSize: 100,
                serverPaging: true,
                type:"aspnetmvc-ajax",
                transport: {
                    read: {
                        url: "/CHR/HRDirect/GetAssignToListVirtualData?assignToType="+'@AssignToTypeEnum.User',
                    }
                },
                schema: {
                    data: "Data",
                    total:"Total"
                },
            }
        });

        $("#ProposedTaskAssignee").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            template: '<div class="row no-gutter pb-1 pt-1">'+
                '<div style="width:80px;">'+
            '#if(data.PhotoId != null)'+
        '{# <img class="avatar-drp-profile" src="/Cms/document/getimagemongo?id=#:data.PhotoId#" /> # }'+
                      'else'+
        '{# <img class="avatar-drp-profile" style="background-color:gray;" src="/images/profile.jpg" /># }#'+
                     '</div>'+
                '<div style = "width:460px;">'+
                '<span>#: Name#</span> '+
                    '#if(data.GradeName != null) { # <br /> <span class="drp-user-text" title="Grade">#:GradeName#</span> # } #'+
    '#if(data.Email != null) { # <span style = "float:right;" class= "drp-user-text" title="Email" >#: Email# <i class= "fa fas fa-envelope" style="font-size:12px" ></i></span > # } #'+
                    '#if(data.JobName != null) { # <br/> <span class="drp-user-text" title="Job Title">#:JobName#</span>  # } #'+
                    '#if(data.PersonNo != null){ #<span style = "float:right;" class= "drp-user-text" title="Person No" >#: PersonNo# <i class= "fa fas fa-user" style="font-size:12px"></i></span ># } #'+
                    '#if(data.DepartmentName != null) { # <br/> <span class="drp-user-text" title="Organization">#:OrganizationName#</span># } #'+
     '#if(data.SponsorshipNo != null) { # <span style = "float:right;" title = "Iqamah No" class= "drp-user-text" >#: SponsorshipNo#</span> # } #'+
                   '#if(data.PersonStatus != null) { #<br/> <span class="drp-user-text" title="Person Status">#:PersonStatus#</span> # } #'+
                       '</div> '+
                '</div>',
            valueTemplate: '#if (data.Name!=null) {# <span style="margin-left:15px;">#: Name#</span> # } #',
            virtual: {
                itemHeight: 100,
                valueMapper: "TaskUserValueMapper",
            },
            height: 300,
            dataSource: {
                serverFiltering: true,
                pageSize: 100,
                serverPaging: true,
                type:"aspnetmvc-ajax",
                transport: {
                    read: {
                        url: "/CHR/HRDirect/GetAssignToListVirtualData?assignToType="+'@AssignToTypeEnum.User',
                    }
                },
                schema: {
                    data: "Data",
                    total:"Total"
                },
            }
        });

        $("#ProposedServiceOwner").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            template: '<div class="row no-gutter pb-1 pt-1">'+
                '<div style="width:80px;">'+
            '#if(data.PhotoId != null)'+
        '{# <img class="avatar-drp-profile" src="/Cms/document/getimagemongo?id=#:data.PhotoId#" /> # }'+
                      'else'+
        '{# <img class="avatar-drp-profile" style="background-color:gray;" src="/images/profile.jpg" /># }#'+
                     '</div>'+
                '<div style = "width:460px;">'+
                '<span>#: Name#</span> '+
                    '#if(data.GradeName != null) { # <br /> <span class="drp-user-text" title="Grade">#:GradeName#</span> # } #'+
    '#if(data.Email != null) { # <span style = "float:right;" class= "drp-user-text" title="Email" >#: Email# <i class= "fa fas fa-envelope" style="font-size:12px" ></i></span > # } #'+
                    '#if(data.JobName != null) { # <br/> <span class="drp-user-text" title="Job Title">#:JobName#</span>  # } #'+
                    '#if(data.PersonNo != null){ #<span style = "float:right;" class= "drp-user-text" title="Person No" >#: PersonNo# <i class= "fa fas fa-user" style="font-size:12px"></i></span ># } #'+
                    '#if(data.DepartmentName != null) { # <br/> <span class="drp-user-text" title="Organization">#:OrganizationName#</span># } #'+
     '#if(data.SponsorshipNo != null) { # <span style = "float:right;" title = "Iqamah No" class= "drp-user-text" >#: SponsorshipNo#</span> # } #'+
                   '#if(data.PersonStatus != null) { #<br/> <span class="drp-user-text" title="Person Status">#:PersonStatus#</span> # } #'+
                       '</div> '+
                '</div>',
            valueTemplate: '#if (data.Name!=null) {# <span style="margin-left:15px;">#: Name#</span> # } #',
            virtual: {
                itemHeight: 100,
                valueMapper: "ServiceUserValueMapper",
            },
            height: 300,
            dataSource: {
                serverFiltering: true,
                pageSize: 100,
                serverPaging: true,
                type:"aspnetmvc-ajax",
                transport: {
                    read: {
                        url: "/CHR/HRDirect/GetAssignToListVirtualData?assignToType="+'@AssignToTypeEnum.User',
                    }
                },
                schema: {
                    data: "Data",
                    total:"Total"
                },
            }
        });
    });
    function ConvertOptions(data) {
        if (data != null) {
            if (data['filter'] != null && data['filter'] != undefined && data['filter'].filters != null && data['filter'].filters != undefined && data['filter'].filters.length > 0) {
                filter = data['filter'].filters[0].value;
                data['filters'] = data['filter'].filters[0].value;
            }
            return data;
        }
    }
    function convertValues(value) {

        var data = {};
        data["value"] = value;
        data["filters"] = filter;
        return data;
    }
</script>

<form asp-controller="HRDirect" asp-action="UpdateTerminatePerson" class="form-horizontal"
      data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
      data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
      data-ajax="true" data-ajax-method="POST">
    <div id="validation-summary" class="text-danger" asp-validation-summary="All"></div>
    <div id="appWrapper">
        <div class="formHeader">
            <h4>
                @ViewBag.Title
            </h4>
        </div>

        <div class="row no-gutter hr-pad-top-15">
            <div class="form-group col-xs-12 col-lg-6">
                <div class="col-lg-2 label-div">
                    <span class="required">*</span>
                    @Resource["Person"]
                </div>

                <div class="col-lg-8">

                    @*@(Html.Kendo().DropDownListFor(model => model.PersonId)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetPersonList", "HrDirect",new { area="CHR"});
                            });
                        })
                        .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .Filter(FilterType.Contains)
                        .HtmlAttributes(new { @class = "hr-xx-large" }))*@

                    <input asp-for="PersonId" id="PersonId" class="hr-xx-large" />
                </div>
                <div class="col-lg-2">
                    @*@Html.Kendo().Button().Name("btnSearch").Content("Submit").HtmlAttributes(new { @class = "k-primary" })*@
                    <input type="button" value="@SharedResource["Submit"]" id="btnSearch" class="btn btn-sm btn-primary" />
                </div>
            </div>
            <div class="form-group col-xs-12 col-lg-6" style="background-color:lightgoldenrodyellow;">
                @Resource["PleasereassigntheUserhierarchy,Tasks,Servicebeforegoingtoterminatethepersononceyouterminatethepersonyoucan'treassign."]
            </div>
        </div>
        @if (Model.FullName != null)
        {
            <div id="personDiv">
                <div class="row no-gutter hr-pad-top-15 table table-bordered" style="padding-left:10px">
                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["FullName"]
                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.FullName, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["OrganizationName"]
                            @*@Html.LabelFor(m => m.OrganizationName, new { @class = "control-label" })*@
                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.OrganizationName, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["JobName"]
                            @*@Html.LabelFor(m => m.JobName, new { @class = "control-label" })*@
                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.JobName, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["PositionName"]
                            @*@Html.LabelFor(m => m.PositionName, new { @class = "control-label" })*@
                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.PositionName, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["GradeName"]
                            @*@Html.LabelFor(m => m.GradeName, new { @class = "control-label" })*@
                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.GradeName, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["UserStatus"]
                            @*@Html.LabelFor(m => m.UserStatus, new { @class = "control-label" })*@
                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.UserStatus, new { @class = "control-label" })
                        </div>
                    </div>
                    @*<div class="form-group col-xs-12 col-lg-6">
                            <div class="col-lg-6 label-div">
                                @Resource["PersonEffectiveStartDate"]

                                <span>:</span>
                            </div>
                            <div class="col-lg-6">
                                @Html.DisplayFor(m => m.PersonEffectiveStartDate, new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="form-group col-xs-12 col-lg-6">
                            <div class="col-lg-6 label-div">
                                @Resource["PersonEffectiveEndDate"]

                                <span>:</span>
                            </div>
                            <div class="col-lg-6">
                                @Html.DisplayFor(m => m.PersonEffectiveEndDate, new { @class = "control-label" })
                            </div>
                        </div>*@
                    @*<div class="form-group col-xs-12 col-lg-6">
                            <div class="col-lg-6 label-div">
                                @Resource["AssignmentEffectiveStartDate"]

                                <span>:</span>
                            </div>
                            <div class="col-lg-6">
                                @Html.DisplayFor(m => m.AssignmentEffectiveStartDate, new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="form-group col-xs-12 col-lg-6">
                            <div class="col-lg-6 label-div">
                                @Resource["AssignmentEffectiveEndDate"]

                                <span>:</span>
                            </div>
                            <div class="col-lg-6">
                                @Html.DisplayFor(m => m.AssignmentEffectiveEndDate, new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="form-group col-xs-12 col-lg-6">
                            <div class="col-lg-6 label-div">
                                @Resource["ContractEffectiveStartDate"]

                                <span>:</span>
                            </div>
                            <div class="col-lg-6">
                                @Html.DisplayFor(m => m.ContractEffectiveStartDate, new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="form-group col-xs-12 col-lg-6">
                            <div class="col-lg-6 label-div">
                                @Resource["ContractEffectiveEndDate"]

                                <span>:</span>
                            </div>
                            <div class="col-lg-6">
                                @Html.DisplayFor(m => m.ContractEffectiveEndDate, new { @class = "control-label" })
                            </div>
                        </div>*@

                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["PendingTaskCount"]

                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.PendingTaskCount, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["OwnedServiceCount"]

                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.OwnedServiceCount, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="form-group col-xs-12 col-lg-6">
                        <div class="col-lg-6 label-div">
                            @Resource["UserHierarchyDependentCount"]

                            <span>:</span>
                        </div>
                        <div class="col-lg-6">
                            @Html.DisplayFor(m => m.UserHierarchyDependentCount, new { @class = "control-label" })
                        </div>
                    </div>
                </div>

                <div class="form-group col-xs-12 col-lg-6">
                    <div class="col-sm-12 col-lg-3 label-div">
                        <span class="required">*</span>
                        @Resource["ProposedUserHierarchyReplacement"]
                        @*@Html.LabelFor(m => m.ProposedUserHierarchyReplacement, new { @class = "control-label" })*@

                    </div>

                    <script>
                            function UserValueMapper(options) {
                                $.ajax({
                                    url: "@Url.Action("GetAssignToValueMapper", "HRDirect", new { area = "CHR" })",
                                    data: {
                                        value: $("#ProposedUserId").val() || 0,
                                        assignToType: "User",
                                    },
                                    success: function (data) {
                                        options.success(data);
                                    }
                                });
                            }
                    </script>
                    <div class="col-sm-12 col-lg-9">
                        @*@(Html.Kendo().DropDownListFor(x => x.ProposedUserHierarchyReplacement)
                                                    .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                    .Filter(FilterType.Contains)
                                                    .DataTextField("Name")
                                                    .DataValueField("Id")
                                                    .Height(300)
                                                    .TemplateId("drp-person-template")
                                                    .ValueTemplateId("drp-user-value-template")
                                                    .HtmlAttributes(new { @class = "hr-xxl-large drp-user" })
                                                    .DataSource(source =>
                                                    {
                                                        source.Custom()
                                                            .ServerFiltering(true)
                                                            .ServerPaging(true)
                                                            .PageSize(100)
                                                            .Type("aspnetmvc-ajax")
                                                            .Transport(transport =>
                                                            {
                                                                transport.Read("GetAssignToListVirtualData", "HRDirect", new { area = "CHR", assignToType = AssignToTypeEnum.User });
                                                            })
                                                            .Schema(schema =>
                                                            {
                                                                schema.Data("Data")
                                                                .Total("Total");
                                                            });
                                                    })
                                                    .Virtual(v => v.ItemHeight(100).ValueMapper("UserValueMapper"))
                            )*@

                        <input asp-for="ProposedUserHierarchyReplacement" id="ProposedUserHierarchyReplacement" class="hr-xxl-large drp-user" />
                    </div>

                </div>

                <div class="form-group col-xs-12 col-lg-6">
                    <div class="col-lg-6 label-div">
                        <span class="required">*</span>
                        @Resource["PersonTerminateDate"]
                        @*@Html.LabelFor(model => model.PersonTerminateDate, new { @class = "control-label" })*@
                    </div>

                    <div class="col-lg-6">
                        @*@Html.Kendo().DatePickerFor(model => model.PersonTerminateDate).HtmlAttributes(new { @class = "hr-medium" })*@
                        <input asp-for="PersonTerminateDate" id="PersonTerminateDate" class="hr-medium" />
                    </div>

                </div>






                <div class="row no-gutter">

                    <div class="form-group col-xs-12 col-lg-12" style="text-align:right">
                        <div class="col-lg-12">
                            @*@Html.Kendo().Button().Name("btnCancel").Content(@SharedResource["Cancel"]).Icon("cancel").Events(x => x.Click("OnCancel")).HtmlAttributes(new { @type = "button" })*@
                            <button type="button" id="btnCancel" class="btn btn-light" onclick="OnCancel();" icon="cancel">@SharedResource["Cancel"]</button>

                            @*@Html.Kendo().Button().Name("btnSubmit").Content(@Resource["TerminateEmployee"]).Icon("check-outline").HtmlAttributes(new { @class = "k-primary" })*@
                            <input type="submit" class="btn btn-primary" id="btnSubmit" value="@Resource["TerminateEmployee"]" icon="check-outline" />
                        </div>
                    </div>
                </div>
            </div>
            <hr />
            <div>
                <div class="row no-gutter hr-pad-top-15">
                    <div class="form-group col-sm-6">
                        <div class="col-sm-12 col-lg-3 label-div">
                            <span class="required">*</span>
                            @Resource["ProposedTaskAssignee"]

                        </div>

                        <script>
                            function TaskUserValueMapper(options) {
                                $.ajax({
                                    url: "@Url.Action("GetAssignToValueMapper", "Task", new { area = "Nts" })",
                                    data: {
                                        value: $("#ProposedTaskAssignee").val() || 0,
                                        assignToType: "User",
                                    },
                                    success: function (data) {
                                        options.success(data);
                                    }
                                });
                            }
                        </script>
                        <div class="col-sm-12 col-lg-9">
                            @*@(Html.Kendo().DropDownListFor(x => x.ProposedTaskAssignee)
                                                                .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                                .Filter(FilterType.Contains)
                                                                .DataTextField("Name")
                                                                .DataValueField("Id")
                                                                .Height(300)
                                                                .TemplateId("drp-person-template")
                                                                .ValueTemplateId("drp-user-value-template")
                                                                .HtmlAttributes(new { @class = "hr-xxl-large drp-user" })
                                                                .DataSource(source =>
                                                                {
                                                                    source.Custom()
                                                                        .ServerFiltering(true)
                                                                        .ServerPaging(true)
                                                                        .PageSize(100)
                                                                        .Type("aspnetmvc-ajax")
                                                                        .Transport(transport =>
                                                                        {
                                                                            transport.Read("GetAssignToListVirtualData", "HRDirect", new { area = "CHR", assignToType = AssignToTypeEnum.User });
                                                                        })
                                                                        .Schema(schema =>
                                                                        {
                                                                            schema.Data("Data")
                                                                            .Total("Total");
                                                                        });
                                                                })
                                                                .Virtual(v => v.ItemHeight(100).ValueMapper("TaskUserValueMapper"))
                                )*@

                            <input asp-for="ProposedTaskAssignee" id="ProposedTaskAssignee" class="hr-xxl-large drp-user" />
                        </div>

                    </div>

                </div>
                <script>
                    $("#kgrdTask").jsGrid({
        width: "100%",
        height: "600px",

        inserting: false,
        editing: true,
        sorting: true,
        paging: true,
        autoload: true,
        pageSize: 14,
        pageButtonCount: 5,
        deleteConfirm: "Do you really want to delete client?",

        //data: clients,
        controller: {
            loadData: function (filter) {
                return $.ajax({
                    type: "GET",
                    url: "/cms/NtsTask/GetTaskByUser?userId=@Model.UserId",
                    data: filter,
                    dataType: "json"
                });
            },
            //insertItem: function (item) {
            //    return $.ajax({
            //        type: "POST",
            //        url: "/api/data",
            //        data: item,
            //        dataType: "json"
            //    });
            //},
            updateItem: function (item) {

            },

        },
        onItemEditing: function (e) {
            if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {

                e.grid.updateItem();
            }
        },
        fields: [
            { name: "Select", type: "checkbox", width: 60 },
            { name: "TaskNo",title:"@SharedResource["TaskNo"]", type: "text", width: 80, readOnly: true, editing: false},
            { name: "TaskSubject", title: "@SharedResource["TaskSubject"]", type: "text", width: 200, readOnly: true, editing: false },
            { name: "AssigneeDisplayName",title:"@Resource["AssigneeDisplayName"]", type: "text", width: 100, readOnly: true, editing: false},

            { name: "ServiceSLA",title:"@SharedResource["SLA"]", type: "text", width: 80, editing: false },
            { name: "TaskStatusName", title: "@Resource["TaskStatusName"]", type: "text", width: 80, editing: false},
            { name: "StartDate",title:"@SharedResource["StartDate"]", type: "date", width: 150, editing: false},
            { name: "DueDate",title:"@SharedResource["DueDate"]", type: "date", width: 150, editing: false},
            //{ type: "control" }

        ]
    });
                </script>
                <button type='button' class='btn btn-primary' onclick='OnTaskUpdate();'><i class='fa fas fa-plus'></i>&nbsp;@Resource["Changethetaskassignee"]</button>
                <div id="kgrdTask"></div>
                @*@(Html.Kendo().Grid<TaskViewModel>()
                                                         .Name("kgrdTask")
                                                         .Columns(columns =>
                                                         {
                                                             columns.Bound(x => x.Id).Width(75).ClientTemplate(@"<input class='checkbox' type='checkbox' />").ClientHeaderTemplate(@"<input class='checkboxAll' type='checkbox' />");
                                                             columns.Bound(c => c.TaskNo).Title(@SharedResource["TaskNo"]);
                                                             columns.Bound(c => c.TaskSubject).Title(@SharedResource["TaskSubject"]);
                                                             //columns.Bound(c => c.OwnerName);
                                                             columns.Bound(c => c.AssigneeDisplayName).Title(@Resource["AssigneeDisplayName"]).Width(250);
                                                             columns.Bound(c => c.ActualSLA).Title(@Resource["ActualSLA"]);
                                                             columns.Bound(c => c.TaskStatusName).Title(@Resource["TaskStatusName"]).Width(150);
                                                             columns.Bound(c => c.StartDate).Title(@SharedResource["StartDate"]).Format("{0:dd MMM yyyy}");
                                                             columns.Bound(c => c.DueDate).Title(@SharedResource["EndDate"]).Format("{0:dd MMM yyyy}");

                                                         })
                                                            .ToolBar(toolbar =>
                                                            {
                                                                toolbar.Custom().Text(@Resource["Changethetaskassignee"]).Name("btnAdd").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnTaskUpdate();" });


                                                            })
                                                            .Events(e => e.DataBound("OnDataBound2"))
                                                            .Resizable(resize => resize.Columns(true))
                                                            .Scrollable(scrollable => scrollable.Enabled(true).Height(300))
                                                            .Selectable(select => select.Enabled(false).Mode(GridSelectionMode.Multiple))

                                                            .Sortable(srt => srt.Enabled(false))

                                                            .Filterable()

                                                            .Pageable(pageable => pageable
                                                            .Refresh(true)
                                                            .PageSizes(new[] { 5, 10, 20, 50, 100, 200, 500 })
                                                            .ButtonCount(10))
                                                            .DataSource(dataSource => dataSource
                                                            .Ajax()
                                                            .Batch(true)
                                                            .PageSize(10)
                                                            .ServerOperation(false)
                                                           // .Events(events => events.Error("OnError"))
                                                            //.Events(events => events.RequestEnd("OnRequestEnd_TopLinePriceGrid"))
                                                            .Model(model =>
                                                            {
                                                                model.Id(p => p.Id);

                                                            })
                                                            // .Read("ReadOverrideApprovalList", "Attendance")
                                                            .Read(read => read.Action("GetTaskByUser", "NtsTask", new { area = "Cms", userId = Model.UserId }))

                                                        )

                    )*@
            </div>

            <div>
                <div class="row no-gutter hr-pad-top-15">
                    <div class="form-group col-sm-6">
                        <div class="col-sm-12 col-lg-3 label-div">
                            <span class="required">*</span>
                            @Resource["ProposedServiceOwner"]
                            @*@Html.LabelFor(m => m.ProposedServiceOwner, new { @class = "control-label" })*@

                        </div>

                        <script>
                            function ServiceUserValueMapper(options) {
                                $.ajax({
                                    url: "@Url.Action("GetAssignToValueMapper", "HRDirect", new { area = "CHR" })",
                                    data: {
                                        value: $("#ProposedServiceOwner").val() || 0,
                                        assignToType: "User",
                                    },
                                    success: function (data) {
                                        options.success(data);
                                    }
                                });
                            }
                        </script>
                        <div class="col-sm-12 col-lg-9">
                            @*@(Html.Kendo().DropDownListFor(x => x.ProposedServiceOwner)
                                                                .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                                                .Filter(FilterType.Contains)
                                                                .DataTextField("Name")
                                                                .DataValueField("Id")
                                                                .Height(300)
                                                                .TemplateId("drp-person-template")
                                                                .ValueTemplateId("drp-user-value-template")
                                                                .HtmlAttributes(new { @class = "hr-xxl-large drp-user" })
                                                                .DataSource(source =>
                                                                {
                                                                    source.Custom()
                                                                        .ServerFiltering(true)
                                                                        .ServerPaging(true)
                                                                        .PageSize(100)
                                                                        .Type("aspnetmvc-ajax")
                                                                        .Transport(transport =>
                                                                        {
                                                                            transport.Read("GetAssignToListVirtualData", "HRDirect", new { area = "CHR", assignToType = AssignToTypeEnum.User });
                                                                        })
                                                                        .Schema(schema =>
                                                                        {
                                                                            schema.Data("Data")
                                                                            .Total("Total");
                                                                        });
                                                                })
                                                                .Virtual(v => v.ItemHeight(100).ValueMapper("ServiceUserValueMapper"))
                                )*@

                            <input asp-for="ProposedServiceOwner" id="ProposedServiceOwner" class="hr-xxl-large drp-user" />
                        </div>

                    </div>

                </div>
                <script>
                    $("#kgrdService").jsGrid({
        width: "100%",
        height: "600px",

        inserting: false,
        editing: true,
        sorting: true,
        paging: true,
        autoload: true,
        pageSize: 14,
        pageButtonCount: 5,
        deleteConfirm: "Do you really want to delete client?",

        //data: clients,
        controller: {
            loadData: function (filter) {
                return $.ajax({
                    type: "GET",
                    url: "/cms/NtsService/GetServiceByUser?userId=@Model.UserId",
                    data: filter,
                    dataType: "json"
                });
            },
            //insertItem: function (item) {
            //    return $.ajax({
            //        type: "POST",
            //        url: "/api/data",
            //        data: item,
            //        dataType: "json"
            //    });
            //},
            updateItem: function (item) {

            },

        },
        onItemEditing: function (e) {
            if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {

                e.grid.updateItem();
            }
        },
        fields: [
            { name: "Select", type: "checkbox", width: 40 },
            { name: "ServiceNo",title:"@SharedResource["ServiceNo"]", type: "text", width: 80, readOnly: true, editing: false},
            { name: "ServiceSubject",title:"@SharedResource["ServiceSubject"]", type: "text", width: 200, readOnly: true, editing: false},
            { name: "OwnerDisplayName",title:"@Resource["OwnerDisplayName"]", type: "text", width: 100, editing: false},
            { name: "ServiceSLA", title: "@SharedResource["SLA"]", type: "text", width: 80, editing: false },
            { name: "ServiceStatusName", title: "@Resource["ServiceStatusName"]", type: "text", width: 80, editing: false},
            { name: "StartDate",title:"@SharedResource["StartDate"]", type: "date", width: 150, editing: false},
            { name: "DueDate",title:"@SharedResource["DueDate"]", type: "date", width: 150, editing: false},
            //{ type: "control" }

        ]
    });
                </script>
                <button type='button' class='btn btn-primary' onclick='OnServiceUpdate();'><i class='fa fas fa-plus'></i>&nbsp;@Resource["Changetheserviceowner"]</button>
                <div id="kgrdService"></div>
                @*@(Html.Kendo().Grid<ServiceViewModel>()
                                                         .Name("kgrdService")
                                                         .Columns(columns =>
                                                         {
                                                             columns.Bound(x => x.Id).Width(75).ClientTemplate(@"<input class='checkbox1' type='checkbox' />").ClientHeaderTemplate(@"<input class='checkboxAll1' type='checkbox' />");
                                                             columns.Bound(c => c.ServiceNo).Title(@SharedResource["ServiceNo"]);
                                                             columns.Bound(c => c.ServiceSubject).Title(@SharedResource["ServiceSubject"]);
                                                             //columns.Bound(c => c.OwnerName);
                                                             columns.Bound(c => c.OwnerDisplayName).Title(@Resource["OwnerDisplayName"]).Width(250);
                                                             columns.Bound(c => c.ServiceSLA).Title(@SharedResource["SLA"]);
                                                             columns.Bound(c => c.ServiceStatusName).Title(@Resource["ServiceStatusName"]).Width(150);
                                                             columns.Bound(c => c.StartDate).Title(@SharedResource["StartDate"]).Format("{0:dd MMM yyyy}");
                                                             columns.Bound(c => c.DueDate).Title(@SharedResource["DueDate"]).Format("{0:dd MMM yyyy}");

                                                         })
                                                            .ToolBar(toolbar =>
                                                            {
                                                                toolbar.Custom().Text(@Resource["Changetheserviceowner"]).Name("btnAdd").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnServiceUpdate();" });


                                                            })
                                                            .Events(e => e.DataBound("OnDataBound3"))
                                                            .Resizable(resize => resize.Columns(true))
                                                            .Scrollable(scrollable => scrollable.Enabled(true).Height(300))
                                                            .Selectable(select => select.Enabled(false).Mode(GridSelectionMode.Multiple))

                                                            .Sortable(srt => srt.Enabled(false))

                                                            .Filterable()

                                                            .Pageable(pageable => pageable
                                                            .Refresh(true)
                                                            .PageSizes(new[] { 5, 10, 20, 50, 100, 200, 500 })
                                                            .ButtonCount(10))
                                                            .DataSource(dataSource => dataSource
                                                            .Ajax()
                                                            .Batch(true)
                                                            .PageSize(10)
                                                            .ServerOperation(false)

                                                           // .Events(events => events.Error("OnError"))
                                                            //.Events(events => events.RequestEnd("OnRequestEnd_TopLinePriceGrid"))
                                                            .Model(model =>
                                                            {
                                                                model.Id(p => p.Id);

                                                            })

                                                            .Read(read => read.Action("GetServiceByUser", "NtsService", new { area = "Cms", userId = Model.UserId }))

                                                        )

                    )*@
            </div>
        }
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.PersonId)
        @*@Html.HiddenFor(x => x.ReturnUrl)*@

    </div>
</form>
<script type="text/javascript">
      var onAjaxSuccess = function (res) {

        if (res.success) {

         }
        else {
            showError(res.errors);
        }
       // HideLoader($('.page-content'));
    };
    function Details() {
        var personId = $('#PersonId').val();
        //var url = "/CHR/HRDirect/TerminatePerson?personId=" + personId;
        var portalId = $('#GlobalPortalId').val();
        var customurl = encodeURIComponent('personId=' + personId);
        var url = '/Cms/Page?PageName=TerminatePerson&portalId=' + portalId + '&customUrl=' + customurl;
        ///$(".toggle-nav").trigger("click");
        LoadCmsPartialView(url, 'Custom');
    }
    $(function () {
        $(".checkboxAll").bind("change", function (e) {

            if ($(this).attr('checked')) {
                $('.checkboxAll').removeAttr('checked');
                $('.checkbox').prop('checked', false);
                $(".checkbox").closest("td").removeClass("k-state-selected");
            } else {
                $('.checkboxAll').attr('checked', 'checked');
                $('.checkbox').prop('checked', true);
                $(".checkbox").closest("td").addClass("k-state-selected");
            }
        });
        $(".checkboxAll1").bind("change", function (e) {

            if ($(this).attr('checked')) {
                $('.checkboxAll1').removeAttr('checked');
                $('.checkbox1').prop('checked', false);
                $(".checkbox1").closest("td").removeClass("k-state-selected");
            } else {
                $('.checkboxAll1').attr('checked', 'checked');
                $('.checkbox1').prop('checked', true);
                $(".checkbox1").closest("td").addClass("k-state-selected");
            }
        });
    })
    function OnRequestEnd_TopLinePriceGrid(e) {
        if (e.type === "update") {
            var grid = $('#kgrdTask').data('kendoGrid');
            grid.dataSource.read();
        }
    }
    function OnSuccess(response) {

        if (response.success) {
            kendo.alert("@Resource["EmployeeTerminatedSuccessfully"]");
            window.location.href = "/Hrs/Person/TerminatePerson";
        }
        else {
            ShowErrors(response.errors);
        }
    }
    function OnRowSelection(element) {

        $('input.checkbox[type=checkbox]').each(function (e) {
            if (this.checked) {
                $(this).closest("td").addClass("k-state-selected");
            }
        });
        var isChecked = $(element).prop('checked');
        if (isChecked) {
            $(element).prop('checked', true);
            $(element).closest("td").addClass("k-state-selected");
        }
        else {
            $(element).prop('checked', false);
            $(element).closest("td").removeClass("k-state-selected");
        }
        var numChkBoxes = $('#kgrdTask input[type=checkbox][class=checkbox]').length;
        var numChkBoxesChecked = $('#kgrdTask tbody input:checkbox:checked').length;
        if (numChkBoxes == numChkBoxesChecked && numChkBoxes > 0) {
            $('.checkboxAll').prop('checked', true);
        }
        else {

            $('.checkboxAll').prop('checked', false);
        }
    }
    function OnDataBound2(arg) {
        $(".checkbox").bind("change", function (e) {
            OnRowSelection(e.target);
        });

    }
    function OnDataBound3(arg) {
        $(".checkbox1").bind("change", function (e) {
            OnRowSelection1(e.target);
        });

    }
    function OnRowSelection(element) {

        $('input.checkbox[type=checkbox]').each(function (e) {
            if (this.checked) {
                $(this).closest("td").addClass("k-state-selected");
            }
        });
        var isChecked = $(element).prop('checked');
        if (isChecked) {
            $(element).prop('checked', true);
            $(element).closest("td").addClass("k-state-selected");
        }
        else {
            $(element).prop('checked', false);
            $(element).closest("td").removeClass("k-state-selected");
        }
        var numChkBoxes = $('#kgrdService input[type=checkbox][class=checkbox1]').length;
        var numChkBoxesChecked = $('#kgrdService tbody input:checkbox:checked').length;
        if (numChkBoxes == numChkBoxesChecked && numChkBoxes > 0) {
            $('.checkboxAll1').prop('checked', true);
        }
        else {

            $('.checkboxAll1').prop('checked', false);
        }
    }
    function OnCancel(e) {
        window.location.href = "/hrs/Person/TerminatePerson";
        return true;
    }
     var showError = function (error) {
      
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")


    }

    function OnTaskUpdate() {

        var tasks = '';
        var assign = $("#ProposedTaskAssignee").val();
       // var grid = $("#kgrdTask").data("kendoGrid");
        //grid.tbody.find("input:checked").closest("tr").each(function (index) {
        //    tasks = tasks + grid.dataItem(this).Id + ',';
       // });
        var grid = $("#kgrdTask").data("JSGrid");
        grid.updateItem();
        for (var i = 0; i < grid.data.length; i++) {
            if (grid.data[i].Select == true) {
                tasks = tasks + grid.data[i].Id + ',';

            }

        }
        if (tasks == '' || tasks == ',') {
            kendo.alert("@Resource["Pleaseselectatleastonetaskfromthegrid"]");
        }
        else if (assign == '') {
            kendo.alert("@Resource["PleasechoosetheProposedTaskAssignee"]");
        }
        else {
            $.ajax({
                type: "POST",
                url: "/cms/NtsTask/ReAssignTerminatedEmployeeTasks",
                data: { 'tasks': tasks, 'userId': assign },
                success: function (data) {
                    var grid = $('#kgrdTask').data('kendoGrid');
                    grid.dataSource.read();
                },
                dataType: "json",
            });
        }
    }
    function OnServiceUpdate() {

        var tasks = '';
        var assign = $("#ProposedServiceOwner").val();
        var grid = $("#kgrdService").data("JSGrid");
        grid.updateItem();
        for (var i = 0; i < grid.data.length; i++) {
            if (grid.data[i].Select == true) {
                tasks = tasks + grid.data[i].Id + ',';

            }

        }
        //var grid = $("#kgrdService").data("kendoGrid");
        //grid.tbody.find("input:checked").closest("tr").each(function (index) {
        //    tasks = tasks + grid.dataItem(this).Id + ',';
        //});

        if (tasks == '' || tasks == ',') {
            kendo.alert("@Resource["Pleaseselectatleastoneservicefromthegrid"]");
        }
        else if (assign == '') {
            kendo.alert("@Resource["PleasechoosetheProposedServiceOwner"]");
        }
        else {
            $.ajax({
                type: "POST",
                url: "/Cms/ReAssignTerminatedEmployeeServices",
                data: { 'services': tasks, 'userId': assign },
                success: function (data) {
                    var grid = $('#kgrdService').data('kendoGrid');
                    grid.dataSource.read();
                },
                dataType: "json",
            });
        }
    }
</script>
<script type="text/x-kendo-tmpl" id="drp-person-template">
        <div class="row no-gutter pb-1 pt-1">
                      <div @*class="col-2"*@ style="width: 80px;">
                      #if(data.PhotoId!=null)
                          {#<img class="avatar-drp-profile" src="/Cms/document/getimagemongo?id=#:data.PhotoId#"  /> #}
                      else
                          {#<img class="avatar-drp-profile" style="background-color:gray;" src="/images/profile.jpg" />#}#
                     </div>

                        <div style="width:460px;">
                          <span>#:Name#</span>


                    #if (data.GradeName!=null) {#  <br/><span class="drp-user-text" title="Grade">#:GradeName#</span> # } #
    #if (data.Email!=null) {# <span style="float:right;" class="drp-user-text" title="Email">#:Email# <i class='fa fas fa-envelope' style='font-size:12px'></i></span> # } #


                    #if (data.JobName!=null) {# <br/> <span class="drp-user-text" title="Job Title">#:JobName#</span>  # } #
                    #if (data.PersonNo!=null){#<span style="float:right;" class="drp-user-text"  title="Person No">#:PersonNo# <i class='fa fas fa-user' style='font-size:12px'></i></span># } #

                    #if (data.DepartmentName!=null) {# <br/> <span class="drp-user-text" title="Organization">#:OrganizationName#</span># } #
     #if (data.SponsorshipNo!=null) {# <span style="float:right;" title="Iqamah No" class="drp-user-text">#:SponsorshipNo#</span> # } #


                   #if (data.PersonStatus!=null) {#<br/> <span class="drp-user-text" title="Person Status">#:PersonStatus#</span> # } #

                       </div>

                </div>
</script>
<script type="text/x-kendo-tmpl" id="drp-user-value-template">
    @*<img class="avatar-myProfile" src="/user/profilephoto?id=#:data.PhotoId#"  />*@
    @*#if(data.PhotoId!=null){#
            <img class="avatar-myProfile" src="/user/profilephoto?id=#:data.PhotoId#" /> #}
            else{#
            <img class="avatar-myProfile" style="background-color:gray;" src="/images/profile.jpg" />#}#*@
            #if (data.Name!=null) {#
            <span style="margin-left:15px;">#:Name#</span> # } #
</script>


