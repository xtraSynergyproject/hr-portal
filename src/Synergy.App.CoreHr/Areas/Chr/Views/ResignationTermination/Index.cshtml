@using Synergy.App.DataModel
@using Synergy.App.ViewModel
@using Kendo.Mvc.UI
@using Synergy.App.Common


@model BusinessTripViewModel
@{
    ViewBag.Title = "Businesss Trip";
    //  Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    //Layout = null;
}

<style>
    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .date {
        margin-left: 1%;
        margin-right: 1%
    }

    .k-listview {
        border: none !important;
    }



    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    #banner {
        width: 100%;
        height: 140px;
        /* height: 160px;*/
        left: 389px;
        top: 157px;
        background: #2D9FCA;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 6px;
        font-family: roboto;
    }
</style>


<script>




    function OnService() {
        var portalId = $('#GlobalPortalId').val();
            //'8edc86b3-9934-46e3-95de-d76c816404b4';//;



        var url = '/Cms/Page?lo=Popup&cbm=OnAfterServiceCreate&source=Create&dataAction=Create&pageName=BusinessTrip&portalId=' + portalId /*+ '&prms=' + prms*/;
        //LoadCmsPartialView(url, 'Service', true, 1000, 600, 'Create Project');
        //return false;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Business Trip', Width: 1200, Height: 600 });
        return false;
    }




    function OnAfterServiceCreate(service) {

        $("#BusinessTripGridView").data("kendoGrid").dataSource.read();
    }

    function OnEmployeechange(e) {
        var dataItem = e.sender.dataItem();
        var id = dataItem.UserId;




        var Status = {
            Id: id,
        };
        $("#BusinessTripGridView").data("kendoGrid").dataSource.read(Status);





    }
</script>





@*<div id="banner" role="group" style="width:100%;color:#FFFFFF;background: #17a2b8;padding-left: 5px;">
           <div class="row" style="padding-top:10px;">

               <div class=" col-md-9">
                   <div style="font-size:.8em;padding-top:0px;">
                       select Employee

                       <div class="project-dropdown" id="dropdown" title="Task Template">

                           @(Html.Kendo().DropDownList()
                     .Name("ddlTemplate")

                           .DataTextField("EmployeeName")
                           .DataValueField("UserId")
                           .Filter(FilterType.Contains)
                           .OptionLabel("Select Employee")
                           .DataSource(source =>
                           {
                               source.Read(read =>
                               {
                                   read.Action("GetAllEmployee", "BusinessTrip", new { @area = "Cms"});
                               });
                           })
                           .Events(x => x.Change("OnEmployeechange"))
                           .HtmlAttributes(new { @class = "form-control" , @style="width:80%" })
                           )

                       </div>
                   </div>
               </div>
           </div>

        <div class="btn banner-item banner-item-date col-sm-2">&nbsp;</div>
    </div>*@


<div class="row">
    <div class="col-12">
        <button class="btn btn-filter-reset" onclick="OnService()" title="Reset Filter">Termnation Request</button>
        <button class="btn btn-filter-reset" onclick="OnService()" title="Reset Filter">Resignation</button>
        <div class="panel panel-primary">
            <div class="panel-heading"></div>
            <div class="panel-body">
                <script>
                            var columnDefs1 = [
                              
                                {
                                    field: "ServiceNo",
                                   
                                },
                                { field: "Subject" },
                                {
                                    field: "ResignationTerminationDate",
                                    cellRenderer: params => {

                                        var date = new Date(params.value);
                                        return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                                    }
                                },
                                {
                                    field: "LastWorkingDate",
                                    cellRenderer: params => {

                                        var date = new Date(params.value);
                                        return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
                                    }
                                },


                                {
                                    field: "ServiceStatus",
                                    headerNae: "Service Status"
                                },
                                {
                                    field: "ClearanceForm",
                                    headerNae: "Clearance Form"
                                },


                            ];

                            $(function () {

                                getDataBusinessTreeGrid();
                                $.contextMenu({
                                    selector: '#tree-menuBin',
                                    trigger: 'left',
                                    build: function ($trigger, e) {


                                        var id = $trigger.data('idvalue');

                                        var PageName = $trigger.data('PageName');

                                        //var portalName = $trigger.data('portal-name');

                                        switch (0) {
                                            case 0:
                                                return {
                                                    callback: function (key, options) {
                                                        switch (key) {
                                                            case 'edit':
                                                                OnEditListOfValue(id, PageName);
                                                                break;



                                                            default:
                                                        }
                                                    },
                                                    items: {
                                                        "edit": { name: "Edit", icon: "fas fa-edit" },



                                                    }
                                                };


                                        }
                                    }
                                });


                            });

                            function getDataBusinessTreeGrid() {
                                  document.getElementById("BusinessTripGridView").innerHTML = "";
        gridConfig(
        "BusinessTripGridView",
        "@Url.Action("GetGridDate", "BusinessTrip", new { @area = "CHR", Id=Model.Id})",
        columnDefs1,
        false,
        true,
        true,
        true,
        1,
        true,
        10);
        }


                </script>
                <div id="BusinessTripGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                @*@(Html.Kendo().Grid<ResignationTerminationViewModel>()
                                        .Name("BusinessTripGridView")
                                        .Columns(columns =>
                                        {
                                            //columns.Select().Width(75).HtmlAttributes(new { @class = "checkbox-align" }).HeaderHtmlAttributes(new { @class = "checkbox-align" });
                                            columns.Bound(p => p.ServiceNo).Title("Service No").Width(170);
                                            columns.Bound(p => p.Subject).Title("Subject").Width(170);
                                            columns.Bound(p => p.ResignationTerminationDate).Title("Resignation/Termination Date").Format("{0:dd MMM yyyy}").Width(170);
                                            columns.Bound(p => p.LastWorkingDate).Title("Last Working Date").Format("{0:dd MMM yyyy}").Width(170);
                                            columns.Bound(p => p.ServiceStatus).Title("Service Status").Format("{0:dd MMM yyyy}").Width(300);
                                            columns.Bound(p => p.ClearanceForm).Title("Clearance Form").Width(250);

                                        })
                                        .ToolBar(toolbar =>
                                        {
                                            //toolbar.Excel();
                                            //toolbar.Pdf();
                                            toolbar.Search();
                                        })
            //.Pdf(pdf=>pdf.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
            //.Excel(excel=>excel.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
            .ColumnMenu(col=>col.Filterable(false))
            .Height(700)
            .Editable()
            .Pageable()
            .Sortable()
            .Navigatable()
            .Resizable(r=>r.Columns(true))
            .Reorderable(r => r.Columns(true))
            .Groupable(g=>g.ShowFooter(false))
            .Filterable()
            .Scrollable()
            //.Events(events => events.DataBound("onDataBound"))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(20)
                .AutoSync(true)
                .ServerOperation(false)
                //.Events(events => events.Error("error_handler"))
                .Model(model =>
                {
                    model.Id(p => p.Id);

                })
                //.Group(group=>group.Add("Category.CategoryName", typeof(string), ListSortDirection.Descending))
                //.Create("DetailProducts_Create", "Grid")
                .Read("GetGridDate", "BusinessTrip", new { @area = "CHR", Id=Model.Id})
            //.Update("DetailProducts_Update", "Grid")
            //.Destroy("DetailProducts_Destroy", "Grid")
            )
        )*@
            </div>
        </div>
    </div>
</div>




