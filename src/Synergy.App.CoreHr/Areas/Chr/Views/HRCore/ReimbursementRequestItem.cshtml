@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Mandatory Deduction Element";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
<div>
    @*<h4>@ViewBag.Title</h4>*@
    <hr />
    <div class="row">
        <div class="col-12">
            <button type='button' class='btn btn-primary' onclick='OnCreate();'><i class='fa fas fa-plus'></i>&nbsp;Create ReimbursementRequest Type</button>
            <br /><br />
            <div id="kgrdMDE" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>
    </div>
</div>

<script>

    var columnDefs = [

        {
            headerName: "Actions",
            field: "Id",
            maxWidth: 140,

            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin13' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },

        {
            field: "ReimbursmentRequestId",
        },
        {
            field: "ItemDate",
            headerName: "Item Date",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();

            },
        },
        {
            field: "ItemDescription",
            headerName: "Item Description",
        },
        {
            field: "Amount",
        }

    ];

    $(function () {

        getData();


        $.contextMenu({
            selector: '#tree-menuBin13',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        EditElement(id);
                                        break;

                                    case 'delete':
                                        Delete(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },

                            }
                        };


                }
            }
        });


    });

    function getData() {
        document.getElementById("kgrdMDE").innerHTML = "";
        gridConfig(
            "kgrdMDE",
            "/CHR/HrCore/ReadReimbursementRequestItem?reimbursmentRequestId="+ '@ViewBag.ReimbursmentRequestId',
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script>
    function OnCreate() {
        
        var url = "/CHR/HrCore/ManageReimbursementRequestItem?reimbursmentRequestId=" + '@ViewBag.ReimbursmentRequestId';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Manage Reimbursement Request', Width: 600, Height: 600  });
        return false;

    }

    function Delete(id) {
       // e.preventDefault();
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var flag = confirm('Do you really want to delete the entry?');

        if (flag) {
            $.ajax({
                url: '@Url.Action("Delete", "MandatoryDeduction", new { @area="Pay"})?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        getData();
                     //   $("#kgrdMenuGroup").data("kendoGrid").dataSource.read();
                        kendo.alert("Details Deleted Successfully");
                    } else {
                        getData();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //
                    getData();
                }
            });
            return false;
        }
    }

    function EditElement(id) {
        var win = GetMainWindow();
        var url = "/CHR/HrCore/ManageReimbursementRequestItem?Id=" + id + "&reimbursmentRequestId" + '@ViewBag.ReimbursmentRequestId';
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Manage Reimbursement Request', Width: 600, Height: 600 });
        return false;
    }



</script>


