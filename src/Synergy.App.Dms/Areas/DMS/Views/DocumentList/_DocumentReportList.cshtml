@inject IStringLocalizer<CMS.UI.Web.Areas.DMS.Controllers.DocumentListController> Resource
@{
    
        ViewData["Title"] = "Workspace";
        Layout = "~/Areas/Core/Views/Shared/_PopupLayout.cshtml";
    }
    @using Synergy.App.ViewModel;
    @using Synergy.App.Common;
    @model DocumentListViewModel

    <script type="text/javascript">
        $(document).ready(function () {


        });
        function FilterGrid() {
            var search = {
                templateId: $("#TemplateId").val(),
                noteNo: $("#NoteNo").val(),
                documentId: $("#DocumentId").val(),
            };
            return search;
        }
    </script>

    <style>
            .attach {
                float: left;
                position: relative;
                width: 115px;
                height: 140px;
                margin: 0 5px;
                padding-bottom: 23px;
            }

                .attach:hover p {
                    width: 100px;
                    height: 40px;
                    line-height: 40px;
                }

                .attach:hover p {
                    visibility: visible;
                    position: absolute;
                    width: 115px;
                    height: 140px;
                    top: 0;
                    margin: 0;
                    padding: 0;
                    line-height: 140px;
                    vertical-align: middle;
                    text-align: center;
                    color: #fff;
                    background-color: rgba(0,0,0,.75);
                    transition: background .2s linear,color .2s linear;
                    -moz-transition: background .2s linear,color .2s linear;
                    -webkit-transition: background .2s linear,color .2s linear;
                    -o-transition: background .2s linear,color .2s linear;
                    border-radius: 3px;
                }

                .attach p {
                    visibility: hidden;
                }

            .attach-img-div {
                width: 115px;
                height: 140px;
                border-radius: 3px;
                background-color: #000;
                display: flex;
                align-items: center;
            }

            .k-grid-header th.k-header > .k-link {
                font-size: 1em;
                font-weight: bold;
                color: #ffffff;
            }

            .k-filter-row th, .k-grid-header th.k-header {
                overflow: hidden;
                border-style: solid;
                background-color: #315c7dbd;
                border-width: 0 0 1px 1px;
                padding: .3em .6em .4em .6em;
                /*font-weight: 600;*/
                white-space: nowrap;
                text-overflow: ellipsis;
                text-align: left;
                font-family: 'Titillium Web', sans-serif;
                text-transform: uppercase
            }
            /*.k-grid-toolbar{
            background-color: #afdceb;
        }*/
            .attach:hover p {
                /*visibility: visible;
            position: absolute;*/
                width: 100px;
                height: 40px;
                /*top: 0;
            margin: 0;
            padding: 0;*/
                line-height: 40px;
                /*vertical-align: middle;
            text-align: center;
            color: #fff;
            background-color: rgba(0,0,0,.75);*/
            }

            .RevisionColor {
                background-color: #f3b300bf;
                border-radius: 100px;
            }

            .k-grid tr td {
                border-bottom: 0.5px solid gray;
                border-right: 0.5px solid gray;
                font-size: 1.3em;
            }

            .k-grid tr th {
                border-right: 0.1px solid gray !important;
            }

            .k-grid-filter {
                padding-top: 24px;
            }

                .k-grid-filter .k-icon:before, .k-header .k-icon:before {
                    /*  text-indent: 0;*/
                    color: white;
                    padding-top: 24px;
                }


            .attach span {
                cursor: pointer;
            }

            .attach-icon {
                cursor: pointer;
                padding: 6px;
            }
    </style>
    <script>
                        var columnDefs = [
                            {
                                headerName: "DocumentNo",
                                field: "NoteNo",
                                cellRenderer: params => {

                                    return "<a style='cursor:pointer;color:blue;' href='javascript:ViewDocumentPopup(\"" + params.value + "\",\"" +params.data.TemplateCode+"\");'>" +
                                        "if (NoteNo!=null) { <span>"+params.data.NoteNo+"</span> }else { Draft }"
                                        + "</a>"


                                }
                            },
            @foreach(var column in Model.SelectedTableRows)
        {

            if (column != null && column.Name != null) {
                if (column.Name.ToLower().Contains("attachment"))
                    {
                   @:{field: '@column.Name', headerName: '@column.LabelName',cellRenderer: params => {

                        @:return "if(" + column.Name + "!='[]' && " + column.Name + "!=null){ <div class='attach' style='height:40px;width:100px;padding-bottom: 10px;'>" +
                        @:"<div class='attach-img-div' style='height:40px;width:100px'><img style='height:40px;width:80px' src='/cms/Document/GetSnapMongo?id=#=" + column.Name + "#' /></div>" +
                        @:// "<h3 title='" + column.LabelName + "'>" + column.LabelName + "</h3>"+
                        @:"<p><span onclick='ViewAttachment(\"" + column.Name + "\")' class='attach-icon' title='View'>" +
                        @:"<i class='fas fa-eye fa-lg'></i></span>" +
                        @:"<span onclick='onDownload(\"" + column.Name + "\")' class='attach-icon' title='Download'>" +
                        @:"<i class='fas fa-download fa-lg'></i></span></p>" +
                        @:"</div>}";
                        @:}},
                        

                        ;
            }
                else if (column.IsForeignKey) {
                    if (column.LabelName.Length > 35) {
                       @:{ field: '@column.Name'+'_Name', headerName: '@column.LabelName' },
                    }
                    else {

                             @:{ field: '@column.Name'+'_Name', headerName: '@column.LabelName' },
                    }

                }
                else {
                    if (column.LabelName.Length > 35) {
                        @:{ field: '@column.Name', headerName: '@column.LabelName' },
                    } else {
                         @:{ field: '@column.Name', headerName: '@column.LabelName' },
                    }

                }
            }
            else {
                if (column.LabelName.Length > 35) {
                    @:{ field: '@column.Name', headerName: '@column.LabelName' },
                }
                else {
                      @:{ field: '@column.Name', headerName: '@column.LabelName' },
                }

            }

        }
                           
                        ];
                        $(function () {
                            GetDatakgrdDMS1();                           
                        });

        function GetDatakgrdDMS1() {
            document.getElementById("kgrdDMS1").innerHTML = "";
            var param=FilterGrid();
            var p = 'templateId=' + param.templateId + '&noteNo=' + param.noteNo + '&documentId=' + param.documentId ;
                            gridConfig(
                                "kgrdDMS1",
                                "/DMS/DocumentList/ReadDocumentReportDynamicData?"+p,
                                columnDefs,
                                false,
                                true,
                                true,
                                true,
                                1,
                                true,
                                10);
                        }
    </script>
    <div id="appWrapper">
        <div class="hr-pad-10">
            <div id="kgrdDMS1" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            @*@(Html.Kendo().Grid<dynamic>
                            ().Name("kgrdDMS1")
                                .Columns(col =>
                                {
                                    col.Bound("NoteNo").Title(@Resource["DocumentNo"]).Width(150)
                                    .ClientTemplate("<a style='cursor:pointer;color:blue;' href='javascript:ViewDocumentPopup(\"#:NoteId#\",\"#:TemplateCode#\");'>" +
                                                     "# if (NoteNo!=null) {# <span>#=NoteNo#</span> #}else {# Draft #}#"
                                                     + "</a>").Locked(true);
                                    col.Bound("NoteSubject").Title(@Resource["DocumentName"]).Filterable(true).Width(200).Locked(true);

                                    foreach (var column in Model.SelectedTableRows)
                                    {

                                        if (column != null && column.Name != null)
                                        {
                                            if (column.Name.ToLower().Contains("attachment"))
                                            {
                                                col.Bound(column.Name).Title(column.LabelName).Width(300)
                                                .ClientTemplate("#if(" + column.Name + "!='[]' && " + column.Name + "!=null){# <div class='attach' style='height:40px;width:100px;padding-bottom: 10px;'>" +
                                                "<div class='attach-img-div' style='height:40px;width:100px'><img style='height:40px;width:80px' src='/cms/Document/GetSnapMongo?id=#=" + column.Name + "#' /></div>"+
                                                 // "<h3 title='" + column.LabelName + "'>" + column.LabelName + "</h3>"+
                                                 "<p><span onclick='ViewAttachment(\"#:" + column.Name + "#\")' class='attach-icon' title='View'>" +
                                                 "<i class='fas fa-eye fa-lg'></i></span>" +
                                                 "<span onclick='onDownload(\"#:" + column.Name + "#\")' class='attach-icon' title='Download'>" +
                                                 "<i class='fas fa-download fa-lg'></i></span></p>"+
                                                "</div>#}#")

                                                ;
                                            }
                                            else if (column.IsForeignKey)
                                            {
                                                if (column.LabelName.Length > 35)
                                                {
                                                    col.Bound(column.Name + "_Name").Title(column.LabelName).Width(330);
                                                }
                                                else
                                                {
                                                    col.Bound(column.Name + "_Name").Title(column.LabelName).Width(250);
                                                }

                                            }
                                            else
                                            {
                                                if (column.LabelName.Length > 35)
                                                {
                                                    col.Bound(column.Name).Title(column.LabelName).Width(330);
                                                }else
                                                {
                                                    col.Bound(column.Name).Title(column.LabelName).Width(250);
                                                }

                                            }
                                        }
                                        else
                                        {
                                            if (column.LabelName.Length > 35)
                                            {
                                                col.Bound(column.Name).Title(column.LabelName).Width(330);
                                            }
                                            else
                                            {
                                                col.Bound(column.Name).Title(column.LabelName).Width(250);
                                            }

                                        }

                                    }
                                })
                            .Resizable(resizable => resizable.Columns(true))
                            .Scrollable(scrollable => scrollable.Enabled(true).Height(320))
                            .Sortable(srt => srt.Enabled(true))
                            .ColumnMenu()
                            .Selectable(select => select.Enabled(false))
                            .Filterable(f => f.Extra(false)
                                .Operators(o => o.ForString(s => s.Clear()
                                .Contains("Contains")
                                //.IsEqualTo("Is equal to")
                            )))
                            .AutoBind(true)
                            .Pageable(pageable => pageable
                            .Refresh(true)
                            .PageSizes(true)
                            .ButtonCount(5))
                            .DataSource(
                            dataSource => dataSource
                            .Ajax()
                            .PageSize(10)

                            //.Events(events => events.Error("OnError"))
                            .Read(read => read.Action("ReadDocumentReportDynamicData", "DocumentList",new { @area = "DMS" }).Data("FilterGrid"))
                            //.Model(model => model.Id(p => p.DocumentId))
                            )

                            .HtmlAttributes(new {@style= "font-size: 12px" })
        )*@

            @Html.HiddenFor(model => model.TemplateId)
            @Html.HiddenFor(model => model.NoteNo)
            @Html.HiddenFor(model => model.DocumentId)
        </div>
    </div>

    <script type="text/javascript">
    function ViewDocumentPopup(Id, tempCode) {
        var portalId = window.parent.$('#GlobalPortalId').val();
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=View&dataAction=View&portalId=' + portalId + '&recordId=' + Id + '&templateCodes=' + tempCode;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(Resource["ViewDocument"])', Width: 1200, Height: 600 });
    }
    function OnView(id, wid) {

        window.parent.location.href = "/dms/document/DocumentView?parentId=" + id + "&workspaceId=" + wid;
    }
   
    function onDownload(id) {
        
        url = '/cms/Document/GetFileMongo?fileId=' + id;
        window.open(url, '_blank');
        return false;
    }

      function ViewAttachment(id)
      {
          
      
          var win = GetMainWindow();
          win.iframeOpenUrl = url;
          win.OpenWindow({ Title: '@Html.Raw(Resource["ViewAttachment"])', Width: 1200, Height: 600 });
    }

    </script>




















