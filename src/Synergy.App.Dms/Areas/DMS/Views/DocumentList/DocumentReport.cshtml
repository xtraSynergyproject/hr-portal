@inject IStringLocalizer<CMS.UI.Web.Areas.DMS.Controllers.DocumentListController> Resource
@{
    ViewData["Title"] = "Workspace";
    Layout = null;
}
@using Synergy.App.ViewModel;
@using Synergy.App.Common;
@model DocumentListViewModel

<script type="text/javascript">
    function FilterGrid() {
        var search = {
            templateId: $("#TemplateId").val(),
            projectNo: $("#ProjectNo").val(),
            noteNo: $("#NoteNo").val(),
            docDescription: $("#DocumentName").val(),
            //docCount: $("#DocCount").val(),
        };
        return search;
    }
    function FilterGridChild() {
        var search = {
            templateId: $("#TemplateId").val(),
        };
        return search;
    }
    $(document).ready(function () {

        //$(".k-hierarchy-cell k-header th").html("View History");

        $("#TemplateId").kendoDropDownList({
            optionLabel: "Select",
            dataTextField: "DisplayName",
            dataValueField: "Id",
            filter: "contains",
            autoBind: true,
            change: OnCategorySelect,
            dataSource: {
                transport: {
                    read: {
                        url: "/dms/DocumentList/GetDocumentTemplateIdNameListByUser",
                    }
                },
                sort: {
                    field: "DisplayName",
                    dir: "asc"
                }
            }
        });

    });
    function ApplyFilter(e) {

        if ($("#TemplateId").val() == "") {
            alert("Document Type is required !")

        }
        else {
          //  $("#kgrdDMS").data("kendoGrid").dataSource.read();
            getData();
          //  $("#kgrdDMS").data("kendoGrid").dataSource.page(1);
        }



    }
    function ApplyClear(e) {

        ////$("#TemplateId").val("");
        //$("#ProjectNo").val("");
        //    $("#NoteNo").val("");
        //    $("#DocumentName").val("");
        //    if ($("#TemplateId").val() != "") {
        //        $("#kgrdDMS").data("kendoGrid").dataSource.read();
        //    }
        window.location.reload();

    }
        function OnCategorySelect(e) {
        var id = e.sender.dataItem(e.node).Id;
        @*var Name = e.sender.dataItem(e.node).Name;
        if (Name == "Engineering Document") {
            $("#DocCount").val(@ViewBag.EngineeringCount);
        }
        else if (Name == "Project Documents") {
            $("#DocCount").val(@ViewBag.ProjectCount);
        }
        else if (Name == "Vendor Documents") {
            $("#DocCount").val(@ViewBag.VendorCount);
        }*@
            /*alert(id);*/
        $("#TemplateId").val(id);

    }
    var expandedRow;
    function detailExpand(e) {
        // Only one open at a time

        if (expandedRow != null && expandedRow[0] != e.masterRow[0]) {
            var grid = $('#kgrdDMS').data('kendoGrid');
            grid.collapseRow(expandedRow);
        }
        expandedRow = e.masterRow;
    }
    function ViewDocumentPopup(Id,tempCode) {
        var portalId = $('#GlobalPortalId').val();
        var url = '/Cms/Page?lo=Popup&cbm=OnAfterTaskCreate&source=View&dataAction=View&portalId=' + portalId + '&recordId=' + Id + '&templateCodes=' + tempCode;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: '@Html.Raw(Resource["ViewDocument"])', Width: 1200, Height: 600 });
    }
    function OnDataBound(arg) {

        var template = $("#TemplateId").data("kendoDropDownList").text();
        var grid = $("#kgrdDMS").data("kendoGrid");
        var columns = grid.columns;
        for (var i = 0; i < columns.length; i++) {
            var column = columns[i];
            if (template == "Request For Inspection" && column.field == "revision_Name") {

                grid.hideColumn(column);
            }
            else {

                grid.showColumn(column);
            }
        }
    }

    function OnHistory(noteid) {
        //
        var templateId = $("#TemplateId").val();
        var noteNo = $("#NoteNo").val();
        var url = "/Dms/documentlist/DocumenReportList?templateId=" + templateId + "&noteNo=" + noteNo + "&documentId=" + noteid;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'View History', Width: 1500, Height: 800 });
    }


     $(function () {

        
        $.contextMenu({
            selector: '#tree-menuBin',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');
                var status = $trigger.data('status');
                var noteid = $trigger.data('noteid');

                //var portalName = $trigger.data('portal-name');

                switch (status) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'History':
                                        OnHistory(noteid);
                                        break;



                                    default:
                                }
                            },
                            items: {
                                "History": { name: "History", icon: "" },


                            }
                        };


                }
            }
        });

    });



    var columnDefs = [

        {
            headerName: "View",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBin' data-idvalue='" + params.data.Id + "' data-status=\"0\" data-templatecode='" + params.data.templatecode + "'  data-noteid='" + params.data.NoteId + "' ><i class='fas fa-ellipsis-v'></i></div>"


            }
        },

        {
            field: "ProjectNo", headerName: "@Resource["PROJECTNO"]",
        },
        {
            field: "NoteNo", headerName: "@Resource["DOCUMENTNO"]",
            cellRenderer: params => {
                var data = "<a style='cursor:pointer;color:blue;' href='javascript:ViewDocumentPopup(\"" + params.data.NoteId + "\",\"" + params.data.TemplateCode +"\");'>";
                if (params.data.NoteNo != null) {
                    data += "<span>" + params.data.NoteNo +"</span></a>";
               }
               else {
                    data += "<span>Draft</span></a>";
                }
                return data
            }
        },
        { field: "NoteDescription", headerName: "@Resource["DOCUMENTDESCRIPTION"]", },
        {
            field: "revision_Name", headerName: "@Resource["Revision"]",
            cellRenderer: params => {
                return "<div class='RevisionColor' style='text-align:center;width:100px'>" + params.data.revision_Name+"</div>"
            }
        },
        { field: "discipline_Name" , headerName: "@Resource["Discipline"]",},
        { field: "code_Name" , headerName: "@Resource["Code"]",},
        { field: "stageStatus_Name", headerName: "@Resource["StageStatus"]", },
        {
            field: "OwnerUserName", headerName: "@SharedResource["Owner"]",
            cellRenderer: params => {
                if (params.data.OwnerUserName == null) {
                    return "<span>" + params.data.RequestedByUserName+"</span >"
                } else {
                    return "<span>"+ params.data.OwnerUserName+"</span >"
                   }

            }
        },
    ];


    $(function () {

        getData();


    });

    function getData() {
        document.getElementById("myGrid").innerHTML = "";
        var templateId = $("#TemplateId").val();
        var projectNo = $("#ProjectNo").val();
        var noteNo = $("#NoteNo").val();
        var docDescription = $("#DocumentName").val();
        gridConfig(
            "myGrid",
            "/DMS/DocumentList/ReadDocumentDataGrid?templateId=" + templateId + "&projectNo=" + projectNo + "&noteNo=" + noteNo + "&docDescription=" + docDescription,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
@*@if (Convert.ToString(HttpContext.Current.Session[Constant.SessionVariable.LegalEntityCode]) == "GAM")
    {
        <style>
            .k-window-actions > .k-button > .k-icon {
                background-color: #0078d7 !important;
            }

            .k-grid .btn {
                background-color: #0078d7 !important;
            }
        </style>
    }*@
<style>

    .open > .dropdown-menu {
        display: block;
    }

    .k-grid table {
        font-size: 11px;
        color: black;
        width: 100% !important;
    }

    .k-grid-header th.k-header > .k-link {
        font-size: 1em;
        font-weight: 500;
        color: #ffffff;
    }

    .k-grid-header th.k-header {
        background-color: #0078d7bd;
    }

    .overlay {
        width: 99%;
        height: 87%;
        position: absolute;
        top: 37px;
        left: 5px;
        opacity: 1.2;
        filter: alpha(opacity=60);
        background-color: #edf2fa;
        text-align: center;
    }

        .overlay div {
            position: relative;
            font-size: 34px;
            margin-top: -17px;
            top: 50%;
            color: #373e4c;
        }

    .viewbtn {
        background-color: #3393FF;
        font-size: 14px;
        padding: 3px !important;
        width: 70px;
        height: 25px;
        text-align: center;
    }

    .approvalbtn {
        background-color: #3393FF;
        font-size: 14px;
        padding: 3px !important;
        width: 150px;
        height: 25px;
        text-align: center;
    }

    .announcement {
        background-color: #edf2fa;
        border: 2px solid white;
        color: #373e4c;
        padding: 10px 10px 10px 10px;
    }

    .iconwithtextan {
        display: flex;
        align-items: center;
    }

        .iconwithtextan.img {
            margin: 10px;
            padding: 10px;
            transition: margin 200ms;
        }

    .k-grid-content, k-grid-content-locked,
    .k-grid-content table {
        transform: rotateX(90deg);
        -ms-transform: rotateX(180deg); /* IE 9 */
        -webkit-transform: rotateX(180deg); /* Safari and Chrome */
    }

    .k-dirty {
        display: none;
    }

    .container-width {
        max-width: 1400px;
    }

    .card-header:first-child {
        border-radius: calc(.25rem - 1px) calc(.25rem - 1px) 0 0;
        align-items: flex-start;
    }

    .card {
        width: 1600px;
        position: relative;
        display: -webkit-box;
        display: -ms-flexbox;
        display: flex;
        -webkit-box-orient: vertical;
        -webkit-box-direction: normal;
        -ms-flex-direction: column;
        flex-direction: column;
        min-width: 0;
        word-wrap: break-word;
        background-color: #fff;
        background-clip: border-box;
        border: 1px solid rgba(0,0,0,.125);
        border-radius: .25rem;
        min-height: 0;
        margin-top: 0px;
        margin-bottom: 20px;
        box-shadow: none;
    }

    .content-popup {
        padding: 20px;
        padding-top: 10px;
    }

    .card-header {
        padding-top: 13px;
        margin-bottom: 1px;
        background-color: rgba(0,0,0,.03);
        display: flex;
    }

    .list-group-item:first-child {
        border-top-right-radius: 0px;
        border-top-left-radius: 0px;
    }

    .list-group-item:first-child {
        border-top-right-radius: 0px;
        border-top-left-radius: 0px;
    }

    .list-group-item {
        position: relative;
        display: block;
        padding: 10px 15px;
        margin-bottom: -1px;
        background-color: #fff;
        border: 1px solid #ddd;
    }

    /* Style buttons */
    .btn {
        background-color: DodgerBlue; /* Blue background */
        border: none; /* Remove borders */
        color: white; /* White text */
        /* padding: 12px 16px;  Some padding */
        font-size: 16px; /* Set a font size */
        cursor: pointer; /* Mouse pointer on hover */
    }

    .heading {
        font-size: 13px;
    }

    .sub-heading {
        font-size: 11px;
    }



    .container {
        padding-right: 0px;
        padding-left: 0px;
        margin-right: 0px;
        margin-left: 0px;
    }

    .Card-header {
        padding: 10px 15px;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }



    .pageHeader {
        height: 120px;
        background-color: darkslategrey;
        color: white;
        text-align: center;
    }

    .pageHeader-span {
        font-size: 24px;
        padding-top: 20px;
    }

    .headerTitle {
        font-size: 13px;
        font-weight: bold;
    }

    .headerDraft {
        padding-top: 5px;
        padding-bottom: 5px;
        padding-left: 10px;
        font-size: 13px;
        font-weight: bold;
    }

    th.k-hierarchy-cell:before {
        content: "View";
    }

    .k-hierarchy-cell {
        width: 40px;
        font-size: 14px;
    }

    .k-grid-header th.k-header {
        vertical-align: middle;
    }

    .k-filter-row th, .k-grid-header th.k-header {
        overflow: hidden;
        border-style: solid;
        background-color: #0078d7bd;
        border-width: 0 0 1px 1px;
        padding: .5em .6em .4em .6em;
        font-weight: 500;
        white-space: nowrap;
        text-overflow: ellipsis;
        text-align: left;
        /*font-family: 'Titillium Web', sans-serif;*/
        text-transform: uppercase;
    }

    .RevisionColor {
        background-color: #f3b300bf;
        border-radius: 100px;
    }

    .k-grid tr td {
        border-bottom: 0.1px solid gray;
        border-right: 0.1px solid gray;
        font-size: 1.1em;
    }

        .k-grid tr td:first-child {
            border-right: 0.1px solid gray;
        }

    .k-grid tr th:first-child {
        color: white;
        font-weight: 500;
    }

    .k-grid tr th {
        border-right: 0.1px solid gray !important;
    }

    .k-grid-filter .k-icon:before, .k-header .k-icon:before {
        text-indent: 0;
        color: white;
    }
    /*.k-button {
        background-color:#bdbdbd !important
    }*/
    .k-grid .k-header .k-button {
        border-radius: 0;
        border-color: #dbdbdb;
        color: black;
        background-color: #eee;
        background-position: 50% 50%;
        text-align: left;
    }

    .dropdown-menu {
        min-width: 100px;
        position: absolute;
        top: 100%;
        left: 0;
        z-index: 1000 !important;
        display: none;
        float: left;
        min-width: 160px;
        padding: 5px 0;
        margin: 2px 0 0;
        font-size: 14px;
        list-style: none;
        background-color: #fff;
        border: 1px solid #ccc;
        border: 1px solid rgba(0,0,0,.15);
        border-radius: 4px;
        -webkit-box-shadow: 0 6px 12px rgb(0 0 0 / 18%);
        box-shadow: 0 6px 12px rgb(0 0 0 / 18%);
        background-clip: padding-box;
    }

        .dropdown-menu > ul > li > a, .dropdown-menu > li > a {
            padding: 5px 10px !important;
        }

        .dropdown-menu > li > a {
            display: block;
            padding: 3px 20px;
            clear: both;
            font-weight: normal;
            line-height: 1.428571429;
            color: #333;
            white-space: nowrap;
        }

    .k-grid .btn {
        background-color: #c1972a;
    }
</style>

<div class="row" style="padding:20px">

    <div class="card">

        @*<div class="card pageHeader">
                <span class="pageHeader-span">Drill Down Report Document</span>
            </div>*@
        <div class="panel-body">

            <div class="row" style="border-radius:5px;background: lightgrey !important; font-size:11px !important" id="filtersSection">
                <div class="row" style="width:100%">

                    <div class="col-sm-2 hr-pad-top-bot-10">
                        <div class="col-sm-12" style="margin-bottom:5px; font-weight:500 !important">
                            @Resource["PROJECTNO"]
                        </div>
                        <div class="col-sm-12">
                            @*@Html.Kendo().TextBoxFor(x => x.ProjectNo).HtmlAttributes(new { @class = "hr-xx-large" })*@
                            <input asp-for="ProjectNo" type="text" class="form-control" />


                        </div>


                    </div>
                    <div class="col-sm-2  hr-pad-top-bot-10">
                        <div class="col-sm-12" style="margin-bottom:5px;font-weight:500 !important">
                            @Resource["DOCUMENTNO"]
                        </div>
                        <div class="col-sm-12">
                            @*@Html.Kendo().TextBoxFor(x => x.NoteNo).HtmlAttributes(new { @class = "hr-xx-large" })*@
                            <input asp-for="NoteNo" type="text" class="form-control" />

                        </div>


                    </div>
                    <div class="col-sm-3  hr-pad-top-bot-10">
                        <div class="col-sm-12" style="margin-bottom:5px;font-weight:500 !important">
                            @Resource["DOCUMENTDESCRIPTION"]
                        </div>
                        <div class="col-sm-12">

                            @*@Html.Kendo().TextBoxFor(x => x.DocumentName).HtmlAttributes(new { @class = "hr-xx-large" })*@
                            <input asp-for="DocumentName" type="text" class="form-control" />
                        </div>


                    </div>
                    <div class="col-sm-3  hr-pad-top-bot-10">
                        <div class="col-sm-12" style="margin-bottom:5px;font-weight:500 !important">
                            @Resource["DOCUMENTTYPE"]
                        </div>
                        <div class="col-sm-12">
                            @*@(Html.Kendo().DropDownListFor(m => m.TemplateId)
                                                              .OptionLabel("Select")
                                                              .Events(e => e.Change("OnCategorySelect"))
                                                              .DataSource(source =>
                                                              {
                                                                  source.Read(read =>
                                                                  {
                                                                      read.Action("GetDocumentTemplateIdNameListByUser", "DocumentList", new {area="DMS"});
                                                                  });
                                                                  source.Custom().Sort(s => s.Add("DisplayName"));
                                                              })
                                                              .DataTextField("DisplayName")
                                                              .DataValueField("Id")
                                                              .Filter(FilterType.Contains)
                                                              .AutoBind(true)
                                                              //.HtmlAttributes(new { @class = "hr-xx-large t-shadow" })
                                                              .HtmlAttributes(new { @class = "hr-xx-large" })
                                )*@
                            <input id="TemplateId" class="hr-xx-large">

                        </div>


                    </div>
                    <div class="col-sm-2 hr-pad-top-bot-10">
                        <br />
                        @*@Html.Kendo().Button().Name("btnServiceSearch").Events(x => x.Click("ApplyFilter")).Content(@SharedResource["ApplyFilter"]).HtmlAttributes(new { @class = "btn btn-sm btn-success", @style = "height:30px;padding:10px 15px 15px 15px;background-color: green;" })*@
                        <button type="button" class="btn btn-sm btn-success" id="btnServiceSearch" onclick="ApplyFilter();" style="height:30px;padding:10px 15px 15px 15px;background-color: green;">@SharedResource["ApplyFilter"]</button>
                        @*@Html.Kendo().Button().Name("btnClear").Events(x => x.Click("ApplyClear")).Content(@SharedResource["Clear"]).HtmlAttributes(new { @class = "btn btn-sm btn-danger", @style = "height:30px;padding:10px 15px 15px 15px;" })*@
                        <button type="button" class="btn btn-sm btn-danger" id="btnClear" onclick="ApplyClear();" style="height:30px;padding:10px 15px 15px 15px;">@SharedResource["Clear"]</button>


                    </div>
                </div>

            </div>
            <br />
            <div>
                <div id="myGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            </div>
            @*<div>
                @(Html.Kendo().Grid<dynamic>
                    ().Name("kgrdDMS").NoRecords(true)
                        .Columns(col =>
                        {
                            col.Bound("ProjectNo").Title(@Resource["PROJECTNO"]).Width(80).Filterable(false);
                            col.Bound("NoteNo").Title(@Resource["DOCUMENTNO"]).Width(120).ClientTemplate("<a style='cursor:pointer;color:blue;' href='javascript:ViewDocumentPopup(\"#:NoteId#\",\"#:TemplateCode#\");'>" +
                                             "# if (NoteNo!=null) {# <span>#=NoteNo#</span> #}else {# Draft #}#"
                                             + "</a>");
                            col.Bound("NoteDescription").Title(@Resource["DOCUMENTDESCRIPTION"]).Width(350);

                            col.Bound("revision_Name").Title(@Resource["Revision"]).ClientTemplate("<div class='RevisionColor' style='text-align:center'>#=revision_Name#</div>").Width(80);
                            col.Bound("discipline_Name").Title(@Resource["Discipline"]).Width(70);
                            col.Bound("code_Name").Title(Resource["Code"]).Width(70);
                            col.Bound("stageStatus_Name").Title(@Resource["StageStatus"]).Width(80);
                            col.Bound("OwnerUserName").ClientTemplate("#if(OwnerUserName==null){#<span>#=RequestedByUserName#</span>#}else{#<span>#=OwnerUserName#</span>#}#").Title(@SharedResource["Owner"]).Width(80).Filterable(false);


                        })

                    //.ToolBar(tools => tools.Excel())
                    //  .ToolBar(tools=> tools.ClientTemplate(
                    //      "<button type='button' class='btn-group-left btn-group btn btn-sm btn-primary'  style='margin-right: -3px;'>Export</button>"+
                    //      "<button class='btn-group-right btn btn-sm btn-primary dropdown-toggle' data-toggle='dropdown'><span class='caret'></span></button>"+
                    //      "<ul class='dropdown-menu' style='top:auto;left:auto;'>"+
                    //      "<li ><a class='k-button k-button-icontext k-grid-excel' href='##'><span class='k-icon k-i-excel' style='background-color:green'></span>Excel</a></li>"+
                    //      "<li ><a class='k-button k-button-icontext k-grid-pdf' href='##'><span class='k-icon k-i-pdf' style='background-color:red'></span>Pdf</a></li>"+
                    //      "</ul>"
                    //))
                    .ToolBar(tools => tools.ClientTemplate(

                        "<button class='btn btn-primary k-button k-button-icontext k-grid-excel' href='##' style='color:white;background-color:Navy'><span class='k-icon k-i-excel' style='background-color:green'></span>Excel</button>" +
                        "<button class='btn btn-primary k-button k-button-icontext k-grid-pdf' href='##' style='color:white;background-color:Navy'><span class='k-icon k-i-pdf' style='background-color:red'></span>Pdf</button>"

                  ))
                    .Excel(excel => excel
                    .FileName("Document Report.xlsx")
                    .Filterable(true)
                    .AllPages(true)
                    )
                    .Pdf(pdf => pdf
                    .AllPages()
                    //.AvoidLinks()
                    //.PaperSize("A4")
                    //.Scale(0.8)
                    //.Margin("2cm", "1cm", "1cm", "1cm")
                    //.Landscape()
                    //.RepeatHeaders()
                    //.TemplateId("page-template")
                    .FileName("Document Report.pdf")
                    .ProxyURL(Url.Action("Pdf_Export_Save", "Grid"))
                    )
                    //.Events(e => e.DataBound("OnDataBound"))
                    .Events(events => events.DetailExpand("detailExpand").DataBound("OnDataBound"))
                    .Resizable(resizable => resizable.Columns(true))
                    .Scrollable(scrollable => scrollable.Enabled(false))
                    .Sortable(srt => srt.Enabled(true))
                    .ClientDetailTemplateId("template")
                    .Selectable(select => select.Enabled(false))
                    .Filterable(f => f.Extra(false)
                        .Operators(o => o.ForString(s => s.Clear()
                        .Contains("Contains")
                        //.IsEqualTo("Is equal to")
                    )))
                    .AutoBind(true)
                    .Pageable(pageable => pageable
                    .Refresh(true)
                    .PageSizes(true)
                    .ButtonCount(5))
                    .DataSource(
                    dataSource => dataSource
                    .Ajax()
                    .PageSize(20)

                    // .Events(events => events.Error("OnError"))
                    .Read(read => read.Action("ReadDocumentData", "DocumentList", new { @area = "DMS"}).Data("FilterGrid"))
                    //.Model(model => model.Id(p => p.DocumentId))
                    )
                    // .Editable(
                    // editable => editable.Mode(GridEditMode.PopUp)
                    // .DisplayDeleteConfirmation(ERP.Translation.Message.DeleteConfirm2)
                    // )
                    .HtmlAttributes(new {@style= "font-size: 12px" })
)

            </div>*@
            <br />

        </div>
        @Html.HiddenFor(model => model.TemplateId)
        @Html.HiddenFor(model => model.DocCount)
        @Html.HiddenFor(model => model.NoteNo)
        @Html.HiddenFor(model => model.ProjectNo)
        @Html.HiddenFor(model => model.DocumentName)
    </div>

</div>
<script id="template" type="text/kendo-tmpl">
    <iframe name="template" src="/dms/DocumentList/DocumenReportList?templateId=#=TemplateId#&noteNo=#=NoteNo#&documentId=#=NoteId#" id="template" style='width:100%; height:60vh;@*max-height:90vh;*@ overflow: hidden;' frameBorder='1'></iframe>

</script>

















