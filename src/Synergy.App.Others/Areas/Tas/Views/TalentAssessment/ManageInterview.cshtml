@inject IStringLocalizer<CMS.UI.Web.Areas.TAS.Controllers.TalentAssessmentController> Resource
@using Synergy.App.ViewModel;
@*@using Kendo.Mvc.UI;*@
@using Synergy.App.Common;
@*@using Kendo.Mvc.Extensions;*@
@{
    ViewData["Title"] = "Manage InterView";
    //Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
    Layout = null;

}
@model AssessmentInterviewViewModel
<style>
    .dropdown-menu.show{

        display:block !important;
    }
    .k-grid-content {
        overflow-x: scroll;
    }
</style>
<script type="text/javascript">

    function CreateInterview(userId, interviewScheduleId) {

        ShowLoader($('#interviewDiv'));
        var url = "/Tas/TalentAssessment/CreateAssessmentInterview?userId=" + userId + "&interviewScheduleId=" + interviewScheduleId;
        $.ajax({
            url: url,
            type: "POST",
            success: function (data) {
                if (data) {
                    ShowNotification("Interview created successfully");
                    $("#kgrdInterview").data("kendoGrid").dataSource.read();
                    HideLoader($('#interviewDiv'));
                }

            },
            error: function (errData) {

                OnError(errData);
            }
        });
    }

    function AddInterviewComment(id,userid) {
      //  var grid = $("#kgrdInterview").data("kendoGrid");
      //  localStorage["kendo-grid-options"] = kendo.stringify(grid.getOptions());

        //ShowAjaxLoader($("#interviewDiv"));
      // window.location.href = "/TAS/TalentAssessment/AssessmentInterview?serviceId=" + id;
       // return false;


        var url = "/TAS/TalentAssessment/AssessmentInterview?serviceId=" + id + "&UserID=" + userid;
        //window.location.href = url;
        LoadPartailView(url, $('#cms-content'));
        //var url = "/assessment/assessment/AssessmentInterview?serviceId=" + id ;
        //    $.ajax({
        //        url: url,
        //         type: "POST",
        //        success: function (data) {
        //            if (data) {
        //                   ShowNotification("Interview updated successfully");
        //                  $("#kgrdInterview").data("kendoGrid").dataSource.read();
        //            }
        //            RemoveAjaxLoader($("#interviewDiv"));
        //        },
        //        error: function (errData) {
        //            RemoveAjaxLoader($("#interviewDiv"));
        //            OnError(errData);
        //        }
        //    });
    }

    function CompleteInterview(id, userId,TableId) {
        //ShowAjaxLoader($("#interviewDiv"));

        ShowLoader($('#interviewDiv'));
        var url = "/TAS/TalentAssessment/CompleteInterview?serviceId=" + id + "&userId=" + userId + "&Tableid=" + TableId;
        $.ajax({
            url: url,
            type: "POST",
            success: function (data) {
                if (data) {
                    ShowNotification("Interview completed successfully");
                    $("#kgrdInterview").data("kendoGrid").dataSource.read();
                    HideLoader($('#interviewDiv'));
                }
          //      RemoveAjaxLoader($("#interviewDiv"));
            },
            error: function (errData) {
                HideLoader($('#interviewDiv'));
                OnError(errData);
            }
        });
    }

    function OnCandidateCaseStudy(id, userId) {
        var grid = $("#kgrdInterview").data("kendoGrid");
        //localStorage["kendo-grid-options"] = kendo.stringify(grid.getOptions());
        // ShowAjaxLoader($("#interviewDiv"));
        //window.location.href = "/TAS/TalentAssessment/CandidateCaseStudy?userId=" + userId;
        var url = "/TAS/TalentAssessment/CandidateCaseStudy?userId=" + userId;
        //window.location.href = url;
        LoadPartailView(url, $('#cms-content'));
        // return false;
    }
    function OnAssessorCaseStudy(id, userId) {
      //  var grid = $("#kgrdInterview").data("kendoGrid");
       // localStorage["kendo-grid-options"] = kendo.stringify(grid.getOptions());
        //ShowAjaxLoader($("#interviewDiv"));
     //  window.location.href = "/assessment/assessment/InterviewerCaseStudy?userId=" + userId;
        // return false;

        var url = "/TAS/TalentAssessment/InterviewerCaseStudy?userId=" + userId;
        //window.location.href = url;
        LoadPartailView(url, $('#cms-content'));
    }
    function OnAssessmentReportPdfClick(id, userId) {

        // ShowAjaxLoader($("#interviewDiv"));
        /*window.location.href = "/assessment/assessment/DownloadAssessment?userId=" + userId;*/
        //return false

        @*url = '/Cms/Report?rptName=TAS_AssessmentReport.trdp&rptUrl=tas/query/GetAssessmentReport/' + userId + '&lo=@LayoutModeEnum.Popup';*@
        url = '/Cms/FastReport?rptName=TAS_AssessmentReport&rptUrl=tas/query/GetAssessmentReport/' + userId + '&lo=@LayoutModeEnum.Popup';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Report', Width: 800, Height: 700 });

        @*url = '/Cms/Report?rptName=TAS_AssessmentResultReport.trdp&rptUrl=tas/query/GetAssessmentResultReport/' + userId + '&rptUrl2=tas/query/GetAssessmentResultItems/'+userId+'&lo=@LayoutModeEnum.Popup';
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Result Report', Width: 800, Height: 700 });*@
    }
    function OnAssessmentDetailedReportClick(id, userId) {
        //ShowAjaxLoader($("#interviewDiv"));
        window.location.href = "/TAS/TalentAssessment/AssessmentReportDataExcel?userId=" + userId;
        // return false;
    }
    function UploadDocs(Id, userId, e) {
        var type = e.getAttribute('data-type');
        var url = "/TAS/TalentAssessment/UploadCandidateDocument?serviceId=" + Id + "&userId=" + userId + "&type=" + type;
        var win = GetMainWindow();
            win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Upload Document', Width: 770, Height: 500 });
    }

    function RefreshGrid() {
        $("#kgrdInterview").data("kendoGrid").dataSource.read({ userId: '@ViewBag.UserId'});
    }

     function OnArchive() {
        var ids = '';
        $('.archive:checkbox:checked').each(function () {

            ids = ids +"'" +this.id+"'"+',';
        });
        //alert(ids);
        if (ids=='') {
            alert("Please select any record");
            return;
        }
        //var items = JSON.stringify($("#kgrdInterview").data().kendoGrid.dataSource.data());
        //console.log(items);
        var d = {
            assessments: ids,
            archive: true,
        };
        $.ajax({
            type: "POST",
            url: "/TAS/TalentAssessment/UpdateArchived",
            data: d,
            dataType: "json",
            success: function (data) {
                if (data.success) {
                    var check = $("#chkincludeArchive").is(':checked');
        if (check == true) {
            $("#kgrdInterview").data("kendoGrid").dataSource.read({ userId: '@ViewBag.UserId', isarchived: true });
        } else {
            $("#kgrdInterview").data("kendoGrid").dataSource.read({ userId: '@ViewBag.UserId'});
        }
                }
                else {
                    //ShowErrors(data.errors);
                    alert(data.errors);
                }
            },

        });
    }
    function OnRestoreArchive() {
        var ids = '';
        $('.archive:checkbox:checked').each(function () {
            ids = ids +"'"+ this.id+"'" + ',';
        });
        if (ids == '') {
            alert("Please select any record");
            return;
        }
        var d = {
            assessments: ids,
        };
        $.ajax({
            type: "POST",
            url: "/TAS/TalentAssessment/UpdateArchived",
            data: d,
            dataType: "json",
            success: function (data) {
                if (data.success) {
                    var check = $("#chkincludeArchive").is(':checked');
        if (check == true) {
            $("#kgrdInterview").data("kendoGrid").dataSource.read({ userId: '@ViewBag.UserId', isarchived: true });
        } else {
            $("#kgrdInterview").data("kendoGrid").dataSource.read({ userId: '@ViewBag.UserId'});
        }
                }
                else {
                    //ShowErrors(data.errors);
                    alert(data.errors);
                }
            },

        });
    }
    function onChangeInterview(arg) {
        //console.log("The selected ids are: [" + this.selectedKeyNames().join(", ") + "]");
        assessIds = this.selectedKeyNames().join(", ");
    }
    function ShowArchive() {

        var check = $("#chkincludeArchive").is(':checked');
        if (check == true) {
            $("#kgrdInterview").data("kendoGrid").dataSource.read({ userId: '@ViewBag.UserId', isarchived: true });
        } else {
            $("#kgrdInterview").data("kendoGrid").dataSource.read({ userId: '@ViewBag.UserId'});
        }
    }
</script>
@*<h3>@ViewBag.Title</h3>*@

<div class="row" style="margin:5px;">
    <div class="col-md-6">
        @*@Html.Kendo().Button().Name("btnArchive").Content("Archive Selected Items").Icon("check-outline").HtmlAttributes(new { @class = "k-primary" }).Events(x => x.Click("OnArchive"))*@
        @*@Html.Kendo().Button().Name("btnRestoreArchive").Content("Restore Archived Items").Icon("reset").HtmlAttributes(new { @class = "k-primary" }).Events(x => x.Click("OnRestoreArchive"))*@
    </div>
    <div class="col-md-6">
        <div class="row">
            <div class="col-md-9" style="text-align:right;margin-right:0px;padding-right:5px;">
                @Html.Label("Include Archived Items")
            </div>
            <div class="col-md-1" style="text-align:left;margin-left:0px;padding-left:0px;">
                @*@Html.Kendo().CheckBox().Name("chkincludeArchive").HtmlAttributes(new { @class = "form-control" })*@
            </div>
            <div class="col-md-2">
                @*@Html.Kendo().Button().Name("btnIncludeArchive").Content("Go").Icon("check-outline").HtmlAttributes(new { @class = "k-primary" }).Events(x => x.Click("ShowArchive"))*@
            </div>
        </div>
    </div>
</div>
<div class="row-12" id="interviewDiv">
   
        
        @*@(Html.Kendo().Grid<AssessmentInterviewViewModel>
    ().Name("kgrdInterview")
    .Columns(col =>
    {
        //col.Select().Width(50);
        //col.Bound(c => c.IsRowArchived).Title("").Width(80).ClientTemplate("#if(ServiceId!=null){#<input class='archive'  #if(IsRowArchived){# checked='checked'#}# id='#=ServiceId#'  type='checkbox' /> #}#").Locked(true).Lockable(false);
        col.Bound(c => c.PanelTeamName).Title("Team Name").Width(150).Locked(true).Lockable(false);
        col.Bound(c => c.ScheduledStartDate).Title("Interview Scheduled Date").Width(150).Format("{0:dd MMM yyyy hh:mm}").Locked(true).Lockable(false);
        col.Bound(c => c.OwnerUserName).Title("Candidate Name").Width(200).Locked(true).Lockable(false);
        col.Bound(c => c.Email).Title("Candidate Email").Width(200);
        col.Bound(c => c.JobTitle).Title("Job Title").Width(200);
        col.Bound(p => p.CandidateCVId).Title("Candidate CV").ClientTemplate("#if(CandidateCVId!=null){#<a href='/cms/Document/GetFileMongo?fileId=#:CandidateCVId#' target='_blank'>Candidate CV</a>#}#").Width(150);
        col.Bound(p => p.InterviewSheetId).Title("Interview Sheet").ClientTemplate("#if(InterviewSheetId!=null){#<a href='/cms/Document/GetFileMongo?fileId=#:InterviewSheetId#' target='_blank' style='text-decoration:underline;color:dodgerblue;cursor:pointer;'>Interview Sheet</a>#}#").Width(150);

        col.Bound(c => c.AssessmentInterviewUrl).Width(200).Title("Interview Zoom").ClientTemplate("<a style='cursor:pointer' target='_blank' title='Click to start interview' href='#=AssessmentInterviewUrl#'>#if (AssessmentInterviewUrl != null) {# <span>#=AssessmentInterviewUrl#</span> #}else {#  #}#</a>").Width(150);
        col.Bound(c => c.Subject).Title("Assessment Name").Width(200);
        col.Bound(c => c.AssessmentStatus).Title("Interview Status").Width(200);
        col.Bound(c => c.IsArchived).Width(100);
        // col.Bound(c => c.IsAssessmentStopped).Title("").ClientTemplate("#if (ServiceId==null || ServiceId==0){if(ShowStartButton) {#<button class='btn btn-info' onclick='CreateInterview(#=OwnerUserId#)'>Start Interview</button>#} }else{if(AssessmentStatus=='Completed' && IsAdmin== true){#<button class='btn btn-primary' onclick='OnAssessmentReportPdfClick(#=ServiceId#,#=OwnerUserId#)'>Assessment Report(PDF)</button>&nbsp;<button class='btn btn-success' onclick='OnAssessmentDetailedReportClick(#=ServiceId#,#=OwnerUserId#)'>Assessment Detail Report (Excel)</button># }else if(AssessmentStatus=='In Progress'){#<button class='btn btn-warning' onclick='AddInterviewComment(#=ServiceId#)'>Add Comment</button>&nbsp;<button class='btn btn-primary' onclick='OnCandidateCaseStudy(#=ServiceId#,#=OwnerUserId#)'>Candidate Case Study</button>&nbsp;<button class='btn btn-danger' onclick='OnAssessorCaseStudy(#=ServiceId#,#=OwnerUserId#)'>Assessor Case Study(Confidential)</button>&nbsp;<button class='btn btn-success' onclick='CompleteInterview(#=ServiceId#,#=OwnerUserId#)'>Complete Interview</button>#}}#").Filterable(false).Sortable(false);
        // col.Bound(c => c.IsAssessmentStopped).Title("").ClientTemplate("# if (ServiceId==null || ServiceId==0) { # <button class='btn btn-info' onclick='CreateInterview(#=OwnerUserId#)'>Start Interview</button> # } else if(AssessmentStatus=='Completed'){# <button class='btn btn-primary' onclick='OnAssessmentReportPdfClick(#=ServiceId#,#=OwnerUserId#)'>Assessment Report(PDF)</button>&nbsp;<button class='btn btn-success' onclick='OnAssessmentDetailedReportClick(#=ServiceId#,#=OwnerUserId#)'>Assessment Detail Report (Excel)</button> # } else {# <button class='btn btn-warning' onclick='AddInterviewComment(#=ServiceId#)'>Add Comment</button>&nbsp;<button class='btn btn-primary' onclick='OnCandidateCaseStudy(#=ServiceId#,#=OwnerUserId#)'>Candidate Case Study</button>&nbsp;<button class='btn btn-danger' onclick='OnAssessorCaseStudy(#=ServiceId#,#=OwnerUserId#)'>Assessor Case Study(Confidential)</button>&nbsp;<button class='btn btn-success' onclick='CompleteInterview(#=ServiceId#,#=OwnerUserId#)'>Complete Interview</button>#}#").Filterable(false).Sortable(false);
        //col.Bound(c => c.IsAssessmentStopped).Title("").ClientTemplate("# if (ServiceId==null || ServiceId==0) { # <button class='btn btn-info' onclick='CreateInterview(#=OwnerUserId#)'>Start Interview</button> # } else {# <button class='btn btn-warning' onclick='AddInterviewComment(#=ServiceId#)'>Interview scoring sheet</button>&nbsp;<button class='btn btn-primary' onclick='OnCandidateCaseStudy(#=ServiceId#,#=OwnerUserId#)'>Candidate Case Study</button>&nbsp;<button class='btn btn-danger' onclick='OnAssessorCaseStudy(#=ServiceId#,#=OwnerUserId#)'>Assessor Case Study(Confidential)</button>&nbsp;<button class='btn btn-primary' onclick='OnAssessmentReportPdfClick(#=ServiceId#,#=OwnerUserId#)'>Assessment Report(PDF)</button>&nbsp;<button class='btn btn-success' onclick='OnAssessmentDetailedReportClick(#=ServiceId#,#=OwnerUserId#)'>Assessment Detail Report (Excel)</button>&nbsp<button class='btn btn-success' onclick='CompleteInterview(#=ServiceId#,#=OwnerUserId#)'>Complete Interview</button>#}#").Filterable(false).Sortable(false);

        {
            col.Bound(p => p.IsAssessmentStopped).Title("").ClientTemplate("# if (ServiceId==null || ServiceId==0) { #<button type='button' onclick='CreateInterview(\"#=OwnerUserId#\",\"#=InterviewScheduleId#\")' class='btn btn-sm btn-info'>Start Interview</button># }else {#<button class='btn-group-left btn-group btn btn-sm btn-success' onclick='CompleteInterview(\"#=ServiceId#\",\"#=OwnerUserId#\",\"#=TableId#\")'>Complete Interview</button>" +
                "<button class='btn-group-right btn btn-sm btn-success dropdown-toggle' data-toggle='dropdown'><span class='caret'></span></button>" +
                "<ul class='dropdown-menu' style='top:auto;left:auto;'>"+
                "<li><button class='btn btn-warning' onclick='AddInterviewComment(\"#=ServiceId#\",\"#=OwnerUserId#\")'>Interview scoring sheet</button></li>" +
                "<li ><button class='btn btn-primary' onclick='OnCandidateCaseStudy(\"#=ServiceId#\",\"#=OwnerUserId#\")'>Candidate Case Study</button></li>" +
                "<li><button class='btn btn-danger' onclick='OnAssessorCaseStudy(\"#=ServiceId#\",\"#=OwnerUserId#\")'>Assessor Case Study(Confidential)</button></li>" +
                "<li><button class='btn btn-primary' onclick='OnAssessmentReportPdfClick(\"#=ServiceId#\",\"#=OwnerUserId#\")'>Assessment Report(PDF)</button></li>"+
                "<li><button class='btn btn-success' onclick='OnAssessmentDetailedReportClick(\"#=ServiceId#\",\"#=OwnerUserId#\")'>Assessment Detail Report (Excel)</button></li>"+
                "<li><button class='btn btn-primary' onclick='UploadDocs(\"#=ServiceId#\",\"#=OwnerUserId#\",this)' data-type='Id'>Upload candidate ID</button></li>"+
                "<li ><button class='btn btn-success' onclick='UploadDocs(\"#=ServiceId#\",\"#=OwnerUserId#\",this)' data-type='Image'>Upload candidate picture</button></li>"+
                "<li ><button class='btn btn-success' onclick='UploadDocs(\"#=ServiceId#\",\"#=OwnerUserId#\",this)' data-type='InterviewSheet'>Upload Interview Sheet</button></li>" +
                "#}#").Width(250);
        }
    })
    .ToolBar(toolbar =>
    {
        toolbar.Excel();
    })
    .Excel(excel => excel
    .FileName("ManageInterview.xlsx")
    .AllPages(true)
    )
    .Height(700)
     //.Events(ev => ev.Change("onChangeInterview"))
     //.Editable(editable => editable.Mode(GridEditMode.InCell))
     .Scrollable(scrollable => scrollable.Enabled(true))

    .Resizable(r => r.Columns(true))
    .Sortable(srt => srt.Enabled(true))
    .Selectable(select => select.Enabled(false))
    .Filterable(f => f.Extra(false)
    .Operators(o => o.ForString(s => s.Clear()
    .Contains("Contains")
    .IsEqualTo("Is equal to")
    )))
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .AutoBind(true)
    .DataSource(
    dataSource => dataSource
    .Ajax()
    .PageSize(20)
     .AutoSync(true)
    .ServerOperation(false)
    .Read(read => read.Action("GetAssessmentInterviewList", "TalentAssessment", new { Area = "TAS",userId= ViewBag.UserId,source=Model.Source }))
    .Model(model =>
    {   model.Id(p => p.Id);
        //model.Field(x => x.PanelTeamName).Editable(false);
        //model.Field(x => x.ScheduledStartDate).Editable(false);
        //model.Field(x => x.OwnerUserName).Editable(false);
        //model.Field(x => x.Email).Editable(false);
        //model.Field(x => x.AssessmentInterviewUrl).Editable(false);
        //model.Field(x => x.Subject).Editable(false);
        //model.Field(x => x.AssessmentStatus).Editable(false);
    })
    )
    )*@

</div>

