{"version":3,"file":"cubejs-client-react.js","sources":["../src/CubeContext.js","../src/QueryRenderer.jsx","../src/QueryRendererWithTotals.jsx","../src/QueryBuilder.jsx","../src/CubeProvider.jsx","../src/hooks/deep-compare-memoize.js","../src/hooks/cube-query.js","../src/hooks/dry-run.js"],"sourcesContent":["import { createContext } from 'react';\n\nexport default createContext(null);\n","import React from 'react';\nimport { equals, toPairs, fromPairs } from 'ramda';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from './CubeContext';\n\nexport default class QueryRenderer extends React.Component {\n  static isQueryPresent(query) {\n    return isQueryPresent(query);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.mutexObj = {};\n  }\n\n  componentDidMount() {\n    const { query, queries } = this.props;\n    if (query) {\n      this.load(query);\n    }\n    if (queries) {\n      this.loadQueries(queries);\n    }\n  }\n\n  shouldComponentUpdate(nextProps, nextState) {\n    const {\n      query, queries, render, cubejsApi, loadSql, updateOnlyOnStateChange\n    } = this.props;\n    if (!updateOnlyOnStateChange) {\n      return true;\n    }\n    return !equals(nextProps.query, query)\n      || !equals(nextProps.queries, queries)\n      || ((nextProps.render == null || render == null) && nextProps.render !== render)\n      || nextProps.cubejsApi !== cubejsApi\n      || nextProps.loadSql !== loadSql\n      || !equals(nextState, this.state)\n      || nextProps.updateOnlyOnStateChange !== updateOnlyOnStateChange;\n  }\n\n  componentDidUpdate(prevProps) {\n    const { query, queries } = this.props;\n    if (!equals(prevProps.query, query)) {\n      this.load(query);\n    }\n\n    if (!equals(prevProps.queries, queries)) {\n      this.loadQueries(queries);\n    }\n  }\n\n  cubejsApi() {\n    // eslint-disable-next-line react/destructuring-assignment\n    return this.props.cubejsApi || this.context && this.context.cubejsApi;\n  }\n\n  load(query) {\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      error: null,\n      sqlQuery: null,\n      ...(resetResultSetOnChange ? { resultSet: null } : {})\n    });\n    const { loadSql } = this.props;\n    const cubejsApi = this.cubejsApi();\n    if (query && QueryRenderer.isQueryPresent(query)) {\n      if (loadSql === 'only') {\n        cubejsApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' })\n          .then(sqlQuery => this.setState({ sqlQuery, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else if (loadSql) {\n        Promise.all([\n          cubejsApi.sql(query, { mutexObj: this.mutexObj, mutexKey: 'sql' }),\n          cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n        ]).then(([sqlQuery, resultSet]) => this.setState({\n          sqlQuery, resultSet, error: null, isLoading: false\n        }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      } else {\n        cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: 'query' })\n          .then(resultSet => this.setState({ resultSet, error: null, isLoading: false }))\n          .catch(error => this.setState({\n            ...(resetResultSetOnChange ? { resultSet: null } : {}),\n            error,\n            isLoading: false\n          }));\n      }\n    }\n  }\n\n  loadQueries(queries) {\n    const cubejsApi = this.cubejsApi();\n    const { resetResultSetOnChange } = this.props;\n    this.setState({\n      isLoading: true,\n      ...(resetResultSetOnChange ? { resultSet: null } : {}),\n      error: null\n    });\n\n    const resultPromises = Promise.all(toPairs(queries).map(\n      ([name, query]) => cubejsApi.load(query, { mutexObj: this.mutexObj, mutexKey: name }).then(r => [name, r])\n    ));\n\n    resultPromises\n      .then(resultSet => this.setState({\n        resultSet: fromPairs(resultSet),\n        error: null,\n        isLoading: false\n      }))\n      .catch(error => this.setState({\n        ...(resetResultSetOnChange ? { resultSet: null } : {}),\n        error,\n        isLoading: false\n      }));\n  }\n\n  render() {\n    const {\n      error, queries, resultSet, isLoading, sqlQuery\n    } = this.state;\n    const { render } = this.props;\n    const loadState = {\n      error,\n      resultSet: queries ? (resultSet || {}) : resultSet,\n      loadingState: { isLoading },\n      sqlQuery\n    };\n    if (render) {\n      return render(loadState);\n    }\n    return null;\n  }\n}\n\nQueryRenderer.contextType = CubeContext;\n\nQueryRenderer.defaultProps = {\n  cubejsApi: null,\n  query: null,\n  render: null,\n  queries: null,\n  loadSql: null,\n  updateOnlyOnStateChange: false,\n  resetResultSetOnChange: true\n};\n","import React from 'react';\nimport QueryRenderer from './QueryRenderer.jsx';\n\nconst QueryRendererWithTotals = ({ query, ...restProps }) => (\n  <QueryRenderer\n    queries={{\n      totals: {\n        ...query,\n        dimensions: [],\n        timeDimensions: query.timeDimensions\n          ? query.timeDimensions.map(td => ({ ...td, granularity: null }))\n          : undefined\n      },\n      main: query\n    }}\n    {...restProps}\n  />\n);\n\nQueryRendererWithTotals.defaultProps = {\n  query: null,\n  render: null,\n  queries: null,\n  loadSql: null\n};\n\nexport default QueryRendererWithTotals;\n","import React from 'react';\nimport { prop, uniqBy, equals, pick, clone } from 'ramda';\nimport {\n  ResultSet,\n  moveItemInArray,\n  defaultOrder,\n  flattenFilters,\n  getQueryMembers,\n  movePivotItem,\n  defaultHeuristics,\n} from '@cubejs-client/core';\nimport QueryRenderer from './QueryRenderer.jsx';\nimport CubeContext from './CubeContext';\n\nconst granularities = [\n  { name: undefined, title: 'w/o grouping' },\n  { name: 'second', title: 'Second' },\n  { name: 'minute', title: 'Minute' },\n  { name: 'hour', title: 'Hour' },\n  { name: 'day', title: 'Day' },\n  { name: 'week', title: 'Week' },\n  { name: 'month', title: 'Month' },\n  { name: 'year', title: 'Year' },\n];\n\nexport default class QueryBuilder extends React.Component {\n  // This is an anti-pattern, only kept for backward compatibility\n  // https://reactjs.org/blog/2018/06/07/you-probably-dont-need-derived-state.html#anti-pattern-unconditionally-copying-props-to-state\n  static getDerivedStateFromProps(props, state) {\n    if (props.query || props.vizState) {\n      const nextState = {\n        ...state,\n        ...(props.vizState || {}),\n      };\n\n      if (Array.isArray(props.query)) {\n        throw new Error('Array of queries is not supported.');\n      }\n\n      return {\n        ...nextState,\n        query: {\n          ...nextState.query,\n          ...(props.query || {}),\n        },\n      };\n    }\n    return null;\n  }\n\n  static resolveMember(type, { meta, query }) {\n    if (!meta) {\n      return [];\n    }\n\n    if (Array.isArray(query)) {\n      return query.reduce(\n        (memo, currentQuery) => memo.concat(\n          QueryBuilder.resolveMember(type, {\n            meta,\n            query: currentQuery,\n          })\n        ),\n        []\n      );\n    }\n\n    if (type === 'timeDimensions') {\n      return (query.timeDimensions || []).map((m, index) => ({\n        ...m,\n        dimension: {\n          ...meta.resolveMember(m.dimension, 'dimensions'),\n          granularities,\n        },\n        index,\n      }));\n    }\n\n    return (query[type] || []).map((m, index) => ({\n      index,\n      ...meta.resolveMember(m, type),\n    }));\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      query: props.defaultQuery || props.query,\n      chartType: props.defaultChartType,\n      validatedQuery: props.query, // deprecated, validatedQuery should not be set until after dry-run for safety\n      missingMembers: [],\n      isFetchingMeta: false,\n      dryRunResponse: null,\n      ...props.vizState, // deprecated\n      ...props.initialVizState,\n    };\n\n    this.mutexObj = {};\n  }\n\n  async componentDidMount() {\n    await this.fetchMeta();\n  }\n\n  async componentDidUpdate(prevProps) {\n    const { schemaVersion, onSchemaChange } = this.props;\n    const { meta } = this.state;\n\n    if (prevProps.schemaVersion !== schemaVersion) {\n      try {\n        const newMeta = await this.cubejsApi().meta();\n        if (!equals(newMeta, meta) && typeof onSchemaChange === 'function') {\n          onSchemaChange({\n            schemaVersion,\n            refresh: async () => {\n              await this.fetchMeta();\n            },\n          });\n        }\n      } catch (error) {\n        // eslint-disable-next-line\n        this.setState({ metaError: error });\n      }\n    }\n  }\n\n  fetchMeta = async () => {\n    let meta;\n    let metaError = null;\n\n    try {\n      this.setState({ isFetchingMeta: true });\n      meta = await this.cubejsApi().meta();\n    } catch (error) {\n      metaError = error;\n    }\n\n    this.setState(\n      {\n        meta,\n        metaError,\n        isFetchingMeta: false,\n      },\n      () => {\n        // Run update query to force viz state update\n        // This will catch any new missing members, and also validate the query against the new meta\n        this.updateQuery({});\n      }\n    );\n  };\n\n  cubejsApi() {\n    const { cubejsApi } = this.props;\n    // eslint-disable-next-line react/destructuring-assignment\n    return cubejsApi || (this.context && this.context.cubejsApi);\n  }\n\n  getMissingMembers(query, meta) {\n    if (!meta) {\n      return [];\n    }\n\n    return getQueryMembers(query)\n      .map((member) => {\n        const resolvedMember = meta.resolveMember(member, ['measures', 'dimensions', 'segments']);\n        if (resolvedMember.error) {\n          return member;\n        }\n        return false;\n      })\n      .filter(Boolean);\n  }\n\n  isQueryPresent() {\n    const { query } = this.state;\n    return QueryRenderer.isQueryPresent(query);\n  }\n\n  prepareRenderProps(queryRendererProps) {\n    const getName = (member) => member.name;\n    const toTimeDimension = (member) => {\n      const rangeSelection = member.compareDateRange\n        ? { compareDateRange: member.compareDateRange }\n        : { dateRange: member.dateRange };\n      return {\n        dimension: member.dimension.name,\n        granularity: member.granularity,\n        ...rangeSelection,\n      };\n    };\n    const toFilter = (member) => ({\n      member: member.member?.name || member.dimension?.name,\n      operator: member.operator,\n      values: member.values,\n    });\n\n    const updateMethods = (memberType, toQuery = getName) => ({\n      add: (member) => {\n        const { query } = this.state;\n        this.updateQuery({\n          [memberType]: (query[memberType] || []).concat(toQuery(member)),\n        });\n      },\n      remove: (member) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1);\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n      update: (member, updateWith) => {\n        const { query } = this.state;\n        const members = (query[memberType] || []).concat([]);\n        members.splice(member.index, 1, toQuery(updateWith));\n        return this.updateQuery({\n          [memberType]: members,\n        });\n      },\n    });\n\n    const {\n      meta,\n      metaError,\n      query,\n      queryError,\n      chartType,\n      pivotConfig,\n      validatedQuery,\n      missingMembers,\n      isFetchingMeta,\n      dryRunResponse,\n    } = this.state;\n\n    const flatFilters = uniqBy(\n      prop('member'),\n      flattenFilters((meta && query.filters) || []).map((filter) => ({\n        ...filter,\n        member: filter.member || filter.dimension,\n      }))\n    );\n\n    const filters = flatFilters.map((m, i) => ({\n      ...m,\n      dimension: meta.resolveMember(m.member || m.dimension, ['dimensions', 'measures']),\n      operators: meta.filterOperatorsForMember(m.member || m.dimension, ['dimensions', 'measures']),\n      index: i,\n    }));\n\n    const measures = QueryBuilder.resolveMember('measures', this.state);\n    const dimensions = QueryBuilder.resolveMember('dimensions', this.state);\n    const timeDimensions = QueryBuilder.resolveMember('timeDimensions', this.state);\n    const segments = ((meta && query.segments) || []).map((m, i) => ({\n      index: i,\n      ...meta.resolveMember(m, 'segments'),\n    }));\n\n    const availableMeasures = meta ? meta.membersForQuery(query, 'measures') : [];\n    const availableDimensions = meta ? meta.membersForQuery(query, 'dimensions') : [];\n    const availableSegments = meta ? meta.membersForQuery(query, 'segments') : [];\n\n    let orderMembers = uniqBy(prop('id'), [\n      ...(Array.isArray(query.order) ? query.order : Object.entries(query.order || {})).map(([id, order]) => ({\n        id,\n        order,\n        title: meta ? meta.resolveMember(id, ['measures', 'dimensions']).title : '',\n      })),\n      // uniqBy prefers first, so these will only be added if not already in the query\n      ...[...measures, ...dimensions].map(({ name, title }) => ({ id: name, title, order: 'none' })),\n    ]);\n\n    // Preserve order until the members change or manually re-ordered\n    // This is needed so that when an order member becomes active, it doesn't jump to the top of the list\n    const orderMemberOrderKey = JSON.stringify(orderMembers.map(({ id }) => id).sort());\n    if (this.orderMemberOrderKey && this.orderMemberOrder && orderMemberOrderKey === this.orderMemberOrderKey) {\n      orderMembers = this.orderMemberOrder.map((id) => orderMembers.find((member) => member.id === id));\n    } else {\n      this.orderMemberOrderKey = orderMemberOrderKey;\n      this.orderMemberOrder = orderMembers.map(({ id }) => id);\n    }\n\n    return {\n      meta,\n      metaError,\n      query,\n      error: queryError, // Match same name as QueryRenderer prop\n      validatedQuery,\n      isQueryPresent: this.isQueryPresent(),\n      chartType,\n      measures,\n      dimensions,\n      timeDimensions,\n      segments,\n      filters,\n      orderMembers,\n      availableMeasures,\n      availableDimensions,\n      availableTimeDimensions: availableDimensions.filter((m) => m.type === 'time'),\n      availableSegments,\n      updateQuery: (queryUpdate) => this.updateQuery(queryUpdate),\n      updateMeasures: updateMethods('measures'),\n      updateDimensions: updateMethods('dimensions'),\n      updateSegments: updateMethods('segments'),\n      updateTimeDimensions: updateMethods('timeDimensions', toTimeDimension),\n      updateFilters: updateMethods('filters', toFilter),\n      updateChartType: (newChartType) => this.updateVizState({ chartType: newChartType }),\n      updateOrder: {\n        set: (memberId, newOrder = 'asc') => {\n          this.updateQuery({\n            order: orderMembers\n              .map((orderMember) => ({\n                ...orderMember,\n                order: orderMember.id === memberId ? newOrder : orderMember.order,\n              }))\n              .reduce((acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc), []),\n          });\n        },\n        update: (order) => {\n          this.updateQuery({\n            order,\n          });\n        },\n        reorder: (sourceIndex, destinationIndex) => {\n          if (sourceIndex == null || destinationIndex == null) {\n            return;\n          }\n\n          this.updateQuery({\n            order: moveItemInArray(orderMembers, sourceIndex, destinationIndex).reduce(\n              (acc, { id, order }) => (order !== 'none' ? [...acc, [id, order]] : acc),\n              []\n            ),\n          });\n        },\n      },\n      pivotConfig,\n      updatePivotConfig: {\n        moveItem: ({ sourceIndex, destinationIndex, sourceAxis, destinationAxis }) => {\n          this.updateVizState({\n            pivotConfig: movePivotItem(pivotConfig, sourceIndex, destinationIndex, sourceAxis, destinationAxis),\n          });\n        },\n        update: (config) => {\n          const { limit } = config;\n\n          this.updateVizState({\n            pivotConfig: {\n              ...pivotConfig,\n              ...config,\n            },\n            ...(limit ? { query: { ...query, limit } } : null),\n          });\n        },\n      },\n      missingMembers,\n      refresh: this.fetchMeta,\n      isFetchingMeta,\n      dryRunResponse,\n      ...queryRendererProps,\n    };\n  }\n\n  updateQuery(queryUpdate) {\n    const { query } = this.state;\n\n    this.updateVizState({\n      query: {\n        ...query,\n        ...queryUpdate,\n      },\n    });\n  }\n\n  async updateVizState(state) {\n    const { setQuery, setVizState } = this.props;\n    const { query: stateQuery, pivotConfig: statePivotConfig, chartType, meta } = this.state;\n\n    const finalState = this.applyStateChangeHeuristics(state);\n    if (!finalState.query) {\n      finalState.query = { ...stateQuery };\n    }\n\n    let vizStateSent = null;\n    const handleVizStateChange = (currentState) => {\n      const { onVizStateChanged } = this.props;\n      if (onVizStateChanged) {\n        const newVizState = pick(['chartType', 'pivotConfig', 'query'], currentState);\n        // Don't run callbacks more than once unless the viz state has changed since last time\n        if (!vizStateSent || !equals(vizStateSent, newVizState)) {\n          onVizStateChanged(newVizState);\n          vizStateSent = clone(newVizState); // use clone to make sure we don't save object references\n        }\n      }\n    };\n\n    // deprecated, setters replaced by onVizStateChanged\n    const runSetters = (currentState) => {\n      if (setVizState) {\n        setVizState(pick(['chartType', 'pivotConfig', 'query'], currentState));\n      }\n      if (currentState.query && setQuery) {\n        setQuery(currentState.query);\n      }\n    };\n\n    if (finalState.shouldApplyHeuristicOrder) {\n      finalState.query.order = defaultOrder(finalState.query);\n    }\n\n    finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(\n      finalState.query,\n      finalState.pivotConfig !== undefined ? finalState.pivotConfig : statePivotConfig\n    );\n\n    finalState.missingMembers = this.getMissingMembers(finalState.query, meta);\n    finalState.chartType = finalState.chartType || state.chartType || chartType;\n\n    // deprecated\n    runSetters({\n      ...state,\n      query: finalState.query,\n    });\n\n    // Update optimistically so that UI does not stutter\n    this.setState({\n      ...finalState,\n      queryError: null,\n    });\n\n    handleVizStateChange(finalState);\n\n    if (QueryRenderer.isQueryPresent(finalState.query) && finalState.missingMembers.length === 0) {\n      try {\n        const response = await this.cubejsApi().dryRun(finalState.query, {\n          mutexObj: this.mutexObj,\n        });\n\n        if (finalState.shouldApplyHeuristicOrder) {\n          finalState.query.order = (response.queryOrder || []).reduce((memo, current) => ({ ...memo, ...current }), {});\n        }\n\n        finalState.pivotConfig = ResultSet.getNormalizedPivotConfig(response.pivotQuery, finalState.pivotConfig);\n        finalState.validatedQuery = this.validatedQuery(finalState);\n        finalState.dryRunResponse = response;\n\n        // deprecated\n        if (QueryRenderer.isQueryPresent(stateQuery)) {\n          runSetters({\n            ...this.state,\n            ...finalState,\n          });\n        }\n      } catch (error) {\n        console.error(error);\n        this.setState({\n          queryError: error,\n        });\n      }\n    }\n\n    this.setState(finalState, () => handleVizStateChange(this.state));\n  }\n\n  validatedQuery(state) {\n    const { query } = state || this.state;\n\n    return {\n      ...query,\n      filters: (query.filters || []).filter((f) => f.operator),\n    };\n  }\n\n  defaultHeuristics(newState) {\n    const { query, sessionGranularity, meta } = this.state;\n\n    return defaultHeuristics(newState, query, {\n      meta,\n      sessionGranularity: sessionGranularity || 'day',\n    });\n  }\n\n  applyStateChangeHeuristics(newState) {\n    const { stateChangeHeuristics, disableHeuristics } = this.props;\n    if (disableHeuristics) {\n      return newState;\n    }\n    return (stateChangeHeuristics && stateChangeHeuristics(this.state, newState)) || this.defaultHeuristics(newState);\n  }\n\n  render() {\n    const { query } = this.state;\n    const { cubejsApi, render, wrapWithQueryRenderer } = this.props;\n\n    if (wrapWithQueryRenderer) {\n      return (\n        <QueryRenderer\n          query={query}\n          cubejsApi={cubejsApi}\n          resetResultSetOnChange={false}\n          render={(queryRendererProps) => {\n            if (render) {\n              return render(this.prepareRenderProps(queryRendererProps));\n            }\n            return null;\n          }}\n        />\n      );\n    } else {\n      if (render) {\n        return render(this.prepareRenderProps());\n      }\n      return null;\n    }\n  }\n}\n\nQueryBuilder.contextType = CubeContext;\n\nQueryBuilder.defaultProps = {\n  cubejsApi: null,\n  stateChangeHeuristics: null,\n  disableHeuristics: false,\n  render: null,\n  wrapWithQueryRenderer: true,\n  defaultChartType: 'line',\n  defaultQuery: {},\n  initialVizState: null,\n  onVizStateChanged: null,\n\n  // deprecated\n  query: null,\n  setQuery: null,\n  vizState: null,\n  setVizState: null,\n};\n","import React from 'react';\nimport CubeContext from './CubeContext';\n\nconst CubeProvider = ({ cubejsApi, children }) => (\n  <CubeContext.Provider value={{ cubejsApi }}>\n    {children}\n  </CubeContext.Provider>\n);\n\nexport default CubeProvider;\n","import { useRef } from 'react';\nimport { equals } from 'ramda';\n\nexport default function useDeepCompareMemoize(value) {\n  const ref = useRef([]);\n\n  if (!equals(value, ref.current)) {\n    ref.current = value;\n  }\n\n  return ref.current;\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent, areQueriesEqual } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\n\nexport default function useCubeQuery(query, options = {}) {\n  const mutexRef = useRef({});\n  const isMounted = useRef(true);\n  const [currentQuery, setCurrentQuery] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [resultSet, setResultSet] = useState(null);\n  const [progress, setProgress] = useState(null);\n  const [error, setError] = useState(null);\n  const context = useContext(CubeContext);\n\n  let subscribeRequest = null;\n\n  const progressCallback = ({ progressResponse }) => setProgress(progressResponse);\n\n  async function fetch() {\n    const { resetResultSetOnChange } = options;\n    const cubejsApi = options.cubejsApi || context?.cubejsApi;\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    if (resetResultSetOnChange) {\n      setResultSet(null);\n    }\n\n    setError(null);\n    setLoading(true);\n\n    try {\n      const response = await cubejsApi.load(query, {\n        mutexObj: mutexRef.current,\n        mutexKey: 'query',\n        progressCallback,\n      });\n\n      if (isMounted.current) {\n        setResultSet(response);\n        setProgress(null);\n      }\n    } catch (error) {\n      if (isMounted.current) {\n        setError(error);\n        setResultSet(null);\n        setProgress(null);\n      }\n    }\n\n    if (isMounted.current) {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    const { skip = false, resetResultSetOnChange } = options;\n\n    const cubejsApi = options.cubejsApi || context?.cubejsApi;\n\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    async function loadQuery() {\n      if (!skip && isQueryPresent(query)) {\n        if (!areQueriesEqual(currentQuery, query)) {\n          if (resetResultSetOnChange == null || resetResultSetOnChange) {\n            setResultSet(null);\n          }\n          setCurrentQuery(query);\n        }\n\n        setError(null);\n        setLoading(true);\n\n        try {\n          if (subscribeRequest) {\n            await subscribeRequest.unsubscribe();\n            subscribeRequest = null;\n          }\n\n          if (options.subscribe) {\n            subscribeRequest = cubejsApi.subscribe(\n              query,\n              {\n                mutexObj: mutexRef.current,\n                mutexKey: 'query',\n                progressCallback,\n              },\n              (e, result) => {\n                if (isMounted.current) {\n                  if (e) {\n                    setError(e);\n                  } else {\n                    setResultSet(result);\n                  }\n                  setLoading(false);\n                  setProgress(null);\n                }\n              }\n            );\n          } else {\n            await fetch();\n          }\n        } catch (e) {\n          if (isMounted.current) {\n            setError(e);\n            setResultSet(null);\n            setLoading(false);\n            setProgress(null);\n          }\n        }\n      }\n    }\n\n    loadQuery();\n\n    return () => {\n      if (subscribeRequest) {\n        subscribeRequest.unsubscribe();\n        subscribeRequest = null;\n      }\n    };\n  }, useDeepCompareMemoize([query, Object.keys((query && query.order) || {}), options, context]));\n\n  return {\n    isLoading,\n    resultSet,\n    error,\n    progress,\n    previousQuery: currentQuery,\n    refetch: fetch\n  };\n}\n","import { useContext, useEffect, useState, useRef } from 'react';\nimport { isQueryPresent } from '@cubejs-client/core';\n\nimport CubeContext from '../CubeContext';\nimport useDeepCompareMemoize from './deep-compare-memoize';\n\nexport default function useDryRun(query, options = {}) {\n  const context = useContext(CubeContext);\n  const mutexRef = useRef({});\n  const [response, setResponse] = useState(null);\n  const [isLoading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    let isMounted = true;\n    const { skip = false } = options;\n\n    const cubejsApi = options.cubejsApi || (context && context.cubejsApi);\n    if (!cubejsApi) {\n      throw new Error('Cube.js API client is not provided');\n    }\n\n    async function loadQuery() {\n      if (!skip && query && isQueryPresent(query)) {\n        setError(null);\n        setLoading(true);\n\n        try {\n          const dryRunResponse = await cubejsApi.dryRun(query, {\n            mutexObj: mutexRef.current,\n            mutexKey: 'dry-run',\n          });\n          if (isMounted) {\n            setResponse(dryRunResponse);\n            setLoading(false);\n          }\n        } catch (err) {\n          if (isMounted) {\n            setError(err);\n            setLoading(false);\n          }\n        }\n      }\n    }\n\n    loadQuery();\n\n    return () => {\n      isMounted = false;\n    };\n  }, useDeepCompareMemoize([query, Object.keys((query && query.order) || {}), options, context]));\n\n  return {\n    isLoading,\n    error,\n    response,\n  };\n}\n"],"names":["createContext","QueryRenderer","props","state","mutexObj","query","queries","load","loadQueries","nextProps","nextState","render","cubejsApi","loadSql","updateOnlyOnStateChange","equals","prevProps","context","resetResultSetOnChange","setState","isLoading","error","sqlQuery","resultSet","isQueryPresent","sql","mutexKey","then","Promise","all","resultPromises","toPairs","map","name","r","fromPairs","loadState","loadingState","React","Component","contextType","CubeContext","defaultProps","QueryRendererWithTotals","restProps","totals","dimensions","timeDimensions","td","granularity","undefined","main","granularities","title","QueryBuilder","metaError","isFetchingMeta","meta","updateQuery","defaultQuery","chartType","defaultChartType","validatedQuery","missingMembers","dryRunResponse","vizState","initialVizState","fetchMeta","schemaVersion","onSchemaChange","newMeta","refresh","getQueryMembers","member","resolvedMember","resolveMember","filter","Boolean","queryRendererProps","getName","toTimeDimension","rangeSelection","compareDateRange","dateRange","dimension","toFilter","operator","values","updateMethods","memberType","toQuery","add","concat","remove","members","splice","index","update","updateWith","queryError","pivotConfig","flatFilters","uniqBy","prop","flattenFilters","filters","m","i","operators","filterOperatorsForMember","measures","segments","availableMeasures","membersForQuery","availableDimensions","availableSegments","orderMembers","Array","isArray","order","Object","entries","id","orderMemberOrderKey","JSON","stringify","sort","orderMemberOrder","find","availableTimeDimensions","type","queryUpdate","updateMeasures","updateDimensions","updateSegments","updateTimeDimensions","updateFilters","updateChartType","newChartType","updateVizState","updateOrder","set","memberId","newOrder","orderMember","reduce","acc","reorder","sourceIndex","destinationIndex","moveItemInArray","updatePivotConfig","moveItem","sourceAxis","destinationAxis","movePivotItem","config","limit","setQuery","setVizState","stateQuery","statePivotConfig","finalState","applyStateChangeHeuristics","vizStateSent","handleVizStateChange","currentState","onVizStateChanged","newVizState","pick","clone","runSetters","shouldApplyHeuristicOrder","defaultOrder","ResultSet","getNormalizedPivotConfig","getMissingMembers","length","dryRun","response","queryOrder","memo","current","pivotQuery","console","f","newState","sessionGranularity","defaultHeuristics","stateChangeHeuristics","disableHeuristics","wrapWithQueryRenderer","prepareRenderProps","Error","currentQuery","CubeProvider","children","useDeepCompareMemoize","value","ref","useRef","useCubeQuery","options","mutexRef","isMounted","useState","setCurrentQuery","setLoading","setResultSet","progress","setProgress","setError","useContext","subscribeRequest","progressCallback","progressResponse","fetch","useEffect","skip","loadQuery","areQueriesEqual","unsubscribe","subscribe","e","result","keys","previousQuery","refetch","useDryRun","setResponse"],"mappings":"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"}