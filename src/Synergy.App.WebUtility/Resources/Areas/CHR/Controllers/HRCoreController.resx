<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Actual" xml:space="preserve">
    <value>Actual</value>
  </data>
  <data name="ActualHours" xml:space="preserve">
    <value>Actual Hours</value>
  </data>
  <data name="ActualText" xml:space="preserve">
    <value>Actual Text</value>
  </data>
  <data name="AddJobCriteria" xml:space="preserve">
    <value>Add Job Criteria</value>
  </data>
  <data name="AddOtherInformation" xml:space="preserve">
    <value>Add Other Information</value>
  </data>
  <data name="AddSkills" xml:space="preserve">
    <value>Add Skills</value>
  </data>
  <data name="AddTimePermission" xml:space="preserve">
    <value>Add Time Permission</value>
  </data>
  <data name="AttendanceDate" xml:space="preserve">
    <value>Attendance Date</value>
  </data>
  <data name="AttendanceStatus" xml:space="preserve">
    <value>Attendance Status</value>
  </data>
  <data name="Calculated" xml:space="preserve">
    <value>Calculated</value>
  </data>
  <data name="Can'tdeletethisrecord" xml:space="preserve">
    <value>Can't delete this record</value>
  </data>
  <data name="ClearanceForm" xml:space="preserve">
    <value>Clearance Form</value>
  </data>
  <data name="Criteria" xml:space="preserve">
    <value>Criteria</value>
  </data>
  <data name="CriteriaType" xml:space="preserve">
    <value>Criteria Type</value>
  </data>
  <data name="Descriptionisrequired" xml:space="preserve">
    <value>Description is required</value>
  </data>
  <data name="EmployeeName" xml:space="preserve">
    <value>Employee Name</value>
  </data>
  <data name="EmployeeNo" xml:space="preserve">
    <value>Employee No</value>
  </data>
  <data name="EmployeeStatus" xml:space="preserve">
    <value>Employee Status</value>
  </data>
  <data name="Enddateisempty" xml:space="preserve">
    <value>End date is empty</value>
  </data>
  <data name="Enddateshouldbegreaterthanstartdate" xml:space="preserve">
    <value>End date should be greater than start date</value>
  </data>
  <data name="Experience" xml:space="preserve">
    <value>Experience</value>
  </data>
  <data name="Experienceisrequired" xml:space="preserve">
    <value>Experience is required</value>
  </data>
  <data name="InvalidExpiryDate" xml:space="preserve">
    <value>Invalid Expiry Date</value>
  </data>
  <data name="InvalidRequiredDate" xml:space="preserve">
    <value>Invalid Required Date</value>
  </data>
  <data name="Job" xml:space="preserve">
    <value>Job</value>
  </data>
  <data name="JobCategory" xml:space="preserve">
    <value>Job Category</value>
  </data>
  <data name="JobCategoryisrequired" xml:space="preserve">
    <value>Job Category is required</value>
  </data>
  <data name="JobCriteria" xml:space="preserve">
    <value>Job Criteria</value>
  </data>
  <data name="JobDescription" xml:space="preserve">
    <value>Job Description</value>
  </data>
  <data name="JobDesCriteriaType" xml:space="preserve">
    <value>Job Des Criteria Type</value>
  </data>
  <data name="JobName" xml:space="preserve">
    <value>Job Name</value>
  </data>
  <data name="JobTitle" xml:space="preserve">
    <value>Job Title</value>
  </data>
  <data name="LaskWorkingDate" xml:space="preserve">
    <value>Lask Working Date</value>
  </data>
  <data name="ListOfValueType" xml:space="preserve">
    <value>List Of Value Type</value>
  </data>
  <data name="Location" xml:space="preserve">
    <value>Location</value>
  </data>
  <data name="Locationisrequired" xml:space="preserve">
    <value>Location is required</value>
  </data>
  <data name="ManageListOfValue" xml:space="preserve">
    <value>Manage ListOfValue</value>
  </data>
  <data name="NoOfPositionisrequired" xml:space="preserve">
    <value>No Of Position is required</value>
  </data>
  <data name="Organisation" xml:space="preserve">
    <value>Organisation</value>
  </data>
  <data name="Organization" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="OrganizationName" xml:space="preserve">
    <value>Organization Name</value>
  </data>
  <data name="OtherInformation" xml:space="preserve">
    <value>Other Information</value>
  </data>
  <data name="OverTimeHours" xml:space="preserve">
    <value>Over Time Hours</value>
  </data>
  <data name="Permitted" xml:space="preserve">
    <value>Permitted</value>
  </data>
  <data name="Person" xml:space="preserve">
    <value>Person</value>
  </data>
  <data name="Pleasecreateuserforthisperson" xml:space="preserve">
    <value>Please create user for this person</value>
  </data>
  <data name="PleaseMapUserToPersonFromManagePerson" xml:space="preserve">
    <value>Please Map User To Person From Manage Person</value>
  </data>
  <data name="PleaseSelectCriteriaType" xml:space="preserve">
    <value>Please Select Criteria Type</value>
  </data>
  <data name="Qualification" xml:space="preserve">
    <value>Qualification</value>
  </data>
  <data name="Resignation" xml:space="preserve">
    <value>Resignation</value>
  </data>
  <data name="Resignation/TerminationDate" xml:space="preserve">
    <value>Resignation/Termination Date</value>
  </data>
  <data name="Responsibilities" xml:space="preserve">
    <value>Responsibilities</value>
  </data>
  <data name="Responsibility" xml:space="preserve">
    <value>Responsibility</value>
  </data>
  <data name="Responsiblities" xml:space="preserve">
    <value>Responsiblities</value>
  </data>
  <data name="RosterHours" xml:space="preserve">
    <value>Roster Hours</value>
  </data>
  <data name="RosterText" xml:space="preserve">
    <value>Roster Text</value>
  </data>
  <data name="SelectLocation" xml:space="preserve">
    <value>Select Location</value>
  </data>
  <data name="SelectSignInType" xml:space="preserve">
    <value>Select Sign In Type</value>
  </data>
  <data name="ServiceNo" xml:space="preserve">
    <value>Service No</value>
  </data>
  <data name="ServiceStatus" xml:space="preserve">
    <value>Service Status</value>
  </data>
  <data name="ShortTimeHours" xml:space="preserve">
    <value>Short Time Hours</value>
  </data>
  <data name="SignInType" xml:space="preserve">
    <value>Sign In Type</value>
  </data>
  <data name="Skills" xml:space="preserve">
    <value>Skills</value>
  </data>
  <data name="TaskTemplate" xml:space="preserve">
    <value>Task Template</value>
  </data>
  <data name="Termination/Resignation" xml:space="preserve">
    <value>Termination/Resignation</value>
  </data>
  <data name="TerminationRequest" xml:space="preserve">
    <value>Termination Request</value>
  </data>
  <data name="TimePermissionRequest" xml:space="preserve">
    <value>Time Permission Request</value>
  </data>
  <data name="ViewListOfValue" xml:space="preserve">
    <value>View List Of Value</value>
  </data>
  <data name="Weightage" xml:space="preserve">
    <value>Weightage</value>
  </data>
  <data name="Weightageshouldnotbegreaterthan100" xml:space="preserve">
    <value>Weightage should not be greater than 100</value>
  </data>
</root>