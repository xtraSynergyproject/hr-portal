<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Alldocumentswillbeuploadedundergeneraldocumentcategoryasdraft" xml:space="preserve">
    <value>All documents will be uploaded under general document category as draft</value>
  </data>
  <data name="ApprovalRequest" xml:space="preserve">
    <value>Approval Request</value>
  </data>
  <data name="Archive" xml:space="preserve">
    <value>Archive</value>
  </data>
  <data name="Archived" xml:space="preserve">
    <value>Archived</value>
  </data>
  <data name="ArchivedFailed!" xml:space="preserve">
    <value>Archived Failed!</value>
  </data>
  <data name="ArchivedSuccessfully" xml:space="preserve">
    <value>Archived Successfully</value>
  </data>
  <data name="Cannotmovedocumenttoworkspace!!" xml:space="preserve">
    <value>Can not move document to workspace!!</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="CreateDashboard" xml:space="preserve">
    <value>Create Dashboard</value>
  </data>
  <data name="CreateDashboardItem" xml:space="preserve">
    <value>Create Dashboard Item</value>
  </data>
  <data name="CreateDocument" xml:space="preserve">
    <value>Create Document</value>
  </data>
  <data name="CreateFolder" xml:space="preserve">
    <value>Create Folder</value>
  </data>
  <data name="CreateNewWorkspace" xml:space="preserve">
    <value>Create New Workspace</value>
  </data>
  <data name="CreateWorkspace" xml:space="preserve">
    <value>Create Workspace</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>Cut</value>
  </data>
  <data name="DeleteDashboard" xml:space="preserve">
    <value>Delete Dashboard</value>
  </data>
  <data name="DeleteDashboardItem" xml:space="preserve">
    <value>Delete Dashboard Item</value>
  </data>
  <data name="DeletedSuccessfully" xml:space="preserve">
    <value>Deleted Successfully</value>
  </data>
  <data name="Details" xml:space="preserve">
    <value>Details</value>
  </data>
  <data name="Document" xml:space="preserve">
    <value>Document</value>
  </data>
  <data name="DocumentRestoreSuccessfully" xml:space="preserve">
    <value>Document Restore Successfully</value>
  </data>
  <data name="DocumentType" xml:space="preserve">
    <value>Document Type</value>
  </data>
  <data name="DocumentUploadedFailed,TryAgain" xml:space="preserve">
    <value>Document Uploaded Failed, Try Again</value>
  </data>
  <data name="DownloadFile" xml:space="preserve">
    <value>Download File</value>
  </data>
  <data name="DoyoureallywanttoArchive?" xml:space="preserve">
    <value>Do you really want to Archive?</value>
  </data>
  <data name="DoyoureallywanttoDelete?" xml:space="preserve">
    <value>Do you really want to Delete?</value>
  </data>
  <data name="Doyoureallywanttomove?" xml:space="preserve">
    <value>Do you really want to move?</value>
  </data>
  <data name="DoyoureallywanttoRestoretheDocument?" xml:space="preserve">
    <value>Do you really want to Restore the Document?</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="EditDashboard" xml:space="preserve">
    <value>Edit Dashboard</value>
  </data>
  <data name="EditDashboardItem" xml:space="preserve">
    <value>Edit Dashboard Item</value>
  </data>
  <data name="EditFolder" xml:space="preserve">
    <value>Edit Folder</value>
  </data>
  <data name="EditWorkspace" xml:space="preserve">
    <value>Edit Workspace</value>
  </data>
  <data name="FileNameContains" xml:space="preserve">
    <value>File Name Contains</value>
  </data>
  <data name="FolderNameisrequired" xml:space="preserve">
    <value>Folder Name is required</value>
  </data>
  <data name="FolderPath" xml:space="preserve">
    <value>Folder Path</value>
  </data>
  <data name="Internalservererror." xml:space="preserve">
    <value>Internal server error.</value>
  </data>
  <data name="ManagePermission" xml:space="preserve">
    <value>Manage Permission</value>
  </data>
  <data name="ManageWorkspace" xml:space="preserve">
    <value>Manage Workspace</value>
  </data>
  <data name="ModifiedDate" xml:space="preserve">
    <value>Modified Date</value>
  </data>
  <data name="NewDocument" xml:space="preserve">
    <value>New Document</value>
  </data>
  <data name="NewFolder" xml:space="preserve">
    <value>New Folder</value>
  </data>
  <data name="NewWorkspace" xml:space="preserve">
    <value>New Workspace</value>
  </data>
  <data name="OpenDocumentLocation" xml:space="preserve">
    <value>Open Document Location</value>
  </data>
  <data name="ParentName" xml:space="preserve">
    <value>Parent Name</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>Paste</value>
  </data>
  <data name="PleaseselectTemplate" xml:space="preserve">
    <value>Please select Template</value>
  </data>
  <data name="PleaseselectWorkspace" xml:space="preserve">
    <value>Please select Workspace</value>
  </data>
  <data name="Pleaseuploadfolderbeforesave" xml:space="preserve">
    <value>Please upload folder before save</value>
  </data>
  <data name="Preview" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="PreviewAttachment" xml:space="preserve">
    <value>Preview Attachment</value>
  </data>
  <data name="PreviewDashboard" xml:space="preserve">
    <value>Preview Dashboard</value>
  </data>
  <data name="RaiseApprovalRequest" xml:space="preserve">
    <value>Raise Approval Request</value>
  </data>
  <data name="Refresh" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="Rename" xml:space="preserve">
    <value>Rename</value>
  </data>
  <data name="Restore" xml:space="preserve">
    <value>Restore</value>
  </data>
  <data name="SavewillbeenabledafteruploadingallfilesLargefoldermaytakemoretimetocomplete" xml:space="preserve">
    <value>Save button will be enabled after uploading all files.Large folder may take more time to complete</value>
  </data>
  <data name="Selectfiletoimport..." xml:space="preserve">
    <value>Select file to import...</value>
  </data>
  <data name="Template" xml:space="preserve">
    <value>Template</value>
  </data>
  <data name="TemplateField" xml:space="preserve">
    <value>TemplateField</value>
  </data>
  <data name="TemplateProperties" xml:space="preserve">
    <value>TemplateProperties</value>
  </data>
  <data name="UploadFiles" xml:space="preserve">
    <value>Upload Files</value>
  </data>
  <data name="UploadFolder" xml:space="preserve">
    <value>Upload Folder</value>
  </data>
  <data name="UploadType" xml:space="preserve">
    <value>Upload Type</value>
  </data>
  <data name="v" xml:space="preserve">
    <value>v</value>
  </data>
  <data name="Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ViewApprovalRequest" xml:space="preserve">
    <value>View Approval Request</value>
  </data>
  <data name="ViewDetails" xml:space="preserve">
    <value>View Details</value>
  </data>
  <data name="ViewDocument" xml:space="preserve">
    <value>View Document</value>
  </data>
  <data name="ViewPermission" xml:space="preserve">
    <value>View Permission</value>
  </data>
  <data name="ViewWorkflow" xml:space="preserve">
    <value>View Work flow</value>
  </data>
  <data name="Youcannotenterspecialcharacterslike&lt;html&gt;,&lt;div&gt; etc..." xml:space="preserve">
    <value>You cannot enter special characters like &lt;html&gt;, &lt;div&gt; etc...</value>
  </data>
</root>