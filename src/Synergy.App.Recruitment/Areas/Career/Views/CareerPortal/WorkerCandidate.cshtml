@{

    ViewBag.Title = "Worker Candidate";
    Layout = null;
}
<br />

<button class="btn btn-primary" onclick="saveAll()">Save All</button>
<br />
<br />

<div id="my"></div>

<script>
    function saveAll() {
        var data = $('#my').jexcel('getData');
        var dataObj = [];
        for (var x = 0; x <= data.length - 1; x++) {
            if (data[x][0] != "" && data[x][0] != "Add Candidate Name Here") {
                var obj =  {
                    candidateName: data[x][0] ,
                    position: data[x][1] ,
                    DOB: data[x][2] ,
                    age: data[x][3] ,
                    mobile: data[x][4] ,
                    passportNumber: data[x][5] ,
                    passportCountry: data[x][6] ,
                    passportExpiry: data[x][7] ,
                    passportStatus: data[x][8] ,
                    remarks: data[x][9] ,
                    salary_QAR: data[x][10] ,
                    workExperienceAbroad: data[x][11] ,
                    workExperienceIndia: data[x][12] ,
                    totalWorkExperience: data[x][13] ,
                    documentLink: data[x][14] ,
                }
                dataObj.push(obj);
            }
        }
        console.log(dataObj);
        $.ajax({
            type: "POST",
            url: "/career/careerPortal/ManageWorkerDetails",
            data: dataObj,
            dataType: "json",
            success: function (result) {
                
                alert("Data Saved Successfully");
            },
            error: function (xhr, httpStatusMessage, customErrorMessage) {
                alert(customErrorMessage);
            }
        });
    }

    var uploadColumn = {
        // Methods
        closeEditor: function (cell, save) {
            var value = cell.children[0].value;
            cell.innerHTML = value;
            return value;
        },
        openEditor: function (cell) {
            // Create input
            var element = document.createElement('button');
            element.innerText = "upload"
            element.value = cell.innerHTML;
            element.onclick = function (event) {
                alert("fdf");
            }
            // Update cell
            cell.innerHTML = "";
            cell.appendChild(element);

            // Focus on the element
            element.focus();
        },
        getValue: function (cell) {
            return cell.innerHTML;
        },
        setValue: function (cell, value) {
            cell.innerHTML = value;
        }
    }

    getPosition();
    var positionSrc = [];
    var countrySrc = [];
    var passposrtStatusSrc = [];

    function getPosition() {

            $.ajax({
                url: "/career/careerPortal/GetJobAdvertismentForWorker?jobAdvId=@ViewBag.JobAdvId",
                success: function (res) {
                    position = res;
                    for (var x = 0; x <= position.length - 1; x++) {
                        obj =
                            {
                                id: position[x].JobId, name: position[x].JobName
                        };
                        positionSrc.push(obj);
                    }

                    getCountry();
                }
            });
    }

    function getCountry() {

            $.ajax({
                url: "/career/careerPortal/GetCountry",
                success: function (res) {
                    data = res;
                    for (var x = 0; x <= data.length - 1; x++) {
                        obj =
                            {
                            id: data[x].Id,
                            name: data[x].Name
                        };
                        countrySrc.push(obj);
                    }

                    getPassportStatus();
                }
            });
    }

    function getPassportStatus() {
            $.ajax({
                url: "/Cms/LOV/GetListOfValueList?type=LOV_PASSPORTSTATUS",
                success: function (res) {
                    data = res;
                    for (var x = 0; x <= data.length - 1; x++) {
                        obj =
                            {
                            id: data[x].Id,
                            name: data[x].Name
                        };
                        passposrtStatusSrc.push(obj);
                    }

                    getWorkerList();
                }
            });
    }

    function getWorkerList() {
        $.ajax({
        url: "/career/careerPortal/ReadGridWorkerDetails",
        success: function (res) {
            debugger;
            if (res.length > 0) {
                var data = res;
                $('#my').jexcel({
                    onchange: changed,
                    rowResize: true,
                    data: data,
                    columns: [
                        {
                            type: 'hidden',
                            title: 'CandidateProfileId',
                        },
                        {
                            type: 'text',
                            width: '200',
                            title: 'Candidate Name',
                        },
                        {
                            type: 'dropdown', title: 'Position', width: 200, source: positionSrc
                        },
                        {
                            type: 'calendar',
                            width: '200',
                            title: 'DOB',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Age',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Mobile',
                        },
                        {
                            type: 'text',
                            width: '200',
                            title: 'Passport Number',
                        },
                        { type: 'dropdown', title: 'Passport Country', width: 200, source: countrySrc },
                        {
                            type: 'calendar',
                            width: '200',
                            title: 'Passport Expiry',
                        },

                        { type: 'dropdown', title: 'Passport Status', width: 200, source: passposrtStatusSrc },
                        {
                            type: 'text',
                            width: '200',
                            title: 'Remarks',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Salary QAR',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Work Experience Abroad',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Work Experience India',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Total Experience',
                        },

                        { type: 'text', title: 'Document Link', width: 100, editor: uploadColumn },

                    ]
                });
                $('#my').jexcel('insertRow', 10);  //return false;
                var data = $('#my').jexcel('getData');
            } else {
                $('#my').jexcel({
                    rowResize: true,
                    onchange: changed,
                    data: [{
                        candidateProfileId: "234",
                        candidateName: 'Add Candidate Name Here',
                        position: "Audi",
                        DOB: '09/06/2022',
                        age: 25,
                        mobile: 8888888888,
                        passportNumber: "AMf5565",
                        passportCountry: "Audi",
                        passportExpiry: '09/06/2022',
                        passportStatus: "Audi",
                        remarks: "remarks",
                        salary_QAR: 323565,
                        workExperienceAbroad: 2,
                        workExperienceIndia: 5,
                        totalWorkExperience: 7,
                        documentLink: "Document",

                    }],
                    columns: [
                        {
                            type: 'hidden',
                            title: 'CandidateProfileId',
                        },
                        {
                            type: 'text',
                            width: '200',
                            title: 'Candidate Name',
                        },
                        {
                            type: 'dropdown', title: 'Position', width: 200, source: positionSrc},
                        {
                            type: 'calendar',
                            width: '200',
                            title: 'DOB',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Age',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Mobile',
                        },
                        {
                            type: 'text',
                            width: '200',
                            title: 'Passport Number',
                        },
                        { type: 'dropdown', title: 'Passport Country', width: 200, source: countrySrc },
                        {
                            type: 'calendar',
                            width: '200',
                            title: 'Passport Expiry',
                        },

                        { type: 'dropdown', title: 'Passport Status', width: 200, source: passposrtStatusSrc },
                        {
                            type: 'text',
                            width: '200',
                            title: 'Remarks',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Salary QAR',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Work Experience Abroad',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Work Experience India',
                        },
                        {
                            type: 'numeric',
                            width: '200',
                            title: 'Total Experience',
                        },

                        { type: 'text', title: 'Document Link', width: 100, editor: uploadColumn },

                    ],

                });
                $('#my').jexcel('insertRow', 10);  //return false;
                var data = $('#my').jexcel('getData');

            }
        }
    });
    }


    var changed = function (instance, cell, x, y, value) {
        debugger;
        var cellName = jexcel.getColumnNameFromId([x, y]);
        console.log('New change on cell ' + cellName + ' to: ' + value + '');
        if (x == 0) {
            if (value == "") {
                alert("Please enter candidate name");
            }
        }
        if (x == 1) {
            if (value == "") {
                alert("Please select position");
            }
        }
        if (x == 2) {
            if (value == "") {
                alert("Please select DOB");
            } else {
                debugger;
                var dob = $('#my').jexcel('getValue', cellName); //$('#my').jexcel('getValue', ("C" + cellName.split("", 2)[1]));
                getAge(dob, ("D" + cellName.split("", 2)[1]));
            }
        }
        if (x == 3) {
            if (value == "") {
                alert("Please enter Age");
            } 
        }
        if (x == 4) {
            if (value == "") {
                alert("Please enter Mobile Number");
            }
        }
        if (x == 5) {
            if (value == "") {
                alert("Please enter Passport Number");
            }
        }
        if (x == 6) {
            if (value == "") {
                alert("Please select Passport Country");
            }
        }
        if (x == 7) {
            if (value == "") {
                alert("Please select Passport Expiry");
            }
        }
        if (x == 8) {
            if (value == "") {
                alert("Please select Passport Status");
            }
        }

        if (x == 11) {
            if (value == "") {
                alert("Please enter abroad work experience");
            }
        }

        if (x == 12) {
            if (value == "") {
                alert("Please enter work experience of India");
            }
        }
    }

    function getAge(dateString, cell) {
        if (dateString != "") {
            var today = new Date();
            var birthDate = new Date(dateString);
            var age = today.getFullYear() - birthDate.getFullYear();
            var m = today.getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            if (age < 22) {
                alert("Age should not be less than 22");
            }
            $('#my').jexcel('setValue', cell, age);
        } else {
            $('#my').jexcel('setValue', cell, "0");
        }
    }
</script>

<ol>
    <li><a href='' onclick="$('#my').jexcel('insertColumn'); event.preventDefault(); return false;">Insert a new blank column at the end of the table</a></li>
    <li><a href='' onclick="$('#my').jexcel('insertColumn', 5, null, 0); event.preventDefault(); return false;">Insert five new blank columns at the beginning of the table</a></li>
    <li><a href='' onclick="$('#my').jexcel('insertColumn', [ '0.99', '1.22', '3.11', '2.21' ]); event.preventDefault(); return false;">Insert a new column with pre-populated values at the end of the table</a></li>
    <li><a href='' onclick="$('#my').jexcel('insertRow'); event.preventDefault(); return false;">Insert a new blank row at the end of the table</a></li>
    <li><a href='' onclick="$('#my').jexcel('insertRow', [ 'Pears', 10, 0.59, '=B2*C2' ], 1); event.preventDefault(); return false;">Insert a new pre-populated row just after the second row.</a></li>
    <li><a href='' onclick="$('#my').jexcel('insertRow', 10); event.preventDefault(); return false;">Create ten rows at the end of the table</a></li>
    <li><a href='' onclick="$('#my').jexcel('moveRow', 3, 0); event.preventDefault(); return false;">Move the forth row to the first position</a></li>
</ol>



@*<div style="width:80%;overflow-x:scroll;">
        <div id="jsGrid"></div>
    </div>

    <script>

        $(function () {

            var MyDateField = function (config) {
                jsGrid.Field.call(this, config);
            };

            MyDateField.prototype = new jsGrid.Field({
                sorter: function (date1, date2) {
                    return new Date(date1) - new Date(date2);
                },

                itemTemplate: function (value) {
                    return new Date(value).toDateString();
                },

                insertTemplate: function (value) {
                    return this._insertPicker = $("<input>").datepicker({ defaultDate: new Date() });
                },

                editTemplate: function (value) {
                    return this._editPicker = $("<input>").datepicker().datepicker("setDate", new Date(value));
                },

                insertValue: function () {
                    return this._insertPicker.datepicker("getDate").toISOString();
                },

                editValue: function () {
                    return this._editPicker.datepicker("getDate").toISOString();
                }
            });

            jsGrid.fields.myDateField = MyDateField;


            var MyLinkField = function (config) {
                jsGrid.Field.call(this, config);
            };

            MyLinkField.prototype = new jsGrid.Field({

                itemTemplate: function (value) {
                    if (value) {
                        return $("<button class='btn btn-primary' onclick='onUploadDocument()'>upload</button>");
                    } else {
                        return "";
                    }
                },

                insertTemplate: function (value) {
                    if (value) {
                        return $("<button class='btn btn-primary' onclick='onUploadDocument()'>upload</button>");
                    } else {
                        return "";
                    }
                },

                editTemplate: function (value) {
                    if (value) {
                        return this._editPicker = $("<button class='btn btn-primary' onclick='onUploadDocument()'>upload</button>");
                    } else {
                        return "";
                    }
                },

                insertValue: function () {
                   // return this._insertPicker.datepicker("getDate").toISOString();
                },

                editValue: function () {
                }
            });



            jsGrid.fields.myLinkField = MyLinkField;

            function uploadDocument() {

                $("#bannericonFile").dmUploader({ //
                    url: '/Cms/Document/SaveFile',
                    multiple: false,
                    //extFilter: ["jpg", "jpeg", "png", "gif"],
                    maxFileSize: 3000000, // 3 Megs
                    onDragEnter: function () {
                        // Happens when dragging something over the DnD area
                        this.addClass('active');
                    },
                    onDragLeave: function () {
                        this.removeClass('active');
                    },
                    onInit: function () {
                    },
                    onComplete: function () {
                    },
                    onNewFile: function (id, file) {
                        ui_multi_add_file(id, file);
                    },
                    onBeforeUpload: function (id) {
                        ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                        ui_multi_update_file_progress(id, 0, '', true);
                    },
                    onUploadCanceled: function (id) {
                        ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                        ui_multi_update_file_progress(id, 0, 'warning', false);
                    },
                    onUploadProgress: function (id, percent) {
                        ui_multi_update_file_progress(id, percent);
                    },
                    onUploadSuccess: function (id, data) {
                        $(".style-mybannerimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                        $("#BannerFileId").val(data.fileId);

                        ui_multi_update_file_status(id, 'success', 'Upload Complete');
                        ui_multi_update_file_progress(id, 100, 'success', false);
                    },
                    onUploadError: function (id, xhr, status, message) {
                        ui_multi_update_file_status(id, 'danger', message);
                        ui_multi_update_file_progress(id, 0, 'danger', false);
                    },
                    onFallbackMode: function () {
                    },
                    onFileSizeError: function (file) {
                    }
                });
            }


            var positions;
            var countries;
            var passportStatus;
            $.ajax({
                url: "/career/careerPortal/GetJobAdvertismentForWorker?jobAdvId=@ViewBag.JobAdvId",
                            success: function (res) {
                                positions = res;

                                $.ajax({
                                    url: "/career/careerPortal/GetCountry",
                                    success: function (res) {
                                        countries = res;

                                        $.ajax({
                                            url: "/Cms/LOV/GetListOfValueList?type=LOV_PASSPORTSTATUS",
                                            success: function (res) {
                                                passportStatus = res;

                                                $("#jsGrid").jsGrid({
                                                    width: "100%",
                                                    height: "600px",

                                                    inserting: true,
                                                    editing: true,
                                                    sorting: true,
                                                    paging: true,
                                                    autoload: true,



                                                    pageSize: 14,
                                                    pageButtonCount: 5,
                                                    deleteConfirm: "Do you really want to delete client?",
                                                    controller: {
                                                        loadData: function (filter) {
                                                            return $.ajax({
                                                                type: "GET",
                                                                url: "/career/careerPortal/ReadGridWorkerDetails",
                                                                data: filter,
                                                                dataType: "json"
                                                            });
                                                        },
                                                        updateItem: function (item) {
                                                        },
                                                    },
                                                    onItemEditing: function (e) {
                                                        if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {
                                                            //
                                                            e.grid.updateItem();
                                                        }
                                                    },
                                                    fields: [
                                                        { name: "Actions", type: "control", width: 200, },

                                                        { name: "CandidateName", type: "button", width: 200, validate: "required", editing: true },
                                                        {
                                                            name: "Position", type: "select", width: 200, validate: "required", editing: true,
                                                            items: positions, valueField: "JobId", textField: "JobName"
                                                        },
                                                        {
                                                            name: "DOB", validate: "required", editing: true,
                                                            type: "myDateField", width: 200, align: "center"
                                                        },
                                                        { name: "Age", type: "number", width: 200, validate: "required", editing: true },
                                                        { name: "Mobile", type: "number", width: 200, validate: "required", editing: true },
                                                        { name: "PassportNumber", type: "text", width: 200, validate: "required", editing: true },
                                                        {
                                                            name: "PassportStatus", type: "select", width: 200, validate: "required", editing: true,
                                                            items: passportStatus, valueField: "Id", textField: "Name"
                                                        },
                                                        {
                                                            name: "PassportCountry", type: "select", width: 200, validate: "required", editing: true,
                                                            items: countries, valueField: "Id", textField: "Name"
                                                        },
                                                        {
                                                            name: "PassportExpiry", validate: "required", editing: true,
                                                            type: "myDateField", width: 200, align: "center"
                                                        },
                                                        { name: "Salary_QAR", type: "text", width: 200, validate: "required", editing: true },
                                                        { name: "TotalWorkExperience", type: "text", width: 200, validate: "required", editing: true },
                                                        { name: "WorkExperienceAbroad", type: "text", width: 200, validate: "required", editing: true },
                                                        { name: "WorkExperienceIndia", type: "text", width: 200, validate: "required", editing: true },
                                                        { name: "Remarks", type: "text", width: 200, validate: "required", editing: true },
                                                        {
                                                            name: "DocumentLink", itemTemplate: function (value) {
                                                                return $("<a>").attr("id", value).attr("onclick", "uploadDocument(this)").text(value);
                                                            }, width: 200, validate: "required", editing: false    },

                                                    ]
                                                });
                                            }
                                        });
                                    },
                                    error: function (xhr, httpStatusMessage, customErrorMessage) {
                                        alert(customErrorMessage);
                                    }
                                });


                            },
                            error: function (xhr, httpStatusMessage, customErrorMessage) {
                                alert(customErrorMessage);
                            }
            });

            $("#detailsDialog").dialog({
                autoOpen: false,
                width: 400,
                close: function () {
                    $("#detailsForm").validate().resetForm();
                    $("#detailsForm").find(".error").removeClass("error");
                }
            });

            $("#detailsForm").validate({
                rules: {
                    name: "required",
                    age: { required: true, range: [18, 150] },
                    address: { required: true, minlength: 10 },
                    country: "required"
                },
                messages: {
                    name: "Please enter name",
                    age: "Please enter valid age",
                    address: "Please enter address (more than 10 chars)",
                    country: "Please select country"
                },
                submitHandler: function () {
                    formSubmitHandler();
                }
            });

            var formSubmitHandler = $.noop;

            var showDetailsDialog = function (dialogType, client) {
                $("#name").val(client.Name);
                $("#age").val(client.Age);
                $("#address").val(client.Address);
                $("#country").val(client.Country);
                $("#married").prop("checked", client.Married);

                formSubmitHandler = function () {
                    saveClient(client, dialogType === "Add");
                };

                $("#detailsDialog").dialog("option", "title", dialogType + " Client")
                    .dialog("open");
            };

            var saveClient = function (client, isNew) {
                $.extend(client, {
                    Name: $("#name").val(),
                    Age: parseInt($("#age").val(), 10),
                    Address: $("#address").val(),
                    Country: parseInt($("#country").val(), 10),
                    Married: $("#married").is(":checked")
                });

                $("#jsGrid").jsGrid(isNew ? "insertItem" : "updateItem", client);

                $("#detailsDialog").dialog("close");
            };


        });

        function uploadDocument(e) {
            debugger;
            alert(e.id);
        }
    </script>*@