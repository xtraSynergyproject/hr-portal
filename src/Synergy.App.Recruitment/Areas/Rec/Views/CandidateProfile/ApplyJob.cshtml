@inject CMS.Common.IUserContext _userContext
@using CMS.Data.Model
@using CMS.UI.ViewModel
@using Kendo.Mvc.UI
@using CMS.Common

@model CandidateProfileViewModel
@{
    ViewBag.Title = "Candidate Profile";
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;

}
@*<style>
    .col-form-label
    {
        font-weight:bold !important;
    }
    .btn-cancel {
        color: #ffffff;
    }

        .btn-cancel:hover {
            color: #ffffff;
        }

    .col-form-label {
        font-weight: 500;
        margin-left: -5px;
    }

    .col-sm-6 {
        font-size: 14px;
    }

    .navbar {
        display: none;
    }

    .no-space {
        font-size: 14px;
    }

    .col-label {
        margin-left: -15px;
    }

    .col-value {
        padding-left: 15px;
        font-size: 14px;
    }

    .col-label-cont {
        margin-left: -5px;
    }

    .span-col-label {
        font-weight: 500;
    }
</style>*@

<style>
    .btn-cancel {
        color: #ffffff;
    }
    .btn{
        margin:0px;
    }
        .btn-cancel:hover {
            color: #ffffff;
        }

    .col-form-label {
        font-weight: bold;
        margin-left: -5px;
    }

    .col-sm-6 {
        font-size: 14px;
    }

    .navbar {
        display: none;
    }

    .no-space {
        font-size: 14px;
    }

    .col-label {
        margin-left: -15px;
    }

    .col-value {
        padding-left: 15px;
        font-size: 14px;
    }

    .col-label-cont {
        margin-left: -5px;
    }

    .span-col-label {
        font-weight: bold;
    }

    .k-grid tbody tr td {
        vertical-align: top;
    }

    .col-xl-9 {
        max-width: 100%;
        flex: 0 0 100%;
    }

    .col-xl-3 {
        max-width: 100%;
    }

    a {
        /* size: 10px; */
        font-size: 15px;
    }

    .view_attach:hover {
        color: #0056b3 !important;
    }
</style>
<script type="text/javascript">
    $(document).ready(function () {
        $.ajax({
                url:'@Url.Action("GetCandidateApplicationsCount", "CandidateProfile", new { @area = "Recruitment" })?candidateProfileId=' + '@Model.Id',
                type: 'GET',
                data: {},
                dataType: 'json',
                success: function (result) {
                
                    if (result.success) {                        
                        document.getElementById("submit_btn").disabled = true;
                        kendo.alert("You have already applied for two positions so you cannot apply more than two positions");
                        evt.preventDefault();
                        return false;
                   }
                   else {
                        return true;
                    }
                },
                   error: function (ert) {

                   }
                });
    });

        var onAjaxSuccess = function (res) {
            if (res.success) {
           LoadPartailView('@Url.Action("ApplicationComplete", "CandidateProfile", new { @area = "Recruitment" })?applicationNo=' + res.applicationNo, $('#cms-content'));

        }
        else {
            showError(res.error);
        }
    };

    function OnChangeDropdown(e) {

        var dataItem = e.sender.dataItem();
        var elementId = e.sender.element[0].id.slice(18);
        var elem = elementId.split('__');
        var c = parseInt(elem[0]) + 1;

        var search = filterDropdown(dataItem.Id,'filter');
       // $("#OtherInformations_" + c + "__Value").data("kendoDropDownList").dataSource.read(search);
        var child = $("#OtherInformations_" + c + "__Value").data("kendoDropDownList")
        if (child != undefined) {
            child.dataSource.read(search);
        }
         $.ajax({
            type: "GET",
             dataType: "json",
             url: "/Recruitment/ListOfValue/GetListOfValueById?id=" + dataItem.Id,
            success: function (data) {

                //alert(tablename);
                var i = c - 1;
                if (data != null) {

                    if (data.EnableDescription == true) {

                        document.getElementById("descp_" + i).innerHTML = "Description: " + data.Description;
                    }
                    else {
                        document.getElementById("descp_" + i).innerHTML = "";
                    }
                }
                else {
                    document.getElementById("descp_" + i).innerHTML = "";
                }

            },
        });
    }
    function filterDropdown(val,check) {

        if (check == 'filter') {
            return {
                parentId: val,
            };
        }
        else {

        }
    }
    var showError = function (error) {
        $("#validation-summary-manageform").html(error);
        $("#validation-summary-manageform").css("display", "block")
    }
    function closeNavMemberGroup() {
        window.parent.CloseIframePopup();
    }
    function ViewAttachment(id)
    {
        @*iframeOpenUrl = '@Url.Action("ViewAttachment", "Task", new { @area= "Cms" })?fileId=' + id;
        OpenIframePopup(1000, 1000, 'View Attachment');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("ViewAttachment", "Task", new { @area= "Cms" })?fileId=' + id;
        win.OpenWindow({ Title: 'View Attachment', Width: 1000, Height: 1000 });
        return false;
    }


    function onFileUploadSuccessQid(e) {
        if (e.response.success) {
            $("#QIDAttachmentId").val(e.response.fileId);
            document.getElementById('IsCopyofQID').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessQid2(e) {
        if (e.response.success) {
            $("#QIDAttachmentId2").val(e.response.fileId);
            document.getElementById('IsCopyofQID').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessQid3(e) {
        if (e.response.success) {
            $("#QIDAttachmentId3").val(e.response.fileId);
            document.getElementById('IsCopyofQID').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessQid4(e) {
        if (e.response.success) {
            $("#QIDAttachmentId4").val(e.response.fileId);
            document.getElementById('IsCopyofQID').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessQid5(e) {
        if (e.response.success) {
            $("#QIDAttachmentId5").val(e.response.fileId);
            document.getElementById('IsCopyofQID').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
function onFileUploadSuccessPassport(e) {
if (e.response.success) {
$("#PassportAttachmentId").val(e.response.fileId);
document.getElementById('IsCopyofIDPassport').checked = true;
}
else {
//var msg = ExtractError(e.response.errors, true);
//alert(msg);
}
return true;
}
    function onFileUploadSuccessPassport2(e) {
        if (e.response.success) {
            $("#PassportAttachmentId2").val(e.response.fileId);
            document.getElementById('IsCopyofIDPassport').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessPassport3(e) {
        if (e.response.success) {
            $("#PassportAttachmentId3").val(e.response.fileId);
            document.getElementById('IsCopyofIDPassport').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessPassport4(e) {
        if (e.response.success) {
            $("#PassportAttachmentId4").val(e.response.fileId);
            document.getElementById('IsCopyofIDPassport').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessPassport5(e) {
        if (e.response.success) {
            $("#PassportAttachmentId5").val(e.response.fileId);
            document.getElementById('IsCopyofIDPassport').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
function onFileUploadSuccessAcademic(e) {
if (e.response.success) {
$("#AcademicCertificateId").val(e.response.fileId);
document.getElementById('IsCopyofAcademicCertificates').checked = true;
}
else {
//var msg = ExtractError(e.response.errors, true);
//alert(msg);
}
return true;
}
    function onFileUploadSuccessAcademic2(e) {
        if (e.response.success) {
            $("#AcademicCertificateId2").val(e.response.fileId);
            document.getElementById('IsCopyofAcademicCertificates').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessAcademic3(e) {
        if (e.response.success) {
            $("#AcademicCertificateId3").val(e.response.fileId);
            document.getElementById('IsCopyofAcademicCertificates').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessAcademic4(e) {
        if (e.response.success) {
            $("#AcademicCertificateId4").val(e.response.fileId);
            document.getElementById('IsCopyofAcademicCertificates').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessAcademic5(e) {
        if (e.response.success) {
            $("#AcademicCertificateId5").val(e.response.fileId);
            document.getElementById('IsCopyofAcademicCertificates').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
function onFileUploadSuccessOther(e) {
if (e.response.success) {
$("#OtherCertificateId").val(e.response.fileId);
document.getElementById('IsCopyofOtherCertificates').checked = true;
}
else {
//var msg = ExtractError(e.response.errors, true);
//alert(msg);
}
return true;
}
    function onFileUploadSuccessOther2(e) {
        if (e.response.success) {
            $("#OtherCertificateId2").val(e.response.fileId);
            document.getElementById('IsCopyofOtherCertificates').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessOther3(e) {
        if (e.response.success) {
            $("#OtherCertificateId3").val(e.response.fileId);
            document.getElementById('IsCopyofOtherCertificates').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessOther4(e) {
        if (e.response.success) {
            $("#OtherCertificateId4").val(e.response.fileId);
            document.getElementById('IsCopyofOtherCertificates').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessOther5(e) {
        if (e.response.success) {
            $("#OtherCertificateId5").val(e.response.fileId);
            document.getElementById('IsCopyofOtherCertificates').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
function onFileUploadSuccessCV(e) {
if (e.response.success) {
$("#ResumeId").val(e.response.fileId);
document.getElementById('IsMostRecentCV').checked = true;
}
else {
//var msg = ExtractError(e.response.errors, true);
//alert(msg);
}
return true;
}

function onFileUploadSuccessSlip(e) {
if (e.response.success) {
$("#CoverLetterId").val(e.response.fileId);
document.getElementById('IsLatestOfferLetterSalarySlip').checked = true;
}
else {
//var msg = ExtractError(e.response.errors, true);
//alert(msg);
}
return true;
}

function onFileUploadSuccessPhoto(e) {
if (e.response.success) {
//alert(e.response.fileId);
//console.log(e);
//return true;
    //$(".profile-img").attr("src", "/cms/content/GetBackgroundImage?id=" + e.response.fileId);
    $(".profile-img").attr("src", "/cms/Document/GetFileMongo?fileId=" + e.response.fileId);
$("#PhotoId").val(e.response.fileId);
document.getElementById('IsMostRecentColorPhoto').checked = true;
}
else {
//var msg = ExtractError(e.response.errors, true);
//alert(msg);
}
return true;
}



    function SaveData(e) {
        debugger
        var cegrid = $("#kgrdCandidateEducational").data("kendoGrid");
        var cecount = cegrid.dataSource.data().length;
        if (cecount > 0) {
            var cedetail = JSON.stringify(cegrid.dataSource.data());
            $("#CandidateEducationalData").val(cedetail);
        } else {
            alert("No record.");
            e.preventDefault();
            return false;
        }

        var ccgrid = $("#kgrdCandidateCertifications").data("kendoGrid");
        var cccount = ccgrid.dataSource.data().length;
        if (cccount > 0) {
            var ccdetail = JSON.stringify(ccgrid.dataSource.data());
            $("#CandidateCertificationsData").val(ccdetail);
        }

        var ctgrid = $("#kgrdCandidateTrainings").data("kendoGrid");
        var ctcount = ctgrid.dataSource.data().length;
        if (ctcount > 0) {
            var ctdetail = JSON.stringify(ctgrid.dataSource.data());
            $("#CandidateTrainingsData").val(ctdetail);
        }

        var expgrid = $("#kgrdCandidateExperience").data("kendoGrid");
        var expcount = expgrid.dataSource.data().length;
        if (expcount > 0) {
            var expdetail = JSON.stringify(expgrid.dataSource.data());
            $("#CandidateExperienceData").val(expdetail);
        }
    }

    function onFileUploadSuccess(e) {
        if (e.response.success) {
            alert(e.response.fileId);
            $("#AttachmentId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onCEGridSave(arg) {
        console.log(arg);

    }
    function onCCGridSave(arg) {
        console.log(arg);

    }
    function onCTGridSave(arg) {
        console.log(arg);

    }
    function onExpGridSave(arg) {
        console.log(arg);

    }

    function OnCreateCandLanguage() {
        //alert("Create Lang");
        var candId = '@Model.Id';
        @*iframeOpenUrl = '@Url.Action("CreateCandidateLanguageProf", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        OpenIframePopup(550,1200,'Manage Language');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateLanguageProf", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        win.OpenWindow({ Title: 'Manage Language', Width: 550, Height: 1200 });
        return false;
    }

    function OnEditCandLanguage(e) {
        //alert("Edit Lang");
                e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateLanguageProf", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Language');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateLanguageProf", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Language', Width: 550, Height: 1200 });
        return false;
    }

    function OnDeleteCandLanguage(e) {
        //alert("Delete Lang");
                e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var flag = confirm('Do you really want to delete ?');
        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandidateLanguageProf", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandidateLanguage").data("kendoGrid").dataSource.read();
                       kendo.alert("Deleted Successfully.");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }

    function OnCreateCandTrainings() {
        var candId = '@Model.Id';
        var quoalType = '@QualificationTypeEnum.Trainings';
        @*iframeOpenUrl = '@Url.Action("CreateCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId + '&qualificationType=' + quoalType;
        OpenIframePopup(550, 1200, 'Manage Trainings');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId + '&qualificationType=' + quoalType;
        win.OpenWindow({ Title: 'Manage Trainings', Width: 550, Height: 1200 });
        return false;
    }
    function OnEditCandTrainings(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Trainings');*@
           var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Trainings', Width: 550, Height: 1200 });
        return false;
    }

    function OnCreateCandCertifications() {
        var candId = '@Model.Id';
        var quoalType = '@QualificationTypeEnum.Certifications';
        @*iframeOpenUrl = '@Url.Action("CreateCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId + '&qualificationType=' + quoalType;
        OpenIframePopup(550, 1200, 'Manage Certifications');*@
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId + '&qualificationType=' + quoalType;
        win.OpenWindow({ Title: 'Manage Certifications', Width: 550, Height: 1200 });
        return false;
    }
    function OnEditCandCertifications(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Certifications');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Certifications', Width: 550, Height: 1200 });
        return false;
    }
    function OnCreateCandEducational() {
        var candId = '@Model.Id';
        var quoalType = '@QualificationTypeEnum.Educational';
        @*iframeOpenUrl = '@Url.Action("CreateCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId + '&qualificationType=' + quoalType;
        OpenIframePopup(550, 1200, 'Manage Educational');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId + '&qualificationType=' + quoalType;
        win.OpenWindow({ Title: 'Manage Educational', Width: 550, Height: 1200 });
        return false;
    }
    function OnEditCandEducational(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Educational');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Educational', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandEducational(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //alert(dataItem.id);
        //console.log(dataItem);
        //
        var quoalType = dataItem.QualificationType;
        //alert(quoalType);
        var flag = confirm('Do you really want to delete ?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandidateEducational", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        if (quoalType==1) {
                            $("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                        } else if (quoalType==2) {
                            $("#kgrdCandidateCertifications").data("kendoGrid").dataSource.read();
                        } else if (quoalType==3) {
                            $("#kgrdCandidateTrainings").data("kendoGrid").dataSource.read();
                        }
                        kendo.alert("Deleted Successfully.");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }

    //Candidate Computer
    function OnCreateCandComputer() {
        //alert("");
        var candId = '@Model.Id';
        @*iframeOpenUrl = '@Url.Action("CreateCandidateComputerProf", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        OpenIframePopup(550, 1200, 'Manage Computer Proficiency');*@
           var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateComputerProf", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        win.OpenWindow({ Title: 'Manage Computer Proficiency', Width: 550, Height: 1200 });
        return false;
    }
    function OnEditCandComputer(e) {
        //alert("");
                e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateComputerProf", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Computer Proficiency');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateComputerProf", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Computer Proficiency', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandComputer(e) {
                e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var flag = confirm('Do you really want to delete ?');
        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandidateComputerProf", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandidateComputer").data("kendoGrid").dataSource.read();
                        kendo.alert("Deleted Successfully.");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }

    //Candidate Experience
    function OnCreateCandExperience() {
        var candId = '@Model.Id';

        @*iframeOpenUrl = '@Url.Action("CreateCandidateExperience", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        OpenIframePopup(550, 1200, 'Manage Experience');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateExperience", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        win.OpenWindow({ Title: 'Manage Experience', Width: 550, Height: 1200 });
        return false;
    }
    function OnEditCandExperience(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateExperience", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Experience');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateExperience", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Experience', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandExperience(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (dataItem.IsLatest == true) {
            kendo.alert("Cannot delete latest record");
        }
        else {
        //alert(dataItem.id);
        var flag = confirm('Do you really want to delete ?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandidateExperience", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandidateExperience").data("kendoGrid").dataSource.read();
                        kendo.alert("Deleted Successfully");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
            }
        }
    }
     function OnCreateCandExpByCountry() {
        var candId = '@Model.Id';
       @* var quoalType = '@QualificationTypeEnum.Educational';*@
        @*iframeOpenUrl = '@Url.Action("CreateCandExpByCountry", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
         OpenIframePopup(550, 1200, 'Manage Experience By Country');*@
           var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandExpByCountry", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        win.OpenWindow({ Title: 'Manage Experience By Country', Width: 550, Height: 1200 });
        return false;
    }

    function OnEditCandExpByCountry(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandExpByCountry", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Experience By Country');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandExpByCountry", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Experience By Country', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandExpByCountry(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //alert(dataItem.id);
        var flag = confirm('Do you really want to delete ?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandExpByCountry", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandExpByCountry").data("kendoGrid").dataSource.read();
                        //$("#kgrdCandidateCertifications").data("kendoGrid").dataSource.read();
                        //$("#kgrdCandidateTrainings").data("kendoGrid").dataSource.read();

                        kendo.alert("Deleted Successfully.");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }
    function OnCreateCandExpByJob() {
        var candId = '@Model.Id';
       @* var quoalType = '@QualificationTypeEnum.Educational';*@
        @*iframeOpenUrl = '@Url.Action("CreateCandExpByJob", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        OpenIframePopup(550, 1200, 'Manage Experience By Job');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandExpByJob", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        win.OpenWindow({ Title: 'Manage Experience By Job', Width: 550, Height: 1200 });
        return false;
    }

    function OnEditCandExpByJob(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandExpByJob", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Experience By Job');*@
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandExpByJob", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Experience By Job', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandExpByJob(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //alert(dataItem.id);
        var flag = confirm('Do you really want to delete ?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandExpByJob", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandExpByJob").data("kendoGrid").dataSource.read();
                        //$("#kgrdCandidateCertifications").data("kendoGrid").dataSource.read();
                        //$("#kgrdCandidateTrainings").data("kendoGrid").dataSource.read();

                        kendo.alert("Deleted Successfully.");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }

    function OnCreateCandExpByNature() {
        var candId = '@Model.Id';

        @*iframeOpenUrl = '@Url.Action("CreateCandidateExpByNature", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        OpenIframePopup(550, 1200, 'Manage Experience By Nature Of Work');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateExpByNature", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        win.OpenWindow({ Title: 'Manage Experience By Nature Of Work', Width: 550, Height: 1200 });
        return false;
    }
    function OnEditCandExpByNature(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateExpByNature", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Experience By Nature Of Work');*@
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateExpByNature", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Experience By Nature Of Work', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandExpByNature(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (dataItem.IsLatest == true) {
            kendo.alert("Cannot delete latest record");
        }
        else {
        //alert(dataItem.id);
        var flag = confirm('Do you really want to delete ?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandidateExpByNature", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandExpByNature").data("kendoGrid").dataSource.read();
                        kendo.alert("Deleted Successfully");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
            }
        }
    }

    function OnCreateCandExpBySector() {
        var candId = '@Model.Id';

        @*iframeOpenUrl = '@Url.Action("CreateCandidateExpBySector", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        OpenIframePopup(550, 1200, 'Manage Experience By Sector & Industry');*@
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateExpBySector", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        win.OpenWindow({ Title: 'Manage Experience By Sector & Industry', Width: 550, Height: 1200 });
        return false;
    }
    function OnEditCandExpBySector(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateExpBySector", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Experience By Sector & Industry');*@
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateExpBySector", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Experience By Sector & Industry', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandExpBySector(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (dataItem.IsLatest == true) {
            kendo.alert("Cannot delete latest record");
        }
        else {
        //alert(dataItem.id);
        var flag = confirm('Do you really want to delete ?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandidateExpBySector", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandExpBySector").data("kendoGrid").dataSource.read();
                        kendo.alert("Deleted Successfully");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
            }
        }
    }
     function OnCreateCandRefer() {
        var candId = '@Model.Id';
       @* var quoalType = '@QualificationTypeEnum.Educational';*@
        @*iframeOpenUrl = '@Url.Action("CreateCandrefer", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
         OpenIframePopup(550, 1200, 'Manage Candidate References');*@
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandrefer", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
         win.OpenWindow({ Title: 'Manage Candidate References', Width: 550, Height: 1200 });
        return false;
    }

    function OnEditCandRefer(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandRefer", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Candidate References');*@
           var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandRefer", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Candidate References', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandRefer(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //alert(dataItem.id);
        var flag = confirm('Do you really want to delete ?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandRefer", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandrefer").data("kendoGrid").dataSource.read();
                        //$("#kgrdCandidateCertifications").data("kendoGrid").dataSource.read();
                        //$("#kgrdCandidateTrainings").data("kendoGrid").dataSource.read();

                        kendo.alert("Deleted Successfully.");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }

    //Candidate Driving License

    function OnCreateCandDrivingLicense() {
        var candId = '@Model.Id';
        @*iframeOpenUrl = '@Url.Action("CreateCandidateDrivingLicense", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        OpenIframePopup(550, 1200, 'Manage Candidate Driving License');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("CreateCandidateDrivingLicense", "CandidateProfile", new { @area= "Recruitment" })?candidateProfileId=' + candId;
        win.OpenWindow({ Title: 'Manage Candidate Driving License', Width: 550, Height: 1200 });
        return false;
    }
    function OnEditCandDrivingLicense(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //console.log(dataItem);
        //alert("Edit : " + dataItem.Id);
        @*iframeOpenUrl = '@Url.Action("EditCandidateDrivingLicense", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        OpenIframePopup(550, 1200, 'Manage Candidate Driving License');*@
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditCandidateDrivingLicense", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Candidate Driving License', Width: 550, Height: 1200 });
        return false;
    }
    function OnDeleteCandDrivingLicense(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (dataItem.IsLatest == true) {
            kendo.alert("Cannot delete latest record");
        }
        else {
        //alert(dataItem.id);
        var flag = confirm('Do you really want to delete ?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteCandidateDrivingLicense", "CandidateProfile", new { @area= "Recruitment" })?id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdCandDrivingLicense").data("kendoGrid").dataSource.read();
                        kendo.alert("Deleted Successfully");
                    }
                },
                error: function (ert) {
                    //
                    //$("#kgrdCandidateEducational").data("kendoGrid").dataSource.read();
                }
            });
            return false;
            }
        }
    }
</script>

<div>
    <form asp-area="Recruitment" asp-controller="CandidateProfile" asp-action="ManageApplication"
          data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST"
          class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All" style="font-size:14px;"></div>
       
        <div class="container">
            <div class="card" style="background-color:grey;color:white">
                <div class="row" style="margin-left:40px">
                    <div class="col-md-4"><b>Job Name:</b>  @Model.JobName</div>
                    <div class="col-md-4"><b>Job Type:</b>  @Model.JobCategoryName</div>
                    <div class="col-md-4"><b>Location:</b>  @Model.JobLocationName</div>
                </div>
            </div>
            <div class="row pop-tstrip">
                <div class="col-6 col-sm-6 col-lg-8 col-xl-8">
                    <h5 class="popTitle" id="candidateTitle">Candidate Profile</h5>
                    @*<h5 class="popTitle" id="employmentTitle">Employment Information</h5>*@
                    @*<h5 class="popTitle" id="qualificationTitle">Qualification &amp; Others</h5>*@
                </div>
                <div class="col-6 col-sm-6 col-lg-4 col-xl-4">
                    @*<h5>
                    <i class="fa fa-arrows-alt ico-action ico-spacing"></i>&nbsp;&nbsp;<svg xmlns="http://www.w3.org/2000/svg" width="1em" height="1em" viewBox="0 0 24 24" fill="none" class="ico-action ico-spacing">
                        <path d="M16.3394 9.32245C16.7434 8.94589 16.7657 8.31312 16.3891 7.90911C16.0126 7.50509 15.3798 7.48283 14.9758 7.85938L12.0497 10.5866L9.32245 7.66048C8.94589 7.25647 8.31312 7.23421 7.90911 7.61076C7.50509 7.98731 7.48283 8.62008 7.85938 9.0241L10.5866 11.9502L7.66048 14.6775C7.25647 15.054 7.23421 15.6868 7.61076 16.0908C7.98731 16.4948 8.62008 16.5171 9.0241 16.1405L11.9502 13.4133L14.6775 16.3394C15.054 16.7434 15.6868 16.7657 16.0908 16.3891C16.4948 16.0126 16.5171 15.3798 16.1405 14.9758L13.4133 12.0497L16.3394 9.32245Z" fill="currentColor"></path>
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12ZM12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12C21 16.9706 16.9706 21 12 21Z" fill="currentColor"></path>
                    </svg>
                </h5>*@
                    @*<input type="submit" class="btn btn-primary" value="Save" />
                <input type="button" class="btn btn-link btn-cancel" value="Cancel" onclick="onCancel()" />*@
                    <script>
                        function SaveApplication(evt) {
                                                        
                            //ShowLoader('#cms-content');
                            var criteriasList = $("#CriteriasList").val();
                            var criteriasListobj = jQuery.parseJSON(criteriasList);
                            var skillsList = $("#SkillsList").val();
                            var skillsListobj = jQuery.parseJSON(skillsList);
                            //var otherInformationsList = $("#OtherInformationsList").val();
                            //var otherInformationsListobj = jQuery.parseJSON(otherInformationsList);
                            var dropDownDOMelements = $(".k-dropdown");
                            var dropDowns = [];
                            dropDownDOMelements.each(function (ddl) {
                                var currentAriaOwnsAttribute = $(this)[0].attributes[7].nodeValue;
                                var currentDropDownListName = currentAriaOwnsAttribute.substring(0, currentAriaOwnsAttribute.length - 8);
                                var currentDropDownList = $('#' + currentDropDownListName).data("kendoDropDownList");
                                var value = currentDropDownList.value();
                                var jsonData = {
                                    Id: currentDropDownListName,
                                    Value: value,
                                };
                                dropDowns.push(jsonData);
                            })
                            $.each(criteriasListobj, function (key, value) {
                                $.each(dropDowns, function (key1, value1) {
                                    if (value.Id == value1.Id) {
                                        value.Value = value1.Value;
                                    }
                                });
                            });
                            $.each(skillsListobj, function (key, value) {
                                $.each(dropDowns, function (key1, value1) {
                                    if (value.Id == value1.Id) {
                                        value.Value = value1.Value;
                                    }
                                });
                            });
                            //$.each(otherInformationsListobj, function (key, value) {
                            //    $.each(dropDowns, function (key1, value1) {
                            //        if (value.Id == value1.Id) {
                            //            value.Value = value1.Value;
                            //        }
                            //    });
                            //});
                            $("#CriteriasList").val(JSON.stringify(criteriasListobj));
                            $("#SkillsList").val(JSON.stringify(skillsListobj));
                            //$("#OtherInformationsList").val(JSON.stringify(otherInformationsListobj));


                            return true;

                            
                        };
                    </script>
                    @if (ViewBag.type != "application")
                    {
                        <input type="submit" id="submit_btn" class="btn btn-info" onclick="return SaveApplication(event);" value="Submit Application" style="float:right;" />
                    }
                    else
                    {

                        <button type="button" class="btn btn-success disabled" style="float:right;cursor:default;">Already Applied</button>
                    }

                </div>
            </div>
            <div class="row aft-title-spacing">
                <div class="col-xl-12 image-col">
                    @if (Model.PhotoId != null)
                    {
                        @*<img class="profile-img" src="/cms/content/getbackgroundimage?id=@Model.PhotoId" style="text-align: center;" />*@
                        <img class="profile-img" src="/cms/Document/GetFileMongo?fileId=@Model.PhotoId" style="text-align: center;" />
                    }
                    else
                    {
                        <img class="profile-img" src="/images/profile.jpg" style="text-align: center;">
                    }
                    <h5>
                        @if (Model.FirstName != null)
                        {

                            <span>@(Model.FirstName + " " + Model.MiddleName + " " + Model.LastName)</span>
                        }
                        else
                        {
                            <span></span>
                        }
                    </h5>


                    <h6 class="des-title"></h6>
                    <div class="row">
                        <div class="col blnk-space"></div>
                    </div>
                    @*<label id="candidateTab" class="Qlink-title" onclick="onCandidateInfo();" style="cursor:pointer;">Personal Information</label>
                <label id="employmentTab" class="Qlinks" onclick="onEmploymentInfo();" style="cursor:pointer;">Employment Info</label>
                <label id="qualificationTab" class="Qlinks" onclick="onQualificationInfo();" style="cursor:pointer;">Qualification &amp; Others</label>
                <label id="printViewTab" class="Qlinks" style="cursor:pointer;">Printable View</label>*@
                </div>
                <div id="divCandidateInfo" class="col-xl-9" style="border-radius:6px;border-left-width: 2px;">
                    <div class="Qlink-title-mbody">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5 class="title-block">1. Personal Information</h5>
                            </div>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Title<br>
                            </label>
                            @Html.DisplayFor(x => x.TitleName)
                        </div>
                        <div class="col-12 col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                First Name<br>
                            </label>
                            @Html.DisplayFor(x => x.FirstName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Middle Name<br>
                            </label>
                            @Html.DisplayFor(x => x.MiddleName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Last Name<br>
                            </label>
                            @Html.DisplayFor(x => x.LastName)
                        </div>

                    </div>
                    <div class="row data-row-space">
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Age<br>
                            </label>
                            @Html.DisplayFor(x => x.Age)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Birth Date<br>
                            </label>
                            @Html.DisplayFor(x => x.BirthDate)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                City/Country of Birth<br>
                            </label>
                            @Html.DisplayFor(x => x.BirthPlace)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Nationality<br>
                            </label>
                            @Html.DisplayFor(x => x.NationalityName)
                        </div>

                    </div>
                    <div class="row data-row-space">
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Blood Group<br></label>
                            @Html.DisplayFor(x => x.BloodGroup)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Gender</label><br />
                            @Html.DisplayFor(x => x.GenderName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Marital Status<br>
                            </label>
                            @Html.DisplayFor(x => x.MaritalStatusName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Number of Children<br></label>
                            @Html.DisplayFor(x => x.NoOfChildren)
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Passport Number</label><br />
                            @Html.DisplayFor(x => x.PassportNumber)

                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Issuing Country<br>
                            </label>
                            @Html.DisplayFor(x => x.PassportIssueCountryName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Expiry Date<br></label>
                            @Html.DisplayFor(x => x.PassportExpiryDate)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Qatar ID<br></label>
                            @Html.DisplayFor(x => x.QatarId)
                        </div>
                    </div>

                    <div class="row data-row-space">
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Visa Country<br>
                            </label>
                            @Html.DisplayFor(x => x.VisaCountryName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Visa Type<br>
                            </label>
                            @Html.DisplayFor(x => x.VisaTypeName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Visa Expiry<br></label>
                            @Html.DisplayFor(x => x.VisaExpiry)
                        </div>

                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Other Visa Type</label><br />
                            @Html.DisplayFor(x => x.OtherVisaType)
                        </div>
                    </div>

                    <div class="row data-row-space">
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Other Country Visa<br>
                            </label>
                            @Html.DisplayFor(x => x.OtherCountryVisaName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">
                                Visa Type<br>
                            </label>
                            @Html.DisplayFor(x => x.OtherCountryVisaTypeName)
                        </div>
                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">
                            <label class="col-form-label">Other Country Visa Expiry<br></label>
                            @Html.DisplayFor(x => x.OtherCountryVisaExpiry)
                        </div>

                        <div class="col-sm-6 col-md-6 col-lg-3 col-xl-3">

                        </div>
                    </div>
                    <br />

                    @*<div class="row data-row-space">
            <div class="col-9 col-sm-5 col-md-6 col-lg-3 col-xl-3"><label class="col-form-label">Docs Checklist Completed<br></label></div>
            <div class="col">
                <div class="row">
                    <div class="col-sm-3 col-md-3 col-lg-2 col-xl-2">
                        <div class="form-check">
                            @(Html.Kendo().RadioButton().Name("IsDocsChecklistCompletedYes").HtmlAttributes(new { @name = "IsDocsChecklistCompleted" }).Label("Yes").Enable(false))
                        </div>
                    </div>
                    <div class="col-sm-3 col-md-3 col-xl-2">
                        <div class="form-check">
                            @(Html.Kendo().RadioButton().Name("IsDocsChecklistCompletedNo").HtmlAttributes(new { @name = "IsDocsChecklistCompleted" }).Label("No").Enable(false))
                        </div>
                    </div>
                </div>
            </div>
        </div>*@
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">
                            <div class="checkbox-div">
                                @(Html.Kendo().CheckBoxFor(x => x.IsCopyofQID).Label(""))
                            </div>
                        </div>
                        <div class="col">
                            <label class="col-form-label">Copy of ID<br /></label>

                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">
                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col-3">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessQid")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileQid" })
                            )
                                    @if (Model.QIDAttachmentId != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.QIDAttachmentId" target="_blank"><i class="fas fa-download" title="Download Attachment 1"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.QIDAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 1" onclick="ViewAttachment('@Model.QIDAttachmentId');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessQid2")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileQid2" })
                            )
                                    @if (Model.QIDAttachmentId2 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.QIDAttachmentId2" target="_blank"><i class="fas fa-download" title="Download Attachment 2"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.QIDAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 2" onclick="ViewAttachment('@Model.QIDAttachmentId2');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessQid3")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileQid3" })
                            )
                                    @if (Model.QIDAttachmentId3 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.QIDAttachmentId3" target="_blank"><i class="fas fa-download" title="Download Attachment 3"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.QIDAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 3" onclick="ViewAttachment('@Model.QIDAttachmentId3');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessQid4")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileQid4" })
                            )
                                    @if (Model.QIDAttachmentId4 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.QIDAttachmentId4" target="_blank"><i class="fas fa-download" title="Download Attachment 4"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.QIDAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 4" onclick="ViewAttachment('@Model.QIDAttachmentId4');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessQid5")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileQid5" })
                            )
                                    @if (Model.QIDAttachmentId5 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.QIDAttachmentId5" target="_blank"><i class="fas fa-download" title="Download Attachment 5"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.QIDAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 5" onclick="ViewAttachment('@Model.QIDAttachmentId5');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">
                            <div class="checkbox-div">
                                @(Html.Kendo().CheckBoxFor(x => x.IsCopyofIDPassport).Label(""))
                            </div>
                        </div>
                        <div class="col">
                            <label class="col-form-label">Copy of Passport (all relevant pages including last Qatar visa stamped page)<br /></label>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">

                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col-3">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessPassport")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "filePassport" })
                            )
                                    @if (Model.PassportAttachmentId != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.PassportAttachmentId" target="_blank"><i class="fas fa-download" title="Download Attachment 1"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.PassportAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 1" onclick="ViewAttachment('@Model.PassportAttachmentId');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessPassport2")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "filePassport2" })
                            )
                                    @if (Model.PassportAttachmentId2 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.PassportAttachmentId2" target="_blank"><i class="fas fa-download" title="Download Attachment 2"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.PassportAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 2" onclick="ViewAttachment('@Model.PassportAttachmentId2');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessPassport3")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "filePassport3" })
                            )
                                    @if (Model.PassportAttachmentId3 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.PassportAttachmentId3" target="_blank"><i class="fas fa-download" title="Download Attachment 3"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.PassportAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 3" onclick="ViewAttachment('@Model.PassportAttachmentId3');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessPassport4")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "filePassport4" })
                            )
                                    @if (Model.PassportAttachmentId4 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.PassportAttachmentId4" target="_blank"><i class="fas fa-download" title="Download Attachment 4"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.PassportAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 4" onclick="ViewAttachment('@Model.PassportAttachmentId4');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessPassport5")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "filePassport5" })
                            )
                                    @if (Model.PassportAttachmentId5 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.PassportAttachmentId5" target="_blank"><i class="fas fa-download" title="Download Attachment 5"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.PassportAttachmentId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 5" onclick="ViewAttachment('@Model.PassportAttachmentId5');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">
                            <div class="checkbox-div">
                                @(Html.Kendo().CheckBoxFor(x => x.IsCopyofAcademicCertificates).Label(""))
                            </div>
                        </div>
                        <div class="col">
                            <label class="col-form-label">Copy of Academic Certificates<br /></label>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">

                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col-3">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessAcademic")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileAcademic" })
                            )
                                    @if (Model.AcademicCertificateId != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.AcademicCertificateId" target="_blank"><i class="fas fa-download" title="Download Attachment 1"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.AcademicCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 1" onclick="ViewAttachment('@Model.AcademicCertificateId');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessAcademic2")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileAcademic2" })
                            )
                                    @if (Model.AcademicCertificateId2 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.AcademicCertificateId2" target="_blank"><i class="fas fa-download" title="Download Attachment 2"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.AcademicCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 2" onclick="ViewAttachment('@Model.AcademicCertificateId2');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessAcademic3")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileAcademic3" })
                            )
                                    @if (Model.AcademicCertificateId3 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.AcademicCertificateId3" target="_blank"><i class="fas fa-download" title="Download Attachment 3"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.AcademicCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 3" onclick="ViewAttachment('@Model.AcademicCertificateId3');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessAcademic4")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileAcademic4" })
                            )
                                    @if (Model.AcademicCertificateId4 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.AcademicCertificateId4" target="_blank"><i class="fas fa-download" title="Download Attachment 4"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.AcademicCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 4" onclick="ViewAttachment('@Model.AcademicCertificateId4');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessAcademic5")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileAcademic5" })
                            )
                                    @if (Model.AcademicCertificateId5 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.AcademicCertificateId5" target="_blank"><i class="fas fa-download" title="Download Attachment 5"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.AcademicCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 5" onclick="ViewAttachment('@Model.AcademicCertificateId5');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">
                            <div class="checkbox-div">
                                @(Html.Kendo().CheckBoxFor(x => x.IsCopyofOtherCertificates).Label(""))
                            </div>
                        </div>
                        <div class="col">
                            <label class="col-form-label">Copy of Other Certificates (Experience, training, professional)<br /></label>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">

                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col-3">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessOther")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileOther" })
                            )
                                    @if (Model.OtherCertificateId != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.OtherCertificateId" target="_blank"><i class="fas fa-download" title="Download Attachment 1"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.OtherCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 1" onclick="ViewAttachment('@Model.OtherCertificateId');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessOther2")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileOther2" })
                            )
                                    @if (Model.OtherCertificateId2 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.OtherCertificateId2" target="_blank"><i class="fas fa-download" title="Download Attachment 2"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.OtherCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 2" onclick="ViewAttachment('@Model.OtherCertificateId2');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessOther3")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileOther3" })
                            )
                                    @if (Model.OtherCertificateId3 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.OtherCertificateId3" target="_blank"><i class="fas fa-download" title="Download Attachment 3"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.OtherCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 3" onclick="ViewAttachment('@Model.OtherCertificateId3');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessOther4")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileOther4" })
                            )
                                    @if (Model.OtherCertificateId4 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.OtherCertificateId4" target="_blank"><i class="fas fa-download" title="Download Attachment 4"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.OtherCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 4" onclick="ViewAttachment('@Model.OtherCertificateId4');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                                <div class="col-2">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessOther5")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileOther5" })
                            )
                                    @if (Model.OtherCertificateId5 != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.OtherCertificateId5" target="_blank"><i class="fas fa-download" title="Download Attachment 5"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.OtherCertificateId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview Attachment 5" onclick="ViewAttachment('@Model.OtherCertificateId5');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">
                            <div class="checkbox-div">
                                @(Html.Kendo().CheckBoxFor(x => x.IsMostRecentColorPhoto).Label(""))
                            </div>
                        </div>
                        <div class="col">
                            <label class="col-form-label">Most recent color photo<br /></label>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">

                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col-5">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessPhoto")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "filephoto" })
                            )
                                    @if (Model.PhotoId != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.PhotoId" target="_blank"><i class="fas fa-download" title="Download"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.PhotoId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview" onclick="ViewAttachment('@Model.PhotoId');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">
                            <div class="checkbox-div">
                                @(Html.Kendo().CheckBoxFor(x => x.IsMostRecentCV).Label(""))
                            </div>
                        </div>
                        <div class="col">
                            <label class="col-form-label">Most recent C.V<br /></label>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">

                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col-5">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessCV")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileCV" })
                            )
                                    @if (Model.ResumeId != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.ResumeId" target="_blank"><i class="fas fa-download" title="Download"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.ResumeId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview" onclick="ViewAttachment('@Model.ResumeId');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">
                            <div class="checkbox-div">
                                @(Html.Kendo().CheckBoxFor(x => x.IsLatestOfferLetterSalarySlip).Label(""))
                            </div>
                        </div>
                        <div class="col">
                            <label class="col-form-label">Latest offer letter &amp; Salary slip<br /></label>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col-1 col-sm-1 col-md-1 col-lg-1 col-xl-1">

                        </div>
                        <div class="col">
                            <div class="row">
                                <div class="col-5">
                                    @(Html.Kendo().Upload().Multiple(false)
                                .Name("files")
                                .Async(a => a
                                .Save("SaveFile", "Document", new { @area = "cms" })
                                .AutoUpload(true)
                                )
                                    .Events(e => e.Success("onFileUploadSuccessSlip")
                                    )
                                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png", ".pdf", ".doc", ".docx" }).MaxFileSize(2097152))
                                    .HtmlAttributes(new { @class = "hr-xx-large", @id = "fileSlip" })
                            )
                                    @if (Model.CoverLetterId != null)
                                    {
                                        <a href="/cms/Document/GetFileMongo?fileId=@Model.CoverLetterId" target="_blank"><i class="fas fa-download" title="Download"></i></a>
                                        @*<a href="#" onclick="ViewAttachment('@Model.CoverLetterId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                                        <i class="fas fa-eye view_attach" title="Preview" onclick="ViewAttachment('@Model.CoverLetterId');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row data-row-space">
                        <div class="col txt-highlight-box"><label class="col-form-label txt-note">Note:<br>1. Passport should be valid for a minimum six months for processing visa.<br>2. Documents not enclosed with application, to be obtained from individual at the time of interview.</label></div>
                    </div>
                    <div class="Qlink-title-mbody">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5>2. Residence Address</h5>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div class="row Title-strip-orange">
                                <div class="col-10 col-xl-11">
                                    <h5 class="sub-title-h5"><strong>2.1 Current Residence Address</strong><br></h5>
                                </div>
                                <div class="col-2 col-xl-1">@*<i class="fas fa-plus-square"></i>*@</div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-xl-3">
                                    <label class="col-form-label .col-label">
                                        House/Flat No.<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.CurrentAddressHouse)
                                    </div>

                                </div>
                                <div class="col-lg-2 col-xl-2">
                                    <label class="col-form-label .col-label">
                                        Street/Lane<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.CurrentAddressStreet)
                                    </div>

                                </div>
                                <div class="col-lg-2 col-xl-2">
                                    <label class="col-form-label .col-label">
                                        City/District<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.CurrentAddressCity)
                                    </div>

                                </div>
                                <div class="col-lg-2 col-xl-2">
                                    <label class="col-form-label .col-label">
                                        State/Province<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.CurrentAddressState)
                                    </div>

                                </div>
                                <div class="col-lg-2 col-xl-2">
                                    <label class="col-form-label .col-label">
                                        Country<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.CurrentAddressCountryName)
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div class="row Title-strip-orange">
                                <div class="col-10 col-xl-11">
                                    <h5 class="sub-title-h5"><strong>2.2 Permanent Address (Home Country)</strong><br></h5>
                                </div>
                                <div class="col-2 col-xl-1">@*<i class="fas fa-plus-square"></i>*@</div>
                            </div>
                            <div class="row">
                                <div class="col-lg-3 col-xl-3">
                                    <label class="col-form-label .col-label">
                                        House/Flat No.<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.PermanentAddressHouse)
                                    </div>

                                </div>
                                <div class="col-lg-2 col-xl-2">
                                    <label class="col-form-label .col-label">
                                        Street/Lane<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.PermanentAddressStreet)
                                    </div>

                                </div>
                                <div class="col-lg-2 col-xl-2">
                                    <label class="col-form-label .col-label">
                                        City/District<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.PermanentAddressCity)
                                    </div>

                                </div>
                                <div class="col-lg-2 col-xl-2">
                                    <label class="col-form-label .col-label">
                                        State/Province<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.PermanentAddressState)
                                    </div>

                                </div>
                                <div class="col-lg-2 col-xl-2">
                                    <label class="col-form-label .col-label">
                                        Country<br>
                                    </label>
                                    <div class="row col-value">
                                        @Html.DisplayFor(x => x.PermanentAddressCountryName)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5>3 Contact Information (please provide country code)<br></h5>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div class="row">
                                <div class="col-lg-3 col-xl-3 col-value">
                                    <label class="col-form-label col-label-cont">
                                        Phone(Home Town)<br>
                                    </label>
                                    @Html.DisplayFor(x => x.ContactPhoneHome)
                                </div>
                                <div class="col-lg-3 col-xl-3 col-value">
                                    <label class="col-form-label col-label-cont">
                                        Phone(Local)<br>
                                    </label>
                                    @Html.DisplayFor(x => x.ContactPhoneLocal)
                                </div>
                                <div class="col-lg-3 col-xl-3 col-value">
                                    <label class="col-form-label col-label-cont">
                                        Email Address<br>
                                    </label>
                                    @Html.DisplayFor(x => x.Email)
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3"></div>
                <div id="divEmploymentInfo" class="col-xl-9" style="border-radius: 6;border-left-width: 2;">

                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>4. Employment History (Start with most recent)<br></h5>
                            </div>
                            <div class="col">@*<i class="fas fa-plus-square"></i>*@</div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateExperienceViewModel>()
    .Name("kgrdCandidateExperience")
        .Columns(columns =>
        {
            columns.Bound(p => p.Employer).Title("Employer").Width(200);
            columns.Bound(p => p.Location).Title("Location").Width(200);
            columns.Bound(p => p.JobTitle).Title("Job Title").Width(200);
            columns.Bound(p => p.From).Title("From").Width(120).Format("{0:dd/MM/yyyy}");
            columns.Bound(p => p.To).Title("To").Width(120).Format("{0:dd/MM/yyyy}");
            columns.Bound(p => p.Responsibilities).Title("Responsibilities").Width(200);
            columns.Bound(p => p.AttachmentName).Title("Attachment").ClientTemplate("#if(AttachmentName!=null){#<a href='/cms/Document/GetFileMongo?fileId=#:AttachmentId#' target='_blank'>#:AttachmentName#</a>#}#").Width(300);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { })
        .DataSource(dataSource => dataSource
            .Ajax()
            //.PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateExperienceData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))
        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>5. Analysis of Experience<br></h5>
                            </div>
                            <div class="col"></div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <div class="row Title-strip-orange">
                                <div class="col-10 col-md-11 col-xl-11">
                                    <h5 class="sub-title-h5"><strong>5.1 Experience by Country</strong><br></h5>
                                </div>
                                <div class="col-2 col-md-1 col-xl-1">@*<i class="fas fa-plus-square"></i>*@</div>
                            </div>
                            <div>
                                <div class="row" style="padding-top:15px;">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateExperienceByCountryViewModel>()
    .Name("kgrdCandExpByCountry")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(100);
            columns.Bound(p => p.CountryName).Title("Country").Width(400);
            columns.Bound(p => p.NoOfYear).Title("No Of Year").Width(400);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            //.PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandExpByCountryData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <div class="row Title-strip-orange">
                                <div class="col-10 col-md-11 col-xl-11">
                                    <h5 class="sub-title-h5"><strong>5.2 Experience by Job</strong><br></h5>
                                </div>
                                <div class="col-2 col-md-1 col-xl-1">@*<i class="fas fa-plus-square"></i>*@</div>
                            </div>
                            <div>
                                <div class="row" style="padding-top:15px;">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateExperienceByJobViewModel>()
    .Name("kgrdCandExpByJob")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(100);
            columns.Bound(p => p.JobName).Title("Job Name").Width(400);
            columns.Bound(p => p.NoOfYear).Title("No Of Year").Width(400);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            //.PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandExpByJobData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <div class="row Title-strip-orange">
                                <div class="col-10 col-md-11 col-xl-11">
                                    <h5 class="sub-title-h5"><strong>5.3 Experience by Nature of Work</strong><br></h5>
                                </div>
                                @*<div class="col-2 col-md-1 col-xl-1"><i class="fas fa-plus-square"></i></div>*@
                            </div>
                            <div>
                                <div class="row" style="padding-top:15px;">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateExperienceByNatureViewModel>()
    .Name("kgrdCandExpByNature")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(100);
            columns.Bound(p => p.NatureOfWork).Title("Nature Of Work").Width(200);
            columns.Bound(p => p.NoOfYear).Title("No Of Years").Width(200);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            //.PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateExpByNatureData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type, @appId = Model }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <div class="row Title-strip-orange">
                                <div class="col-10 col-md-11 col-xl-11">
                                    <h5 class="sub-title-h5"><strong>5.4 Experience by Sector &amp; Industry</strong><br></h5>
                                </div>
                                @*<div class="col-2 col-md-1 col-xl-1"><i class="fas fa-plus-square"></i></div>*@
                            </div>
                            <div>
                                <div class="row" style="padding-top:15px;">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateExperienceBySectorViewModel>()
    .Name("kgrdCandExpBySector")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(100);
            columns.Bound(p => p.SectorName).Title("Sector").Width(200);
            columns.Bound(p => p.IndustryName).Title("Industry").Width(200);
            columns.Bound(p => p.CategoryName).Title("Category").Width(200);
            columns.Bound(p => p.NoOfYear).Title("No Of Years").Width(200);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            //.PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateExpBySectorList", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5>6. Current Salary Details<br></h5>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-lg-3 col-xl-3 no-space">
                                        <span class="txt-13 span-col-label">Net Salary Currency</span>
                                        <div class="row col-value">
                                            @Html.DisplayFor(x => x.SalaryCurrencyName)
                                        </div>
                                    </div>
                                    <div class="col-lg-3 col-xl-3 no-space">
                                        <span class="text-nowrap txt-13 span-col-label">Net Salary after Income Tax</span>
                                        <div class="row col-value">
                                            @Html.DisplayFor(x => x.NetSalary)
                                        </div>
                                    </div>
                                    <div class="col-lg-2 col-xl-2 no-space">
                                        <span class="txt-13 span-col-label">Other Allowances</span>
                                        <div class="row col-value">
                                            @Html.DisplayFor(x => x.OtherAllowances)
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5>7. If not selected for the post, indicate option for another position<br></h5>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-lg-12 col-xl-12 no-space">
                                        @Html.DisplayFor(x => x.OptionForAnotherPosition)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5>8. Time required to join (in days)<br></h5>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-lg-4 col-xl-4 no-space"><span class="txt-13 span-col-label">Days to join</span></div>
                                    <div class="col-lg-4 col-xl-4 no-space">
                                        @Html.DisplayFor(x => x.TimeRequiredToJoin)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>9. Give brief on the largest project associated with<br></h5>
                            </div>
                            @*<div class="col-2 col-md-1 col-xl-1"><i class="fas fa-plus-square"></i></div>*@
                        </div>
                    </div>

                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateProjectViewModel>()
    .Name("kgrdCandidateProject")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(100);
            columns.Bound(p => p.Currency).Title("Currency").Width(200);
            columns.Bound(p => p.Value).Title("Value").Width(200);
            columns.Bound(p => p.Client).Title("Client").Width(200);
            columns.Bound(p => p.Consultant).Title("Consultant").Width(200);
            columns.Bound(p => p.ConstructionPeriodFrom).Title("Period From").Width(120).Format("{0:dd/MM/yyyy}");
            columns.Bound(p => p.ConstructionPeriodTo).Title("Period To").Width(120).Format("{0:dd/MM/yyyy}");
            columns.Bound(p => p.Position).Title("Position").Width(200);
            columns.Bound(p => p.Description).Title("Description").Width(200);
        })

        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateProjectData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5>10. Your Manager’s Job Title &amp; Number of Subordinates<br></h5>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-lg-12 col-xl-12 no-space">
                                        @Html.DisplayFor(x => x.ManagerJobTitleAndNoOfSubordinate)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-xl-3"></div>
                <div id="divQualificationInfo" class="col-xl-9" style="border-radius: 6;border-left-width: 2;">
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-sm-10 col-md-11 col-xl-11">
                                <h5>11. Educational Qualification (Minimum 1 record is mandatory)<br></h5>
                            </div>
                            <div class="col-sm-1 col-md-1"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateEducationalViewModel>()
    .Name("kgrdCandidateEducational")
        .Columns(columns =>
        {
            columns.Bound(p => p.QualificationName).Title("Qualification").Width(200);
            columns.Bound(p => p.SpecializationName).Title("Specialization").Width(200);
            columns.Bound(p => p.EducationTypeName).Title("Type").Width(200);
            columns.Bound(p => p.Institute).Title("Institute").Width(200);
            columns.Bound(p => p.CountryName).Title("Country").Width(200);
            columns.Bound(p => p.Duration).Title("Duration").Width(200);
            columns.Bound(p => p.PassingYear).Title("Passing Year").Format("{0:dd MMM yyyy}").Width(200);
            columns.Bound(p => p.Marks).Title("% Marks").Width(200);
            columns.Bound(p => p.AttachmentName).Title("Attachment").ClientTemplate("#if(AttachmentName!=null){#<a href='/cms/Document/GetFileMongo?fileId=#:AttachmentId#' target='_blank'>#:AttachmentName#</a>#}#").Width(400);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateEducationalData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>12. Certifications<br></h5>
                            </div>
                            <div class="col">@*<i class="fas fa-plus-square"></i>*@</div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateEducationalViewModel>()
    .Name("kgrdCandidateCertifications")
        .Columns(columns =>
        {
            columns.Bound(p => p.QualificationName).Title("Qualification").Width(200);
            columns.Bound(p => p.SpecializationName).Title("Specialization").Width(200);
            columns.Bound(p => p.EducationTypeName).Title("Type").Width(200);
            columns.Bound(p => p.Institute).Title("Institute").Width(200);
            columns.Bound(p => p.CountryName).Title("Country").Width(200);
            columns.Bound(p => p.Duration).Title("Duration").Width(200);
            columns.Bound(p => p.PassingYear).Title("Passing Year").Format("{0:dd MMM yyyy}").Width(200);
            columns.Bound(p => p.Marks).Title("% Marks").Width(200);
            columns.Bound(p => p.AttachmentName).Title("Attachment").ClientTemplate("#if(AttachmentName!=null){#<a href='/cms/Document/GetFileMongo?fileId=#:AttachmentId#' target='_blank'>#:AttachmentName#</a>#}#").Width(400);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .HtmlAttributes(new {/* style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateCertificationsData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>13. Trainings<br></h5>
                            </div>
                            <div class="col">@*<i class="fas fa-plus-square"></i>*@</div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateEducationalViewModel>()
    .Name("kgrdCandidateTrainings")
        .Columns(columns =>
        {
            columns.Bound(p => p.QualificationName).Title("Qualification").Width(200);
            columns.Bound(p => p.SpecializationName).Title("Specialization").Width(200);
            columns.Bound(p => p.EducationTypeName).Title("Type").Width(200);
            columns.Bound(p => p.Institute).Title("Institute").Width(200);
            columns.Bound(p => p.CountryName).Title("Country").Width(200);
            columns.Bound(p => p.Duration).Title("Duration").Width(200);
            columns.Bound(p => p.PassingYear).Title("Passing Year").Format("{0:dd MMM yyyy}").Width(200);
            columns.Bound(p => p.Marks).Title("% Marks").Width(200);
            columns.Bound(p => p.AttachmentName).Title("Attachment").ClientTemplate("#if(AttachmentName!=null){#<a href='/cms/Document/GetFileMongo?fileId=#:AttachmentId#' target='_blank'>#:AttachmentName#</a>#}#").Width(400);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateTrainingsData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-sm-10 col-md-11 col-xl-11">
                                <h5>14. Computer Proficiency<br></h5>
                            </div>
                            <div class="col-sm-1 col-xl-1"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateComputerProficiencyViewModel>()
    .Name("kgrdCandidateComputer")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(120);
            columns.Bound(p => p.Program).Title("Application/Program").Width(200);
            columns.Bound(p => p.ProficiencyLevelName).Title("Proficiency Level").Width(200);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateComputerProfData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))
        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>15. Languages<br></h5>
                            </div>
                            <div class="col-2 col-md-1 col-xl-1"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateLanguageProficiencyViewModel>()
    .Name("kgrdCandidateLanguage")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(120);
            columns.Bound(p => p.LanguageName).Title("Language Name").Width(200);
            columns.Bound(p => p.ProficiencyLevelName).Title("Proficiency Level").Width(200);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateLanguageProfData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))
        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>16. Driving License<br></h5>
                            </div>
                            @*<div class="col-2 col-md-1 col-xl-1"><i class="fas fa-plus-square"></i></div>*@
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateDrivingLicenseViewModel>()
    .Name("kgrdCandDrivingLicense")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(100);
            columns.Bound(p => p.CountryName).Title("Country Name").Width(200);
            columns.Bound(p => p.LicenseTypeName).Title("License Type").Width(200);
            columns.Bound(p => p.IssueDate).Title("Issued Date").Width(120).Format("{0:dd/MM/yyyy}");
            columns.Bound(p => p.ValidUpTo).Title("Valid Up To").Width(120).Format("{0:dd/MM/yyyy}");
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            .PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandidateDrivingLicenseData", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5>17. Additional Information, if any (Awards, Appreciations, etc.,)<br></h5>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-lg-12 col-xl-12 no-space">
                                        @Html.DisplayFor(x => x.AdditionalInformation)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>18. References<br></h5>
                            </div>
                            <div class="col-2 col-md-1 col-xl-1"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @(Html.Kendo().Grid<CandidateReferencesViewModel>()
    .Name("kgrdCandrefer")
        .Columns(columns =>
        {
            columns.Bound(p => p.SequenceOrder).Title("Sl. No.").Width(100);
            columns.Bound(p => p.Name).Title("Name").Width(200);
            columns.Bound(p => p.Position).Title("Position").Width(200);
            columns.Bound(p => p.Company).Title("Company").Width(200);
            columns.Bound(p => p.Phone).Title("Phone").Width(200);
            columns.Bound(p => p.Email).Title("Email").Width(200);
        })
        .Editable(editable => editable.Mode(GridEditMode.PopUp))
        //.Pageable()
        .Sortable()
        //.Scrollable()
        .Selectable(select => select.Enabled(false))
        .HtmlAttributes(new { /*style = "height:300px;"*/ })
        .DataSource(dataSource => dataSource
            .Ajax()
            //.PageSize(20)
            .Model(model => model.Id(p => p.Id))
            .Read(read => read.Action("ReadCandRefer", "CandidateProfile", new { @area = "Recruitment", @candidateProfileId = Model.Id, @type = ViewBag.type }))

        )
                                        )
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>19. Job Criteria<br></h5>
                            </div>
                            <div class="col-2 col-md-1 col-xl-1"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @{
                                            foreach (var item1 in Model.Criterias)
                                            {
                                                <div class="row form-group">
                                                    <div class="col-md-3">
                                                        @item1.Criteria
                                                    </div>
                                                    <div class="col-md-9">

                                                        @(Html.Kendo().DropDownList()
                                                            .Name(item1.Id)
                                                            .DataTextField("Name")
                                                            .DataValueField("Id").Value(item1.Value)
                                                            .OptionLabel("--Select--")
                                                            .DataSource(source =>
                                                            {
                                                                source.Read(read =>
                                                                {
                                                                    read.Action("GetListOfValueList", "ListOfValue", new { type = item1.CriteriaTypeCode });
                                                                });
                                                        }))
                                                    </div>
                                                </div>
                                            } }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>20. Skills<br></h5>
                            </div>
                            <div class="col-2 col-md-1 col-xl-1"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @{
                                            foreach (var item2 in Model.Skills)
                                            {
                                                <div class="row form-group">
                                                    <div class="col-md-3">
                                                        @item2.Criteria
                                                    </div>
                                                    <div class="col-md-9">

                                                        @(Html.Kendo().DropDownList()
                                                            .Name(item2.Id)
                                                            .DataTextField("Name")
                                                            .DataValueField("Id")
                                                            .Value(item2.Value)
                                                            .OptionLabel("--Select--")
                                                            .DataSource(source =>
                                                            {
                                                                source.Read(read =>
                                                                {
                                                                    read.Action("GetListOfValueList", "ListOfValue", new { type = item2.CriteriaTypeCode });
                                                                });
                                                            }))
                                                    </div>
                                                </div>
                                            } }
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-10 col-md-11 col-xl-11">
                                <h5>21. Other Information<br></h5>
                            </div>
                            <div class="col-2 col-md-1 col-xl-1"></div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        @{
                                            for (var i = 0; i < Model.OtherInformations.Count(); i++)
                                            {
                                                <div class="row form-group">
                                                    <div class="col-md-3">
                                                        @Model.OtherInformations[i].Criteria
                                                    </div>
                                                    <div class="col-md-2">
                                                        @if (Model.OtherInformations[i].CriteriaTypeCode == "LISTOFVALUE")
                                                        {
                                                            @(Html.Kendo().DropDownListFor(x => x.OtherInformations[i].Value)
                                                                //.Name(item3.Value)
                                                                .Events(x =>x.Change("OnChangeDropdown"))
                                                                .DataTextField("Name")
                                                                .DataValueField("Id")
                                                                //.Value(Model.OtherInformations[i].Value)
                                                                .OptionLabel("--Select--")
                                                                .DataSource(source =>
                                                                {
                                                                    source.Read(read =>
                                                                    {
                                                                        read.Action("GetListOfValueListById", "ListOfValue", new { parentId = Model.OtherInformations[i].ListOfValueTypeId }).Data("filterDropdown");
                                                                    });
                                                                }))
                                                            @Html.HiddenFor(x => x.OtherInformations[i].Criteria)
                                                            @Html.HiddenFor(x => x.OtherInformations[i].CriteriaType)
                                                            @Html.HiddenFor(x => x.OtherInformations[i].Type)

                                                        }
                                                        else if (Model.OtherInformations[i].CriteriaTypeCode == "INPUT")
                                                        {
                                                            @Html.Kendo().TextBoxFor(x => x.OtherInformations[i].Value)
                                                            @Html.HiddenFor(x => x.OtherInformations[i].Criteria)
                                                            @Html.HiddenFor(x => x.OtherInformations[i].CriteriaType)
                                                            @Html.HiddenFor(x => x.OtherInformations[i].Type)
                                                        }
                                                        @*else if (Model.OtherInformations[i].CriteriaTypeCode == "DATEPICKER")
                                                    {
                                                        var code = Model.OtherInformations[i].Value.ToSafeDateTime();
                                                        @Html.Kendo().DatePickerFor(x => code).Format("dd MMM yyyy")
                                                    }*@
                                                    </div>
                                                    @*<script>
                                                    
                                                     var html = "<div class='col-md-6' id='descp_" +@i+"'>test </div >";
                                                        document.getElementById("parentdesc").appendChild = html;
                                                </script>*@
                                                    <div id="descp_@i"></div>
                                                    @*<div class="col-md-6" id="descp">
                                                </div>*@
                                                </div>
                                            }
                                        }
                                        @*foreach (var item3 in Model.OtherInformations)
                                    {
                                        <div class="row form-group">
                                            <div class="col-md-3">
                                                @item3.Criteria
                                            </div>
                                            <div class="col-md-9">
                                                @if (item3.CriteriaTypeCode == "LISTOFVALUE")
                                                {
                                                    @(Html.Kendo().DropDownListFor(x => item3.Value)
                                                        //.Name(item3.Value)
                                                        .DataTextField("Name")
                                                        .DataValueField("Id")
                                                        .Value(item3.Value)
                                                        .OptionLabel("--Select--")
                                                        .DataSource(source =>
                                                        {
                                                            source.Read(read =>
                                                            {
                                                                read.Action("GetListOfValueList", "ListOfValue", new { type = item3.CriteriaTypeCode });
                                                            });
                                                        }))
                                                }
                                                else if (item3.CriteriaTypeCode == "INPUT")
                                                {
                                                    @Html.Kendo().TextBoxFor(x => item3.Value)
                                                }
                                                else if (item3.CriteriaTypeCode == "DATEPICKER")
                                                {

                                                    var code = item3.Value.ToSafeDateTime();

                                                    @Html.Kendo().DatePickerFor(x => code).Format("dd MMM yyyy")
                                                }
                                            </div>
                                        </div>
                                    } }*@
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="Qlink-title-mbody card-space">
                        <div class="row">
                            <div class="col-xl-11">
                                <h5>22. Self Declaration<br></h5>
                            </div>
                        </div>
                    </div>
                    <div class="card">
                        <div class="card-body">
                            <div>
                                <div class="row">
                                    <div class="col-12">
                                        <div class="col-xl-12 no-space"><span class="txt-13">I hereby declare that the particulars given are correct and true to be the best my knowledge and belief and no attempt has been made by me to conceal or withhold pertinent information, which you are at liberty to verify at any time. I also understand that any misrepresentation of facts in the application is sufficient cause for termination of my service, if appointed.</span></div>
                                    </div>
                                </div>
                            </div>
                            <div>
                                <div class="row">
                                    <div class="col-6">
                                        <div class="col-xl-6 no-space">
                                            <span class="txt-13" style="font-weight:500">Date</span>
                                            @*@Html.DisplayFor(x => x.SignatureDate)*@
                                            @Html.Kendo().DatePickerFor(x => x.SignatureDate).Format("dd MMM yyyy")
                                        </div>
                                    </div>
                                    <div class="col-6">
                                        <div class="col-xl-6 no-space">
                                            <span class="txt-13" style="font-weight:500">Signature</span>
                                            @*@Html.DisplayFor(x => x.Signature)*@
                                            @Html.Kendo().TextBoxFor(x => x.Signature).HtmlAttributes(new { @class = "sml-text" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                </div>
            </div>
        </div>

        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.PhotoId)
        @Html.HiddenFor(x => x.QIDAttachmentId)
        @Html.HiddenFor(x => x.QIDAttachmentId2)
        @Html.HiddenFor(x => x.QIDAttachmentId3)
        @Html.HiddenFor(x => x.QIDAttachmentId4)
        @Html.HiddenFor(x => x.QIDAttachmentId5)
        @Html.HiddenFor(x => x.PassportAttachmentId)
        @Html.HiddenFor(x => x.PassportAttachmentId2)
        @Html.HiddenFor(x => x.PassportAttachmentId3)
        @Html.HiddenFor(x => x.PassportAttachmentId4)
        @Html.HiddenFor(x => x.PassportAttachmentId5)
        @Html.HiddenFor(x => x.AcademicCertificateId)
        @Html.HiddenFor(x => x.AcademicCertificateId2)
        @Html.HiddenFor(x => x.AcademicCertificateId3)
        @Html.HiddenFor(x => x.AcademicCertificateId4)
        @Html.HiddenFor(x => x.AcademicCertificateId5)
        @Html.HiddenFor(x => x.OtherCertificateId)
        @Html.HiddenFor(x => x.OtherCertificateId2)
        @Html.HiddenFor(x => x.OtherCertificateId3)
        @Html.HiddenFor(x => x.OtherCertificateId4)
        @Html.HiddenFor(x => x.OtherCertificateId5)
        @Html.HiddenFor(x => x.ResumeId)
        @Html.HiddenFor(x => x.CoverLetterId)
        @Html.HiddenFor(x => x.CriteriasList)
        @Html.HiddenFor(x => x.SkillsList)
        @Html.HiddenFor(x => x.OtherInformationsList)
        @Html.HiddenFor(x => x.JobAdvertisementId)
    </form>
</div>
