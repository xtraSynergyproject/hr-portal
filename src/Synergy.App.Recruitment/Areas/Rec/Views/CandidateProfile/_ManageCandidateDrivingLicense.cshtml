@using CMS.UI.ViewModel
@using CMS.Common

@{
    ViewData["Title"] = "Manage Candidate Driving License";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model CandidateDrivingLicenseViewModel

<style>
    .k-switch-label-on, .k-switch-label-off {
        display: flex
    }

    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
    .cms-managecandedu-footer {
        /*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }

</style>

<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

    <form asp-controller="CandidateProfile" asp-action="ManageCandDrivingLicense" method="post" class="form-horizontal">
        <div class="text-danger" asp-validation-summary="All" style="font-size:14px;"></div>
        <div class="row" style="padding:10px;">

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="SequenceOrder" type="number" min="0" class="form-control" placeholder="Sl. No" autocomplete="off" style="width:80%;" required="required" />
                    <label for="SequenceOrder">Sl. No <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div>
                        <label for="country">Country <span class="required">*</span></label>
                    </div>
                    @(Html.Kendo().DropDownListFor(x=>x.CountryId)
                                .DataTextField("Name")
                                .DataValueField("Id")
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetIdNameList", "Master", new { @area = "Recruitment", @type = "Country" });
                                    });
                                })
                                
                                .OptionLabel("--Select Country--")
                                .HtmlAttributes(new { @class="form-control", style = "width: 80%" })
                    )
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div>
                        <label for="licensetype">License Type <span class="required">*</span></label>
                    </div>
                    @(Html.Kendo().DropDownListFor(x=>x.LicenseType)
                                .DataTextField("Name")
                                .DataValueField("Id")
                                .Filter("contains")
                                .DataSource(source =>
                                {
                                    source.Read(read =>
                                    {
                                        read.Action("GetListOfValueList", "ListOfValue", new { @area = "Recruitment", @type = "LOV_LICENSETYPE" });
                                    });
                                })
                                
                                .OptionLabel("--Select License Type--")
                                .HtmlAttributes(new { @class="form-control", style = "width: 80%" })
                    )

                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div>
                        <label for="from">Issued Date <span class="required">*</span></label>
                    </div>
                    @(Html.Kendo().DatePickerFor(x=>x.IssueDate).Format("dd MMM yyyy").Events(e => e.Change("DateChange")).HtmlAttributes(new { @class = "form-control", style = "width: 80%", onkeydown = "javascript:return false;", @required="required" }))
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <div>
                        <label for="from">Valid Up To <span class="required">*</span></label>
                    </div>
                    @(Html.Kendo().DatePickerFor(x=>x.ValidUpTo).Format("dd MMM yyyy").Events(e => e.Change("DateChange")).HtmlAttributes(new { @class = "form-control", style = "width: 80%", onkeydown = "javascript:return false;", @required="required" }))
                </div>
            </div>

            @*<div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="IssueDate" type="date" class="form-control" placeholder="Issued Date" autocomplete="off" style="width:80%;" required="required" />
                    <label for="IssueDate">Issued Date <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="ValidUpTo" type="date" class="form-control" placeholder="Valid Up To" autocomplete="off" style="width:80%;" required="required" />
                    <label for="ValidUpTo">Valid Up To <span class="required">*</span></label>
                </div>
            </div>*@           

            <div class="col-12 pad-15">
                &nbsp;
            </div>

            <div class="cms-slidebar-footer">
                <input type="button" class="btn btn-light" value="Close" onclick="closeNavCandDL()" />
                <input type="submit" class="btn btn-primary" value="Save" onclick="OnSave(event);" />
            </div>

        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.CandidateProfileId)      
        @Html.HiddenFor(x => x.IsLatest)
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.Success' == "True") {
          //  
           // window.parent.parent.$("#kgrdCandDrivingLicense").data("kendoGrid").dataSource.read();            
            closeNavCandDL();
        }
    });

    function closeNavCandDL() {
       // window.parent.CloseIframePopup();
        var win = GetMainWindow();
        win.CloseWindow({ MethodName: 'RefreshCDL' });
        return false;
    }

    function OnSave(evt) {
        
        var fd = kendo.toString($("#IssueDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');
        var td = kendo.toString($("#ValidUpTo").data("kendoDatePicker").value(), 'yyyy/MM/dd');
        if ($("#CountryId").val() == "") {
            //  
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Country is required");
            evt.preventDefault();
            return false;
        }
        else if ($("#LicenseType").val() == "") {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("License type is required");
            evt.preventDefault();
            return false;
        }
        else if ($("#IssueDate").val() != "" && $("#ValidUpTo").val() != "") {
            if (new Date(td) > new Date(fd)) {

                $(".text-danger ul").html("");
                $(".text-danger").removeClass("validation-summary-errors");
                $(".text-danger").addClass("validation-summary-valid");

            } else {
                $(".text-danger").removeClass("validation-summary-valid");
                $(".text-danger").addClass("validation-summary-errors");
                $(".text-danger").html("Valid Up To date should be greater than Issued Date");
                evt.preventDefault();
                return false;
            }
    }
        else {
             $(".text-danger").removeClass("validation-summary-errors");
             $(".text-danger").addClass("validation-summary-valid");
        }
       
    }
    
    function DateChange() {
        var fd = kendo.toString($("#IssueDate").data("kendoDatePicker").value(), 'yyyy/MM/dd');
        var td = kendo.toString($("#ValidUpTo").data("kendoDatePicker").value(), 'yyyy/MM/dd');
        if (new Date(td) > new Date(fd)) {

            $(".text-danger").html("");
            $(".text-danger").removeClass("validation-summary-errors");
            $(".text-danger").addClass("validation-summary-valid");

        } else {
            $(".text-danger").removeClass("validation-summary-valid");
            $(".text-danger").addClass("validation-summary-errors");
            $(".text-danger").html("Valid Up To date should be greater than Issued Date");
            window.scrollTo(0, 0);
            return false;
        }
    }
    function onFileUploadSuccess(e) {
        //alert(e.response.fileId);
        // 
        if (e.response.success) {
            $("#AttachmentId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    

    function onExpFileUploadSuccess(e) {
        if (e.response.success) {
            $("#AttachmentId").val(e.response.fileId);
            //document.getElementById('IsLatestOfferLetterSalarySlip').checked = true;
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
</script>

