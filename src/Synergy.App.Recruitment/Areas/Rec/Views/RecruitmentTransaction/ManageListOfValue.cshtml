@using Synergy.App.ViewModel;
@using Synergy.App.Common;

@{
    ViewData["Title"] = "Manage List Of Value";
    Layout = "/Areas/Core/Views/Shared/_PopupLayout.cshtml";
}

@model LOVViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }

    .lovname {
        display: inline-block;
        vertical-align: middle;
        line-height: 41px;
        padding-left: 10px;
    }
</style>
<script>

    $(document).ready(function () {

        $("#LOVGrid").jsGrid({
                    width: "100%",
                    inserting: false,
                    editing: true,
                    sorting: true,
                    paging: true,
                    autoload: true,
                    pageSize: 14,
                    pageButtonCount: 5,
                    controller: {
                        loadData: function (filter) {

                            return $.ajax({
                                type: "GET",
                                url: "/Rec/RecruitmentTransaction/GetLOVTypeList?code=" + '@Model.Code' + '&refId='+'@Model.ReferenceId',
                                data: filter,
                                dataType: "json"
                            });
                        },
                        onItemEditing: function (e) {
                            debugger;
                            if (e.grid._container.find(".jsgrid-edit-row")[0] != undefined) {
                                //
                                e.grid.updateItem();
                            }
                        },
                        updateItem: function (item) {
                            debugger;
                        },
                    },
                    fields: [
                        {
                            name: "Name",
                            type: "text",
                            editing: true
                        },
                        {
                            name: "Description",
                            type: "text",
                            editing: true
                        },
                        {
                            type: "control", deleteButton: false,
                        },
                        { name: "Id", type: "text", editing: false, visible: false },
                    ]
                });

    });

    function AddNewRecord() {
        $("#LOVGrid").jsGrid("insertItem", { Name: "", Description: "" }).done(function () {

        });
    }

    function OnSave() {
        var lovlist = [];
        var lovGrid = $("#LOVGrid").data("JSGrid");

        if (lovGrid._editingRow != null) {
            lovGrid.updateItem();
        }

        for (var i = 0; i < lovGrid.data.length; i++) {
            lovlist.push(lovGrid.data[i]);
        }

        $("#Json").val(JSON.stringify(lovlist));
        
    }

    var onAjaxSuccess = function (res) {

        if (res.success) {
            ShowNotification("Saved Successfully", "success");
            document.getElementById("submitBtn").disabled = true;
            //if (res.action == "Edit") {
            //    window.parent.GetListOfValueList(res.ReferenceTypeId);  
            //}
            //else {
               
            //}
        }
        else {
            ShowNotification(res.error, "error");
        }

    };

    function onSave(arg) {
        if (arg.model.Name == "") {
            arg.preventDefault();
            kendo.alert("Enter Name");
            return false;
        }
    }    

    function closeNavMemberGroup() {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

</script>
<script id="ct-template" type="text/kendo-ui-template">
    #if(data.ParentId!=null){#
       <span style="width:100%" class="lovname">#:Name #</span>
    #}#
</script>

<div class="row-12" style="margin:15px;">

    <form asp-controller="RecruitmentTransaction" asp-action="ManageListOfValue" data-ajax-begin="onAjaxBegin" data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST"
          class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All" style="font-size:12px;"></div>
        <div class="row" style="padding:10px;">

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" autocomplete="off" style="width:100%" required />
                    <label for="Name">LOV Type Name <span style="color:red">*</span></label>
                </div>
            </div>
            <div class="col-12" id="sublov" style="width:880px">
                <br />
                <div style="padding: 5px 0px;">
                    <input type="button" class="btn btn-primary" onclick="AddNewRecord();" value="Add New Record" />
                </div>
                <div id="LOVGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

                @*@(Html.Kendo().TreeList<ListOfValueViewModel>()
                    .Name("treelist")
                    .Toolbar(toolbar => toolbar.Create())
                    .Columns(columns =>
                    {
                        columns.Add().Field(e => e.Name).Width(250);
                        columns.Add().Field(e => e.Description).Width(250);
                        columns.Add().Field(e => e.EnableDescription).Width(150);
                        columns.Add().Width(200).Command(c =>
                        {
                            c.CreateChild().Text("Add child");
                            c.Edit();
                            c.Destroy();
                        }).Title("Action")
                        .HtmlAttributes(new
                        {
                            style = "text-align:center;width:500px;"
                        });
                    }).Resizable(true)
                       .Pageable(pageable => pageable
                                //.Refresh(true)
                                .PageSize(20)
                                .PageSizes(true)
                                //.ButtonCount(5)
                                )
                       .Events(e=>e.Save("onSave"))
                    .Editable(editable => editable.Mode(TreeListEditMode.InLine))
                    .DataSource(dataSource => dataSource

                         .Create(create => create.Action("Create", "JobAdvertisement"))
                        .Read(read => read.Action("GetList", "JobAdvertisement", new { @area = "Recruitment", jobid = Model.ReferenceTypeId, lovtype = Model.Code, parentid = Model.Id }))
                        .Update(update => update.Action("Update", "JobAdvertisement"))
                        //.Destroy(delete => delete.Action("Destroy", "JobAdvertisement"))

                        .Model(m =>
                        {
                            m.Id(f => f.Id);
                            m.ParentId(f => f.ParentId);
                            m.Expanded(true);
                            m.Field(f => f.Name);
                            m.Field(f => f.Description);
                            m.Field(f => f.Id);
                            m.Field(f => f.CreatedDate);
                            m.Field(f => f.LastUpdatedDate);
                            m.Field(f => f.Status);
                            m.Field(f => f.EnableDescription);
                        })
                    )
                    .Height(540)
                )*@

            </div>
        </div>
        <div>

        </div>

        <div class="cms-slidebar-footer">
            @*<button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">Close</button>*@
            <input type="submit" class="btn btn-primary" value="Save" onclick="OnSave(event)" id="submitBtn" />
        </div>

        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.LOVType)
        @Html.HiddenFor(x => x.Code)
        @Html.HiddenFor(x => x.Json)
        @Html.HiddenFor(x => x.ReferenceId)
        @Html.HiddenFor(x => x.ReferenceType)
    </form>
</div>
