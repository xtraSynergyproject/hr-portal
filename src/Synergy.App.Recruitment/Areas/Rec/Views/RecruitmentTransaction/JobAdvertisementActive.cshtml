@using Synergy.App.ViewModel
@using Synergy.App.Common

@{
    ViewData["Title"] = "Manage Job Advertisement";
    Layout = null;
}

@model JobAdvertisementViewModel

<style>
    .k-grid td, .k-grid th {
        font-size: 14px !important;
    }

    .tb-bg {
        /*background-color:cadetblue;*/
        background-color: #17a2b8 !important;
        color: #fff;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .tb-bg1 {
        /*background-color: cornflowerblue;*/
        background-color: #ffc107 !important;
        color: #000;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .tb-bg2 {
        /* background-color: darkcyan;*/
        background-color: #17a2b8 !important;
        color: #fff;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .k-footer-template {
        background-color: #DAEDFF
    }

    .k-grid-header .k-header, .k-grid-header thead, .k-grid-header .k-hierarchy-cell {
        background-color: #527ab8;
    }

        .k-grid-header thead a {
            color: #fff !important;
        }
</style>


<script type="text/javascript">

    $(document).ready(function () {

        GetActiveJobAdvertismentList();

    });

    function OnEditJobAdvt(Id,JobId) {       
        var url = "/Recruitment/JobAdvertisement/Index?jobId=" + JobId + "&id=" + Id;
        LoadPartailView(url, $('#cms-content'));

    }
    function back() {
        var url = "/Rec/RecruitmentTransaction/JobAdvertisementIndex";
        LoadPartailView(url, $('#cms-content'));
    }

     var columnDefs = [         
         { field: "JobName", headerName: "Position", maxWidth: 150,},        
         { field: "Description", width: 150 },
         { field: "QualificationName", width: 150 },
         { field: "NoOfPosition", width: 150 },
         { field: "Experience", width: 150 },
         { field: "NationalityName", width: 150 },
         { field: "ManpowerTypeName", width: 150 },
         { field: "JobCategoryName", width: 150 },
         { field: "LocationName", width: 150 },             
         {
            field: "ExpiryDate",
            cellRenderer: (data) => {
                debugger;
                if (data.value != null && data.value != "") {
                    var d = new Date(data.value);
                    return d.getDate() + "." + d.getMonth() + "." + d.getFullYear();
                }
            }
         },
         {
             field: "NeededDate",
             cellRenderer: (data) => {
                 debugger;
                 if (data.value != null && data.value != "") {
                     var d = new Date(data.value);
                     return d.getDate() + "." + d.getMonth() + "." + d.getFullYear();
                 }
             }
         },
         {
             headerName: "Actions",
             field: "Id",
             cellRenderer: params => {
                 return "<div class='btn-group grid-menu' id='tree-menuja' data-id='" + params.value + "' data-jobid='" + params.data.JobId + "' ><i class='fas fa-ellipsis-v'></i></div>"
             }
         }
    ];

    function GetActiveJobAdvertismentList() {
        document.getElementById("ActiveJobAdvertisementGrid").innerHTML = "";

        gridConfig(
            "ActiveJobAdvertisementGrid",
            "/Rec/RecruitmentTransaction/ReadJobadvtDataA?jobid=@Model.JobId",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    $(function () {
        
        $.contextMenu({
            selector: '#tree-menuja',
            trigger: 'left',
            build: function ($trigger, e) {

                var Id = $trigger.data('id');
                var jobId = $trigger.data('jobid');
                
                switch (0) {
                    case 0:
                        
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'items':
                                        OnEditJobAdvt(Id, jobId);
                                        break;                                    
                                    default:
                                }
                            },
                            items: {
                                "items": { name: "Edit", icon: "fa-duotone fa-pen-to-square" },
                            },
                        };
                }
            }
        });

    });

</script>


<div class="row" style="padding-top:15px;">
    <div class="col-12">
        <input type="button" class="btn btn-primary float-right" value="Back" onclick="back()" />
    </div>
    <div class="col-12" style="padding:10px;">

        <div style="width: 100%;" class="p-3">
            <legend class="fs-legend">Active Job Advertisement</legend>
            <div id="ActiveJobAdvertisementGrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        </div>

    </div>
    @Html.HiddenFor(x => x.Id)
    @Html.HiddenFor(x => x.DataAction)


</div>
