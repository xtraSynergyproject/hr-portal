@using CMS.Data.Model
@using CMS.UI.ViewModel
@using Kendo.Mvc.UI
@using Kendo.Mvc.Extensions
@using CMS.Common
@model StaffCandidateViewModel
@{
    ViewBag.Title = "Staff Entries";
    Layout = null;
}


<style>
    .k-grid thead {
        background-color: #1c4893 !important;
    }
    .a-text {
        color: blue !important;
        text-decoration: underline !important;
        cursor: pointer !important;
    }

    .accordion {
        background-color: #17a2b8;
        color: white;
        cursor: pointer;
        padding: 18px;
        width: 100%;
        border: none;
        text-align: left;
        outline: none;
        font-size: 17px;
        transition: 0.4s;
        font-weight: bold;
    }

        .active, .accordion:hover {
            background-color: #17a2b8;
        }

        .accordion:after {
            content: '\02EF';
            color: white;
            font-weight: bold;
            float: right;
            margin-left: 5px;
            font-size: 74px;
            margin-top: -78px;
        }

    .active:after {
        content: "\02F0";
        color: white;
        font-weight: bold;
        float: right;
        margin-left: 5px;
        font-size: 74px;
        margin-top: -78px;
    }

    .panel {
        padding: 0 18px;
        background-color: white;
        max-height: 0;
        overflow: hidden;
        transition: max-height 0.2s ease-out;
    }

    body > .k-animation-container > .k-popup > .k-list {
        height: 150px;
        overflow: auto;
    }
</style>


<script>

    function OnDownload(link) {
        var l = link.split("_");
        url = '/cms/Document/GetFileMongo?fileId=' + l[l.length - 1];
        window.open(url, '_blank');
        return false;
    }

    $(document).ready(function () {
        var acc = document.getElementsByClassName("accordion");
        var i;

        for (i = 0; i < acc.length; i++) {
            acc[i].addEventListener("click", function () {
                this.classList.toggle("active");
                var panel = this.nextElementSibling;
                if (panel.style.maxHeight) {
                    panel.style.maxHeight = null;
                } else {
                    panel.style.maxHeight = panel.scrollHeight + 50 + "px";
                }
            });
        }

        //$.ajax({
        //    type: "GET",
        //    url: "/cms/userpagepreference/IsUserDisabledTour?pageName=StaffDataByAgency",
        //    dataType: "json",
        //    success: function (result) {
        //        if (!result) {
        //
        //            var a = document.getElementById("expandmenu").classList.toggle("active");
        //            var panel = document.getElementById("expandmenu").nextElementSibling;
        //            if (panel.style.maxHeight) {
        //                panel.style.maxHeight = null;
        //            } else {
        //                panel.style.maxHeight = panel.scrollHeight + 50 + "px";
        //            }
        //            openTour();
        //        }
        //        isTourDisable = result;
        //    },
        //    error: function (xhr, httpStatusMessage, customErrorMessage) {
        //        alert(customErrorMessage);
        //    }
        //});

    });

    //var isTourDisable = false;
    //function openTour() {
    //    introJs().setOptions({
    //        steps: [{
    //            title: "Welcome to staff details by agency",
    //            intro: "This will have details of the candidate added by agency"
    //        },
    //        {
    //            title: "Applied Staff Detail",
    //            element: "#expandmenu",
    //            intro: "On expand of this button, you can see all the candidate data added by agency"
    //            },
    //            {
    //                title: "Staff Details Grid",
    //                element: "#panelgrid",
    //                intro: "On this grid, you can see all the staff data added by agency"
    //            },
    //        {
    //            title: "Add Candidate Details",
    //            element: "#spreadsheetStaff",
    //            intro: "In this spreadsheet, agency can add the staff candidate details"
    //        },
    //        {
    //            title: "Save Changes Button",
    //            element: "#save",
    //            intro: "By clicking on this button agency can save the single or multiple candidate records"
    //        },
    //        {
    //            title: 'Cancel Changes Button',
    //            element: "#cancel",
    //            intro: "By clicking on this button agency can cancel the single or multiple candidate records"
    //        }]
    //    }).onbeforeexit(function () {
    //        if (!isTourDisable) {

    //            kendo.confirm("Do you want to see this tour again, whenever you come to this page?").then(function () {
    //                //alert("yes");
    //                $.ajax({
    //                    type: "POST",
    //                    url: "/cms/userpagepreference/AddPageTourPreferences?pageName=StaffDataByAgency&disablePageTour=true",
    //                    dataType: "json",
    //                    success: function (result) {
    //                        kendo.alert("Preference Saved Successfully");
    //                    },
    //                    error: function (xhr, httpStatusMessage, customErrorMessage) {
    //                        alert(customErrorMessage);
    //                    }
    //                });
    //                document.getElementById("expandmenu").click();
    //            }, function () {
    //                //alert("no");
    //                    document.getElementById("expandmenu").click();
    //            });
    //        }
    //    }).start();
    //}


    function CloseSchedule(success, res) {

    }

    function onSelectCell(arg) {

    }

    function onSubmitStaff(e) {
        //debugger;
        var isok = true;
        for (var u = 0; u <= e.data.updated.length - 1; u++) {

            if (e.data.updated[u].CVSendDate == null &&
                e.data.updated[u].CandidateName == "" &&
                e.data.updated[u].ContactNumber == "" &&
                e.data.updated[u].CurrentLocation == "" &&
                e.data.updated[u].Designation == "" &&
                e.data.updated[u].DocumentLink == "" &&
                e.data.updated[u].EducationLink == "" &&
                e.data.updated[u].EmailId == "" &&
                e.data.updated[u].ExpectedSalary == "" &&
                e.data.updated[u].ExperienceLetterLink == "" &&
                e.data.updated[u].JobAdvertisement == null &&
                e.data.updated[u].Nationality == null &&
                e.data.updated[u].NoticePeriod == "" &&
                e.data.updated[u].PassportLink == "" &&
                e.data.updated[u].PassportNumber == "" &&
                e.data.updated[u].PresentEmployer == "" &&
                e.data.updated[u].PresentSalary == "" &&
                e.data.updated[u].Qualification == "" &&
                e.data.updated[u].ResumeLink == "" &&
                e.data.updated[u].TotalExperience == null &&
                e.data.updated[u].PermanentAddressHouse == "" &&
                e.data.updated[u].PermanentAddressStreet == "" &&
                e.data.updated[u].PermanentAddressCity == "" &&
                e.data.updated[u].PermanentAddressState == "" &&
                e.data.updated[u].PermanentAddressCountry == null &&
                e.data.updated[u].MaritalStatus == null
            ) {

            } else {
                if (e.data.updated[u].CVSendDate && !e.data.updated[u].CVSendDate.includes(":") && !e.data.updated[u].CVSendDate.includes("NaN")) {
                    e.data.updated[u].CVSendDate = ConvertToDate(ExcelDateToJSDate(e.data.updated[u].CVSendDate))
                }
                if (e.data.updated[u].JobAdvertisement == null || e.data.updated[u].JobAdvertisement == "") {
                    kendo.alert("Select Job Advertisement");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].PassportNumber == null || e.data.updated[u].PassportNumber == "") {
                    kendo.alert("Passport Number is mandatory");
                    isok = false;
                    break;
                }

                if (e.data.updated[u].Nationality == null || e.data.updated[u].Nationality == "") {
                    kendo.alert("Select Nationality");
                    isok = false;
                    break;
                }

                if (e.data.updated[u].EmailId == null || e.data.updated[u].EmailId == "") {
                    kendo.alert("EmailId is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].TotalExperience == null || e.data.updated[u].TotalExperience == "") {
                    kendo.alert("Total Exp is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].ResumeLink == null) {
                    kendo.alert("Upload Resume Copy");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].PassportLink == null) {
                    kendo.alert("Upload Passport Copy");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].EducationLink == null) {
                    kendo.alert("Upload Education Document");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].ExperienceLetterLink == null) {
                    kendo.alert("Upload Experience Letter");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].PermanentAddressHouse == null || e.data.updated[u].PermanentAddressHouse == "") {
                    kendo.alert("Permanent Address House/Flat No is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].PermanentAddressStreet == null || e.data.updated[u].PermanentAddressStreet == "") {
                    kendo.alert("Permanent Address Street/Lane is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].PermanentAddressCity == null || e.data.updated[u].PermanentAddressCity == "") {
                    kendo.alert("Permanent Address City/District is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].PermanentAddressState == null || e.data.updated[u].PermanentAddressState == "") {
                    kendo.alert("Permanent Address State/Province is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].PermanentAddressCountry == null || e.data.updated[u].PermanentAddressCountry == "") {
                    kendo.alert("Permanent Address Country is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.updated[u].MaritalStatus == null || e.data.updated[u].MaritalStatus == "") {
                    kendo.alert("Marital Status is mandatory");
                    isok = false;
                    break;
                }

            }


        }
        for (var u = 0; u <= e.data.created.length - 1; u++) {

            if (e.data.created[u].CVSendDate == null &&
                e.data.created[u].CandidateName == "" &&
                e.data.created[u].ContactNumber == "" &&
                e.data.created[u].CurrentLocation == "" &&
                e.data.created[u].Designation == "" &&
                e.data.created[u].DocumentLink == "" &&
                e.data.created[u].EducationLink == "" &&
                e.data.created[u].EmailId == "" &&
                e.data.created[u].ExpectedSalary == "" &&
                e.data.created[u].ExperienceLetterLink == "" &&
                e.data.created[u].JobAdvertisement == null &&
                e.data.created[u].Nationality == null &&
                e.data.created[u].NoticePeriod == "" &&
                e.data.created[u].PassportLink == "" &&
                e.data.created[u].PassportNumber == "" &&
                e.data.created[u].PresentEmployer == "" &&
                e.data.created[u].PresentSalary == "" &&
                e.data.created[u].Qualification == "" &&
                e.data.created[u].ResumeLink == "" &&
                e.data.created[u].TotalExperience == null &&
                e.data.created[u].PermanentAddressHouse == "" &&
                e.data.created[u].PermanentAddressStreet == "" &&
                e.data.created[u].PermanentAddressCity == "" &&
                e.data.created[u].PermanentAddressState == "" &&
                e.data.created[u].PermanentAddressCountry == null &&
                e.data.created[u].MaritalStatus == null ) {
            } else {
                if (e.data.created[u].CVSendDate && !e.data.created[u].CVSendDate.includes(":") && !e.data.created[u].CVSendDate.includes("NaN")) {
                    e.data.created[u].CVSendDate = ConvertToDate(ExcelDateToJSDate(e.data.created[u].CVSendDate))
                }
                if (e.data.created[u].JobAdvertisement == null || e.data.created[u].JobAdvertisement == "") {
                    kendo.alert("Select Job Advertisement");
                    isok = false;
                    break;
                }
                if (e.data.created[u].CandidateName == null || e.data.created[u].CandidateName == "") {
                    kendo.alert("Candidate Name is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.created[u].PassportNumber == "") {
                    kendo.alert("Passport Number is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.created[u].Nationality == null) {
                    kendo.alert("Select Nationality");
                    isok = false;
                    break;
                }

                if (e.data.created[u].EmailId == null || e.data.created[u].EmailId == "") {
                    kendo.alert("EmailId is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.created[u].ResumeLink == null) {
                    kendo.alert("Upload Resume Copy");
                    isok = false;
                    break;
                }
                if (e.data.created[u].PassportLink == null) {
                    kendo.alert("Upload Passport Copy");
                    isok = false;
                    break;
                }
                if (e.data.created[u].EducationLink == null) {
                    kendo.alert("Upload Education Document");
                    isok = false;
                    break;
                }
                if (e.data.created[u].ExperienceLetterLink == null) {
                    kendo.alert("Upload Experience Letter");
                    isok = false;
                    break;
                }
                if (e.data.created[u].PermanentAddressHouse == null || e.data.created[u].PermanentAddressHouse == "") {
                    kendo.alert("Permanent Address House/Flat No is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.created[u].PermanentAddressStreet == null || e.data.created[u].PermanentAddressStreet == "") {
                    kendo.alert("Permanent Address Street/Lane is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.created[u].PermanentAddressCity == null || e.data.created[u].PermanentAddressCity == "") {
                    kendo.alert("Permanent Address City/District is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.created[u].PermanentAddressState == null || e.data.created[u].PermanentAddressState == "") {
                    kendo.alert("Permanent Address State/Province is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.created[u].PermanentAddressCountry == null || e.data.created[u].PermanentAddressCountry == "") {
                    kendo.alert("Permanent Address Country is mandatory");
                    isok = false;
                    break;
                }
                if (e.data.created[u].MaritalStatus == null || e.data.created[u].MaritalStatus == "") {
                    kendo.alert("Marital Status is mandatory");
                    isok = false;
                    break;
                }
            }
        }

        if (isok) {
            ShowLoader($('#staff-section'));
            $('#save').prop('disabled', true);
            $.ajax({
                type: "POST",
                url: "/recruitment/uploadCandidate/ManageStaffDetails",
                data: e.data,
                dataType: "json",
                success: function (result) {
                    HideLoader($('#staff-section'));
                    if (result.success) {
                        $('#save').prop('disabled', false);
                        kendo.alert("Data Saved Successfully");
                        var spreadsheet = $("#spreadsheetStaff").data("kendoSpreadsheet");
                        var sheet = spreadsheet.activeSheet();
                        sheet.dataSource.read();
                        $("#staffGrid").data("kendoGrid").dataSource.read();
                    }
                    else {
                        $('#save').prop('disabled', false);
                        kendo.alert(result.error);
                    }

                },
                error: function (xhr, httpStatusMessage, customErrorMessage) {
                    alert(customErrorMessage);
                }
            });
        }
    }

    function refreshExcel() {
        getDataSource().sync();
    }



    function hideLoader() {
        document.getElementById('speach-load').style.display = "none";
    }

    function showLoader() {

    }


    function ConvertToDate(date) {
        var date = date;///new Date();
        var day = date.getDate();       // yields date
        var month = date.getMonth() + 1;    // yields month (add one as '.getMonth()' is zero indexed)
        var year = date.getFullYear();  // yields year
        var hour = date.getHours();     // yields hours
        var minute = date.getMinutes(); // yields minutes
        var second = date.getSeconds(); // yields seconds
        return year + "/" + month + "/" + day + " " + hour + ':' + minute + ':' + second;
    }

    function ExcelDateToJSDate(serial) {
        var utc_days = Math.floor(serial - 25569);
        var utc_value = utc_days * 86400;
        var date_info = new Date(utc_value * 1000);

        var fractional_day = serial - Math.floor(serial) + 0.0000001;

        var total_seconds = Math.floor(86400 * fractional_day);

        var seconds = total_seconds % 60;

        total_seconds -= seconds;

        var hours = Math.floor(total_seconds / (60 * 60));
        var minutes = Math.floor(total_seconds / 60) % 60;

        return new Date(date_info.getFullYear(), date_info.getMonth(), date_info.getDate(), hours, minutes, seconds);
    }

    function onReadStaff(options) {
        var jobAdvertisement = "B2:B";
        var nationality = "E2:E";
        var date = "A2:A";
        var resume = "P2:P";
        var email = "G2:G";
        var permanentAddressCountry = "Y2:Y";
        var maritalStatus = "Z2:Z";

        var dateVal = {
            dataType: "date",
            showButton: true,
            comparerType: "between",
            from: 'DATEVALUE("1900-01-01")',
            to: 'DATEVALUE("2100-01-01")',
            allowNulls: true,
            type: "reject",
            titleTemplate: "Selected Date validation error",
            messageTemplate: "Selected Date should be between year 1900 and 2100."
        };

        ShowLoader($('#staff-section'));


        $.ajax({
                url: '@Url.Action("ReadStaffDetails", "UploadCandidate")',
                dataType: "json",
                success: function (result) {
                   options.success(result.Data);

                    var index = eval(result.Data.length) + 10;

                    // get Job Advertisement
                    $.ajax({
                        url: "/recruitment/uploadCandidate/GetJobAdvertisment?jobAdvId=@ViewBag.JobAdvId",
                        success: function (res) {
                            var joAdd = {
                                dataType: "list",
                                showButton: true,
                                comparerType: "list",
                                from: '"' + res + '"',
                                allowNulls: true,
                                type: "reject"
                            }

                            $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(jobAdvertisement + index).validation(joAdd);
                        },
                        error: function (xhr, httpStatusMessage, customErrorMessage) {
                            alert(customErrorMessage);
                        }
                    });



                    // get Nationality
                    $.ajax({
                        url: "/recruitment/uploadCandidate/GetNationality",
                        success: function (res) {
                            var nation = {
                                dataType: "list",
                                showButton: true,
                                comparerType: "list",
                                from: '"' + res + '"',
                                allowNulls: true,
                                type: "reject"
                            }

                            $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(nationality + index).validation(nation);
                        },
                        error: function (xhr, httpStatusMessage, customErrorMessage) {
                            alert(customErrorMessage);
                        }
                    });

                    // get PermanentAddressCountry
                    $.ajax({
                        url: "/recruitment/uploadCandidate/GetCountry",
                        success: function (res) {
                            var country = {
                                dataType: "list",
                                showButton: true,
                                comparerType: "list",
                                from: '"' + res + '"',
                                allowNulls: true,
                                type: "reject"
                            }

                            $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(permanentAddressCountry + index).validation(country);
                        },
                        error: function (xhr, httpStatusMessage, customErrorMessage) {
                            alert(customErrorMessage);
                        }
                    });

                    // get MaritalStatus
                    $.ajax({
                        url: "/recruitment/uploadCandidate/GetMaritalStatus",
                        success: function (res) {
                            var marital = {
                                dataType: "list",
                                showButton: true,
                                comparerType: "list",
                                from: '"' + res + '"',
                                allowNulls: true,
                                type: "reject"
                            }

                            $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(maritalStatus + index).validation(marital);
                        },
                        error: function (xhr, httpStatusMessage, customErrorMessage) {
                            alert(customErrorMessage);
                        }
                    });

                     var exp = {
                        dataType: "custom",
                        from: "AND(ISNUMBER(H2))",
                        allowNulls: false,
                        type: "reject",
                        titleTemplate: "Expereince validation error",
                        messageTemplate: "The value entered is not an valid experience. Please enter numeric value."
                    }
                    //Experience
                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("H2:H" + index).validation(exp);

                    uploadFile(index);

                    @*emailVal =  {
                                  dataType: "custom",
                                    from: 'NOT(ISERROR(FIND("@("@")", A1))',
                                  allowNulls: false,
                                  type: "reject",
                                  titleTemplate: "Email validation error",
                                  messageTemplate: "The value entered is not an valid email address."
                                }
                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(email + index).validation(emailVal);*@

                   @*var  email =  {
                                dataType: "custom",
                                from: "AND(NOT(ISERROR(FIND(\"@("@")\", G2))), NOT(ISERROR(FIND(\".\", G2))))",
                                allowNulls: false,
                                type: "reject",
                               titleTemplate: "Email validation error",
                               messageTemplate: "The value entered is not an valid email address."
                    }
                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(email + index).validation(email);*@

                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(date + index).validation(dateVal).format("d-m-yyyy");
                    HideLoader($('#staff-section'));

                }
            });
    }

    function uploadFile(index) {

        var resume = "P2:P";
        var passport = "Q2:Q";
        var education = "R2:R";
        var experience = "S2:S";
        var other = "T2:T";

        kendo.spreadsheet.registerEditor("resume", function () {
            var context, dlg, model;
            return {
                edit: function (options) {
                    context = options;
                    open();
                },
                icon: "k-icon k-i-upload"
            };
            function create() {
                if (!dlg) {
                    model = kendo.observable({
                         ok: function () {
                             var files = document.getElementById('uploadResume').files[0];
                            if (files != undefined) {
                                uploadDocStaff(files, 'uploadResume');
                                if (ifFilesizeExceed == false) {
                                    context.callback(model.value.split("C:\"fakepath\"")[1]);
                                    dlg.close();
                                    dlg = null;
                                    $("#doclinkResume").remove();
                                    $("#uploadResume").remove();
                                }
                            } else {
                                dlg.close();
                                dlg = null;
                                $("#doclinkResume").remove();
                                $("#uploadResume").remove();

                            }
                        },
                        cancel: function () {
                            dlg.close();
                            dlg = null;
                            $("#doclinkResume").remove();
                            $("#uploadResume").remove();
                        }
                    });
                    var selectedrow = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection()._ref.topLeft.row + 1;
                    var val = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().value();

                    var passport = "";
                    var link = "";
                    var display = "none";
                    if (val != null && val != "") {
                        link = window.location.origin + "/cms/Document/GetFileMongo?fileId=" + val.split("_")[1];
                        passport = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("D" + selectedrow).value();
                        display = "";
                    }
                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().link(link).value();
                    var el = $("<div data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
                        "<div style='display:" + display + "' id='doclinkResume'><a  href='" + link + "' target='_blank'>" + val + "</a>&nbsp;&nbsp;&nbsp; <span title='Remove File' onclick='onRemoveFile(\"" + passport + "\",\"resume\")' style='color:red;font-size: 30px;cursor:pointer;display: inline-block;' class='k-icon k-i-close-outline'></span></div><br/><br/>" +
                        "  <input type='file' id='uploadResume'  data-bind='value: value'></input>" +
                        "  <div style='margin-top: 1em; text-align: right'>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
                        "  </div>" +
                        "</div>");
                    kendo.bind(el, model);

                    // Cache the dialog.
                    dlg = el.getKendoWindow();
                }
            }
            function open() {
                create();
                dlg.open();
                dlg.center();
                var value = context.range.value();
                if (value != null) {
                    model.set("value", value);

                }
            }
        });

        $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(resume + index).editor("resume");

        kendo.spreadsheet.registerEditor("passport", function () {
            var context, dlg, model;
            return {
                edit: function (options) {
                    context = options;
                    open();
                },
                icon: "k-icon k-i-upload"
            };
            function create() {
                if (!dlg) {
                    model = kendo.observable({
                         ok: function () {
                             var files = document.getElementById('uploadPassport').files[0];
                            if (files != undefined) {
                                uploadDocStaff(files, 'uploadPassport');
                                if (ifFilesizeExceed == false) {
                                    context.callback(model.value.split("C:\"fakepath\"")[1]);
                                    dlg.close();
                                    dlg = null;
                                    $("#doclinkPassport").remove();
                                    $("#uploadPassport").remove();
                                }
                            } else {
                                dlg.close();
                                dlg = null;
                                $("#doclinkPassport").remove();
                                $("#uploadPassport").remove();

                            }
                        },
                        cancel: function () {
                            dlg.close();
                            dlg = null;
                            $("#doclinkPassport").remove();
                            $("#uploadPassport").remove();
                        }
                    });
                    var selectedrow = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection()._ref.topLeft.row + 1;
                    var val = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().value();

                    var passport = "";
                    var link = "";
                    var display = "none";
                    if (val != null && val != "") {
                        link = window.location.origin + "/cms/Document/GetFileMongo?fileId=" + val.split("_")[1];
                        passport = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("D" + selectedrow).value();
                        display = "";
                    }
                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().link(link).value();
                    var el = $("<div data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
                        "<div style='display:" + display + "' id='doclinkPassport'><a  href='" + link + "' target='_blank'>" + val + "</a>&nbsp;&nbsp;&nbsp; <span title='Remove File' onclick='onRemoveFile(\"" + passport + "\",\"passport\")' style='color:red;font-size: 30px;cursor:pointer;display: inline-block;' class='k-icon k-i-close-outline'></span></div><br/><br/>" +
                        "  <input type='file' id='uploadPassport'  data-bind='value: value'></input>" +
                        "  <div style='margin-top: 1em; text-align: right'>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
                        "  </div>" +
                        "</div>");
                    kendo.bind(el, model);

                    // Cache the dialog.
                    dlg = el.getKendoWindow();
                }
            }
            function open() {
                create();
                dlg.open();
                dlg.center();
                var value = context.range.value();
                if (value != null) {
                    model.set("value", value);
                }
            }
        });

        $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(passport + index).editor("passport");

        kendo.spreadsheet.registerEditor("education", function () {
            var context, dlg, model;
            return {
                edit: function (options) {
                    context = options;
                    open();
                },
                icon: "k-icon k-i-upload"
            };
            function create() {
                if (!dlg) {
                    model = kendo.observable({

                        ok: function () {
                            var files = document.getElementById('uploadEducation').files[0];
                            if (files != undefined) {

                                uploadDocStaff(files, 'uploadEducation');
                                if (ifFilesizeExceed == false) {
                                    context.callback(model.value.split("C:\"fakepath\"")[1]);
                                    dlg.close();
                                    dlg = null;
                                    $("#doclinkEducation").remove();
                                    $("#uploadEducation").remove();
                                }
                            } else {
                                dlg.close();
                                dlg = null;
                                $("#doclinkEducation").remove();
                                $("#uploadEducation").remove();

                            }
                        },
                        cancel: function () {
                            dlg.close();
                            dlg = null;
                            $("#doclinkEducation").remove();
                            $("#uploadEducation").remove();
                        }
                    });
                    var selectedrow = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection()._ref.topLeft.row + 1;
                    var val = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().value();

                    var passport = "";
                    var link = "";
                    var display = "none";
                    if (val != null && val != "") {
                        link = window.location.origin + "/cms/Document/GetFileMongo?fileId=" + val.split("_")[1];
                        passport = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("D" + selectedrow).value();
                        display = "";
                    }
                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().link(link).value();
                    var el = $("<div data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
                        "<div style='display:" + display + "' id='doclinkEducation'><a  href='" + link + "' target='_blank'>" + val + "</a>&nbsp;&nbsp;&nbsp; <span title='Remove File' onclick='onRemoveFile(\"" + passport + "\",\"education\")' style='color:red;font-size: 30px;cursor:pointer;display: inline-block;' class='k-icon k-i-close-outline'></span></div><br/><br/>" +
                        "  <input type='file' id='uploadEducation'  data-bind='value: value'></input>" +
                        "  <div style='margin-top: 1em; text-align: right'>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
                        "  </div>" +
                        "</div>");
                    kendo.bind(el, model);

                    // Cache the dialog.
                    dlg = el.getKendoWindow();
                }
            }
            function open() {
                create();
                dlg.open();
                dlg.center();
                var value = context.range.value();
                if (value != null) {
                    model.set("value", value);
                }
            }
        });

        $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(education + index).editor("education");

        kendo.spreadsheet.registerEditor("experience", function () {
            var context, dlg, model;
            return {
                edit: function (options) {
                    context = options;
                    open();
                },
                icon: "k-icon k-i-upload"
            };
            function create() {
                if (!dlg) {
                    model = kendo.observable({
                        ok: function () {
                            var files = document.getElementById('uploadExperience').files[0];
                            if (files != undefined) {

                                uploadDocStaff(files, 'uploadExperience');
                                if (ifFilesizeExceed == false) {
                                    context.callback(model.value.split("C:\"fakepath\"")[1]);
                                    dlg.close();
                                    dlg = null;
                                    $("#doclinkExperience").remove();
                                    $("#uploadExperience").remove();
                                }
                            } else {
                                dlg.close();
                                dlg = null;
                                $("#doclinkExperience").remove();
                                $("#uploadExperience").remove();

                            }
                        },
                        cancel: function () {
                            dlg.close();
                            dlg = null;
                            $("#doclinkExperience").remove();
                            $("#uploadExperience").remove();
                        }
                    });
                    var selectedrow = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection()._ref.topLeft.row + 1;
                    var val = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().value();

                    var passport = "";
                    var link = "";
                    var display = "none";
                    if (val != null && val != "") {
                        link = window.location.origin + "/cms/Document/GetFileMongo?fileId=" + val.split("_")[1];
                        passport = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("D" + selectedrow).value();
                        display = "";
                    }
                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().link(link).value();
                    var el = $("<div data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
                        "<div style='display:" + display + "' id='doclinkExperience'><a  href='" + link + "' target='_blank'>" + val + "</a>&nbsp;&nbsp;&nbsp; <span title='Remove File' onclick='onRemoveFile(\"" + passport + "\",\"experience\")' style='color:red;font-size: 30px;cursor:pointer;display: inline-block;' class='k-icon k-i-close-outline'></span></div><br/><br/>" +
                        "  <input type='file' id='uploadExperience'  data-bind='value: value'></input>" +
                        "  <div style='margin-top: 1em; text-align: right'>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
                        "  </div>" +
                        "</div>");
                    kendo.bind(el, model);

                    // Cache the dialog.
                    dlg = el.getKendoWindow();
                }
            }
            function open() {
                create();
                dlg.open();
                dlg.center();
                var value = context.range.value();
                if (value != null) {
                    model.set("value", value);
                }
            }
        });

        $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(experience + index).editor("experience");

        kendo.spreadsheet.registerEditor("other", function () {
            var context, dlg, model;
            return {
                edit: function (options) {
                    context = options;
                    open();
                },
                icon: "k-icon k-i-upload"
            };
            function create() {
                if (!dlg) {
                    model = kendo.observable({
                        ok: function () {
                            var files = document.getElementById('uploadOther').files[0];
                            if (files != undefined) {

                                uploadDocStaff(files, 'uploadOther');
                                if (ifFilesizeExceed == false) {
                                    context.callback(model.value.split("C:\"fakepath\"")[1]);
                                    dlg.close();
                                    dlg = null;
                                    $("#doclinkOther").remove();
                                    $("#uploadOther").remove();
                                }
                            } else {
                                dlg.close();
                                dlg = null;
                                $("#doclinkOther").remove();
                                $("#uploadOther").remove();

                            }
                        },
                        cancel: function () {
                            dlg.close();
                            dlg = null;
                            $("#doclinkOther").remove();
                            $("#uploadOther").remove();
                        }
                    });

                    var selectedrow = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection()._ref.topLeft.row + 1;
                    var val = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().value();

                    var passport = "";
                    var link = "";
                    var display = "none";
                    if (val != null && val != "") {
                        link = window.location.origin + "/cms/Document/GetFileMongo?fileId=" + val.split("_")[1];
                        passport = $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("D" + selectedrow).value();
                        display = "block";
                    }
                    $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().link(link).value();
                    var el = $("<div id='docWindow' data-visible='true' data-role='window' data-modal='true' data-resizable='false' data-title='Select file'>" +
                        "<div style='display:" + display + "' id='doclinkOther'><a  href='" + link + "' target='_blank'>" + val + "</a>&nbsp;&nbsp;&nbsp; <span title='Remove File' onclick='onRemoveFile(\"" + passport + "\",\"other\")' style='color:red;font-size: 30px;cursor:pointer;display: inline-block;' class='k-icon k-i-close-outline'></span></div><br/><br/>" +
                        "  <input type='file' id='uploadOther'  data-bind='value: value'></input>" +
                        "  <div style='margin-top: 1em; text-align: right'>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: ok'>OK</button>" +
                        "    <button style='width: 5em' class='k-button' data-bind='click: cancel'>Cancel</button>" +
                        "  </div>" +
                        "</div>");
                    kendo.bind(el, model);

                    // Cache the dialog.
                    dlg = el.getKendoWindow();
                }
            }
            function open() {
                create();
                dlg.open();
                dlg.center();
                var value = context.range.value();
                if (value != null) {
                    model.set("value", value);
                }
            }
        });

        $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range(other + index).editor("other");
    }

    function onRemoveFile(passport, type) {
        $.ajax({
            type: "POST",
            url: "/recruitment/uploadCandidate/RemoveFile?passport=" + passport + "&type=" + type,
            dataType: "json",
            success: function (result) {
                if (type == "resume") {
                    document.getElementById("uploadResume").value = "";
                    $('#doclinkResume').hide();
                } else if (type == "passport") {
                    document.getElementById("uploadPassport").value = "";
                    $('#doclinkPassport').hide();
                } else if (type == "education") {
                    document.getElementById("uploadEducation").value = "";
                    $('#doclinkEducation').hide();
                } else if (type == "experience") {
                    document.getElementById("uploadExperience").value = "";
                    $('#doclinkExperience').hide();
                } else if (type == "other") {
                    document.getElementById("uploadOther").value = "";
                    $('#doclinkOther').hide();
                }

                $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().value("");
                alert("File removed successfully");

            },
            error: function (xhr, httpStatusMessage, customErrorMessage) {
                alert(customErrorMessage);
            }
        });
    }
    var ifFilesizeExceed = false;
    function uploadDocStaff(file, type) {

        var fileSize = parseInt((file.size / (1024 * 1024)).toFixed(2));
        if (fileSize <= 10) {
            ifFilesizeExceed = false;
        ShowLoader($('#staff-section'));
        var file = document.getElementById(type).files[0];
        let formData = new FormData();

        formData.append("file", file);
        fetch('/recruitment/uploadCandidate/UploadDocument', { method: 'POST', body: formData })
            .then((resp) => resp.json())
            .then(function (data) {
                var i = data.FileName + "_" + data.Id;
                $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().link(window.location.origin + "/cms/Document/GetFileMongo?fileId=" + data.Id).value(i);
                HideLoader($('#staff-section'));
            })
            .catch(function (error) {
                console.log(error);
            });
        } else {
            ifFilesizeExceed = true;
            kendo.alert("File size should not increase, 10 MB");
        }
    };


    // const uploadFile = (file) => {
    //    var file = document.getElementById('uploadFile').files[0];
    //    let formData = new FormData();

    //    formData.append("file", file);
    //     ShowLoader($('#staff-section'));
    //     fetch('/recruitment/uploadCandidate/uploadDocStaffument', { method: 'POST', body: formData})
    //        .then((resp) => resp.json())
    //        .then(function (data) {
    //
    //            var i = data.FileName + "_" + data.Id;
    //            $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().selection().value(i);
    //            HideLoader($('#staff-section'));
    //        })
    //        .catch(function (error) {
    //            console.log(error);
    //        });
    //};

    function ShowLoader(target) {
        kendo.ui.progress(target, true);
    }
    function HideLoader(target) {
        kendo.ui.progress(target, false);
    }

    function onChange(e) {
        $("#cancel, #save").toggleClass("k-state-disabled", !this.hasChanges());
    }

    function getDataSource() {
        return $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().dataSource;
    }

    $("#save").click(function () {
        if (!$(this).hasClass("k-state-disabled")) {
            getDataSource().sync();
        }
    });

    $("#cancel").click(function () {
        if (!$(this).hasClass("k-state-disabled")) {
            getDataSource().cancelChanges();
        }
    });


    function onDataBinding(e) {
        console.log('Data is about to be bound to sheet "' + e.sheet.name() + '".');
    }

    function onDataBound(e) {
        var i = 2;
        var data = e.sheet.dataSource._data;

        for (var a = 0; a < data.length; a++) {
            if (data[a].ResumeLink && data[a].ResumeLink.includes("_")) {
                $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("P" + i + ":P" + i).link(window.location.origin + "/cms/Document/GetFileMongo?fileId=" + data[a].ResumeLink.split("_")[1]);
            } if (data[a].PassportLink && data[a].PassportLink.includes("_")) {
                $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("Q" + i + ":Q" + i).link(window.location.origin + "/cms/Document/GetFileMongo?fileId=" + data[a].PassportLink.split("_")[1]);
            } if (data[a].EducationLink && data[a].EducationLink.includes("_")) {
                $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("R" + i + ":R" + i).link(window.location.origin + "/cms/Document/GetFileMongo?fileId=" + data[a].EducationLink.split("_")[1]);
            } if (data[a].ExperienceLetterLink && data[a].ExperienceLetterLink.includes("_")) {
                $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("S" + i + ":S" + i).link(window.location.origin + "/cms/Document/GetFileMongo?fileId=" + data[a].ExperienceLetterLink.split("_")[1]);
            } if (data[a].DocumentLink && data[a].DocumentLink.includes("_")) {
                $("#spreadsheetStaff").data("kendoSpreadsheet").activeSheet().range("T" + i + ":T" + i).link(window.location.origin + "/cms/Document/GetFileMongo?fileId=" + data[a].DocumentLink.split("_")[1]);
            }
            i++;
        }
    }
    function onSelect(arg) {


    }

    function OnEdit(e) {
        @*debugger;
         e.preventDefault();
         var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditStaffCandidateAgency", "UploadCandidate", new { @area = "Recruitment" })?candidateId=' + dataItem.CandidateId;
         win.OpenWindow({ Title: 'Manage Staff Candidate', Width: 1000, Height: 700 });*@
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
          var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("Index", "CandidateProfile", new { @area = "Recruitment" })?layout=Popup&id=' + dataItem.CandidateId;
        win.OpenWindow({ Title: 'Candidate Profile', Width: 1000, Height: 1000 });
        return false;

    }
    function OnDelete(e) {
        alert("Hello");
        return false;
    }
    function CloseStaffCandidateAgency() {
        $("#staffGrid").data("kendoGrid").dataSource.read();
    }
</script>
<br />


<div style="margin:10px;">
    <button id="expandmenu" class="accordion  header-bar">Expand to view Applied Staff Detail</button>
    <div id="panelgrid" class="panel">
        <br />

        @(Html.Kendo().Grid<StaffCandidateViewModel>()
        .Name("staffGrid")
        .Columns(columns =>
        {
            columns.Command(command =>
            {
                command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEdit").HtmlAttributes(new { @class = "action-icon" });
                //command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDelete").HtmlAttributes(new { @class = "action-icon" });
            }).Width(120).Exportable(false).Title("Actions");
            columns.Bound(c => c.ApplicationNo).Width(150);
            columns.Bound(c => c.CVSendDate).Width(200);
            columns.Bound(c => c.JobAdvertisement).Width(200);
            columns.Bound(c => c.CandidateName).Width(200);
            columns.Bound(c => c.PassportNumber).Width(200);
            columns.Bound(c => c.Nationality).Width(200);
            columns.Bound(c => c.ContactNumber).Width(200);
            columns.Bound(c => c.EmailId).Width(100);
            columns.Bound(c => c.TotalExperience).Width(200);
            columns.Bound(c => c.Qualification).Width(100);
            columns.Bound(c => c.PresentEmployer).Width(100);
            columns.Bound(c => c.Designation).Width(100);
            columns.Bound(c => c.PresentSalary).Width(200);
            columns.Bound(c => c.ExpectedSalary).Width(200);
            columns.Bound(c => c.NoticePeriod).Width(200);
            columns.Bound(c => c.CurrentLocation).Width(200);
            columns.Bound(c => c.PermanentAddressHouse).Title("House/Flat No").Width(200);
            columns.Bound(c => c.PermanentAddressStreet).Title("Street/Lane").Width(200);
            columns.Bound(c => c.PermanentAddressCity).Title("City/District").Width(200);
            columns.Bound(c => c.PermanentAddressState).Title("State/Province").Width(200);
            columns.Bound(c => c.PermanentAddressCountry).Title("Country").Width(200);
            columns.Bound(c => c.MaritalStatus).Width(200);
            columns.Bound(c => c.ResumeLink).Width(200).ClientTemplate("#if (ResumeLink!= null) {#<a class='a-text' onclick='return OnDownload(\"#=ResumeLink#\");'> Download Resume</a>#}#");
            columns.Bound(c => c.PassportLink).Width(200).ClientTemplate("#if (PassportLink!= null) {#<a  class='a-text' onclick='return OnDownload(\"#=PassportLink#\");'> Download Passport</a>#}#");
            columns.Bound(c => c.EducationLink).Width(200).ClientTemplate("#if (EducationLink!= null) {#<a  class='a-text' onclick='return OnDownload(\"#=EducationLink#\");'> Download Educational Certificate</a>#}#");
            columns.Bound(c => c.ExperienceLetterLink).Width(200).ClientTemplate("#if (ExperienceLetterLink!= null) {#<a  class='a-text' onclick='return OnDownload(\"#=ExperienceLetterLink#\");'> Download Experience Letter</a>#}#");
            columns.Bound(c => c.DocumentLink).Width(200).ClientTemplate("#if (DocumentLink!= null) {#<a  class='a-text' onclick='return OnDownload(\"#=DocumentLink#\");'> Download Document</a>#}#");
            columns.Bound(c => c.ApplicationState).Title("Application Status").Width(200);
        })
        .HtmlAttributes(new { style = "height: 550px;" })
        .Scrollable()
        .Filterable()
            .Resizable(resize => resize.Columns(true))
        .Sortable()
        .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Read(read => read.Action("ReadGridStaffDetails", "uploadCandidate", new { area = "recruitment"}))
            .PageSize(20)
        )
    )



    </div>

    <section id="staff-section">

        <div class="row" style="margin:40px;">

            <div>
                <button class="btn btn-primary" id="save" style="margin-right:10px;">Save changes</button>
                <button class="btn btn-dark" id="cancel">Cancel changes</button>
                <br />
            </div>

            @(Html.Kendo().Spreadsheet()
    .Name("spreadsheetStaff")
    .Rows(10000)
    .Columns(150)
    .HtmlAttributes(new { style = "width:100%;height:350px" })
            .Events(events => events.Select("onSelect"))
            .Events(e => e
            .DataBinding("onDataBinding")
            .DataBound("onDataBound")
        )
                    .Sheetsbar(false)

    .Toolbar(t => t.Home(false).Data(false).Insert(false))
    .Excel(excel => excel
            .ProxyURL(Url.Action("Data_Source_Proxy", "Spreadsheet"))
        )
        .Pdf(pdf => pdf
            .ProxyURL(Url.Action("Data_Source_Proxy", "Spreadsheet"))
        )
    .Sheets(sheets => {
        sheets.Add()
            .Name("Staff Details")
             .DataSource<StaffCandidateViewModel>(ds => ds
                    .Custom()
                    .Batch(true)
                    .Transport(t => t
                        .Read("onReadStaff")
                        .Submit("onSubmitStaff")
                    )
                    .Events(e => e.Change("onChange"))
                     .Schema(s => s
                        .Model(m =>
                        {
                            m.Id(p => p.PassportNumber);
                        }))
                   )
            .Columns(columns =>
            {
                columns.Add().Width(180); // A
                columns.Add().Width(180); // B
                columns.Add().Width(180); // C
                columns.Add().Width(180); // D
                columns.Add().Width(180); // E
                columns.Add().Width(180); // F

                columns.Add().Width(180); // G
                columns.Add().Width(180); // H
                columns.Add().Width(180); // I
                columns.Add().Width(180); // J
                columns.Add().Width(180); // K
                columns.Add().Width(180); // L

                columns.Add().Width(180); // M
                columns.Add().Width(180); // N
                columns.Add().Width(180); // O
                columns.Add().Width(600); // P
                columns.Add().Width(600); // Q
                columns.Add().Width(600); // R
                columns.Add().Width(600); // S
                columns.Add().Width(600); // T
                columns.Add().Width(600); // U
                columns.Add().Width(600); // V

                columns.Add().Width(600); // W
                columns.Add().Width(600); // X
                columns.Add().Width(600); // Y
                columns.Add().Width(600); // Z
                //columns.Add().Width(600); // AA
                //columns.Add().Width(600); // AB
            })
            .Rows(rows =>
            {
                rows.Add().Height(30).Cells(cells =>
                {

                    cells.Add()
                        .Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); //datepicker // date // Candidate profile - A

                    cells.Add()
                         .Bold(true)
                        //.Background("rgb(173, 216, 230)")
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // dropdown // Type // Candidate profile - B

                    cells.Add().Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile - C

                    cells.Add()
                    .Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile - D

                    cells.Add()
                    .Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // dropdown // Candidate profile - E

                    cells.Add()
                    .Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile - F

                    cells.Add()
                    .Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile - G

                    cells.Add()
                    .Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile - H

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // candidate Education - I

                    cells.Add()
                    .Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Experience - J

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // experience - K

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile - L

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate Profile - M

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate Profile - N

                    cells.Add().Bold(true)
                       .Background("rgb(173, 216, 230)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate Profile - O

                    cells.Add().Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile- current Address - P

                    cells.Add().Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile- current Address - Q

                    cells.Add().Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile- current Address - R

                    cells.Add().Bold(true)
                       .Background("rgb(255, 127, 127)")
                       .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile- current Address - S

                    cells.Add().Bold(true)
                      .Background("rgb(173, 216, 230)")
                      .TextAlign(SpreadsheetTextAlign.Center); // Candidate profile- current Address - T

                    cells.Add().Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // - U

                    cells.Add().Bold(true)
                      .Background("rgb(255, 127, 127)")
                      .TextAlign(SpreadsheetTextAlign.Center); //  - V

                    cells.Add().Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // PermanentAddressHouse - W

                    cells.Add().Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // PermanentAddressStreet - X

                    cells.Add().Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // PermanentAddressCity - Y

                    cells.Add().Bold(true)
                        .Background("rgb(255, 127, 127)")
                        .TextAlign(SpreadsheetTextAlign.Center); // PermanentAddressState - Z

                    cells.Add().Bold(true)
                        .Background("rgb(173, 216, 230)")
                        .TextAlign(SpreadsheetTextAlign.Center); // PermanentAddressCountryId - AA

                    cells.Add().Bold(true)
                        .Background("rgb(173, 216, 230)")
                        .TextAlign(SpreadsheetTextAlign.Center); // PermanentAddressCountryId - AB

                });
            });
    })
)


        </div>
    </section>


</div>