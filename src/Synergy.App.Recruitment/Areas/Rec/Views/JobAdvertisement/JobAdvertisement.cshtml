
@using CMS.UI.ViewModel
@using CMS.Common

@{
    ViewData["Title"] = "Manage Job Advertisement";
    Layout = null;
    // Layout = "/Views/Shared/_PopupLayout.cshtml";
    //  Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
}

@model JobAdvertisementViewModel


<script type="text/javascript">

    function OnEditJobAdvt(e) {
        //e.preventDefault();
        //  
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        var url = "/Recruitment/JobAdvertisement/Index?summaryId=" + dataItem.ManpowerRecruitmentSummaryId + "&jobId=" + dataItem.JobId + "&id=" + dataItem.Id;
        //  window.location.href = url;
        LoadPartailView(url, $('#cms-content'));

    }
    function IframePostbackScript() {
        $("#kgrdManpowerRequirementSummary").data("kendoGrid").dataSource.read();
    }


</script>


<script>

    function ExportToPdf(e)
    {
        console.log(e);
        e.workbook.sheets[0].rows[0].cells[2].value = 'Recuritment Process';
        e.workbook.sheets[0].rows[0].cells[1].value = 'Job Advertisment';
        //var shownColumns = e.sender.columns.filter(function (obj) {
        //
        //    return obj.hidden != true;
        //});

    }
    function cellClickI(jobid) {

        var url = "/Recruitment/JobAdvertisement/ViewJobAdvertisementI?jobId=" + jobid + "&permission=@ViewBag.Permissions";
      //  window.location.href = url;
        LoadPartailView(url, $('#cms-content'));
      //  alert("open")
    }

    function cellClickA(jobid, orgid) {

        var url = "/Recruitment/JobAdvertisement/ViewJobAdvertisementA?jobId=" + jobid ;
      //   window.location.href = url;
         LoadPartailView(url, $('#cms-content'));
      //  alert("open")
    }
    var expandedRow;
    function detailExpand(e) {
        // Only one open at a time

        if (expandedRow != null && expandedRow[0] != e.masterRow[0]) {
            var grid = $('#kgrdManpowerRequirementSummary').data('kendoGrid');
            grid.collapseRow(expandedRow);
        }
        expandedRow = e.masterRow;
    }

     function OnEdit(id) {
        // e.preventDefault();
         //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
         //iframeOpenUrl = '@Url.Action("Edit", "JobAdvertisement", new { @area = "Recruitment" })?id=' + dataItem.Id;
         @*iframeOpenUrl = '@Url.Action("Edit", "JobAdvertisement", new { @area = "Recruitment" })?id=' +id;
         OpenIframePopup(1000, 1200, 'Edit');*@
         var win = GetMainWindow();
         win.iframeOpenUrl = '@Url.Action("Edit", "JobAdvertisement", new { @area = "Recruitment" })?id=' + id;
         win.OpenWindow({ Title: 'Edit', Width: 1000, Height: 1000 });
        return false;

    }
    function OnCreateComment(e) {
        @*e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        iframeOpenUrl = '@Url.Action("Create", "ManpowerRequirementSummary", new { @area = "Recruitment"})?summaryId=' + dataItem.Id +'&versionNo='+dataItem.VersionNo;
        OpenIframePopup(400,500,'Add Comment');*@

    }
     function OnViewComment(id,userrolecode) {
         @*iframeOpenUrl = '@Url.Action("Comment", "ManpowerRequirementSummary", new { @area = "Recruitment" })?summaryId=' + id +'&userRoleCode='+userrolecode;
         OpenIframePopup(1000, 1200,'View Comment');*@


    }
    function OnCreateJobAdv(id,jobid) {
      //  e.preventDefault();
        //  var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        //var url = "/Recruitment/JobAdvertisement/Index?summaryId=" + dataItem.Id + "&jobId=" + dataItem.JobId ;
        var url = "/Recruitment/JobAdvertisement/Index?jobId=" + jobid + "&permission=@ViewBag.Permissions";
       // window.location.href = url;
        LoadPartailView(url, $('#cms-content'));


    }

    function OnView(id, jobid) {
        //e.preventDefault();
        //
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

       // var url = "/Recruitment/JobAdvertisement/ViewEditJobAdvertisement?jobId=" + dataItem.JobId + "&id=" + dataItem.Id;
        var url = "/Recruitment/JobAdvertisement/Index?jobId=" + jobid + "&id=" + id+ "&permission=@ViewBag.Permissions";
        //  window.location.href = url;
        LoadPartailView(url, $('#cms-content'));

    }
    function OnDataBound(arg) {
        $("#kgrdManpowerRequirementSummary tbody tr").each(function () {
            var currentDataItem = $("#kgrdManpowerRequirementSummary").data("kendoGrid").dataItem($(this));
            var addjob = $(this).find(".k-grid-Addjob");
            var viewjob = $(this).find(".k-grid-View");
            //if (currentDataItem.Active != 0) {
            //    addjob.remove();
            //    //addjob.prop('disabled', true);
            //    //addjob.css('background', 'grey');
            //}
            //var edit = $(this).find(".k-grid-Edit");
            //if (currentDataItem.Active == 0) {
            //    edit.remove();

            //}
            //if (currentDataItem.Active == 0) {
            //    viewjob.remove();
            //}
        });
    }
    function OnAddJobDesc(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
         @*iframeOpenUrl = '@Url.Action("Index", "Task", new { @area= "Cms" })?templateCode1=JOBDESCRIPTION_HM&referenceId=' + dataItem.JobId + '&referenceTypeCode=' + '@ReferenceTypeEnum.REC_Job' + '&isPopUp=true&udf1=' + dataItem.JobId + "&udfValue1=" + dataItem.JobName;
        OpenIframePopup(1000, 1200, "Job Description Request");*@
         var win = GetMainWindow();
         win.iframeOpenUrl = '@Url.Action("Index", "Task", new { @area = "Cms" })?templateCode1=JOBDESCRIPTION_HM&referenceId=' + dataItem.JobId + '&referenceTypeCode=' + '@ReferenceTypeEnum.REC_Job' + '&isPopUp=true&udf1=' + dataItem.JobId + "&udfValue1=" + dataItem.JobName;
        win.OpenWindow({ Title: 'Job Description Request', Width: 1000, Height: 1000 });
        return false;

    }
     function OnViewJobDesc(id) {
        //e.preventDefault();
        // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
         @*iframeOpenUrl = '@Url.Action("Task", "ManpowerRequirementSummary", new { @area= "Recruitment" })?manpowerId=' + id;
         OpenIframePopup(1200, 1400, "View Job Description Request");*@
         var win = GetMainWindow();
         win.iframeOpenUrl = '@Url.Action("Task", "ManpowerRequirementSummary", new { @area = "Recruitment" })?manpowerId=' + id;
         win.OpenWindow({ Title: 'View Job Description Request', Width: 1200, Height: 1000 });
        return false;

    }
    function OnEditJobDesc(e) {
         e.preventDefault();
         var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("EditJobDescription", "JobDescription", new { @area = "Recruitment" })?jobId=' + dataItem.JobId;
        OpenIframePopup(1000, 850, 'Manage Job Description');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditJobDescription", "JobDescription", new { @area = "Recruitment" })?jobId=' + dataItem.JobId;
        win.OpenWindow({ Title: 'Manage Job Description', Width: 1000, Height: 850 });
        return false;
    }
</script>

<script type="x/kendo-template" id="page-template">
    <div class="page-template">
     @* <div class="header">
        <div style="float:right">Page #: pageNum # of #: totalPages #</div>
       Job Advertisement
      </div>
      <div class="watermark">KENDO UI</div>*@
      <div class="footer">
        Page #: pageNum # of #: totalPages #
      </div>
    </div>
</script>


<style>
    .k-pdf-export .k-filterable .k-grid-filter {
        display: none;
    }
    .k-pdf-export .k-grid-toolbar,
    .k-pdf-export .k-pager-wrap {
        display: none;
    }
    /* Page Template for the exported PDF */
    .page-template {
        font-family: "DejaVu Sans", "Arial", sans-serif;
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: 0;
    }

        .page-template .header {
            position: absolute;
            top: 30px;
            left: 30px;
            right: 30px;
            border-bottom: 1px solid #888;
            color: #888;
        }

        .page-template .footer {
            position: absolute;
            bottom: 30px;
            left: 30px;
            right: 30px;
            border-top: 1px solid #888;
            text-align: center;
            color: #888;
        }

        .page-template .watermark {
            font-weight: bold;
            font-size: 400%;
            text-align: center;
            margin-top: 30%;
            color: #aaaaaa;
            opacity: 0.1;
            transform: rotate(-35deg) scale(1.7, 1.5);
        }

    .k-grid td, .k-grid th {
        font-size: 14px !important;
    }

    .tb-bg {
        /*background-color:cadetblue;*/
        background-color: #17a2b8 !important;
        color: #fff;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .tb-bg1 {
        /*background-color: cornflowerblue;*/
        background-color: #ffc107 !important;
        color: #000;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .tb-bg2 {
        /* background-color: darkcyan;*/
        background-color: #17a2b8 !important;
        color: #fff;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .k-footer-template {
        background-color: #DAEDFF
    }

    .k-grid-header .k-header, .k-grid-header thead, .k-grid-header .k-hierarchy-cell {
        background-color: #527ab8;
        color: #fff;
    }

        .k-grid-header thead a {
            color: #fff !important;
        }
</style>
<div class="row" style="margin:15px;">


    @*<button type="button" class="btn btn-primary" onclick="OnCreateComment();">Add Comment</button>
        <button type="button" class="btn btn-primary" onclick="OnViewComment();">View Comment</button>*@
    <div class="col bot-margin" style="margin-top:20px">
        <div class="fa-2x pad-b-15">Job Advertisement</div>
        @(Html.Kendo().Grid<JobAdvertisementViewModel>()
            .Name("kgrdManpowerRequirementSummary").Excel(e => e.AllPages(true))
            .Pdf(pdf => pdf
            .AllPages()
            .AvoidLinks()
            .PaperSize("A4")
            .Scale(0.6)
            .TemplateId("page-template")
            .Margin("2cm", "1cm", "1cm", "1cm")
            .Landscape()
            .RepeatHeaders())
            .ToolBar(tools =>
            {
                tools.Excel();
                tools.Pdf();
            })
              //.Events(x=>x.PdfExport("ExportToPdf"))
              .Columns(col =>
              {
                  col.Bound(c => c.Id).Hidden(true).Width(0);
                  col.Bound(c => c.JobName).Title("Position").HeaderHtmlAttributes(new { title = "Position" }).Width(150).ClientFooterTemplate("Total Count");
                  col.Bound(c => c.ManpowerType).Locked(true).Lockable(false).Title("Job Type").HeaderHtmlAttributes(new { title = "Job Type" }).Width(150).Filterable(ftb => ftb.Multi(true).Search(true));

                  col.Group(group => group
                  .Title("Job Advertisment").HeaderHtmlAttributes(new { @class = "tb-bg1" })
                  .Columns(info =>
                  {

                      info.Bound(c => c.Active).Title("Active/Draft").HeaderHtmlAttributes(new { title = "Active/Draft" })/*.ClientTemplate("<a style='cursor:pointer;color:blue' onclick='cellClickA(\"#:JobId#\")'>#:Active#</a>")*/.Width(120).ClientFooterTemplate("#=sum#");
                      info.Bound(c => c.InActive).HeaderHtmlAttributes(new { title = "InActive" }).ClientTemplate("<a style='cursor:pointer;color:blue' title='View' onclick='cellClickI(\"#:JobId#\")'>#:InActive#</a>").Width(130).ClientFooterTemplate("#=sum#");
                      info.Bound(c => c.Active).Title("Add/Edit").HeaderHtmlAttributes(new { title = "Add/Edit" }).ClientTemplate("#if('"+ViewBag.Permissions.Contains("AddManpowerRecruitment")+"'=='True'){if (Active==0){#<i class='fa fa-plus k-primary' style='cursor:pointer;color:blue' title='Add Job Advertisement' onclick='OnCreateJobAdv(\"#:Id#\",\"#:JobId#\")'></i>#} else if(Active!=0){#<i class='fa fas fa-pencil' style='cursor:pointer;color:blue' title='View/Edit Job Advertisement' onclick='OnView(\"#:Id#\",\"#:JobId#\")'></i>    #} }#").Exportable(false).Width(100);
                      //info.Bound(c => c.Active).Title(" ").ClientTemplate("#if (Active==0){#<i class='fa fa-plus k-primary' style='cursor:pointer;color:blue' title='Add Job Advertisement' onclick='OnCreateJobAdv(\"#:Id#\",\"#:JobId#\")'></i>#} else if(Active!=0){#<i class='fa fas fa-eye' style='cursor:pointer;color:blue' title='View Job Advertisement' onclick='OnView(\"#:Id#\",\"#:JobId#\")'></i>    #} #").Width(80);
                      //info.Command(c =>
                      //{
                      //   // c.Custom("Addjob").HtmlAttributes(new { @class = "k-primary" }).Text("<i class='fa fa-plus' title='Add Job Advertisement'></i>").Click("OnCreateJobAdv");
                      //    c.Custom("Addjob").Template("#if(#:Active#!=0){#<i class='fa fa-plus' title='Add Job Advertisement' onclick='OnCreateJobAdv(\"#:Id#\",\"#:JobId#\")'></i>#}#").HtmlAttributes(new { @class = "k-primary" }).Text("<i class='fa fa-plus' title='Add Job Advertisement'></i>")

                      //    .Click("OnCreateJobAdv");
                      //    c.Custom("View").Text("<i class='fa fas fa-eye'></i>").Click("OnView").HtmlAttributes(new { @class = "" });
                      //}).Width(80);


                  }));
                  col.Command(command =>
                  {
                      command.Custom("AddJobDesc").Text("<i class='fa fa-plus' title='Request Job Description'></i>").Click("OnAddJobDesc").HtmlAttributes(new { @class = "action-icon" });
                      command.Custom("EditJobDesc").Text("<i class='fa fas fa-pencil' title='Add/Edit Job Description'></i>").Click("OnEditJobDesc").HtmlAttributes(new { @class = "action-icon" });
                      //command.Custom("ViewJobDesc").Text("<i class='fa fas fa-eye' title='View Job Description Request'></i>").Click("OnViewJobDesc").HtmlAttributes(new { @class = "action-icon" });
                  }).Width(200).Title("Job Description");
                  col.Bound(c => c.Count).Title("Task Count").HeaderHtmlAttributes(new { title = "Task Count" }).Width(100).ClientTemplate("<a style='cursor:pointer;color:blue' onclick='OnViewJobDesc(\"#:JobId#\")'>#:Count#</a>");

                  col.Group(group => group
                  .Title("Recuritment Process").HeaderHtmlAttributes(new { @class = "tb-bg2" })
                  .Columns(info =>
                  {

                      info.Bound(c => c.ShortlistedByHr).Width(160).ClientFooterTemplate("#=sum#").Title("Shortlisted By HR").HeaderHtmlAttributes(new { title = "Shortlisted By HR" });
                      info.Bound(c => c.ShortlistedForInterview).Width(160).ClientFooterTemplate("#=sum#").Title("Shortlisted By HM").HeaderHtmlAttributes(new { title = "Shortlisted By HM" });
                      info.Bound(c => c.DirectHiring).Width(160).ClientFooterTemplate("#=sum#").Title("Direct Hiring").HeaderHtmlAttributes(new { title = "Direct Hiring" });
                      info.Bound(c => c.IntentToOfferSent).Width(150).ClientFooterTemplate("#=sum#").Title("Intent To Offer").HeaderHtmlAttributes(new { title = "Intent To Offer" });
                      info.Bound(c => c.WorkerPool).Width(130).ClientFooterTemplate("#=sum#").Title("Worker Appointment").HeaderHtmlAttributes(new { title = "Worker Pool" });
                      info.Bound(c => c.FinalOfferSent).Width(120).ClientFooterTemplate("#=sum#").Title("Final Offer").HeaderHtmlAttributes(new { title = "Final Offer" });
                      info.Bound(c => c.BusinessVisa).Width(120).ClientFooterTemplate("#=sum#").Title("Overseas Business Visa").HeaderHtmlAttributes(new { title = "Business Visa" });
                      info.Bound(c => c.WorkVisa).Width(120).ClientFooterTemplate("#=sum#").Title("Overseas Work Visa").HeaderHtmlAttributes(new { title = "Work Visa" });
                      info.Bound(c => c.VisaTransfer).Width(120).ClientFooterTemplate("#=sum#").Title("Local Visa Transfer").HeaderHtmlAttributes(new { title = "Visa Transfer" });
                      info.Bound(c => c.WorkPermit).Width(120).ClientFooterTemplate("#=sum#").Title("Local Work Permit").HeaderHtmlAttributes(new { title = "Work Permit" });
                      info.Bound(c => c.CandidateJoined).Width(120).ClientFooterTemplate("#=sum#").Title("Staff Joining ").HeaderHtmlAttributes(new { title = "Staff Joined" });
                      info.Bound(c => c.WorkerJoined).Width(120).ClientFooterTemplate("#=sum#").Title("Worker Joining ").HeaderHtmlAttributes(new { title = "Worker Joined" });
                      info.Bound(c => c.Joined).Width(120).ClientFooterTemplate("#=sum#").Title("Joined").HeaderHtmlAttributes(new { title = "Joined" });
                      info.Bound(c => c.PostStaffJoined).Width(120).ClientFooterTemplate("#=sum#").Title("Post Staff Joined").HeaderHtmlAttributes(new { title = "Joined" });
                      info.Bound(c => c.PostWorkerJoined).Width(120).ClientFooterTemplate("#=sum#").Title("Post Worker Joined").HeaderHtmlAttributes(new { title = "Joined" });
                  }));
                  col.Bound(x => x.CreateDate).Width(150).Title("Created Date").HeaderHtmlAttributes(new { title = "Created Date" }).Format("{0:dd/MM/yyyy}");
                  //col.Bound(c => c.Active).Title(" ").ClientTemplate("#if (Active!=0){#<i class='fa fas fa-pencil k-primary' style='cursor:pointer;color:blue' title='Edit' onclick='OnEdit(\"#:Id#\")'></i>#}#").Width(80).Exportable(false);

                  //col.Command(command =>
                  //{
                  //    command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEdit").HtmlAttributes(new { @class = "action-icon" });
                  //    //command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteComment").HtmlAttributes(new { @class = "action-icon" });
                  //}).Width(100);


              })
            //.ToolBar(toolbar =>
            //{
            //    toolbar.Custom().Text("Add Manpower Requirement").Name("btnAdd").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnAdd();" });

            //})
            // .Events(events => events./*DetailExpand("detailExpand")*//*DataBound("OnDataBound")*/)
            .Resizable(resizable => resizable.Columns(true))
            .Scrollable(scrollable => scrollable.Enabled(true))
            .Sortable(srt => srt.Enabled(true))
            // .ClientDetailTemplateId("template")
            .Selectable(select => select.Enabled(false))
            .Filterable(f => f.Extra(false)
                .Operators(o => o.ForString(s => s.Clear()
                .Contains("Contains")
            //.IsEqualTo("Is equal to")
            )))
            .AutoBind(true)
            .Pageable(pageable => pageable
            .Refresh(true)
            .PageSizes(true)
            .ButtonCount(5))
            .DataSource(
            dataSource => dataSource
            .Ajax()
            .Aggregates(aggregates =>
            {

                aggregates.Add(p => p.Active).Sum();
                aggregates.Add(p => p.InActive).Sum();
                aggregates.Add(p => p.ShortlistedByHr).Sum();
                aggregates.Add(p => p.ShortlistedForInterview).Sum();
                aggregates.Add(p => p.DirectHiring).Sum();
                aggregates.Add(p => p.IntentToOfferSent).Sum();
                aggregates.Add(p => p.FinalOfferSent).Sum();
                aggregates.Add(p => p.WorkerPool).Sum();
                aggregates.Add(p => p.BusinessVisa).Sum();
                aggregates.Add(p => p.WorkVisa).Sum();
                aggregates.Add(p => p.VisaTransfer).Sum();
                aggregates.Add(p => p.WorkPermit).Sum();
                aggregates.Add(p => p.CandidateJoined).Sum();
                aggregates.Add(p => p.WorkerJoined).Sum();
                aggregates.Add(p => p.Joined).Sum();
                aggregates.Add(p => p.PostStaffJoined).Sum();
                aggregates.Add(p => p.PostWorkerJoined).Sum();
            })
            .PageSize(10)
            .Read(read => read.Action("ReadManpowerUniqueJobData", "ManpowerRequirementSummary"))
            .Model(model => model.Id(p => p.Id))
            )
            .HtmlAttributes(new { @style = "font-size: 12px;height:100%;" })
)
    </div>

</div>
