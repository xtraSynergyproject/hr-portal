@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@using Kendo.Mvc.Extensions;
@model BatchViewModel

@{
    ViewData["Title"] = "Batch";
    Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
}
<script>
        function OnDeleteBatch(e) {
        var flag = confirm('Do you really want to delete the Batch?');
        //alert("..Delete");
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url:'@Url.Action("Delete", "Batch", new { @area="Recruitment"})?Id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#Batchgrid").data("kendoGrid").dataSource.read();
                        kendo.alert("Batch Deleted Successfully.");
                    } else {
                        $("#Batchgrid").data("kendoGrid").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //
                    $("#Batchgrid").data("kendoGrid").dataSource.read();
                }
            });
            return false;
        }
    }
      function OnCreateBatch() {

         @*iframeOpenUrl = '@Url.Action("Create", "Batch", new { @area="Recruitment"})';
          OpenIframePopup(450, 1200, 'Manage Batch');*@
        
            var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("Create", "Batch", new { @area = "Recruitment" })';
        win.OpenWindow({ Title: 'Manage Batch', Width: 450, Height: 800 });
        return false;


    }
    function OnEditBatch(e) {
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("Edit", "Batch", new { @area="Recruitment"})?Id=' + dataItem.Id;
        OpenIframePopup(450, 1200, 'Manage Batch');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("Edit", "Batch", new { @area = "Recruitment" })?Id=' + dataItem.Id;
        win.OpenWindow({ Title: 'Manage Batch', Width: 450, Height: 800 });
        return false;
    }


</script>


<div>
    <h4>@ViewBag.Title</h4>

    <hr />

    <div class="row">
        <div class="col-12">

            @(Html.Kendo().Grid<BatchViewModel>
    ()
    .Name("Batchgrid")
    .ToolBar(toolbar =>
    toolbar.ClientTemplate("<button type='button' class='btn btn-primary' onclick='OnCreateBatch();'><i class='fa fas fa-plus'></i>&nbsp;Create Batch</button>"))

    .Columns(columns =>

    {
        columns.Command(command =>
        {
            command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditBatch").HtmlAttributes(new { @class = "action-icon" });
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteBatch").HtmlAttributes(new { @class = "action-icon" });
        }).Title("Action").Width(100);

        //columns.Bound(c => c.JobId);
        columns.Bound(c => c.Name);
        columns.Bound(c => c.OrganizationId).Title("Organization");
        columns.Bound(c => c.HiringManager);
        columns.Bound(c => c.BatchStatus);
        columns.Bound(c => c.TargetHiringDate);
        columns.Bound(c => c.TargetBatchCount);

    })
    .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                .Pageable(pageable => pageable
                .Refresh(true)

                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                .PageSize(10)
                //.Events(events => events.Error("OnError"))
                .Read(read => read.Action("ReadData", "Batch"))
                .Model(model => model.Id(p => p.Id))
                )
          )

        </div>
    </div>
</div>
