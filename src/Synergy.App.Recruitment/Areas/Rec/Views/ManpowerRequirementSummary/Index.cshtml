@using CMS.Data.Model
@using CMS.UI.ViewModel
@using CMS.Common;
@using Kendo.Mvc.UI
@{
    ViewBag.Title = "Manpower Requirement Summary";
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}


<script id="template" type="text/kendo-tmpl">
    <iframe name="template" src="/Recruitment/ManpowerRequirementSummary/ManpowerRequirementSummaryVersion?summaryId=#=Id#" id="template" style='width:100%; overflow: hidden;' frameBorder='1'></iframe>
</script>
<script>

    $(document).ready(function () {

    });

    $('.toggle-menu').bind("click", function (e) {

        var isexist = document.getElementsByClassName("sidebar-closed");
        var grid = document.getElementsByClassName("k-grid-content");
        var g = grid[0].style.width;
        g = g.split('px');
        if (isexist.length > 0) {
            var w = parseInt(g[0]) - 257;
            grid[0].style.width = w + "px";

        }
        else {
            var w = parseInt(g[0]) + 257;
            grid[0].style.width = w + "px";

        }


    });


    function cellClickI(jobid) {
        //e.preventDefault();
       // alert(jobid)
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
       // iframeOpenUrl = '@Url.Action("ViewJobAdvertisement", "JobAdvertisement", new { @area = "Recruitment"})?jobId=' + jobid;
       // OpenIframePopup(1000, 1200, 'Job Advertisement');
        var url = "/Recruitment/JobAdvertisement/ViewJobAdvertisement?jobId=" + jobid;
      //  window.location.href = url;
        LoadPartailView(url, $('#cms-content'));
      //  alert("open")
    }

    function cellClickA(jobid, orgid) {
        //e.preventDefault();
      //  alert(jobid)
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
      //  iframeOpenUrl = '@Url.Action("ViewJobAdvertisementA", "JobAdvertisement", new { @area = "Recruitment"})?jobId=' + jobid;
      //   OpenIframePopup(1000, 1200, 'Job Advertisement');
        var url = "/Recruitment/JobAdvertisement/ViewJobAdvertisementA?jobId=" + jobid + "&orgid=" + orgid;
      //   window.location.href = url;
         LoadPartailView(url, $('#cms-content'));
      //  alert("open")
    }
    var expandedRow;
    function detailExpand(e) {
        // Only one open at a time

        if (expandedRow != null && expandedRow[0] != e.masterRow[0]) {
            var grid = $('#kgrdManpowerRequirementSummary').data('kendoGrid');
            grid.collapseRow(expandedRow);
        }
        expandedRow = e.masterRow;
    }

    function OnAddJobDesc(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("Index", "Task", new { @area= "Cms" })?templateCode1=JOBDESCRIPTION_HM&referenceId=' + dataItem.Id + '&referenceTypeCode=' + '@ReferenceTypeEnum.REC_ManpowerRequirementSummary' + '&isPopUp=true&udf1=' + dataItem.JobId + "&udf2=" + dataItem.OrganizationId + "&udfValue1=" + dataItem.JobTitle + "&udfValue2=" + dataItem.OrganizationName;
        OpenIframePopup(1000, 1200, "Job Description Request");*@
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("Index", "Task", new { @area = "Cms" })?templateCode1=JOBDESCRIPTION_HM&referenceId=' + dataItem.Id + '&referenceTypeCode=' + '@ReferenceTypeEnum.REC_ManpowerRequirementSummary' + '&isPopUp=true&udf1=' + dataItem.JobId + "&udf2=" + dataItem.OrganizationId + "&udfValue1=" + dataItem.JobTitle + "&udfValue2=" + dataItem.OrganizationName;
        win.OpenWindow({ Title: 'Job Description Request', Width: 1000, Height: 1000 });
        return false;

         @*e.preventDefault();
         var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        iframeOpenUrl = '@Url.Action("JobDescription", "JobDescription", new { @area = "Recruitment" })?jobId=' + dataItem.JobId + "&orgId=" + dataItem.OrganizationId;
         OpenIframePopup(450,700,'Add Job Description');*@
    }

    function OnEditJobDesc(e) {
         e.preventDefault();
         var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("EditJobDescription", "JobDescription", new { @area = "Recruitment" })?jobId=' + dataItem.JobId + "&orgId=" + dataItem.OrganizationId;
        OpenIframePopup(1000, 850, 'Manage Job Description');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditJobDescription", "JobDescription", new { @area = "Recruitment" })?jobId=' + dataItem.JobId + "&orgId=" + dataItem.OrganizationId;
        win.OpenWindow({ Title: 'Manage Job Description', Width: 1000, Height: 850 });
        return false;
    }
    function OnViewJobDesc(id) {
        @*iframeOpenUrl = '@Url.Action("Task", "ManpowerRequirementSummary", new { @area= "Recruitment" })?manpowerId=' + id;
        OpenIframePopup(1000, 1200, "View Job Description Request");*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("Task", "ManpowerRequirementSummary", new { @area = "Recruitment" })?manpowerId=' + id;
        win.OpenWindow({ Title: 'View Job Description Request', Width: 1000, Height: 1000 });
        return false;
    }
    function OnViewJobDescription(jobdid,jobid) {
       // e.preventDefault();
      //  var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("ViewJobDescription", "JobDescription", new { @area = "Recruitment" })?jobId=' + jobid  + "&taskStatus=View";
        OpenIframePopup(1000, 850, 'View Job Description');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("ViewJobDescription", "JobDescription", new { @area = "Recruitment" })?jobId=' + jobid + "&taskStatus=View";
        win.OpenWindow({ Title: 'View Job Description', Width: 1000, Height: 850 });
        return false;

    }
    function OnAdd() {

        @*iframeOpenUrl = '@Url.Action("CreateManpowerRequirement", "ManpowerRequirementSummary", new { @area = "Recruitment" })';
        OpenIframePopup(1000, 1200, 'Add Manpower Requirement');*@
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("CreateManpowerRequirement", "ManpowerRequirementSummary", new { @area = "Recruitment" })';
        win.OpenWindow({ Title: 'Add Manpower Requirement', Width: 1000, Height: 700 });
        return false;

    }
     function OnEdit(e) {
         e.preventDefault();
         var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
         @*iframeOpenUrl = '@Url.Action("EditManpowerRequirement", "ManpowerRequirementSummary", new { @area = "Recruitment" })?id=' + dataItem.Id;
         OpenIframePopup(1000, 1200, 'Edit Manpower Requirement');*@
          var win = GetMainWindow();
         win.iframeOpenUrl = '@Url.Action("EditManpowerRequirement", "ManpowerRequirementSummary", new { @area = "Recruitment" })?id=' + dataItem.Id;
         win.OpenWindow({ Title: 'Edit Manpower Requirement', Width: 1000, Height: 700 });
        return false;

    }

      function OnAttachDocument(e) {
         e.preventDefault();
         var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
         @*iframeOpenUrl = '@Url.Action("EditManpowerRequirement", "ManpowerRequirementSummary", new { @area = "Recruitment" })?id=' + dataItem.Id;
         OpenIframePopup(1000, 1200, 'Edit Manpower Requirement');*@
          var win = GetMainWindow();
          win.iframeOpenUrl = '@Url.Action("organizationDocument", "ManpowerRequirementSummary", new { @area = "Recruitment" })?id=' + dataItem.OrganizationId;
         win.OpenWindow({ Title: 'Organization Documents', Width: 900, Height: 600 });
        return false;

    }
    function OnCreateComment(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("Create", "ManpowerRequirementSummary", new { @area = "Recruitment"})?summaryId=' + dataItem.Id +'&versionNo='+dataItem.VersionNo;
        OpenIframePopup(400, 500, 'Add Comment');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("Create", "ManpowerRequirementSummary", new { @area = "Recruitment" })?summaryId=' + dataItem.Id + '&versionNo=' + dataItem.VersionNo;
        win.OpenWindow({ Title: 'Add Comment', Width: 400, Height: 500 });
        return false;

    }
     function OnViewComment(id,userrolecode) {
         @*iframeOpenUrl = '@Url.Action("Comment", "ManpowerRequirementSummary", new { @area = "Recruitment" })?summaryId=' + id +'&userRoleCode='+userrolecode;
         OpenIframePopup(1000, 1200, 'View Comment');*@
          var win = GetMainWindow();
         win.iframeOpenUrl = '@Url.Action("Comment", "ManpowerRequirementSummary", new { @area = "Recruitment" })?summaryId=' + id + '&userRoleCode=' + userrolecode;
         win.OpenWindow({ Title: 'View Comment', Width: 1000, Height: 1000 });
        return false;


    }
    function OnViewVersion(id) {
 @*iframeOpenUrl = '@Url.Action("ManpowerRequirementSummaryVersion", "ManpowerRequirementSummary", new { @area = "Recruitment" })?summaryId=' + id;
        OpenIframePopup(1000, 800, 'View Version');*@
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("ManpowerRequirementSummaryVersion", "ManpowerRequirementSummary", new { @area = "Recruitment" })?summaryId=' + id;
        win.OpenWindow({ Title: 'View Version', Width: 1000, Height: 800 });
        return false;
    }

    function OnCreateJobAdv(jobId, orgId, requirement) {
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        @*iframeOpenUrl = '@Url.Action("Index", "JobAdvertisement", new { @area = "Recruitment"})?summaryId=' + dataItem.Id;
        OpenIframePopup(1000, 1200,'Add Job Advertisement');*@
        var url = "/Recruitment/JobAdvertisement/Index?jobId=" + jobId + "&orgId=" + orgId + "&requirement=" + requirement+"&permission=@ViewBag.Permissions";
       // window.location.href = url;

        LoadPartailView(url, $('#cms-content'));
    }
     function OnView(id, jobid) {
        //e.preventDefault();
        //
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

       // var url = "/Recruitment/JobAdvertisement/ViewEditJobAdvertisement?jobId=" + dataItem.JobId + "&id=" + dataItem.Id;
        var url = "/Recruitment/JobAdvertisement/Index?jobId=" + jobid + "&id=" + id+ "&permission=@ViewBag.Permissions";
        //  window.location.href = url;
        LoadPartailView(url, $('#cms-content'));

    }
    function OnViewJobAdv(id, jobid) {
        //
        if (id=="null") {
            id = "";
        }
        //var url = "/Recruitment/JobAdvertisement/Index?jobId=" + jobid + "&id=" + id+ "&isView=true&permission=@ViewBag.Permissions";
       // var url = "/Recruitment/JobAdvertisement/ViewJobAdvertisement?id=" + jobid + '&layout=popup';
       @*iframeOpenUrl = '@Url.Action("ViewJobAdvertisement", "JobAdvertisement", new { @area = "Recruitment" })?id=' + jobid + '&layout=popup';
        OpenIframePopup(1300, 1000, 'View Job Advertisement');*@
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("ViewJobAdvertisement", "JobAdvertisement", new { @area = "Recruitment" })?id=' + jobid + '&layout=popup';
        win.OpenWindow({ Title: 'View Job Advertisement', Width: 1300, Height: 1000 });
        return false;
      //  LoadPartailView(url, $('#cms-content'));
    }
    function OnDataBound(arg) {
        //$("#kgrdManpowerRequirementSummary tbody tr").each(function () {
        //    var currentDataItem = $("#kgrdManpowerRequirementSummary").data("kendoGrid").dataItem($(this));
        //    var addjob = $(this).find(".k-grid-Addjob");
        //    if (currentDataItem.Active != 0) {
        //        addjob.remove();
        //        //addjob.prop('disabled', true);
        //        //addjob.css('background', 'grey');
        //    }
        //});
        //introJs().setOptions({
        //    steps: [{
        //         title: "Welcome to the Recruitment Dashboard",
       //           intro: "This user interface provides glance view of relevant recruitment process, this will regularly update the data on user actions"

        //    },
        //    {
        //        element: document.querySelector('.bot-margin'),
        //        intro: 'This is a manpower summary grid'
        //        },

        //        {
        //        element: document.querySelector('.k-grid-excel'),
        //        intro: 'This is to export grid to excel'
        //        },

        //    {
        //        element: document.querySelector('.k-grid-pdf'),
        //        intro: 'This is to save grid as pdf'
        //    },
        //    {

        //        element: "#sumbul",//$('.'),//document.querySelector('.k-grid-btnAdd'),
        //        intro: 'This is to add manpower requirement'
        //        },

        //    {
        //        element: document.querySelector('.k-i-expand'),
        //        intro: 'This is the expandable view where user can see the pending task count according to the roles and organizations'

        //    },
        //    {
        //        element: document.querySelector('.k-footer-template'),
        //        intro: 'This is to display total'
        //    },


        //  ]
        //}).start();
    }

    function OnDelete(e) {
        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var flag = confirm('Do you really want to delete?');

        if (flag) {
            $.ajax({
                url:'@Url.Action("DeleteManpowerRequirement", "ManpowerRequirementSummary", new { @area= "Recruitment" })?Id=' + dataItem.id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    console.log(result.success);
                    //
                    if (result.success) {
                        $("#kgrdManpowerRequirementSummary").data("kendoGrid").dataSource.read();
                        kendo.alert("Deleted Successfully");
                    } else {
                        $("#kgrdManpowerRequirementSummary").data("kendoGrid").dataSource.read();
                        //var err = result.errors.BinderCountError.errors[0];
                        kendo.alert("Job advertisement are already posted for this organization please inactive job advertisement before delete");
                    }
                },
                error: function (ert) {
                    //
                    $("#kgrdManpowerRequirementSummary").data("kendoGrid").dataSource.read();
                    kendo.alert("Can't delete this record");
                }
            });
            return false;
        }
    }
    function IframePostbackScript() {
        $("#kgrdManpowerRequirementSummary").data("kendoGrid").dataSource.read();
    }
    function OnViewApplicants(jobid,orgid) {
            @*iframeOpenUrl = '@Url.Action("ViewApplicationDetails", "CandidateShortlist", new { @area="Recruitment"})?jobId='+jobid+'&orgId='+orgid ;
        OpenIframePopup(1500, 1200, 'View Applicants');*@
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("ViewApplicationDetails", "CandidateShortlist", new { @area = "Recruitment" })?jobId='+jobid+'&orgId='+orgid ;
        win.OpenWindow({ Title: 'View Applicants', Width: 1500, Height: 900 });
        return false;
    }
</script>


<style>
    .k-pdf-export .k-filterable .k-grid-filter {
        display: none;
    }

    .k-grid td, .k-grid th {
        font-size: 14px !important;
    }

    .tb-bg {
        /*background-color:cadetblue;*/
        background-color: #17a2b8 !important;
        color: #fff;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .tb-bg1 {
        /*background-color: cornflowerblue;*/
        background-color: #ffc107 !important;
        color: #000;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .tb-bg2 {
        /* background-color: darkcyan;*/
        background-color: #17a2b8 !important;
        color: #fff;
        font-weight: 500 !important;
        text-align: center !important;
    }

    .k-footer-template {
        background-color: #DAEDFF
    }

    .k-grid-header .k-header, .k-grid-header thead, .k-grid-header .k-hierarchy-cell {
        background-color: #527ab8;
        color: #ffffff;
    }

        .k-grid-header thead a {
            color: #fff !important;
        }

    .k-grid tbody tr {
        line-height: 12px;
    }
</style>
<script type="x/kendo-template" id="page-template1">
    <div class="page-template1">    
      <div class="footer">
        Page #: pageNum # of #: totalPages #
      </div>
    </div>
</script>
<div class="row" style="margin:15px;">


    @*<button type="button" class="btn btn-primary" onclick="OnCreateComment();">Add Comment</button>
        <button type="button" class="btn btn-primary" onclick="OnViewComment();">View Comment</button>*@
    <div class="col bot-margin" style="margin-top:20px">
        <div class="fa-2x pad-b-15 head">Manpower Requirement Summary</div>
        @(Html.Kendo().Grid<ManpowerRecruitmentSummaryViewModel>
    ()
    .Name("kgrdManpowerRequirementSummary").Excel(e => e.AllPages(true)).Pdf(pdf => pdf
    .AllPages()
    .AvoidLinks()
    // .PaperSize("A4")
    .Scale(0.3)
    .TemplateId("page-template1")
    .Margin("1cm", "1cm", "1cm", "1cm")
    .Landscape()
    .RepeatHeaders())
    .ToolBar(tools =>
    {
        tools.Excel();
        tools.Pdf();
    })
    .Columns(col =>
    {
        col.Bound(c => c.Id).Width(0).Exportable(false).Locked(true).Lockable(false);
        col.Bound(c => c.JobTitle).Title("Position").HeaderHtmlAttributes(new { title = "Position" }).Locked(true).Lockable(false).Width(130).ClientFooterTemplate("Total Count").Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(c => c.OrganizationName).Locked(true).Lockable(false).Title("Organization Unit").HeaderHtmlAttributes(new { title = "Organization Unit" }).Width(170).Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(c => c.ManpowerType).Locked(true).Lockable(false).Title("Job Type").HeaderHtmlAttributes(new { title = "Job Type" }).Width(150).Filterable(ftb => ftb.Multi(true).Search(true));
        //col.Command(command =>
        //{
        //    //command.Custom("AddJobDesc").Text("<i class='fa fa-plus' title='Request Job Description'></i>").Click("OnAddJobDesc").HtmlAttributes(new { @class = "action-icon" });
        //    //command.Custom("EditJobDesc").Text("<i class='fa fas fa-pencil' title='Add/Edit Job Description'></i>").Click("OnEditJobDesc").HtmlAttributes(new { @class = "action-icon" });
        //    //command.Custom("ViewJobDesc")("#if(Active==1){#<i class='fa fas fa-eye' title='View Job Description'></i>#}#").Click("OnViewJobDescription").HtmlAttributes(new { @class = "action-icon", title = "Job Description" });

        //}).Width(150).Exportable(false).Title("Job Description");
        //col.Bound(c => c.Count).Title("JD Task Count").HeaderHtmlAttributes(new { title = "Task Count" }).Width(150).ClientTemplate("<a style='cursor:pointer;color:blue' onclick='OnViewJobDesc(\"#:Id#\")'>#:Count#</a>");

        //col.Group(group => group
        //.Title("Job Advertisment").HeaderHtmlAttributes(new { @class = "tb-bg1" })
        //.Columns(info =>
        //{
        //    info.Bound(c => c.Active)/*.ClientTemplate("<a style='cursor:pointer;color:blue' onclick='cellClickA(\"#:JobId#\")'>#:Active#</a>")*/.Width(120).ClientFooterTemplate("#=sum#");
        //    info.Bound(c => c.InActive).Title("Inactive").ClientTemplate("<a style='cursor:pointer;color:blue' title='View' onclick='cellClickI(\"#:JobId#\")'>#:InActive#</a>").Width(130).ClientFooterTemplate("#=sum#");
        //    info.Bound(c => c.Active).Title("Add/Edit").HtmlAttributes(new { id = "editbtn" }).ClientTemplate("#if('" + ViewBag.Permissions.Contains("AddManpowerRecruitment") + "'=='True'){if (Active==0){#<i class='fa fa-plus k-primary' style='cursor:pointer;color:blue' title='Add Job Advertisement' onclick='OnCreateJobAdv(\"#:JobId#\",\"#:OrganizationId#\",\"#:Requirement#\")'></i>#} else if(Active!=0){#<i class='fa fas fa-pencil' style='cursor:pointer;color:blue' title='View/Edit Job Advertisement' onclick='OnView(\"#:JobAdvertisementId#\",\"#:JobId#\")'></i>    #} }#").Exportable(false).Width(150);

        //}));
        col.Bound(c => c.JobDescriptionId).Title("Job Description").HtmlAttributes(new { id = "editbtn", title = "Job Advertisement" }).ClientTemplate("#if(JobDescriptionId!=null){#<i class='fa fas fa-eye' style='cursor:pointer;' title='View Job Description' onclick='OnViewJobDescription(\"#:JobDescriptionId#\",\"#:JobId#\")'></i>#}#").Exportable(false).Width(150);

        col.Bound(c => c.Active).Title("Job Advertisement").HtmlAttributes(new { id = "editbtn", title= "Job Advertisement" }).ClientTemplate("#if(Active==1){#<i class='fa fas fa-eye' style='cursor:pointer;' title='View Job Advertisement' onclick='OnViewJobAdv(\"#:JobAdvertisementId#\",\"#:JobId#\")'></i>#}#").Exportable(false).Width(150);

        col.Bound(c => c.VersionNo).ClientTemplate("<a style='cursor:pointer;color:blue' onclick='OnViewVersion(\"#:Id#\")'>#:VersionNo#</a>").HeaderHtmlAttributes(new { title = "Version No" }).Width(150).Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(c => c.Requirement).HeaderHtmlAttributes(new { title = "Requirement" }).Width(150).ClientFooterTemplate("#=sum#").Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(c => c.Seperation).Title("Separation").HeaderHtmlAttributes(new { title = "Separation" }).Width(150).ClientFooterTemplate("#=sum#").Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(c => c.Available).HeaderHtmlAttributes(new { title = "Available" }).Width(150).ClientFooterTemplate("#=sum#").Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(c => c.Planning).HeaderHtmlAttributes(new { title = "Sub Contract" }).Title("Sub Contract").Width(150).ClientFooterTemplate("#=sum#").Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(c => c.Transfer).HeaderHtmlAttributes(new { title = "Transfer" }).Width(150).ClientFooterTemplate("#=sum#").Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(c => c.Balance).HeaderHtmlAttributes(new { title = "Balance" }).Width(150).ClientFooterTemplate("#=sum#").Filterable(ftb => ftb.Multi(true).Search(true));


        col.Group(group => group
        .Title("Comments").HeaderHtmlAttributes(new { @class = "tb-bg" })
        .Columns(info =>
        {

            info.Bound(c => c.OrgUnit).HeaderHtmlAttributes(new { title = "Organization Unit" }).ClientFooterTemplate("#=sum#").Width(150).ClientTemplate("<a style='cursor:pointer;color:blue' onclick='OnViewComment(\"#:Id#\",\"ORG_UNIT\")'>#:OrgUnit#</a>").Filterable(ftb => ftb.Multi(true).Search(true));
            info.Bound(c => c.PlanningUnit).HeaderHtmlAttributes(new { title = "Planning Unit" }).ClientFooterTemplate("#=sum#").Title("Planning").Width(120).ClientTemplate("<a style='cursor:pointer;color:blue' onclick='OnViewComment(\"#:Id#\",\"PLANNING\")'>#:PlanningUnit#</a>").Filterable(ftb => ftb.Multi(true).Search(true));
            info.Bound(c => c.Hr).HeaderHtmlAttributes(new { title = "HR" }).ClientFooterTemplate("#=sum#").Title("HR").Width(100).ClientTemplate("<a style='cursor:pointer;color:blue' onclick='OnViewComment(\"#:Id#\",\"HR\")'>#:Hr#</a>").Filterable(ftb => ftb.Multi(true).Search(true));
            info.Command(c => c.Custom("Add").HtmlAttributes(new { @class = "k-primary" }).Text("<i class='fa fa-plus' title='Add Comment'></i>").Click("OnCreateComment")).Width(80).Exportable(false);

        }).Width(100));
        col.Group(group => group
        .Title("Recuritment Process").HeaderHtmlAttributes(new { @class = "tb-bg1" })
        .Columns(info =>
        {

            info.Bound(c => c.ShortlistedByHr).Width(150).ClientFooterTemplate("#=sum#").Title("Shortlisted By HR").HeaderHtmlAttributes(new { title = "Shortlisted By HR" });
            info.Bound(c => c.ShortlistedForInterview).Width(150).ClientFooterTemplate("#=sum#").Title("Shortlisted By HM").HeaderHtmlAttributes(new { title = "Shortlisted By HM" });
            info.Bound(c => c.DirectHiring).Width(150).ClientFooterTemplate("#=sum#").Title("Direct Hiring").HeaderHtmlAttributes(new { title = "Direct Hiring" });
            info.Bound(c => c.IntentToOffer).Width(150).ClientFooterTemplate("#=sum#").Title("Intent To Offer").HeaderHtmlAttributes(new { title = "Intent To Offer" });
            info.Bound(c => c.WorkerPool).Width(150).ClientFooterTemplate("#=sum#").Title("Worker Appointment").HeaderHtmlAttributes(new { title = "Worker Pool" });
            info.Bound(c => c.FinalOffer).Width(150).ClientFooterTemplate("#=sum#").Title("Final Offer").HeaderHtmlAttributes(new { title = "Final Offer" });
            info.Bound(c => c.BusinessVisa).Width(150).ClientFooterTemplate("#=sum#").Title("Overseas Business Visa").HeaderHtmlAttributes(new { title = "Overseas Business Visa" });
            info.Bound(c => c.WorkerVisa).Width(150).ClientFooterTemplate("#=sum#").Title("Overseas Work Visa").HeaderHtmlAttributes(new { title = "Overseas Work Visa" });
            info.Bound(c => c.VisaTransfer).Width(150).ClientFooterTemplate("#=sum#").Title("Local Visa Transfer").HeaderHtmlAttributes(new { title = "Local Candidates" });
            info.Bound(c => c.WorkPermit).Width(150).ClientFooterTemplate("#=sum#").Title("Local WorkPermit").HeaderHtmlAttributes(new { title = "Local WorkPermit" });
            info.Bound(c => c.CandidateJoined).Width(150).ClientFooterTemplate("#=sum#").Title("Staff Joining").HeaderHtmlAttributes(new { title = "Staff Joined" });
            info.Bound(c => c.WorkerJoined).Width(150).ClientFooterTemplate("#=sum#").Title("Worker Joining").HeaderHtmlAttributes(new { title = "Worker Joined" });
            info.Bound(c => c.Joined).Width(150).ClientFooterTemplate("#=sum#").Title("Joined").HeaderHtmlAttributes(new { title = "Joined" });
            info.Bound(c => c.PostStaffJoined).Width(150).ClientFooterTemplate("#=sum#").Title("Post Staff Joined").HeaderHtmlAttributes(new { title = "Joined" });
            info.Bound(c => c.PostWorkerJoined).Width(150).ClientFooterTemplate("#=sum#").Title("Post Worker Joined").HeaderHtmlAttributes(new { title = "Joined" });
            info.Bound(c => c.Id).Title("View Applicants").ClientTemplate("<i class='fa fa-eye k-primary' style='cursor:pointer;color:blue' title='View Applicants' onclick='OnViewApplicants(\"#:JobId#\",\"#:OrganizationId#\")'></i>").HeaderHtmlAttributes(new { title = "View Applicants" }).Width(80).Filterable(false).Exportable(false);
        }).Width(120));
        //col.Group(group => group
        //.Title("In Progress").HeaderHtmlAttributes(new { @class = "tb-bg1" })
        //.Columns(info =>
        //{

        //    info.Bound(c => c.Active).ClientTemplate("<a style='cursor:pointer;color:blue' onclick='cellClickA(\"#:JobId#\",\"#:OrganizationId#\")'>#:Active#</a>").Width(150).ClientFooterTemplate("#=sum#");
        //    info.Bound(c => c.InActive).Title("Inactive").ClientTemplate("<a style='cursor:pointer;color:blue' onclick='cellClickI(\"#:JobId#\")'>#:InActive#</a>").Width(150).ClientFooterTemplate("#=sum#");
        //    info.Command(c => c.Custom("Addjob").HtmlAttributes(new { @class = "k-primary" }).Text("<i class='fa fa-plus' title='Add Job Advertisement'></i>").Click("OnCreateJobAdv")).Width(80);

        //}));
        //col.Group(group => group
        //.Title("Shortlisted by HR").HeaderHtmlAttributes(new { @class = "tb-bg2" })
        //.Columns(info =>
        //{

        //    info.Bound(c => c.ShortlistedByHr).Width(160).ClientFooterTemplate("#=sum#").Title("Shortlisted By HR");
        //    info.Bound(c => c.ShortlistedForInterview).Width(160).ClientFooterTemplate("#=sum#").Title("Shortlisted By HM");
        //    info.Bound(c => c.InterviewCompleted).Width(150).ClientFooterTemplate("#=sum#").Title("Interviewed");
        //    info.Bound(c => c.FinalOfferAccepted).Width(150).ClientFooterTemplate("#=sum#").Title("Selected");
        //    info.Bound(c => c.CandidateJoined).Width(150).ClientFooterTemplate("#=sum#").Title("Joined");
        //}));
        col.Bound(x => x.CreatedByName).Width(150).Title("Created By").Filterable(ftb => ftb.Multi(true).Search(true));
        col.Bound(x => x.CreatedDate).Width(150).Format("{0:dd MMM yyyy}").Filterable(ftb => ftb.Multi(true).Search(true));
        if (ViewBag.Permissions.Contains("AddManpowerRecruitment"))
        {
            col.Command(command =>
            {
                command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEdit").HtmlAttributes(new { @class = "action-icon" });
                command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDelete").HtmlAttributes(new { @class = "action-icon" });
            }).Width(120).Exportable(false).Title("Actions");

        }

        if (ViewBag.Permissions.Contains("AddManpowerRecruitment"))
        {
            col.Command(command =>
            {
                command.Custom("AttachFile").Text("<i class='fa fas fa-plus'></i>").Click("OnAttachDocument").HtmlAttributes(new { @class = "action-icon" });

            }).Width(120).Exportable(false).Title("Attachment");

        }
        //col.Bound(p => p.AttachmentId).Title("Attachment").ClientTemplate("#if(AttachmentId!=null){#<a style='color:blue; text-decoration:underline' href='/cms/Document/GetFileMongo?fileId=#:AttachmentId#' target='_blank'><i class='fa fas fa-download'></i></a>#}#").Width(140); ;



    })
    .ToolBar(toolbar =>
    {
        if (ViewBag.Permissions.Contains("AddManpowerRecruitment"))
        {
            toolbar.Custom().Text("Add Manpower Requirement").Name("btnAdd").HtmlAttributes(new { @class = "k-primary", id="sumbul", href = "javascript:OnAdd();" });
        }
    })
    .Events(events => events.DetailExpand("detailExpand").DataBound("OnDataBound"))
    .Resizable(resizable => resizable.Columns(true))
    .Scrollable(scrollable => scrollable.Enabled(true))
    .Sortable(srt => srt.Enabled(true))
    //.ClientDetailTemplateId("template")
    .Selectable(select => select.Enabled(false))
    .Filterable(f => f.Extra(false)
    .Operators(o => o.ForString(s => s.Clear()
    .Contains("Contains")
    //.IsEqualTo("Is equal to")
    )))
    .AutoBind(true)
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .DataSource(
    dataSource => dataSource
    .Ajax()
    .Aggregates(aggregates =>
    {
        aggregates.Add(p => p.Requirement).Sum();
        aggregates.Add(p => p.Seperation).Sum();
        aggregates.Add(p => p.Available).Sum();
        aggregates.Add(p => p.Planning).Sum();
        aggregates.Add(p => p.Transfer).Sum();
        aggregates.Add(p => p.Balance).Sum();
        aggregates.Add(p => p.OrgUnit).Sum();
        aggregates.Add(p => p.PlanningUnit).Sum();
        aggregates.Add(p => p.Hr).Sum();
        aggregates.Add(p => p.Active).Sum();
        aggregates.Add(p => p.InActive).Sum();
        aggregates.Add(p => p.ShortlistedByHr).Sum();
        aggregates.Add(p => p.ShortlistedForInterview).Sum();
        aggregates.Add(p => p.DirectHiring).Sum();
        aggregates.Add(p => p.IntentToOffer).Sum();
        aggregates.Add(p => p.FinalOffer).Sum();
        aggregates.Add(p => p.CandidateJoined).Sum();
        aggregates.Add(p => p.WorkerJoined).Sum();
        aggregates.Add(p => p.WorkerPool).Sum();
        aggregates.Add(p => p.WorkerVisa).Sum();
        aggregates.Add(p => p.WorkPermit).Sum();
        aggregates.Add(p => p.BusinessVisa).Sum();
        aggregates.Add(p => p.VisaTransfer).Sum();
        aggregates.Add(p => p.Joined).Sum();
        aggregates.Add(p => p.PostWorkerJoined).Sum();
        aggregates.Add(p => p.PostStaffJoined).Sum();
    })
    .PageSize(20)
    .Read(read => read.Action("ReadManpowerRequirementSummaryData", "ManpowerRequirementSummary", new { @area = "Recruitment", permission = @ViewBag.Permissions }))
    .Model(model => model.Id(p => p.Id)

    )
    )
    .HtmlAttributes(new { @style = "font-size: 12px; height:100%;"})
    )
</div>

</div>
