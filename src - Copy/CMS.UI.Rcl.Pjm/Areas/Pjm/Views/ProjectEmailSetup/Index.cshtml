@inject IStringLocalizer<CMS.UI.Web.Areas.PJM.Controllers.ProjectEmailSetupController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI

@model ProjectEmailSetupViewModel

@{
    ViewData["Title"] = @Resource["ProjectEmailSetup"];
    Layout = null;
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
}

<style>
    .success {
        background-color: green;
        color: white;
        width: 100px;
        height: 30px;
        border-radius: 17px;
    }

    .unsuccess {
        background-color: gray;
        color: white;
        width: 120px;
        height: 30px;
        border-radius: 17px;
    }
</style>
<script>
    $(document).ready(function () {
        GetEmailData();
        @* window.parent.LoadPartailView1("/pjm/ProjectTask/ProjectDetailsBanner?ProjectId=@Model.Id&pageName=ProjectDashboard", 'ProjectBanner');*@
    });

    var columnDefs = [
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuemail' data-idvalue='" + params.value + "' ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },

        { field: "ServiceName", headerName: "@Resource["ServiceName"]", hide: '@ViewBag.Module' == "PJM" ? false : true, },
        { field: "UserName", headerName: "@SharedResource["UserName"]" },
        { field: "SmtpHost", headerName: "@Resource["SmtpHost"]" },
        { field: "SmtpPort", headerName: "@Resource["SmtpPort"]" },
        { field: "SmtpUserId", headerName: "@Resource["SmtpUserId"]" },
        {
            field: "Id", headerName: "@Resource["TestEmailSetup"]",
            cellRenderer: params => {
                return "<button class='btn' onclick='OnTestEmail(\"" + params.value + "\")' style='background-color:orange;color:white;'>Test</button>";
            }
        },
        {
            field: "Message", headerName: "Message",
            cellRenderer: params => {
                if (params.value == 'Succesfull')
                {
                    return "<div class='success'> <span style='margin:14px'>"+params.value+"</span></div>";
                } else if (params.value == 'UnSuccesfull') {
                    return "<div class='unsuccess'> <span style='margin:14px'>"+params.value+"</span></div>";
                }
            }
        },

    ];
    function GetEmailData() {
        document.getElementById("EmailSetupgrid").innerHTML = "";
        gridConfig(
            "EmailSetupgrid",
            "/PJM/ProjectEmailSetup/ReadEmailData",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    $(function () {
        $.contextMenu({
            selector: '#tree-menuemail',
            trigger: 'left',
            build: function ($trigger, e) {

                var id = $trigger.data('idvalue');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OnEditEmail(id);
                                        break;
                                    case 'delete':
                                        OnDeleteEmail(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },
                            }
                        };


                }
            }
        });
    });


          function OnCreateEmail(){
        var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("Create", "ProjectEmailSetup", new { @area="PJM"})'+'?module=@ViewBag.Module';
         win.OpenWindow({ Title: '@Html.Raw(Resource["ManageProjectEmail"])', Width: 1000, Height: 1300 });
        return false;
    }


    function OnEditEmail(id) {
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("Edit", "ProjectEmailSetup", new { @area="PJM"})?Id=' + id + '&module=@ViewBag.Module';
         win.OpenWindow({ Title: '@Html.Raw(Resource["ManageProjectEmail"])', Width: 1000, Height: 1300 });
        return false;

       
    }

    function OnDeleteEmail(id) {
         var flag = confirm('@SharedResource["Areyousurethatyouwanttoproceed?"]');
        //alert("..Delete");
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url:'@Url.Action("Delete", "ProjectEmailSetup", new { @area="PJM"})?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        GetEmailData();
                        //$("#EmailSetupgrid").data("kendoGrid").dataSource.read();
                        kendo.alert("@SharedResource["DeletedSuccessfully"]");
                    } else {
                        GetEmailData();
                       //$("#EmailSetupgrid").data("kendoGrid").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //$("#EmailSetupgrid").data("kendoGrid").dataSource.read();
                    GetEmailData();
                }
            });
            return false;
        }
    }

    function OnTestEmail(id) {
        debugger;
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
       $.ajax({
                url:'@Url.Action("TestEmail", "ProjectEmailSetup", new { @area="PJM"})?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //$("#EmailSetupgrid").data("kendoGrid").dataSource.read();
                    GetEmailData();
                },
                error: function (ert) {
                    //$("#EmailSetupgrid").data("kendoGrid").dataSource.read();
                    GetEmailData();
                }
       });
    }

</script>


<div>
    <h4>@ViewBag.Title</h4>

    <hr />

    <div class="row">
        <div class="col-12">
            <button type="submit" class="btn btn-primary" onclick="return OnCreateEmail();"><i class="fa fa-plus pr-1"></i>@SharedResource["Create"]</button>
            <div id="EmailSetupgrid" style="width:100%;height:550px;padding-top:20px;" class="ag-theme-alpine"></div>

         @*@(Html.Kendo().Grid<ProjectEmailSetupViewModel>()
    .Name("EmailSetupgrid")
    .ToolBar(toolbar =>
    {
        toolbar.Custom().Text("" + SharedResource["Create"] + "").Name("btnAdd").IconClass("fa fas fa-plus").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnCreateEmail();" });
    })

    .Columns(columns =>

    {
    columns.Command(command =>
    {
        command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("OnEditEmail").HtmlAttributes(new { @class = "action-icon" });
        command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteEmail").HtmlAttributes(new { @class = "action-icon" });
    }).Title(@SharedResource["Action"]).Width(100);
    if (ViewBag.Module == "PJM")
    {
        columns.Bound(c => c.ServiceName).Title(@Resource["ServiceName"]);
    }
    columns.Bound(c => c.UserName).Title(@SharedResource["UserName"]);
    columns.Bound(c => c.SmtpHost).Title(@Resource["SmtpHost"]);
    columns.Bound(c => c.SmtpPort).Title(@Resource["SmtpPort"]);
    // columns.Bound(c => c.SmtpFromId);
    columns.Bound(c => c.SmtpUserId).Title(@Resource["SmtpUserId"]);
    columns.Bound(c => c.Id).ClientTemplate("<button class='btn' onclick='OnTestEmail(\"#:Id#\")' style='background-color:orange;color:white;'> Test </button> ").Title(@Resource["TestEmailSetup"]);
   columns.Bound(c => c.Message).ClientTemplate("#if(Message=='Succesfull'){#<div class='success'><span style='margin:14px'>#:Message#</span></div>#} else if(Message=='UnSuccesfull'){#<div class='unsuccess'><span style='margin:14px'>#:Message#</span></div>#}#")/*.Title(@Resource["SmtpPort"])*/;
        })
    .Scrollable(x => x.Enabled(false))
                .Sortable(srt => srt.Enabled(true))
                .Selectable(select => select.Enabled(false))
                .Filterable(f => f.Extra(false)
                                                    .Operators(o => o.ForString(s => s.Clear()
                                                    .Contains("Contains")
                                                    .IsEqualTo("Is equal to")
                                                )))
                .Pageable(pageable => pageable
                .Refresh(true)

                .PageSizes(true)
                .ButtonCount(5))
                .AutoBind(true)
                .DataSource(
                dataSource => dataSource
                .Ajax()
                .PageSize(10)
                //.Events(events => events.Error("OnError"))
                .Read(read => read.Action("ReadEmailData", "ProjectEmailSetup", new { @area = "PJM" }))
                .Model(model => model.Id(p => p.Id))
                )
          )*@

        </div>
    </div>
</div>
