@using CMS.Common;
@inject CMS.Common.IUserContext _userContext
@inject Microsoft.Extensions.Configuration.IConfiguration Configuration
@{
    var bannerHeight = 65;
    var returnUrl = "";
    string viewBagPortalId = Convert.ToString(ViewBag.PortalId);
    string footerText = Convert.ToString(ViewBag.Footer);
    var menuWidth = 600;
    if (ViewBag.Portal != null)
    {
        bannerHeight = ViewBag.Portal.BannerHeight;
        returnUrl = string.Concat("/portal/", Convert.ToString(ViewBag.Portal.Name));

    }
    Layout = "/Views/Shared/_Reference.cshtml";
}

<link type="text/css" rel="stylesheet" href="~/Themes/DMS/css/theme.css" asp-append-version="true" />
<section id="container">
    <div class="hide-in-popup header row no-gutters " style="background-color:white;height:@(bannerHeight)px;border-bottom:solid;border-bottom-width:thin;border-bottom-color: #C4C4C4;">
        <div class="col-md-2 row no-gutters">

            <div class="col-3 toggle-nav" style="color:#fff;">
                <div class="dropdown">
                    <button class="hamburger-menu primary-border navbar-toggler" type="button" data-toggle="dropdown"
                            aria-haspopup="true" aria-expanded="false">
                        <span class="primary-font-color">
                            <i class="fas fa-bars" style="font-size:24px;"></i>
                        </span>
                    </button>
                    @{

                        var menus = (List<CMS.UI.ViewModel.MenuViewModel>)ViewBag.Menus;
                        var ht = 575;
                        var mgh = 80;
                        var mh = 38;
                        if (menus != null)
                        {
                            var mg = menus.Where(x => x.PageType == TemplateTypeEnum.MenuGroup).Count() * mgh;
                            var p = menus.Where(x => x.PageType != TemplateTypeEnum.MenuGroup).Count() * mh;
                            var required = mg + p;
                            menuWidth = ((required / 575) + 1) * 300;
                        }
                        @:<div id="main-menu" class="dropdown-menu menu-container">
                            void LoadAccordianMenu(CMS.UI.ViewModel.MenuViewModel menu, CMS.UI.ViewModel.MenuParam prm, int menuNo, int level)
                            {
                                if (menu.PageType == TemplateTypeEnum.MenuGroup)
                                {
                                    prm.Height += mgh;
                                    if (prm.Height >= ht)
                                    {
                                        prm.ColumnCount++;
                                        prm.Height = mgh;
                                        prm.Html += $"</div><div class='menu-col col-color-{prm.ColumnCount}'>";

                                    }
                                    prm.Html += $"<a class=\"inode-link-nocss\" href=\"javascript:LoadPageById('{menu.Id}','{CMS.Common.TemplateTypeEnum.MenuGroup}','{CMS.Common.RequestSourceEnum.Main.ToString()}','{CMS.Common.DataActionEnum.None.ToString()}')\" >";

                                    prm.Html += $"<div class='row no-gutters menu-group col-color-{menuNo}-{level} col-level-{level}'>";
                                    prm.Html += $"<div class='col-3'><img class='menu-accordion-img' src='/cms/document/getimagemongo/{menu.IconFileId}' alt='Menu image' onerror='OnDocumentError(this);'></div>";
                                    prm.Html += $"<div class='col-9 menu-group-text'>{menu.DisplayName}</div>";
                                    prm.Html += $"</div>";
                                    prm.Html += $"</a>";
                                }


                                var childs = menus.Where(x => x.ParentId == menu.Id && x.PageType != TemplateTypeEnum.MenuGroup);
                                if (childs != null && childs.Any())
                                {
                                    foreach (var item in childs.OrderBy(x => x.SequenceOrder))
                                    {
                                        prm.Height += mh;
                                        if (prm.Height >= ht)
                                        {
                                            prm.ColumnCount++;
                                            prm.Height = mh;
                                            prm.Html += $"</div><div class='menu-col col-color-{prm.ColumnCount}'>";
                                        }

                                        prm.Html += $"<a class='' href=\"javascript:LoadPageById('{item.Id}','{item.PageType.ToString()}','{CMS.Common.RequestSourceEnum.Main.ToString()}','{CMS.Common.DataActionEnum.None.ToString()}')\">";
                                        prm.Html += $"<div class='menu-item col-color-{menuNo}-{level} col-level-{level}'>";
                                        prm.Html += $"<i class=\"{item.IconCss} menu-item-icon\"></i>";
                                        prm.Html += $"<span class=\"menu-item-text\">{item.DisplayName}</span>";
                                        prm.Html += $"</div>";
                                        prm.Html += $"</a>";

                                    }
                                }

                                var subMenuGroups = menus.Where(x => x.ParentId == menu.Id && x.PageType == TemplateTypeEnum.MenuGroup);
                                if (subMenuGroups != null && subMenuGroups.Any())
                                {

                                    @foreach (var sub in subMenuGroups.OrderBy(x => x.SequenceOrder))
                                    {
                                        LoadAccordianMenu(sub, prm, menuNo, level + 1);
                                    }

                                }

                            }

                            if (menus != null)
                            {
                                var menuNo = 1;
                                var prm = new CMS.UI.ViewModel.MenuParam { Html = "<div class='menu-col col-color-1'>", Height = 0, ColumnCount = 1 };
                                //foreach (var menu in menus.Where(x => x.ParentId == x.PortalId && menus.Any(y => y.ParentId == x.Id)).OrderBy(x => x.SequenceOrder))
                                foreach (var menu in menus.Where(x => x.ParentId == x.PortalId && x.PageType == TemplateTypeEnum.MenuGroup && menus.Any(y => y.ParentId == x.Id)).OrderBy(x => x.SequenceOrder))
                                {
                                    LoadAccordianMenu(menu, prm, menuNo++, 0);
                                }
                                prm.Html += "</div>";
                                @Html.Raw(prm.Html);
                            }




                        @:</div>
                    }
                </div>

            </div>
            <div class="col-9">

                @if (ViewBag.Portal != null)
                {
                    if (ViewBag.Portal.LogoId != "null")
                    {
                        <a href="@ViewBag.Portal?.LandingPage" class="logo"><img alt="" title="" style="max-height:@(bannerHeight)px;" src="@Url.Action("getimagemongo","document",new { @area="Cms",id=ViewBag.Portal.LogoId})" onerror='LogoError(this);' /></a> }
                    else
                    {
                        <a href="@ViewBag.Portal?.LandingPage" class="app-name">@ViewBag.Portal.DisplayName</a>
                    }
                }

            </div>
        </div>
        <div class="col-md-3">
            @*@if (ViewBag.Portal.BannerId != "null")
                {
                    <img alt="" style="height:@(bannerHeight)px;" class="banner-img" title="" src="@Url.Action("getimage","document",new { @area="Cms",id=ViewBag.Portal.BannerId})" onerror='LogoError(this);' />
                }*@
            @if (ViewBag.EnableMultiLanguage == true)
            {
                <div class="float-right pt-4">
                    <span onclick="return ChangeLanguage('ar-SA');" class="lng-item pr-2 @(_userContext.CultureName=="ar-SA"?"lng-active":"")" style="font-size:16px">العربية</span>|<span onclick="return ChangeLanguage('en-US');" class="lng-item pl-2 @(_userContext.CultureName=="en-US"?"lng-active":"")" style="font-size:14px">English</span>
                </div>
            }

        </div>

        <div class="col-md-7 row no-gutters user-menu">
            <div class="col-12">
                <div class="col-10 logindetail" style="padding:0px;">
                    <div class="col-12">
                        <div class="col-6" style="float:right;">
                            <img class="user-img rounded-circle float-right user-context-menu" style="padding-top:2px;margin-right:0px;" id="profileImg" src="@Url.Action("getimagemongo","document",new { @area="Cms",id=_userContext.PhotoId})" onerror='OnPhotoError(this);' />
                            @if (_userContext.UserId != _userContext.LoggedInAsByUserId)
                            {
                                <p class="text-light cms-user-name float-right" style="font-size:14px;padding-top:1px;padding-right:10px"> <span>Logged in as </span>@_userContext.Name <br /><span>by </span><span>@_userContext.LoggedInAsByUserName </span></p>

                            }
                            else
                            {
                                <p class="text-light cms-user-name float-right" style="padding-top:10px;padding-right:10px">@_userContext.Name</p>
                            }
                        </div>

                        <div class="col-6">
                            <span @*style="margin-left:18px"*@>
                                @if (_userContext.UserPortals.IndexOf(",") > 0)
                                {
                                    @(Html.Kendo().DropDownList().Name("drpPortal")
                        .DataTextField("Name").Value(viewBagPortalId)
                        .DataValueField("Id")
                        //.OptionLabel("Portal")
                        .Events(e => e.Change("OnPortalChange"))
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetPortalList", "User", new { @area = "Cms", userId = _userContext.UserId });
                            });
                        })

                        .HtmlAttributes(new { @class = "userlegal", style = "width:48%;" })
                    )
                                }
                            </span>
                            <span @*style="margin-left:18px"*@>
                                @(Html.Kendo().DropDownList().Name("LegalEntity")
          .DataTextField("Name").Value(Convert.ToString(_userContext.LegalEntityId))
                    .DataValueField("Id")
                     .OptionLabel("Legal Entity")
        .Events(e => e.Change("OnLegalChange"))
       .DataSource(source =>
       {
           source.Read(read =>
           {
               read.Action("GetLegalEntitiesList", "User", new { @area = "Cms",userId=_userContext.UserId });
           });
       })

          .HtmlAttributes(new { @class = "userlegal", style = "width:50%;" })
    )
                            </span>
                        </div>
                    </div>



                </div>

                <div class="col-1 p-1 pr-4 mt-2" style="margin-top: -2.2rem!important;padding-left: 2.5rem !important;">
                    <div style="width: 50px; cursor: pointer;" onclick="openWinNavigateUrl(); return false;">
                        <i class="far fa-bell" style="color:red;font-size:26px;" id="ImageButton1"></i>
                        <p id="notcount" runat="server" class="badge badge-light" style="padding-top:5px; background-color:orangered;color:#fff;margin-top:-10px;margin-left:-3px;position:absolute;">0</p>
                    </div>
                </div>
            </div>


        </div>
    </div>
    <section id="main-content" class="clear-padding col-sm-12 col-md-12 mx-auto" style="padding-bottom:30px;padding-top:@(bannerHeight)px;">
        @RenderSection("rb", required: false)

        @RenderBody()
         
    </section>
    <!--main content end-->
    @if (footerText.IsNotNullAndNotEmpty())
    {
        <div class="hide-in-popup div-footer text-center" style="padding-top:8px;padding-bottom:10px;">
            <div class="credits">
                <span>@Html.Raw(footerText)</span>
            </div>
        </div>
    }
</section>
<script src="~/Themes/DMS/js/theme.js" asp-append-version="true"></script>
<script>
    $(document).ready(function () {
        var wdth =@menuWidth+3;
        if (wdth > screen.width) {
            wdth = screen.width - 50;
        }
        if (document.getElementById("main-menu") !== null) {
            document.getElementById("main-menu").style.width = wdth + 'px';
        }
    });

</script>
