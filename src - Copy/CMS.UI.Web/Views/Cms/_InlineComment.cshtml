@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@model NtsNoteCommentViewModel

@{

    Layout = "/Views/Shared/_PopupLayout.cshtml";
    //Layout = null;
}

<style>
    .kgrdPDM {
        width: 100% !important;
    }
</style>
<script>

    function onViewClick(id)
    {
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("PreviewAttachment", "Cms", new { @area = "" })?ntsType=NTS_Service&Id=' + id +'&canEdit=false';
            win.OpenWindow({ Title: 'Preview Attachment', Width: 1000, Height: 700 });
    }



</script>


<div>


    <div class="row">

       
        <div class="col-md-12">
            @*@(Html.Kendo().Grid<NtsNoteCommentViewModel>().Name("kgrdNotification")
                        .Columns(col =>
                        {
                            //col.Bound(p => p.Id).Title("Action").ClientTemplate("<input type='button' class='btn btn-link' onclick='TakeAction(\"#= Id #\",\"#= ReferenceType #\",\"#= ReferenceTypeId #\",\"#= TemplateCode #\")' value='Click here for more details'/>").Width(250);

                            col.Bound(c => c.commentsDisplay).Title("Note").Width(180);
                            col.Bound(c => c.modifiedDate).Title("Modified Date").ClientTemplate("#= kendo.toString(kendo.parseDate(modifiedDate, 'yyyy-MM-dd'), 'dd MMM yyyy') #").Width(150);
                            col.Bound(c => c.author).Title("Author").Width(200);
                            col.Bound(c => c.pageNumberDisplay).Width(180);
                            col.Bound(c => c.FileName).Title("File Name").Width(150);
                        })
                        //.ToolBar(toolbar =>
                        //{
                        //    toolbar.Custom().Text(" Create").Name("btnAdd").IconClass("fa fas fa-plus").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnCreateCalendarHoliday();" });
                        //})
                        .Scrollable(x => x.Enabled(true))
                        .Sortable(srt => srt.Enabled(true))
                        .Selectable(select => select.Enabled(false))
                        .Filterable(f => f.Extra(false)
                        .Operators(o => o.ForString(s => s.Clear()
                        .Contains("Contains")
                        .IsEqualTo("Is equal to")
                        )))
                        .Resizable(resize => resize.Columns(true))
                        .Pageable(pageable => pageable
                        .Refresh(true)
                        .PageSizes(true)
                        .ButtonCount(5))
                        .AutoBind(true)
                        .DataSource(
                            dataSource => dataSource
                            .Ajax()
                            .PageSize(10)
                            .Read(read => read.Action("ReadNoteInlineCommentData", "Cms", new { NoteId = Model.NtsNoteId }))
                            .Model(model => model.Id(p => p.Id)))
                        )*@
            @*@(Html.Kendo().TreeList<NtsNoteCommentViewModel>()
        .Name("noteInlineComment")
        .Columns(columns =>
        {
            columns.Add().Field(e => e.commentsDisplay).Title("Note").Width(100);
            columns.Add().Field(e => e.author).Title("Author").Width(100);
            columns.Add().Field(e => e.modifiedDate).Title("Modified Date").Template("#= kendo.toString(kendo.parseDate(modifiedDate, 'yyyy-MM-dd'), 'dd MMM yyyy') #").Width(100);
            columns.Add().Field(e => e.subject).Title("Comment Type").Width(100);
            columns.Add().Field(e => e.pageNumberDisplay).Title("Page Number").Width(100);
            columns.Add().Field(e => e.FileName).Title("Reference File")
            .Template("#if(FileId!=null){#<a href='javascript: void(0);' style='font-size:14px;color: \\#007bff' onclick='onViewClick(\"#=FileId#\");'>#=FileName#</a> #}#")
            .Width(100);
        })
        .Filterable(false)
        .Scrollable(false)
        .Sortable()
        .AutoBind(true)
        .DataSource(dataSource => dataSource
        //.Read(read => read.Action("ReadNoteCommentData", "NoteComment", new { NoteId = Model.NoteId }))
        .Read(read => read.Action("ReadNoteInlineCommentData", "Cms", new { NoteId = Model.NtsNoteId }))
        //.ServerOperation(false)
        .Model(m =>
        {
            m.Id(f => f.annotName);
            m.ParentId(f => f.parentId);
            m.Expanded(true);
        })
        )                                              //.Scrollable(true)
        )*@
        </div>

    </div>
</div>
