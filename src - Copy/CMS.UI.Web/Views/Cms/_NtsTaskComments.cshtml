@using CMS.UI.ViewModel;
@using CMS.Common;

@{
    ViewData["Title"] = "Portal";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
@inject CMS.Common.IUserContext _userContext
@model NtsTaskCommentViewModel

<style>
    .avatar-drp-profile {
        border-radius: 50%;
        height: 45px;
        width: 45px;
    }

    .drp-user {
        width: 100%;
    }
    .k-editable-area {
        height: 107px;
        background-color: #fff;
    }
    img {
        border-radius: 5px;
    }
    .cms-manageportal-footer {
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }
    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }
    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }

    .pad-5 {
        padding-top: 10px;
    }

    .k-upload {
        width: 60%;
    }

    .k-in {
        width: 100%;
    }

    .k-treeview .k-item .k-group {
        margin-left: 63px;
    }
    
</style>


<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;" id="taskcmnt">
    @if (ViewBag.Mode != "Reply")
    {




        @if (Model.IsAddCommentEnabled)
        {
    <div>
        @*@(Html.Kendo().DropDownListFor(x => x.CommentToUserId)
        .OptionLabel("All")
        .Filter(FilterType.Contains)
        .DataTextField("Name")
        .DataValueField("Id")
        .Height(400)


        .HtmlAttributes(new{ @class="form-control"})
        .AutoBind(true)
        .DataSource(source =>
        {

            source.Read(read =>
            {
                read.Action("GetUsersIdNameList", "User", new { @area = "Cms" });
               // .Data("Filter");
            });

        })

        )*@
        <script type="text/x-kendo-tmpl" id="drp-person-template">
        <div class="row no-gutter pb-1 pt-1">
                      <div @*class="col-2"*@ style="width: 80px;">
                      #if(data.PhotoId!=null)
                          {#<img class="avatar-drp-profile" src="/Cms/document/getimagemongo?id=#:data.PhotoId#"  /> #}
                      else
                          {#<img class="avatar-drp-profile" style="background-color:gray;" src="/images/profile.jpg" />#}#
                     </div>

                        <div style="width:550px;">
                          <span>#:PersonFullName#</span>


                    #if (data.GradeName!=null) {#  <br/><span class="drp-user-text" title="Grade">#:GradeName#</span> # } #
    #if (data.Email!=null) {# <span style="float:right;" class="drp-user-text" title="Email">#:Email# <i class='fa fas fa-envelope' style='font-size:12px'></i></span> # } #


                    #if (data.JobName!=null) {# <br/> <span class="drp-user-text" title="Job Title">#:JobName#</span>  # } #
                    #if (data.PersonNo!=null){#<span style="float:right;" class="drp-user-text"  title="Person No">#:PersonNo# <i class='fa fas fa-user' style='font-size:12px'></i></span># } #

                    #if (data.DepartmentName!=null) {# <br/> <span class="drp-user-text" title="Organization">#:DepartmentName#</span># } #
     #if (data.SponsorshipNo!=null) {# <span style="float:right;" title="Iqamah No" class="drp-user-text">#:SponsorshipNo#</span> # } #


                   #if (data.PersonStatus!=null) {#<br/> <span class="drp-user-text" title="Person Status">#:PersonStatus#</span> # } #

                       </div>

                </div>
        </script>
        @*@(Html.Kendo().MultiSelect().Name("CommentToUserId")
                        .AutoClose(false)
                        .Placeholder("Select")
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetTaskSharedUsersIdNameList", "NtsTask", new { @area = "Cms", taskId = Model.NtsTaskId });
                            });

                        })
                        .DataTextField("Name")
                        .DataValueField("Id")
                        .AutoBind(true)
                        .ValuePrimitive(true)
                        .Height(300)

                        .HtmlAttributes(new { @class = "", @style = "width:60%" })
        )*@
        <select id="CommentToUserId" data-placeholder="Select" style="width:60%"></select>
        <script>
        $(document).ready(function () {
                    $("#CommentToUserId").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            autoBind: true,
            autoClose: false,
            height: 300,
            valuePrimitive: true,
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "@Url.Action("GetTaskSharedUsersIdNameList", "NtsTask", new { @area = "Cms", taskId = Model.NtsTaskId })",
                    }
                },
            }),
        });
        });
        </script>
        @*@(Html.Kendo().DropDownListFor(x=>x.CommentToUserIds)
                    .OptionLabel("---Select---")
                    .Filter(FilterType.Contains)
                    .DataTextField("PersonFullName")
                    .DataValueField("UserId")
                    .Height(400)
                    //.Events(e=>e.Change("Onchange"))
                    .TemplateId("drp-person-template")

                    .HtmlAttributes(new { @class = "form-control" })
                    .DataSource(source =>
                    {

                        source.Read(read =>
                        {
                            read.Action("GetUserList", "NtsService", new { @area = "Cms",id=Model.NtsTaskId,type=NtsTypeEnum.Task});
                        });

                    })
                     .Events(events => events.Filtering(
        @<text>
           function(e) {
               var filterValue = e.filter != undefined ? e.filter.value : "";
                    e.preventDefault();

                  this.dataSource.filter({
                    logic: "or",
                    filters: [
                      {
                        field: "PersonFullName",
                        operator: "contains",
                        value: filterValue
                      },
                      {
                        field: "Email",
                        operator: "contains",
                        value: filterValue
                      },
                     {
                        field: "JobName",
                        operator: "contains",
                        value: filterValue
                      },
                        {
                        field: "DepartmentName",
                        operator: "contains",
                        value: filterValue
                      },
                        {
                        field: "GradeName",
                        operator: "contains",
                        value: filterValue
                      },
                        {
                        field: "PersonNo",
                        operator: "contains",
                        value: filterValue
                      },
                        {
                        field: "SponsorshipNo",
                        operator: "contains",
                        value: filterValue
                      },
                         {
                        field: "PersonStatus",
                        operator: "contains",
                        value: filterValue
                      },

                    ]
                  });
            }
            </text>
            ))
                    )*@
        <div class="pt-2">
            <label class="col-form-label">
                Comment
                @*<span style="float:right;">
                    @(Html.Kendo().CheckBox().Name("enableCommentHtml").Label("Enable HTML").Checked(false))

                </span>*@
            </label>
            <div>
                @*@(Html.Kendo().Editor().Name("Comment")
                                .HtmlAttributes(new {@class="add-comment-editor", aria_label = "editor" })
                                .StyleSheets(css =>css.Add(Url.Content("~/css/editorStyles.css"))
                                )
                                   .Tools(tools => tools
                    .Clear()
                    .Formatting()
                    .Bold().Italic().Underline().Strikethrough()
                    .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                    .InsertUnorderedList().InsertOrderedList()
                    //.Outdent().Indent()
                    .CreateLink().Unlink()
                    //.TableEditing()
                    .ViewHtml()
                    .FontName()
                    .FontSize()
                    .ForeColor().BackColor()

                )
                        )*@
                <div class="page-wrapper box-content">
                    <textarea class="content" id="Comment" style="height:300px;"></textarea>
                </div>
            </div>
            @*@Html.TextAreaFor(x => x.Comment, new { row = "5", @class = "form-control" })*@
        </div>

        <div style="padding:15px">
            <span style="margin-right:6px">Add Attachment </span>
            <span class="attachment-icon far fa-paperclip"></span>
        </div>

        <div style="padding:15px">
            <div class="SYN-upload-row">
                <div class="row" id="synergy-uploader">
                    @*@(Html.Kendo().Upload().Multiple(false)
            .Name("files")
            .Async(a => a
            .Save("SaveFile", "Document", new { @area = "cms" })
            .AutoUpload(true)
            )
            .Events(e => e.Success("onFileUploadSuccess1")
            )

                .HtmlAttributes(new { @class = "", @style = "width:60%" })
        )*@
                    @*<div id="comment-uploader">
            <h3>
                Drag and Drop Files Here<h3 />
                <input type="file" title="Click to add Files">
        </div>*@

                    @*<div class="col">
            <div id="comment-uploader" class="dm-uploader">
                <h6 class="text-muted">Drag &amp; drop files here</h6>

                <div class="btn btn-primary">
                    Open the file Browser
                    <input type="file" title='Click to add Files' />
                </div>
                <br />
            </div>


        </div>
        <div class="col">
            <div class="card h-100">
                <div class="card-header">
                    File List
                </div>
                <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                    <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                </ul>
            </div>
        </div>

        <div class="col">
            <button type="button" class="btn btn-light" title="Remove" onclick="Delete();"><i class='fa fas fa-trash'></i></button>
        </div>*@

                    @{
                        await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.AttachmentId), Value = Model.AttachmentId });
                    }


                </div>

            </div>



        </div>


        @*@(Html.Kendo().Upload().Multiple(false)
            .Name("files")
            .Async(a => a
            .Save("SaveTaskAttachment", "Cms", new { @Area="", @referenceTypeId=Model.ReferenceTypeId, @referenceTypeCode=Model.ReferenceTypeCode})
            .AutoUpload(true)
            )
                .Events(e => e.Success("onFileUploadSuccess")
                )
                //.Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                ////.MaxFileSize(2097152)
                //)
                .HtmlAttributes(new { @class = "hr-large" })
        )*@
        <div class="colmd-6" style="float:right;padding-top:5px;">
            @*@Html.Kendo().Button().Name("btnComment").Events(e => e.Click("OnPost")).HtmlAttributes(new { @title = "Post Comment", @class = "k-primary" }).Content("Post Comment")*@
            <button type="button" id="btnComment" class="btn btn-primary" onclick="OnPost()" title="Post Comment">Post Comment</button>
        </div>
    </div>
            <script type="text/x-kendo-tmpl" id="drp-user-template">
                      <div class="row no-gutter pb-1 pt-1">
                          <div class="col-2">
                          #if(data.PhotoId!=null)
                              {#<img class="avatar-myProfile" src="/user/profilephoto?id=#:data.PhotoId#"  /> #}
                          else
                              {#<img class="avatar-myProfile" style="background-color:gray;" src="/images/profile.jpg" />#}#
                         </div>
                         <div class="col-10">
                            <div class="col-12">
                              <span style="padding:5px;">#:Name#</span></div>
                            <div class="col-12">
                #if (data.Email!=null)
                                  {#<span style="padding:5px;font-size:12px;">#:Email#</span>  # } #
                            </div>
                         </div>
                    </div>
            </script>
        }

<div style="margin-top: 40px;">
    <h6>Comments list</h6>
    @*@(Html.Kendo().TreeList<NtsTaskCommentViewModel>()
                                             .Name("kgrdComment")
                                             .Columns(columns =>
                                             {
                                                 columns.Add().Filterable(false).TemplateId("templateCM").Title(" ").HtmlAttributes(new { @class = "selectFolder" });

                                             })
                                             .Filterable(false)
                                             .Scrollable(true)
                                             .Sortable()

        .DataSource(dataSource => dataSource
         .Read(read => read.Action("ReadTaskCommentData", "cms", new { taskId = Model.NtsTaskId }))
        .ServerOperation(false)
        .Model(m =>
        {
            m.Id(f => f.Id);
            m.ParentId(f => f.ParentCommentId);
            m.Expanded(true);
        })
        )                                              //.Scrollable(true)
        )*@
    @*@(Html.Kendo().ListView<NtsTaskCommentViewModel>()
        .Name("kgrdComment")
        .TagName("div")
        .ClientTemplateId("templateCM")
        .DataSource(dataSource => dataSource
                .Ajax()
                .Read(read => read.Action("ReadTaskCommentData", "Cms",new { @Area = "", @taskId = Model.NtsTaskId }))
                .PageSize(21)
            )
        )*@

    @*@(Html.Kendo().TreeView()
            .Name("kgrdComment").HtmlAttributes( new {@class="treeview"})
            // .Events(e=>e.Expand("onExpand").Select("OnSelect"))
            .DataTextField("Name")
            .TemplateId("templateCM")
            .DataSource(dataSource => dataSource
                .Read(read => read
                    .Action("ReadTaskCommentData", "Cms", new { @Area = "", @taskId = Model.NtsTaskId })
                )
            )
        )*@

    <div id="commentList"></div>


    <script type="text/x-kendo-tmpl" id="templateCM">

                        <div style="margin-top: 18px;width:100%">
                            <div class="">
                                <div style="padding-left: 10px;">
                                    <div class="iconwithtextan">
                                        <div class="row" style="width:100%;margin-bottom: 10px;margin:0px">
                                            <div class="col-1">

                                            #if(item.PhotoId!=null){#
                                    <img width="60" height="60"  src="/cms/document/GetImageMongo?id=#:item.PhotoId#" /> #}
                                    else{#
                                    <img width="60" height="60" style="background-color:gray;" src="/images/profile.jpg" />#}#</div>
                                             <div class="row col-10">
                        <div class="col-12" style="padding-left:0px;"><span style="font-size: 12px; padding:5px;">From : #:item.CommentedByUserName#</span> </div>
        <div class="col-12" style="padding-left:0px;"> <span  style="padding:5px;font-size:12px;">To : #if(item.CommentedToUserName!=null){# #:item.CommentedToUserName# #}# </span> </div>
                        <div class="col-12" style="padding-left:0px;"> <span  style="padding:5px;font-size:12px;">Commented Date: #:kendo.toString(kendo.parseDate(item.CommentedDate), 'yyyy-MM-dd-hh:mm:ss')#</span> </div>



                        <div class="col-12" style="padding:5px;font-size:16px;"><p>
            @*#:Comment#*@
              #= htmlDecode(item.Comment) #
            </p></div>
            #if(item.AttachmentId!=null){#
            <div class="col-12" style="padding:5px;font-size:12px;"><p>#:item.FileName#   <span onclick='ViewAttachment("#:item.AttachmentId#")' class="attach-icon" title="View">
                                         <i class="fas fa-eye fa-lg"></i></span>
                                         <span onclick='onDownload("#:item.AttachmentId #")' class="attach-icon" title="Download">
                                         <i class="fas fa-download fa-lg"></i></span></p>
            </div>

            #}#





                                                    </div>
                           <div class="col-1" style="margin-top: 4px;">
         #if('@_userContext.UserId'!=item.CommentedByUserId){#<a id='reply' class='reply-icon fa fa-reply pull-right' style="font-size:20px" title="Click to Reply" href='javascript:onReplyClick("#:item.id#");'></a><br/>#}#
             #if('@_userContext.UserId'==item.CommentedByUserId){# <a id='delete' class='k-icon k-i-delete pull-right' style="font-size:20px" title="Click to delete" href='javascript:onDeleteClick("#:item.id#");'></a>#}#

                                            </div>
                                            </div>



                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr/>

    </script>

    <!--<script type="text/x-kendo-tmpl" id="templateCM">
                        <div style="
                margin-top: 18px;
            ">
                            <div class="">
                                <div style="padding-left: 10px;">
                                    <div class="iconwithtextan">
                                        <div class="row" style="width:100%;margin-bottom: 10px;margin:0px">
                                            <div class="col-2">

                                            #if(PhotoId!=null){#
                                    <img width="40" height="40"  src="/cms/document/GetImageMongo?id=#:PhotoId#" /> #}
                                    else{#
                                    <img width="40" height="40" style="background-color:gray;" src="/images/profile.jpg" />#}#</div>
                                             <div class="row col-9">
                        <div class="col-12" style="padding-left:0px;"><h5 style="font-size: 18px; padding-left:5px;color:black;margin-bottom:0px">From : #:CommentedByUserName#</h5> </div>
        <div class="col-12" style="padding-left:0px;"> <span  style="padding:5px;font-size:12px;">To : #if(CommentedToUserName!=null){# #:CommentedToUserName# #}#</span> </div>
        <div class="col-12" style="padding-left:0px;"> <span  style="padding:5px;font-size:12px;">Commented Date : #:kendo.toString(kendo.parseDate(CommentedDate), 'yyyy-MM-dd-hh:mm:ss')#</span> </div>



                        <div class="col-12" style="padding:5px;font-size:12px;"><p>-->
    @*#:Comment#*@
    <!--#= htmlDecode(Comment) #
            </p></div>



                                                    </div>
                           <div class="col-1" style="margin-top: 4px;">
                                                <a id='delete' class='k-icon k-i-delete pull-right' title="Click to delete" href='javascript:onDeleteClick("#:Id#");'></a>
                                            </div>
                                            </div>



                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <hr/>

    </script>-->
</div>
    }

    else
    {
<div>

    @*@(Html.Kendo().MultiSelect().Name("CommentToUserId")
                                                .AutoClose(false)
                                                .Placeholder("Comment To").Value(Model.CommentedFromUserId)
                                                .DataSource(source =>
                                                {
                                                    source.Read(read =>
                                                    {
                                                        read.Action("GetTaskSharedUsersIdNameList", "NtsTask", new { @area = "Cms", taskId = Model.NtsTaskId });
                                                    });

                                                })
                                                .DataTextField("Name")
                                                .DataValueField("Id")
                                                .AutoBind(true)
                                                .ValuePrimitive(true)
                                                .Height(300)

                                                .HtmlAttributes(new { @class = "", @style = "width:60%" })
                                )*@
    <select id="CommentToUserId" data-placeholder="Comment To" style="width:60%"></select>
    <script>
        $(document).ready(function () {
                    $("#CommentToUserId").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            autoBind: true,
            autoClose: false,
            height: 300,
            value: '@Model.CommentedFromUserId',
            valuePrimitive: true,
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "@Url.Action("GetTaskSharedUsersIdNameList", "NtsTask", new { @area = "Cms", taskId = Model.NtsTaskId })",
                    }
                },
            }),
        });
        });
    </script>

    <div class="pt-2">
        <label class="col-form-label">
            Message
        </label>
        <div>

            @*@(Html.Kendo().EditorFor(x=>x.ParentMessage)
                        .HtmlAttributes(new {@class="add-comment-editor1", @style= "disabled:disabled", aria_label = "editor" })
                        .StyleSheets(css =>css.Add(Url.Content("~/css/editorStyles.css"))
                        )

                )*@
            <div class="page-wrapper box-content">

                <textarea class="content" asp-for="ParentMessage" id="ParentMessage"></textarea>

            </div>
        </div>
    </div>

    <div class="pt-2">
        <label class="col-form-label">
            Comment
            <span style="float:right;">
                @*@(Html.Kendo().CheckBox().Name("enableCommentHtml").Label("Enable HTML").Checked(false))*@
                <input type="checkbox" id="enableCommentHtml" />
                <label>Enable HTML</label>
            </span>
        </label>
        <div>
            @*@(Html.Kendo().Editor().Name("Comment")
                                .HtmlAttributes(new {@class="add-comment-editor", aria_label = "editor" })
                                .StyleSheets(css =>css.Add(Url.Content("~/css/editorStyles.css"))
                                )
                                   .Tools(tools => tools
                    .Clear()
                    .Formatting()
                    .Bold().Italic().Underline().Strikethrough()
                    .JustifyLeft().JustifyCenter().JustifyRight().JustifyFull()
                    .InsertUnorderedList().InsertOrderedList()
                    //.Outdent().Indent()
                    .CreateLink().Unlink()
                    //.TableEditing()
                    .ViewHtml()
                    .FontName()
                    .FontSize()
                    .ForeColor().BackColor()

                )
                        )*@

            <div class="page-wrapper box-content">
                <textarea class="content" id="Comment"></textarea>
            </div>
        </div>
        @*@Html.TextAreaFor(x => x.Comment, new { row = "5", @class = "form-control" })*@
    </div>

    <div style="padding:15px">
        <span style="margin-right:6px">Add Attachment </span>
        <span class="attachment-icon far fa-paperclip"></span>
    </div>

    <div style="padding:15px">
        <div class="SYN-upload-row">
            <div class="row">
                @*@(Html.Kendo().Upload().Multiple(false)
                .Name("files")
                .Async(a => a
                .Save("SaveFile", "Document", new { @area = "cms" })
                .AutoUpload(true)
                )
                .Events(e => e.Success("onFileUploadSuccess1")
                )

                    .HtmlAttributes(new { @class = "", @style = "width:60%" })
            )
        <button type="button" class="btn btn-light" title="Remove" onclick="Delete();"><i class='fa fas fa-trash'></i></button>*@

                @*<div class="col">
            <div id="comment-uploader" class="dm-uploader">
                <h6 class=" text-muted">Drag &amp; drop files here</h6>

                <div class="btn btn-primary btn-block ">
                    <span>Open the file Browser</span>
                    <input type="file" title='Click to add Files' />
                </div>
            </div>

        </div>
        <div class="col">
            <div class="card h-100">
                <div class="card-header">
                    File List
                </div>
                <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                    <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                </ul>
            </div>
        </div>

        <div class="col">
            <button type="button" class="btn btn-light" title="Remove" onclick="Delete();"><i class='fa fas fa-trash'></i></button>
        </div>*@

                @{
                    await Html.RenderPartialAsync("~/Views/Shared/_FileUpload.cshtml", new FileUploadViewModel { Property = nameof(Model.AttachmentId), Value = Model.AttachmentId });
                }
            </div>


        </div>

    </div>



    <div class="colmd-6" style="float:right;padding-top:5px;">
        @*@Html.Kendo().Button().Name("btnComment").Events(e => e.Click("OnPost")).HtmlAttributes(new { @title = "Post Comment", @class = "k-primary" }).Content("Post Comment")*@
        <button type="button" id="btnComment" class="btn btn-primary" onclick="OnPost()" title="Post Comment">Post Comment</button>
    </div>
</div>
      
    }

    @Html.HiddenFor(x => x.NtsTaskId)
    @Html.HiddenFor(x => x.ParentCommentId)
    @Html.HiddenFor(x => x.AttachmentId)


</div>

<script type="text/javascript">

     function onFileUploadSuccess1(e) {

        if (e.response.success) {
            $("#AttachmentId").val(e.response.fileId);
            // set file id to hdden fileid proprty

        }
        else {

        }
        return true;
    }

    function onDownload(id) {

        url = '/cms/Document/GetFileMongo?fileId=' + id;
        window.open(url, '_blank');
        return false;
    }

    function Delete() {
        $("#AttachmentId").val('');
        $("#comment-uploader").dmUploader("reset");
        const elements = document.getElementsByClassName("media");
        while (elements.length > 0) {
            elements[0].parentNode.removeChild(elements[0]);
        }
        document.getElementById("nofiles").style.display = "";
        //var upload = $("#files").data("kendoUpload");

        //upload.clearFile(function (file) { return true; });
    }


     function refresh() {
        //$("#kgrdComment").data("kendoTreeView").dataSource.read();
         readCommentData();
        FillCommentCount();
    }

     function onReplyClick(id)
    {
         var win = GetMainWindow();
         win.iframeOpenUrl = '@Url.Action("ReplyTaskComments", "Cms", new { @area = "" })?parentId=' + id;
        win.OpenWindow({ Title: 'Note Comments', Width: 1200, Height: 600 });
        return false;
    }

    function OnPost()
    {
        if ($("#Comment").val()!="")
        {
            ShowLoader($('#taskcmnt'));
             $.ajax({
                type: "POST",
                url: "/cms/PostTaskComment",
                 data: {
                     NtsTaskId: "@Model.NtsTaskId",
                     Comment: $("#Comment").val(),
                     CommentToUserIds: $("#CommentToUserId").data("kendoMultiSelect").value(),
                     AttachmentId: $("#AttachmentId").val(),
                     ParentCommentId: $("#ParentCommentId").val()
                   // FileId: $("#FileId").val(),
                },
                success: function (data)
                {
                    if (data.success) {
                          if ('@ViewBag.Mode' == "Reply") {
                            var win = GetMainWindow();
                            win.CloseWindow({ MethodName:'refresh'});
                        }
                       else {

                              HideLoader($('#taskcmnt'));
                       // $("#Comment").val('');
                        //var editor = $("#Comment").data("kendoEditor");
                        //editor.value("");
                              $(".richText-editor").text('');
                        $("#CommentToUserId").data("kendoMultiSelect").value('');
                       // $("#kgrdComment").data("kendoTreeView").dataSource.read();
                              readCommentData();
                        Delete();
                        //$("#kgrdComment").data("kendoTreeList").dataSource.read();
                        FillCommentCount();
                        //$(".k-upload-files").remove();
                        //$(".k-upload-status").remove();
                        //$(".k-upload.k-header").addClass("k-upload-empty");
                        //$(".k-upload-button").removeClass("k-state-focused");
                        //$("#FileId").val('');
                          }
                    }
                    else
                    {
                          ShowErrors(data.errors);
                    }
                },
                error: function (err)
                {
                     $(".hr-v-summary").removeClass("validation-summary-valid");
                            $(".hr-v-summary").addClass("validation-summary-errors");
                           // var msg = ExtractError(err);
                            $(".hr-v-summary ul").html(msg);
                }

});
        }
        else {
            kendo.alert("Please enter comment");
        }
    }
    //$("#enableCommentHtml").click(function () {
    //    debugger
    //    if (this.checked) {
    //        $(".k-editor-toolbar-wrap").show();
    //    }
    //    else {
    //        $(".k-editor-toolbar-wrap").hide();
    //    }
    //});

    function chkChange() {
        if ($('#enableCommentHtml').is(":checked")) {
            $(".richText-toolbar").show();
        }
        else {
            $(".richText-toolbar").hide();
        }
    }

    $(document).ready(function () {



      $('.content').richText();

        //$(".k-editor-toolbar-wrap").hide();
        $(".richText-toolbar").hide();
          if ('@ViewBag.Mode' == "Reply") {
              var editor = $('#ParentMessage').richText();
           // editor.body.contentEditable = false;
        }

        readCommentData();

        //$("#comment-uploader").dmUploader({
        //   // multiple: false,
        //    url: '/Cms/Document/SaveFile',
        //    onInit: function () {
        //        console.log('Callback: Plugin initialized');
        //    },
        //    onUploadSuccess: function (id, data) {
        //        $("#AttachmentId").val(data.fileId);
        //    }
        //});

        uploadConfig("#comment-uploader", '/Cms/Document/SaveFile', "#AttachmentId", false)

    });


      function readCommentData() {
        document.getElementById('commentList').innerHTML = "";
          ShowLoader($('#taskcmnt'));
          $.ajax({
              url: '/cms/ReadTaskCommentDataList?taskId=@Model.NtsTaskId',
            dataType: "json",
            success: function (result) {
                debugger;

                var root = document.getElementById('commentList');
                var parent = result.filter(x => x.id != null);
                for (var i = 0; i <= parent.length - 1; i++) {
                    var data = parent[i];
                   createTreeList(data, root, result, null);
                }

                var toggler = document.getElementsByClassName("caret");
                var i;

                for (i = 0; i < toggler.length; i++) {
                    toggler[i].addEventListener("click", function () {
                        this.parentElement.querySelector(".nested").classList.toggle("active");
                        this.classList.toggle("caret-down");
                    });
                }
                HideLoader($('#taskcmnt'));

            }
        });
    }

    function createTreeList(data, root, result, ul) {
        debugger;
        var child = [];
        if (data.id != null) {
            child = searchChild(data.id, result, root);
        } else {
            chid = [];
        }
        if (ul == null) {
             ul = document.createElement('ul');
        }
       // li.classList.add("nested");
        var li = document.createElement('li');
        if (child.length > 0) {
            li.classList.add("caret");
        }
                    var p1 = "";
                    var p2 = "";
                    var p3 = "";
                    var p4 = "";
                    var p5 = "";

                    if (data.PhotoId != null) {
                        p1 = '<img width="60" height="60"  onerror="OnPhotoError(this);" src="/cms/document/GetImageMongo?id=' + data.PhotoId + '" />';
                    } else {
                        p1 =  '<img width="60" height="60" style="background-color:gray;" src="/images/profile.jpg" />';
                    }
                    if (data.CommentedToUserName != null) {
                        p2 = data.CommentedToUserName;
                    }

                    if (data.AttachmentId != null) {

                        p3 = " <div class='col-12' style='padding: 5px; font-size: 12px; '><p>"+ data.FileName +
                            "<span onclick='ViewAttachment(\"" + data.AttachmentId + "\")' class= 'attach - icon' title='View' >" +
                            "<i class='fas fa-eye fa-lg' ></i ></span >" +
                            "<span onclick='onDownload(\"" + data.AttachmentId + "\")' class='attach-icon' title='Download'>" +
                            " <i class='fas fa-download fa-lg' ></i ></span ></p > " +
                            " </div >";
                    }

                    if ('@_userContext.UserId' != data.CommentedByUserId) {
        p4 = "<a id = 'reply' class='reply-icon fa fa-reply pull-right' style = 'font-size:20px' title = 'Click to Reply' href ='javascript:onReplyClick(\"" + data.id + "\");' ></a > <br />";
                    }

                    if ('@_userContext.UserId' == data.CommentedByUserId) {
                        p5 = "<a id='delete' class='k-icon k-i-delete pull-right' style='font-size:20px' title='Click to delete' href = 'javascript:onDeleteClick(\"" + data.id + "\");' ></a >";
        }

        if (data.Comment == null) {
            data.Comment = "";
        }

                    var date = kendo.toString(kendo.parseDate(data.CommentedDate), 'yyyy-MM-dd-hh:mm:ss')
                    li.innerHTML = "<div style='margin-top: 18px; width: 100 %'>" +
                        " <div class=''>"+
                        " <div style='padding-left: 10px;' >" +
                        " <div class='iconwithtextan'>" +
                        " <div class='row' style='width:100%;margin-bottom: 10px;margin:0px'>" +
                        " <div class='col-1'>" +
                        p1 + "</div>" +
                        "<div class='row col - 10'>"+
                        "<div class='col-12' style='padding-left:0px;' > <span style='font-size: 12px; padding:5px;'>From : "+ data.CommentedByUserName +"</span> </div >"+
                        "<div class='col-12' style = 'padding-left:0px;' > <span style='padding:5px;font-size:12px;'>To :" +
                        p2 +
                        "   </span > </div >"+
                        "   <div class='col-12' style='padding-left:0px;'> <span  style='padding:5px;font-size:12px;'>" +
                        "Commented Date: " + date + "</span> </div>" +
                        "   <div class='col-12' style='padding:5px;font-size:16px;'><p> " +
                        htmlDecode(data.Comment) +
                        "   </p></div>" +
                        p3 +
                        " </div >" +
                        " <div class='col-1' style='margin-top: 4px; '>" +
                        p4 +
                        p5 +
                        "  </div></div ></div ></div ></div ></div ></div ><hr />";
                    ul.appendChild(li);
        root.appendChild(ul);

        if (child != [])
        {
            var ul = document.createElement('ul');
            ul.classList.add("nested");
            for (var x = 0; x <= child.length - 1; x++)
            {
                createTreeList(child[x], li, result, ul);
            }
        }
       // return root;
    }

    function searchChild(nameKey, myArray) {
        var newArray  = [];
        for (var i = 0; i < myArray.length; i++) {
            if (myArray[i].ParentCommentId === nameKey) {
                newArray.push( myArray[i]);
            }
        }
        return newArray;
    }

    function htmlDecode(value) {
        return value.replace(/&lt;/g, "<").replace(/&gt;/g, ">");
    }
    //function setLocalFileIds(fileId) {
    //    if (fileId != null) {
    //        var fileIds = window.parent.$("#AttachmentIds").val() == null || window.parent.$("#AttachmentIds").val() == 'undefined' ? '' : window.parent.$("#AttachmentIds").val();

    //        fileIds = fileId + ',' + fileIds;
    //        window.parent.$("#AttachmentIds").val(fileIds);
    //    }

    //}
    function onFileUploadSuccess(e)
    {
        if (e.response.success) {
            //setLocalFileIds(e.response.fileId);
            $("#AttachmentlistView").data("kendoListView").dataSource.read();
            FillAttachmentCount();
        }
        else {
            var msg = ExtractError(e.response.errors, true);
        }
        return true;

    }

     var onAjaxSuccess = function (res) {

        if (res.success) {

            ShowNotification("Saved Successfully", "success");
            @*var TemplateId = res.templateId;
            LoadPartailView('@Url.Action("ManageNote", "Template", new { @area = "Cms" })?templateId='+ TemplateId, $('#detailPage'));*@
        }
        else {
            showError(res.error);
        }
    };
    var showError = function (error) {

        //#validation-summary-manageform
        $("#validation-summary").html(error);
        $("#validation-summary").css("display", "block")
    }
    function onDownload(id) {
        url = '/cms/Document/GetFileMongo?fileId=' + id;
        window.open(url, '_blank');
        return false;
    }

      function ViewAttachment(id)
    {

           var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("ViewAttachment", "Cms", new { @area=""})?fileId=' + id;
        win.OpenWindow({ Title: 'View Attachment', Width: 800, Height: 950 });
        return false;
    }
    function onDeleteClick(fileId) {
        if (confirm('Are you sure you want to delete the selected comment?')) {
            $.ajax({
                type: "POST",
                url: '/cms/DeleteTaskComment',
                data: { id: fileId },
                success: function (data) {
                    //$("#kgrdComment").data("kendoTreeView").dataSource.read();
                    readCommentData();
                    FillCommentCount();
                },
                dataType: "json",
            });
        }

        return false;
    }
    function FillCommentCount() {
        var win = GetMainWindow().GetParentWindow();
        win.FillCommentCount();
    }
</script>
