@inject IStringLocalizer<CMS.UI.Web.Areas.Pay.Controllers.PayrollTransactionController> Resource
@using Kendo.Mvc.UI;
@using CMS.UI.ViewModel;
@using CMS.Common;

@model PayrollTransactionViewModel
@{
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}


<div>
    @*<div class="row no-gutter hr-pad-10">*@
    <form asp-controller="PayrollTransaction" asp-action="ManagePayrollTransaction" method="post" class="form-horizontal" id="myForm" data-ajax-begin="onAjaxBegin"
          data-ajax-complete="onAjaxComplete"
          data-ajax-failure="onAjaxFailed" data-ajax-success="onAjaxSuccess"
          data-ajax="true" data-ajax-method="POST">

        <div class="text-danger" asp-validation-summary="All"></div>

        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                <span class="required">*</span>
                @Resource["PersonName"]
            </div>
            <div class="col-lg-9">
                @*@(Html.Kendo().DropDownListFor(x => x.PersonId)
                                                                        .OptionLabel("--Select--")
                                                                        .DataSource(source =>
                                                                        {
                                                                            source.Read(read =>
                                                                            {
                                                                                read.Action("GetActivePersonList", "Person", new { area = "Cms" });
                                                                            });
                                                                        })
                                                                        .DataTextField("Name")
                                                                        .DataValueField("Id")
                                                                        .Filter(FilterType.Contains)

                                                                .HtmlAttributes(new { @class = "hr-xx-large" })
                )*@

                <input asp-for="PersonId" id="PersonId" class="hr-xx-large" />

            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                <span class="required">*</span>
                @Resource["ElementName"]
            </div>
            <div class="col-lg-9">
                @*@(Html.Kendo().DropDownListFor(x => x.ElementId)
                .OptionLabel("--Select--")
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetTableData", "Cms", new { area= "", tableName="cms.N_PayrollHR_PayrollElement"});
                    });
                })
                .DataTextField("ElementName")
                .DataValueField("Id")
                .Filter(FilterType.Contains)
                .HtmlAttributes(new { @class = "hr-xxx-large" }))*@

                <input asp-for="ElementId" id="ElementId" class="hr-xxx-large" />
            </div>
        </div>

        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                <span class="required">*</span>
                @Resource["EffectiveDate"]

            </div>
            <div class="col-lg-9">
                @*@Html.Kendo().DatePickerFor(m => m.EffectiveDate).HtmlAttributes(new { @class = "form-control hr-xx-large" })*@
                <input asp-for="EffectiveDate" type="date" id="EffectiveDate" class="form-control hr-xx-large" />
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                <span class="required">*</span>
                @Resource["EarningAmount"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.EarningAmount).HtmlAttributes(new { @class = "form-control hr-xx-large" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                <span class="required">*</span>
                @Resource["DeductionAmount"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.DeductionAmount).HtmlAttributes(new { @class = "form-control hr-xx-large" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                @Resource["OpeningBalance"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.OpeningBalance).HtmlAttributes(new { @class = "form-control hr-xx-large" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                @Resource["ClosingBalance"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.ClosingBalance).HtmlAttributes(new { @class = "form-control hr-xx-large" })
            </div>
        </div>
        <hr />
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                <span class="required">*</span>
                @Resource["EarningQuantity"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.EarningQuantity).HtmlAttributes(new { @class = "form-control hr-xx-large" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                <span class="required">*</span>
                @Resource["DeductionQuantity"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.DeductionQuantity).HtmlAttributes(new { @class = "form-control hr-xxx-large" })
            </div>
        </div>
        @*<div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                @Resource["OpeningQuantity"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.OpeningQuantity).HtmlAttributes(new { @class = "form-control hr-xxx-large" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                @Resource["ClosingQuantity"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.ClosingQuantity).HtmlAttributes(new { @class = "form-control hr-xx-large" })
            </div>
        </div>*@

        @*<div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                @Resource["Quantity"]

            </div>
            <div class="col-lg-9">
                @Html.Kendo().NumericTextBoxFor(m => m.Quantity).HtmlAttributes(new { @class = "form-control hr-xxx-large" })
            </div>
        </div>*@
        <hr />

        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                @SharedResource["Description"]

            </div>
            <div class="col-lg-9">
                @Html.TextAreaFor(m => m.Description, new { @class = "k-textbox hr-xx-large", rows = "3" })
            </div>
        </div>
        <div class="form-group col-xs-12 col-sm-12">
            <div class="col-lg-3 label-div">
                @Resource["ProcessStatus"]

            </div>
            <div class="col-lg-9">

                @*@(Html.Kendo().DropDownListFor(x=>x.ProcessStatusId)
                .DataSource(source =>
                {
                    source.Read(read =>
                    {
                        read.Action("GetLOVIdNameList", "LOV", new {@area="cms", lovType = "PAYROLL_PROCESS_STATUS" });
                    });
                })
                .DataTextField("Name")
                .DataValueField("Id")
                .HtmlAttributes(new { @class = "form-control hr-xx-large" })
                )*@
                <input asp-for="ProcessStatusId" id="ProcessStatusId" class="form-control hr-xx-large" />

            </div>
        </div>

        <hr />
        <div class="row no-gutter">
            <div class="form-group col-xs-12 col-sm-6">
                <div class="col-lg-3 label-div">
                    &nbsp;
                </div>
                <div class="col-lg-9">
                    <input type="submit" class="btn btn-primary" value="@SharedResource["Save"]" />
                </div>
            </div>

        </div>
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.Amount)
        @Html.HiddenFor(x => x.Quantity)
        @Html.HiddenFor(x => x.Operation)
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.AttachmentId)
        @Html.HiddenFor(x => x.PostedSource)
        @Html.HiddenFor(x => x.NtsNoteId)

    </form>
    @*</div>*@
</div>


<script type="text/javascript">

    $(document).ready(function () {
        $("#EffectiveDate").kendoDatePicker({ value: "@Model.EffectiveDate"});

        $("#PersonId").kendoDropDownList({
            optionLabel: "--Select--",
            dataTextField: "Name",
            dataValueField: "Id",
            value: "@Model.PersonId",
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/Person/GetActivePersonList",
                    }
                }
            }
        });

        $("#ElementId").kendoDropDownList({
            optionLabel: "--Select--",
            dataTextField: "Name",
            dataValueField: "Id",
            value: "@Model.ElementId",
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/Pay/PayrollTransaction/GetPayrollElementsList",
                    }
                }
            }
        });

        $("#ProcessStatusId").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            value: "@Model.ProcessStatusId",
            filter: "contains",
            autoBind: true,
            dataSource: {
                transport: {
                    read: {
                        url: "/Cms/LOV/GetLOVIdNameList?lovType=PAYROLL_PROCESS_STATUS",
                    }
                }
            }
        });
    });

    function Close() {
        var win = GetMainWindow();
        win.CloseWindow({ MethodName:"Refresh"});
        return false;
    }


    function onAjaxSuccess(res) {

       if (res.success) {
            if ('@Model.DataAction'=='@DataActionEnum.Create')
            {
                window.parent.ShowNotification("Saved Successfully", "success");
            }
            if ('@Model.DataAction'=='@DataActionEnum.Edit')
            {
                window.parent.ShowNotification("Updated Successfully", "success");
            }

            Close();
           //window.parent.$("#kgrdpayrollTransaction").data("kendoGrid").dataSource.read();

        }
        else {
            showError(res.error);
        }
    }

    function OnSuccess(response) {
        if (response.success) {
        }
        else {

            ShowErrors(response.errors);
        }
    }
    function OnCancel(e) {
        window.parent.Close(false);
        return true;
    }

    function ShowErrors(err) {
        $(".hr-v-summary").removeClass("validation-summary-valid");
        $(".hr-v-summary").addClass("validation-summary-errors");
        var msg = ExtractError(err);
        $(".hr-v-summary ul").html(msg);
    }
    function onFileUploadSuccess(e) {
        if (e.response.success) {
            $("#AttachmentId").val(e.response.fileId);
        }
        else {
            var msg = ExtractError(e.response.errors, true);
            alert(msg);
        }
        return true;
    }
</script>
