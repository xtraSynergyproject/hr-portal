@inject IStringLocalizer<CMS.UI.Web.Areas.Pms.Controllers.PerformanceDocumentController> Resource
@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;

@{
    ViewData["Title"] = "Manage Performance Document Stage";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}

@model PerformanceDocumentViewModel

<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
</style>
<style>
    #users-list .k-item {
        width: 100%;
        background-color: #fff;
        padding-top: 3px;
        padding-bottom: 3px;
        border-bottom: 1px solid #f2f2f2;
        border-collapse: collapse;
    }

        #users-list .k-item:hover {
            background-color: rgb(182,189,202);
        }

    #users-list .k-state-selected, #SwitchToUserId-list .k-state-selected:hover {
        background-color: #1984c8;
        border-color: #1984c8;
    }
</style>
<script type="text/javascript">

    $(document).ready(function () {
            $("#users").kendoMultiSelect({
                dataTextField: "PersonFullName",
                dataValueField: "UserId",
                filter: "contains",
                autoBind: true,
                autoClose: false,
                itemTemplate: kendo.template($("#user1-template1").html()),
                dataSource: {
                    transport: {
                        read: {
                            url: "@Url.Action("ReadUsers", "PerformanceDocument", new { area = "PMS" })",
                        }
                    }
                },
                filtering: function(e) {
                    var filterValue = e.filter != undefined ? e.filter.value : "";
                    e.preventDefault();
                    this.dataSource.filter({
                    logic: "or",
                    filters: [
                    {
                    field: "PersonFullName",
                    operator: "contains",
                    value: filterValue
                    },
                    {
                    field: "Email",
                    operator: "contains",
                    value: filterValue
                    },
                    {
                    field: "JobName",
                    operator: "contains",
                    value: filterValue
                    },
                    {
                    field: "DepartmentName",
                    operator: "contains",
                    value: filterValue
                    }
                    ]
                    });
                },
            });
    });

    function Close() {
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }

    function OnSave(evt) {

    }

    function onAdd() {
        var value = $("#users").data("kendoMultiSelect").value();
        if (value == "" || value == null) {
            kendo.alert("@Resource["SelectUser"]");
            return false;
        }
        else {
            ShowLoader($('.viewdata'));
             $.ajax({
            type: 'POST',
            url: "/pms/performancedocument/MapUsers?Docid=" + '@Model.DocId' + "&mapusers=" + value,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
                 success: function (res) {
                    // alert(res.success);
                HideLoader($('.viewdata'));
                if (res.success) {
                    window.parent.ShowNotification("@Resource["UserMappedSuccessfully"]", "success");
                    //$("#kgrdPDM").data("kendoGrid").dataSource.read();
                    GetMapUserData();
                }
                else {
                    window.parent.ShowNotification(res.message, "error");
                }
            }
        });
        }
    }

    function Delete(idval,ownerval) {
        //e.preventDefault();
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $.ajax({
            type: 'POST',
            url: "/pms/performancedocument/DeleteMapUsers?Docid=" + idval + "&mapusers=" + ownerval,
            contentType: 'application/json; charset=utf-8',
            dataType: 'json',
            success: function (data) {
                window.parent.ShowNotification("@SharedResource["DeletedSuccessfully"]", "success");
                //$("#kgrdPDM").data("kendoGrid").dataSource.read();
                GetMapUserData();
            }
        });
    }

    function GetMapUserData() {
        document.getElementById("kgrdMapUser").innerHTML = "";
        gridConfig(
            "kgrdMapUser",
            "/Pms/PerformanceDocument/ReadMappedUserPerformanceDocumentData?PmDoc="+'@Model.DocId',
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    var columnDefs = [
                            {
                                field: "Id",
                                headerName: "@SharedResource["Action"]",
                                cellRenderer: params => {
                                    return "<div class='btn-group grid-menu' id='mu-menu' data-idvalue=\"" + params.data.Id + "\" data-ownervalue=\"" + params.data.OwnerUserId + "\"><i class='fas fa-ellipsis-v'></i></div>"
                               }
                            },
                            {
                                field: "OwnerUserName",
                                headerName: "@SharedResource["Name"]",
                            },
                            {
                                field: "OwnerUserEmail",
                                headerName:"@SharedResource["Email"]",width:200
                            },
                            {
                                field: "JobTitle",
                                headerName: "@SharedResource["JobTitle"]", width: 100,
                            },
                            {
                                field: "DepartmentName",
                                headerName: "@SharedResource["DepartmentName"]", width: 200,
                            },
    ];

    $(function () {
        GetMapUserData();

        //grid context menu
        $.contextMenu({
            selector: '#mu-menu',
            trigger: 'left',
            build: function ($trigger, e) {
                debugger;
                console.log($trigger);
                var id = $trigger.data('idvalue');
                var owner = $trigger.data('ownervalue');
                var status = 0;

                switch (status) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {                                    
                                    case 'delete':
                                        Delete(id, owner);
                                        break;
                                    default:
                                }
                            },
                            items: {                                
                                "delete": { name: "@SharedResource["Delete"]", icon: "fas fa-trash" },
                            }
                        };
                }
            }
        });
    });

</script>

<div class="row-12 viewdata">
    <div class="row col-md-12">
        <div class="col-11">
            @*@(Html.Kendo().MultiSelect().Name("users")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("ReadUsers", "PerformanceDocument", new { area = "PMS" });
                                 });
                             })
                             .ItemTemplateId("user1-template1")
                             .AutoClose(false)
                             .Placeholder(""+Resource["SearchUser"]+"")
                             .DataTextField("PersonFullName")
                             .DataValueField("UserId")
                             .HtmlAttributes(new { @class = "hr-xxl-large" })
                              .Events(events => events.Filtering(
                        @<text>
                            function(e) {
                               var filterValue = e.filter != undefined ? e.filter.value : "";
                                    e.preventDefault();

                                  this.dataSource.filter({
                                    logic: "or",
                                    filters: [
                                      {
                                        field: "PersonFullName",
                                        operator: "contains",
                                        value: filterValue
                                      },
                                      {
                                        field: "Email",
                                        operator: "contains",
                                        value: filterValue
                                      },
                                     {
                                        field: "JobName",
                                        operator: "contains",
                                        value: filterValue
                                      },
                                        {
                                        field: "DepartmentName",
                                        operator: "contains",
                                        value: filterValue
                                      }
                                    ]
                                  });
                            }
                            </text>
                            ))
            )*@
            <select id="users" data-placeholder="@Resource["SearchUser"]" class="hr-xxl-large"></select>


            <script type="text/x-kendo-tmpl" id="user1-template1">
                  <div class="row no-gutter pb-1 pt-1">
                      <div @*class="col-2"*@ style="width: 80px;">
                      #if(data.PhotoId!=null)
                          {#<img class="avatar-drp-profile" src="/Cms/document/getimagemongo?id=#:data.PhotoId#"  /> #}
                      else
                          {#<img class="avatar-drp-profile" style="background-color:gray;" src="/images/profile.jpg" />#}#
                     </div>

                        <div @*class="col-6"*@ style="width:250px;">
                          <span>#:PersonFullName#</span><br/>
                           #if (data.PersonNo!=null)
                              {#
                              <span style="font-size:12px;"> - #:PersonNo#</span><br/>
                             # } #

                 #if (data.JobName!=null)
                              {#
                          <span style="font-size:12px;">#:JobName#</span><br/>
                         # } #
                        </div>

                          #if (data.Email!=null)
                              {#
                           <div @*class="col-1"*@ style="width:25px;">
                          <i class='fa fas fa-envelope' style='font-size:12px'></i>
                           </div>
                          <div @*class="col-2"*@ style="width:200px;">
                          <span style="font-size:12px;">#:Email#</span><br/>
                                           #if (data.DepartmentName!=null)
                              {#
                          <span style="font-size:12px;">#:DepartmentName#</span><br/>
                              # } #
                          </div>
                         # } #



                </div>
            </script>

        </div>

        <div class="col-1">
            <button class="btn-primary" onclick="onAdd()" style="float:right;"><i class="fas fa-plus"></i></button>
        </div>
    </div>

    <div class="col-md-12">
        <div id="kgrdMapUser" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

        @*@(Html.Kendo().Grid<PerformanceDocumentViewModel>()
        .Name("kgrdMapUser").HtmlAttributes(new { @class = "kgrdMapUser" })
    .Columns(col =>
    {
        col.Command(command =>
        {
            command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("Delete").HtmlAttributes(new { @class = "action-icon", @title = "" + SharedResource["Delete"] + "" });
        }).Title(""+SharedResource["Action"] + "").Width(80);
        //col.Bound(c => c.Id);
        col.Bound(c => c.OwnerUserName).Title("" + SharedResource["Name"] + "");
        col.Bound(c => c.OwnerUserEmail).Title("" + SharedResource["Email"] + "");
        col.Bound(c => c.JobTitle).Title("" + SharedResource["JobTitle"] + "");
        col.Bound(c => c.DepartmentName).Title("" + SharedResource["DepartmentName"] + "");
        // col.Bound(c => c.Id").Title("Start Date").Width(150);
        // col.Bound("EndDate").Title("EndDate");
        // col.Bound("DocumentStatus").Title("Status");
    })
    .Scrollable(x => x.Enabled(true))
    .Sortable(srt => srt.Enabled(true))
    .Selectable(select => select.Enabled(false))
    .Filterable(f => f.Extra(false)
    .Operators(o => o.ForString(s => s.Clear()
    .Contains("Contains")
    .IsEqualTo("Is equal to")
    )))
    .Resizable(resize => resize.Columns(true))
    .Pageable(pageable => pageable
    .Refresh(true)
    .PageSizes(true)
    .ButtonCount(5))
    .AutoBind(true)
    .DataSource(
    dataSource => dataSource
    .Ajax()
    .PageSize(10)
    .Read(read => read.Action("ReadMappedUserPerformanceDocumentData", "PerformanceDocument", new { Area="Pms", PmDoc=Model.DocId}))
    .Model(model => model.Id("Id")))
    )*@
    </div>
</div>

