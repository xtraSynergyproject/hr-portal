@inject IStringLocalizer<CMS.UI.Web.Areas.Pms.Controllers.PerformanceDashboardController> Resource
@using CMS.Data.Model
@using CMS.UI.ViewModel
@using Kendo.Mvc.UI
@using CMS.Common

@model PerformanceDashboardViewModel;

@{
    ViewBag.Title = "Project Dashboard";
    //Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}

<style>
    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .k-listview {
        border: none !important;
    }

    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }
</style>
<script>
    $(document).ready(function () {
        getPerformanceData();
        var data = [
            { Name: "All", Value: "ALL" },
            { Name: "Direct Reportees", Value: "DIRECT" },
            { Name: "Indirect Reportees", Value: "INDIRECT" }
        ];

         $("#PerformanceUser").kendoDropDownList({
            @*optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",*@
            dataTextField: "Name",
             dataValueField: "Value",
             change: OnUserChange,
             dataSource: data,
         });

        HideLoader($("#global-overlay"));

     });

    function GOWBS() {
        window.parent.LoadPartailView1("/pms/PerformanceTask/Index?ProjectId=@Model.Id&pageName=WorkBreakDownStructure", 'cms-content');
        AddBreadCrumb({ Text: 'Work BreakDown Structure', Name: 'WorkBreakDownStructure', Url: '/pms/PerformanceTask/Index?ProjectId=@Model.Id&pageName=WorkBreakDownStructure', PageType: 'Custom', LoadType: 'PartialView', IsNotClickable: false, IsClickDisabled: true }, true, 'Performance Dashboard');

    }

    function GotoTask() {



    }

    function OnProjectChange(id) {

    }

    function AddTask() {

    }

    function onTaskSeriesClick(e) {


        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlTaskStatus").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length;i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);

        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var multiselectTaskStagesType = $("#mdlTaskStagesType").data("kendoMultiSelect");
        var stagetypevalue = multiselectTaskStagesType.value();
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var search = {
            statusIds: newvalue,
            performanceIds: stagevalue,
            recieverids: assignedvalue,
            type: stagetypevalue
        };
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        var newurl = "/Pms/Performance/ReadPerformanceTaskGridViewData?performanceId=" + '@Model.Id' + "&statusIds=" + statusvalue + "&projectIds=" + newvalue + "&recieverids=" + assignedvalue + "&type=" + stagetypevalue;
        getPerformanceData(newurl);


    }

    function onTaskAssignedSeriesClick(e) {


        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length; i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);

        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var multiselectTaskStagesType = $("#mdlTaskStagesType").data("kendoMultiSelect");
        var stagetypevalue = multiselectTaskStagesType.value();
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var search = {
            statusIds: statusvalue,
            performanceIds: stagevalue,
            recieverids: newvalue,
            type: stagetypevalue
        };
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        var newurl = "/Pms/Performance/ReadPerformanceTaskGridViewData?performanceId=" + '@Model.Id' + "&statusIds=" + statusvalue + "&projectIds=" + newvalue + "&recieverids=" + assignedvalue + "&type=" + stagetypevalue;
        getPerformanceData(newurl);


    }
    function onTaskStagesSeriesClick(e) {


        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlTaskStages").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length; i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStagesType = $("#mdlTaskStagesType").data("kendoMultiSelect");
        var stagetypevalue = multiselectTaskStagesType.value();


        var search = {
            performanceId: '@Model.Id',
            performanceIds: newvalue,
            statusIds: statusvalue,
            recieverids: assignedvalue,
        };
        $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        var newurl = "/Pms/Performance/ReadPerformanceTaskGridViewData?performanceId=" + '@Model.Id' + "&performanceIds=" + stagetypevalue + "&projectIds=" + newvalue + "&recieverids=" + assignedvalue;
        getPerformanceData(newurl);


    }
    function onChangeTaskStatus() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var multiselectTaskStagesType = $("#mdlTaskStagesType").data("kendoMultiSelect");
        var stagetypevalue = multiselectTaskStagesType.value();
        var search = {
            performanceId: '@Model.Id',
            performanceIds: stagevalue,
            statusIds: statusvalue,
            recieverids: assignedvalue,
            type: stagetypevalue
        };
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        var newurl = "/Pms/Performance/ReadPerformanceTaskGridViewData?performanceId=" + '@Model.Id' + "&statusIds=" + statusvalue + "&projectIds=" + stagevalue + "&recieverids=" + assignedvalue + "&type=" + stagetypevalue;
        getPerformanceData(newurl);


    }
    function onChangeTaskAssigned() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var multiselectTaskStagesType = $("#mdlTaskStagesType").data("kendoMultiSelect");
        var stagetypevalue = multiselectTaskStagesType.value();
        var search = {
            performanceId: '@Model.Id',
            performanceIds: stagevalue,
            statusIds: statusvalue,
            recieverids: assignedvalue,
            type: stagetypevalue
        };
        //$("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        var newurl = "/Pms/Performance/ReadPerformanceTaskGridViewData?performanceId=" + '@Model.Id' + "&statusIds=" + statusvalue + "&projectIds=" + stagevalue + "&recieverids=" + assignedvalue + "&type=" + stagetypevalue;
        getPerformanceData(newurl);

    }
    function onChangeTaskStages() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var multiselectTaskStagesType = $("#mdlTaskStagesType").data("kendoMultiSelect");
        var stagetypevalue = multiselectTaskStagesType.value();
        var search = {
            performanceId: '@Model.Id',
            performanceIds: stagevalue,
            statusIds: statusvalue,
            recieverids: assignedvalue,
            type: stagetypevalue
        };
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        var newurl = "/Pms/Performance/ReadPerformanceTaskGridViewData?performanceId=" + '@Model.Id' + "&statusIds=" + statusvalue + "&projectIds=" + stagevalue + "&recieverids=" + assignedvalue + "&type=" + stagetypevalue;
        getPerformanceData(newurl);

    }
        function onChangeTaskStagesType() {
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        var assignedvalue = multiselectTaskAssigned.value();
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        var stagevalue = multiselectTaskStages.value();
        var multiselectTaskStagesType = $("#mdlTaskStagesType").data("kendoMultiSelect");
            var stagetypevalue = multiselectTaskStagesType.value();
            //alert(stagetypevalue);
        var search = {
            performanceId: '@Model.Id',
            performanceIds: stagevalue,
            statusIds: statusvalue,
            recieverids: assignedvalue,
            type: stagetypevalue
        };
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
            var newurl = "/Pms/Performance/ReadPerformanceTaskGridViewData?performanceId=" + '@Model.Id' + "&statusIds=" + statusvalue + "&projectIds=" + stagevalue + "&recieverids=" + assignedvalue + "&type=" + stagetypevalue;
        getPerformanceData(newurl);

    }
    function OnDataBound(arg) {

        //document.getElementById('projectFiles').style.border = 'none';
        //var data = $("#projectFiles").data("kendoListView").dataSource.data();
        //var data1 = $("#ProjectTask12").data("kendoListView").dataSource.data();
        //if (data.length == 0) {
        //    $('#no-data-file').show();
        //} else {
        //    $('#no-data-file').hide();
        //}
        //if (data1.length == 0) {
        //    $('#no-data-notifi').show();
        //} else {
        //    $('#no-data-notifi').hide();
        //}
    }

    function OnTaskAssChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-taskchart').show();

        } else {
            $('#no-data-taskchart').hide();
        }
    }
    function OnCompetencyChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-Competencychart').show();

        } else {
            $('#no-data-Competencychart').hide();
        }
    }
    function OnDevelopmentChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-Developmentchart').show();

        } else {
            $('#no-data-Developmentchart').hide();
        }
    }
    function OnTaskStatusChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-chart').show();

        } else {
            $('#no-data-chart').hide();
        }
    }

    function OnTaskTimeChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-timechart').show();

        } else {
            $('#no-data-timechart').hide();
        }
    }
    function OnProjectStageChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-stagechart').show();

        } else {
            $('#no-data-stagechart').hide();
        }
    }
    function onFilterReset() {
        var newvalue = new Array();
        var multiselectTaskStatus = $("#mdlTaskStatus").data("kendoMultiSelect");
        multiselectTaskStatus.value(newvalue);
        var multiselectTaskAssigned = $("#mdlTaskAssigned").data("kendoMultiSelect");
        multiselectTaskAssigned.value(newvalue);
        var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        multiselectTaskStages.value(newvalue);
        var multiselectTaskStagesType = $("#mdlTaskStagesType").data("kendoMultiSelect");
       multiselectTaskStagesType.value(newvalue);
        var search = {
            performanceId: '@Model.Id',
        };
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
        getPerformanceData();

    }

    function onView(id) {
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'View Task', Width: 600, Height: 600 });
        return false;
    }
    function OpenDetail(subject,status) {

        var filter = $('#PerformanceUser').val();
         //var url = '/Cms/Page?lo=Popup&pageType=Task&source=View&dataAction=View&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + taskId;
        var url = '/Pms/PerformanceDashboard/PerformanceSummaryDetail?subject=' + subject + '&status=' + status + '&filter=' + filter ;
        // var url = '/Cms/Page?lo=Popup&popup=true&cbm=OnAfterTaskCreate&source=View&dataAction=View&templateCodes=PMS_GOAL_ADHOC_TASK&portalId=' + portalId + '&recordId=' + Id;
        //var url = '/Cms/Page?lo=Popup&pageType=Task&source=Versioning&dataAction=Edit&templateCodes=' + templateCode + '&portalId=' + portalId + '&recordId=' + taskId;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: 'Performance Summary Detail', Width: 1400, Height: 600, Position: 'Right1' });
        return false;
    }
    function OnUserChange() {
        var filter = $("#PerformanceUser").data("kendoDropDownList").value();
        var newurl = "/Pms/PerformanceDashboard/ReadPerformanceSummaryData?filter=" + filter;
        getPerformanceData(newurl);
    }
</script>
<script>
    var columnDefs = [

        {
            field: "Name",
            headerName: "Stage"
        },
        {
            field: "InProgreessCount",
            headerName: "In Progress",
            cellRenderer: params => {
                return "<span onclick='OpenDetail(\"" + params.data.Name + "\",\"SERVICE_STATUS_INPROGRESS\")'>" + params.data.InProgreessCount+"</span>";
            }
        },

        {
            field: "OverDueCount",
            headerName: "Overdue",
            cellRenderer: params => {
                return "<span onclick='OpenDetail(\"" + params.data.Name + "\",\"SERVICE_STATUS_OVERDUE\")'>" + params.data.OverDueCount +"</span>";
            }

        },
        {
            field: "CompletedCount",
            headerName: "Completed",
            cellRenderer: params => {
                return "<span onclick='OpenDetail(\"" + params.data.Name + "\",\"SERVICE_STATUS_COMPLETE\")'>" + params.data.CompletedCount +"</span>";
            }

        },
        {
            field: "CancelledCount",
            headerName: "Cancelled",
            cellRenderer: params => {
                return "<span onclick='OpenDetail(\"" + params.data.Name + "\",\"SERVICE_STATUS_CANCEL\")'>" + params.data.CancelledCount +"</span>";
            }

        },
        {
            field: "TotalCount",
            headerName: "Total",
            cellRenderer: params => {
                return "<span onclick='OpenDetail(\"" + params.data.Name + "\")'>" + params.data.TotalCount +"</span>";
            }

        }
    ];



    function getPerformanceData(urlnew) {
           var url = "";
        if (urlnew != "" && urlnew != null) {
            url = urlnew;
        } else {
            url = "/Pms/PerformanceDashboard/ReadPerformanceSummaryData?filter=ALL";

        }
        document.getElementById("kgdProjectGridView").innerHTML = "";
        gridConfig(
            "kgdProjectGridView",
            url,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>

<div class="row hr-pad-top-10">
    <div class="col-md-6">
        <h4>
        </h4>
    </div>
</div>

    <div id="appWrapper" class="hr-pad-top-15">
      

        <div class="row">
            <div class="col-12">
                <div class="panel panel-filter">
                    <div class="panel-heading"> @SharedResource["Filter"]</div>
                    <div class="panel-body">
                        <div class="row" style="padding:5px;">
                            <div class="col-3">
                                <div class="project-dropdown" id="dropdown" title="filter">
                                    <input id="PerformanceUser" class="form-control" style="width:80%" />

                                </div>
                            </div>
                           
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">Performance Document Status</div>
                    <div class="panel-body">
                        <div id="kgdProjectGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
                        @*@(Html.Kendo().Grid<ProjectGanttTaskViewModel>()
            .Name("kgdProjectGridView")
            .Columns(columns =>
            {
                columns.Bound(p => p.Id).Title("View").ClientTemplate("<span class='fas fa-eye' onclick='onView(\"#:Id#\")'></span>").Width(250);
                columns.Bound(p => p.ServiceStage).Title(""+Resource["Objectives"]+"").Width(250);
                columns.Bound(p => p.Title).Title("" + SharedResource["TaskName"] + "").Width(300);


                columns.Bound(p => p.UserName).Title("" + SharedResource["UserName"] + "").Width(200);
                columns.Bound(p => p.Priority).Title("" + SharedResource["Priority"] + "").Width(200);
                columns.Bound(p => p.NtsStatus).Title("" + SharedResource["TaskStatus"] + "").Width(200);
                columns.Bound(p => p.Start).Title("" + SharedResource["StartDate"] + "").Format("{0:dd MMM yyyy}").Width(150);
                columns.Bound(p => p.End).Title("" + SharedResource["EndDate"] + "").Format("{0:dd MMM yyyy}").Width(150);
            })
            .ToolBar(toolbar =>
            {

                //toolbar.Pdf();
                toolbar.Search();
            })

            .ColumnMenu(col=>col.Filterable(false))
            .Height(700)
            .Editable()
            .Pageable()
            .Sortable()
            .Navigatable()
            .Resizable(r=>r.Columns(true))
            .Reorderable(r => r.Columns(true))
            .Groupable(g=>g.ShowFooter(false))
            .Filterable()
            .Scrollable()

        .DataSource(dataSource => dataSource
            .Ajax()
            .Batch(true)
            .PageSize(20)
            .AutoSync(true)
            .ServerOperation(false)

            .Model(model =>
            {
                model.Id(p => p.Id);

            })

            .Read("ReadPerformanceTaskGridViewData", "Performance", new { @area = "Pms", performanceId = Model.Id })

        )
        )*@
                    </div>
                </div>
            </div>
        </div>
    </div>


