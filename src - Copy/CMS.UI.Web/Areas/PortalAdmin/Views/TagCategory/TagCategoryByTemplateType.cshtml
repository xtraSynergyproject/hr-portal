@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;
@model TagCategoryViewModel

@{
    ViewData["Title"] = "PortalAdmin - Tag Category";
    Layout = "~/Views/Shared/_PopupLayout.cshtml";
}

<style>
    .kgrdPDM {
        width: 100% !important;
    }
</style>
<script>
     function OnBound(e) {
        var rootNodes = $("#Emailgrid").data("kendoTreeList").dataSource.data();
        traverse(rootNodes, function (node) {
            if (node.id == '@Model.Id') {

                var grid = $("#Emailgrid").data("kendoTreeList");
                var currenRow = grid.table.find("tr[data-uid='" + node.uid + "']");
                $(currenRow).addClass("gridbg");
              //  alert("true");
            }
        });
    }
    function Refresh()
    {
        $("#kgrdTagCategory").data("kendoTreeList").dataSource.read();
    }

    function OnAddTag() {
        var win = GetMainWindow();
        win.iframeOpenUrl = "/PortalAdmin/TagCategory/AddTag?templateId=@Model.TemplateId&NtsId=@Model.NtsId&ntstype=@Model.NtsType";
        win.OpenWindow({ Title: 'Add Tag', Width: 450, Height: 400 });
        return false;
    }
    function onEditOnCreateTagCategory(e) {

        e.preventDefault();
        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        var win = GetMainWindow();
        var portalId = $('#GlobalPortalId').val();

        win.iframeOpenUrl = "/PortalAdmin/TagCategory/TagCategory?TagId=" + dataItem.Id;
        win.OpenWindow({ Title: 'Edit Performance Document', Width: 450, Height: 700 });
    }

    function OnDeleteTagCategory(id) {
        var flag = confirm('Do you really want to delete the Tag?');
        //alert("..Delete");
       // e.preventDefault();
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));

        if (flag) {
            $.ajax({
                url: '@Url.Action("DeleteTag", "TagCategory", new { @area= "PortalAdmin" })?Id=' + id,
                type: 'POST',
                data: {},
                dataType: 'json',
                success: function (result) {
                    //
                    if (result.success) {
                        $("#kgrdTagCategory").data("kendoTreeList").dataSource.read();
                        kendo.alert("Tag  Deleted Successfully.");
                    } else {
                        $("#kgrdTagCategory").data("kendoTreeList").dataSource.read();
                        var err = result.errors.BinderCountError.errors[0];
                        kendo.alert(err);
                    }
                },
                error: function (ert) {
                    //
                    $("#kgrdTagCategory").data("kendoTreeList").dataSource.read();
                }
            });
            return false;
        }
    }

     $(document).ready(function () {
        getNtsTagCatData();
    });

    var columnDefs = [
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuNtsTagCat' data-idvalue='" + params.value + "'><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
        { headerName: "Tag Category Name", field: "Name" },
        { headerName: "Tag Tag Name", field: "TagName" },
        { headerName: "Last Updated By", field: "LastUpdatedByName" },
        { headerName: "Last Updated Date", field: "LastUpdatedDate",
            cellRenderer: params => {
                var date = new Date(params.value);
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;
                var time = date.toLocaleTimeString().replace(/(.*)\D\d+/, '$1');
                var newdate = day + '.' + month + '.' + year + ' ' + time;
                //return [day, month, year].join('.');
                return newdate;
            }
        },
        { headerName: "Created By", field: "CreatedByName" },
        {
            headerName: "Created Date", field: "CreatedDate",
            cellRenderer: params => {
                var date = new Date(params.value);
                var d = new Date(date),
                    month = '' + (d.getMonth() + 1),
                    day = '' + d.getDate(),
                    year = d.getFullYear();

                if (month.length < 2)
                    month = '0' + month;
                if (day.length < 2)
                    day = '0' + day;

                var time = date.toLocaleTimeString().replace(/(.*)\D\d+/, '$1');
                var newdate = day + '.' + month + '.' + year + ' ' + time;
                //return [day, month, year].join('.');
                return newdate;
            }
        },
    ];

    function getNtsTagCatData() {
        var ntsType = '@Model.NtsType';
        var ntsId = '@Model.NtsId';
        document.getElementById("kgrdTagCategory").innerHTML = "";
        gridConfig(
            "kgrdTagCategory",
            "/PortalAdmin/TagCategory/ReadNtsTagData?NtsType=" + ntsType +"&NtsId="+ntsId,
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }

    $(function () {

        $.contextMenu({
            selector: '#tree-menuNtsTagCat',
            trigger: 'left',
            build: function ($trigger, e) {

                var id = $trigger.data('idvalue');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {

                                    case 'delete':
                                        OnDeleteTagCategory(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "delete": { name: "Delete", icon: "fas fa-trash" },

                            }
                        };
                }
            }
        });


    });

</script>


<div>
    <h4>@ViewBag.Title</h4>

    <hr />

    <div class="row col-md-12">


     
        <div class="col-md-12">
            <button type='button' class='btn btn-primary' onclick='OnAddTag();'><i class='fa fas fa-plus'></i>&nbsp;Add Tag</button>
            <br /><br />
            <div id="kgrdTagCategory" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
            @*@(Html.Kendo().Grid<TagCategoryViewModel>
        ().Name("kgrdTagCategory").HtmlAttributes(new { @class = "kgrdPDM" })
        .Columns(col =>
        {
            col.Command(command =>
            {

                command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDeleteTagCategory").HtmlAttributes(new { @class = "action-icon", @title = "Delete" });

            }).Title("Action").Width(150);
            //col.Bound(c => c.Id);
            //col.Bound(c => c.ParentNoteId).Title("Parent NoteId").Width(220);
            col.Bound(c => c.Name).Title("Tag Category Name").Width(220);
            col.Bound(c => c.TagName).Title("Tag Name").Width(220);
            col.Bound(c => c.LastUpdatedByName).Title("Last Updated By").Width(220);
            col.Bound(c => c.LastUpdatedDate).Title("Last Updated Date").Format("{0:dd MMM yyyy hh:mm:ss}").Width(220);
            col.Bound(c => c.CreatedByName).Title("Created By").Width(220);
            col.Bound(c => c.CreatedDate).Title("Created Date").Format("{0:dd MMM yyyy hh:mm:ss}").Width(220);
        })
        .ToolBar(toolbar =>
        {
            toolbar.Custom().Text("Add Tag").Name("btnAdd").IconClass("fa fas fa-plus").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnAddTag();" });
        })
        .Scrollable(x => x.Enabled(true))

        .Sortable(srt => srt.Enabled(true))
        .Selectable(select => select.Enabled(false))
        .Filterable(f => f.Extra(false)
        .Operators(o => o.ForString(s => s.Clear()
        .Contains("Contains")
        .IsEqualTo("Is equal to")
        )))
        .Resizable(resize => resize.Columns(true))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .AutoBind(true)
        .DataSource(
        dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("ReadNtsTagData", "TagCategory", new { Area = "PortalAdmin", NtsType=Model.NtsType,NtsId= Model.NtsId}))
        .Model(model => model.Id("Id")))
        )*@

        </div>

    </div>
</div>
