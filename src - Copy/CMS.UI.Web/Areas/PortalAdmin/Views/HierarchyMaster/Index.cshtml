@using CMS.UI.ViewModel;
@using CMS.Common;
@using Kendo.Mvc.UI;

@model HierarchyMasterViewModel
@{
    ViewData["Title"] = "Hierarchy";
    Layout = null;
}
<script>

     var status = '@Html.Raw(EnumExtension.EnumToJson(typeof(StatusEnum)))';
    var statusObj = JSON.parse(status);
      @*var HierarchyType1 = '@Html.Raw(EnumExtension.EnumToJson(typeof(HierarchyTypeEnum)))';
    var HierarchyTypeObj1 = JSON.parse(HierarchyType1);*@
    var columnDefs = [
        {
            field: "HierarchyType",
            cellRenderer: params => {
                debugger;
                //return HierarchyTypeObj1[params.value];
                return params.value;
            }
        },
           {
            field: "Name",
           },
           {
               field: "Code",

           },
           {
               field: "Description",
           },
        {
            field: "Level1Name",
        },
        {
            field: "Level2Name",

        },
        {
            field: "Level3Name",
        },
        {
            field: "Level4Name",
        },
        {
            field: "Level5Name",
        },
        {
            field: "CreatedBy",
        },
        {
            field: "CreatedDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        {
            field: "LastUpdateBy",
        },
        {
            field: "LastUpdatedDate",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }
        },
        {
            field: "Status",
            cellRenderer: params => {
                return statusObj[params.value]; //only for enum
            }
        },
        {
            headerName: "Actions",
            field: "Id",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuBinHierarchy' data-idvalue='" + params.value + "' data-status=\"0\" data-noteid=\"#:NoteId#\" ><i class='fas fa-ellipsis-v'></i></div>"
            }
        }
    ];

    $(function () {

        getPortalHierarchyData();

       // $.contextMenu('update');
      //  $('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuBinHierarchy',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');

                //var portalName = $trigger.data('portal-name');

                switch (0) {
                    case 0:
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OnEditHierarchy(id);
                                        break;

                                    case 'delete':
                                        OnDeleteHierarchy(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },


                            }
                        };


                }
            }
        });


    });

    function getPortalHierarchyData() {
        document.getElementById("PortalHierarchygrid").innerHTML = "";
        gridConfig(
            "PortalHierarchygrid",
            "/PortalAdmin/HierarchyMaster/ReadData",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<script>
    function OnDeleteHierarchy(id) {

        //  $('#dlg_DeleteConfirmation').data("kendoDialog").open();

       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDelete(id);
        }, function () {

        });

    }

    function OnCreateHierarchy() {

       
         var win = GetMainWindow();
        win.iframeOpenUrl =  '@Url.Action("CreateHierarchy", "HierarchyMaster", new { @area= "PortalAdmin" })';
        win.OpenWindow({ Title: 'Manage Hierarchy', Width: 450, Height: 800 });
        return false;

    }

    function OnEditHierarchy(id) {

       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
       
         var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("EditHierarchy", "HierarchyMaster", new { @area="PortalAdmin" })?Id=' + id;
        win.OpenWindow({ Title: 'Manage Hierarchy', Width: 450, Height: 800 });
        return false;
    }


    function confirmDelete(id) {
        //
        //  var grid = $("#grd_OrderStatus").data("kendoGrid");
        // var dataItem = $(e.currentTarget).closest("tr");
        // alert(dataItem.Id);
        //var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        $.ajax({
           // url: "~/UserRole/DeleteUserRole?Id=" + id,
            url:'@Url.Action("DeleteHierarchy", "HierarchyMaster", new { @area="PortalAdmin" })?Id=' + id,
            type: "GET",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {
                // $('#dlg_DeleteConfirmation').data("kendoDialog").close();
                ShowNotification("Deleted Successfully", "success");
                getPortalHierarchyData();
                
            }
        });
        //  $('#dlg_DeleteConfirmation').data("kendoDialog").close();
       

    }
</script>
<div>
    <h4>@ViewBag.Title</h4>

    <hr />


    <div class="row">
        <div class="col-12">

            <button type='button' class='btn btn-primary' onclick='OnCreateHierarchy();'><i class='fa fas fa-plus'></i>&nbsp;Create Hierarchy</button>
            <br /><br />
            <div id="PortalHierarchygrid" style="width: 100%;height:550px" class="ag-theme-alpine"></div>


         
        </div>
    </div>

</div>



  


