@using Syncfusion.EJ2
@using Syncfusion.EJ2.Navigations
@using CMS.Common;
@using Kendo.Mvc.UI;
@using CMS.UI.ViewModel;
@using Newtonsoft.Json;

@using CMS.Business;
@{
    ViewData["Title"] = "AdminPortal - NtsGroup";
    Layout = "/Views/Shared/_PopupLayout.cshtml";
    //Layout = ViewBag.Layout;
}

@model CMS.UI.ViewModel.NtsGroupViewModel



<style>
    .form-control {
        width: unset;
    }

    .required {
        color: red;
    }
</style>

<div class="row" style="margin-left:15px;">

    <form asp-area="PortalAdmin" asp-controller="NtsGroup" asp-action="Manage" method="post" class="form-horizontal" id="myForm">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">

            <div class="col-12">Type <span class="required">*</span></div>
            <div class="col-12 pad-10">
                @*@(Html.Kendo().DropDownListFor(x=>x.NtsType)
                        .DataTextField("Name")
                        .DataValueField("Id")
                       .OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                        .DataSource(source =>
                        {
                            source.Read(read =>
                            {
                                read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "NtsTypeEnum" });
                            });
                        })
                        .Value(Model.NtsType.ToString())
                        .HtmlAttributes(new { @class = "form-control", @style = "width:80%"})
                        .Events(e=>
                            { e.Change("onChange1"); })
                        )*@

                <input asp-for="NtsType" id="NtsType" class="form-control" style="width:80%" />
            </div>

            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" title="Special character and space not allowed in name." required="required" autocomplete="off" style="width:80%" />
                    <label for="Name">Name <span class="required">*</span></label>
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">

                    <input asp-for="Code" type="text" class="form-control" placeholder="Enter Code" title="Special character and space not allowed in code." required="required" autocomplete="off" style="width:80%" />

                    <label for="Code">Code <span class="required">*</span></label>
                </div>
            </div>
            @*<div class="col-12 pad-15">
                 @Html.TextBoxFor(model => model.Name, htmlAttributes: new { @class = "form-control", placeholder = "Name", style = "width:80%", required = "required" })
                </div>*@
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Description" type="text" class="form-control" placeholder="Enter Short Name" title="Special character and space not allowed in name." autocomplete="off" style="width:80%" />
                    <label for="Description">Description </label>
                </div>
            </div>



            @*<div class="col-12 pad-15">
                    @Html.TextBoxFor(model => model.ShortName, htmlAttributes: new { @class = "form-control", placeholder = "Short Name", style = "width:80%", required = "required" })
                </div>*@


            <div class="col-12">Status</div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(x=>x.Status)
        .DataTextField("Name")
        .DataValueField("Id")
        .DataSource(source =>
        {
        source.Read(read =>
        {
            read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "StatusEnum" });
        });
        })
        .Value(Model.Status.ToString())
        .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
        )*@

                <input asp-for="Status" id="Status" class="form-control" style="width:80%" />
            </div>
            <div class="col-12">Templates</div>
            <div class="col-12 pad-10">

                @*@(Html.Kendo().MultiSelectFor(x => x.TemplateIds)
                                                                   .AutoClose(false)
                                                                   .Placeholder("Select Template")
                                                                   .DataSource(source =>
                                                                   {
                                                                       source.Read(read =>
                                                                       {
                                                                           read.Action("GetTemplatesIdNameList", "Template", new { @area = "Cms" }).Data("filtertype");
                                                                       });//.ServerFiltering(true);

                                                                   })
                                                                   .Events(x=>x.Change("OnChange"))
                                                                   .DataTextField("Name")
                                                                   .DataValueField("Id")
                                                                   .AutoBind(true)

                                                                   .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                                                                    //.CascadeFrom("NtsType")
                                                                    .ValuePrimitive(true)
                                                                   .Height(300)

                    )*@

                <select asp-for="TemplateIds" id="TemplateIds" style="width:80%"></select>
            </div>
            <div class="col-12 pad-10">
                <label>Selected Templates </label>
                @*@(Html.Kendo().ListView<TemplateViewModel>()
                    .Name("TemplatelistView")
                    .TagName("div")
                    .ClientTemplateId("template")
                    .AutoBind(false)
                    .DataSource(dataSource => dataSource
                    .Ajax()
                    .Read(read => read.Action("GetTemplateList", "Template",new { area="Cms"}).Data("FilterDDl"))
                    .PageSize(21)
                    )
                    .Pageable()
                    // .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                    )*@  
                
                <div id="TemplatelistView" style = "width:80%"></div>
            </div>
            <div class="col-12">User Groups</div>
            <div class="col-12 pad-10">

                @*@(Html.Kendo().MultiSelectFor(x => x.UserGroupIds)
                                                       .AutoClose(false)
                                                       .Placeholder("Select UserGroup")
                                                       .DataSource(source =>
                                                       {
                                                           source.Read(read =>
                                                           {
                                                               read.Action("GetUserGroupIdNameList", "UserGroup", new { @area = "Cms" });
                                                           });//.ServerFiltering(true);

                                                       })
                                                       .Events(x=>x.Change("OnChange2"))
                                                       .DataTextField("Name")
                                                       .DataValueField("Id")
                                                       .AutoBind(true)

                                                       .HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                                                        //.CascadeFrom("NtsType")
                                                        .ValuePrimitive(true)
                                                       .Height(300)

        )*@

                <select asp-for="UserGroupIds" id="UserGroupIds" style="width:80%"></select>
            </div>
            <div class="col-12 pad-10">
                <label>Selected UserGroups </label>
                @*@(Html.Kendo().ListView<UserGroupViewModel>()
                    .Name("UserGrouplistView")
                    .TagName("div")
                    .ClientTemplateId("template1")
                    .AutoBind(false)
                    .DataSource(dataSource => dataSource
                    .Ajax()
                    .Read(read => read.Action("GetUserGroupList", "UserGroup",new { area="Cms"}).Data("FilterDDl1"))
                    .PageSize(21)
                    )
                    .Pageable()
                    //.HtmlAttributes(new { @class = "form-control", @style = "width:80%" })
                )*@

                <div id="UserGrouplistView" style = "width:80%"></div>
            </div>
            <div class="col-12 pad-10">

            </div>
            <div class="col-12 pad-10">

            </div>

            <div class="cms-slidebar-footer">
                <button type="button" class="btn btn-light" onclick="closeNavMemberGroup();">Close</button>
                <input type="submit" class="btn btn-primary" value="Save" id="submitBtn" />
            </div>

        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.LegalEntityId)
        @Html.HiddenFor(x => x.PortalId)
    </form>
</div>
<script type="text/x-kendo-tmpl" id="template">
    <div class="row col-12" style="margin:5px;">
    @*<div class="col-3">
    <span>#:Id#</span>
    </div>*@
    <div class="col-9">
      <span>#:Name#</span>
    </div>
    </div>
</script>
<script type="text/x-kendo-tmpl" id="template1">
    <div class="row col-12" style="margin:5px;">
    @*<div class="col-3">
    <span>#:Id#</span>
    </div>*@
    <div class="col-9">
      <span>#:Name#</span>
    </div>
    </div>
</script>

<script type="text/javascript">

    function OnChange(e) {
        var search = FilterDDl();
        $("#TemplatelistView").data("kendoListView").dataSource.read(search)
    }

    function FilterDDl() {
        //alert($("#Users").val());
        var multiselect = $("#TemplateIds").data("kendoMultiSelect");
        var multiselectvalue = multiselect.value();
        return {
            selectedValues: multiselectvalue.join()
        };
    }
    function OnChange2(e) {
        var search1 = FilterDDl1();
        $("#UserGrouplistView").data("kendoListView").dataSource.read(search1)
    }

    function FilterDDl1() {
        //alert($("#Users").val());
        var multiselect = $("#UserGroupIds").data("kendoMultiSelect");
        var multiselectvalue = multiselect.value();
        return {
            selectedValues: multiselectvalue.join()
        };
    }
    $(document).ready(function () {

        if ('@ViewBag.Success' == "True") {
            closeNavMemberGroup();
           // window.parent.$("#NtsGroupgrid").data("kendoGrid").dataSource.read();
            window.parent.getDataNtsGroup();
        }
              $("#NtsType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            //filter: "contains",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value: '@Model.NtsType.ToString()',
            change: onNtsTypeDataBound,
         //  dataBound: onNtsTypeDataBound,
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=NtsTypeEnum",
                    }
                }
            }
        });

        $("#TemplateIds").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/Template/GetTemplatesIdNameList?type=" + $("#NtsType").data("kendoDropDownList").value(),
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Templates",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.TemplateIds)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
            change: OnChange
        });


        $("#UserGroupIds").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/UserGroup/GetUserGroupIdNameList",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select User Group",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.UserGroupIds)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
            change: OnChange2
        });



           $("#Status").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.Status.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=StatusEnum",
                    }
                }
            }
           });


        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Cms/Template/GetTemplateList",
                    data: FilterDDl,
                    dataType: "json",
                }
            },
            pageSize: 21
        });

        $("#TemplatelistView").kendoListView({
            dataSource: dataSource,            
            template: kendo.template($("#template").html())
        });

        var dataSource1 = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/Cms/UserGroup/GetUserGroupList",
                    data: FilterDDl1,
                    dataType: "json",
                }
            },
            pageSize: 21
        });

        $("#UserGrouplistView").kendoListView({
            dataSource: dataSource1,
            template: kendo.template($("#template1").html())
        });


        var search = FilterDDl();
        $("#TemplatelistView").data("kendoListView").dataSource.read(search)
        var search1 = FilterDDl1();
        $("#UserGrouplistView").data("kendoListView").dataSource.read(search1)
    });
    function filtertype() {
        var ntsType = $("#NtsType").data("kendoDropDownList").value();
        var type = "";
        // var type = $("#NotificationActionId").data("kendoDropdownList").Value();
        if (ntsType == "Note") {
            type = "Note";
        }
        else if (ntsType == "Task") {
            type = "Task";
        }
        else if (ntsType == "Service") {
            type = "Service";
        }



        return {
            type: type
        };
    }

     function onNtsTypeDataBound() {
       // var type = filtertype();
 var ntsType = $("#NtsType").data("kendoDropDownList").value();
        var type = "";
        // var type = $("#NotificationActionId").data("kendoDropdownList").Value();
        if (ntsType == "Note") {
            type = "Note";
        }
        else if (ntsType == "Task") {
            type = "Task";
        }
        else if (ntsType == "Service") {
            type = "Service";
        }
        debugger;
         $("#TemplateIds").data("kendoMultiSelect").dataSource.read({ type: type })
        @*$("#TemplateIds").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/cms/Template/GetTemplatesIdNameList?type=" + type,
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "Select Templates...",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.TemplateIds)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
            change: OnChange
        });*@


    }

    function onChange1() {
        //      var ntsType = $("#NtsType").data("kendoDropDownList").value();
        //var type = "";
        //// var type = $("#NotificationActionId").data("kendoDropdownList").Value();
        //if (ntsType == "Note") {
        //    type = "Note";
        //}
        //else if (ntsType == "Task") {
        //    type = "Task";
        //}
        //else if (ntsType == "Service") {
        //    type = "Service";
        //}
        //return {
        //    type: type
        //};

        var search = filtertype()
        $("#TemplateIds").data("kendoMultiSelect").dataSource.read(search);

    }


    function closeNavMemberGroup() {
       
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }



</script>