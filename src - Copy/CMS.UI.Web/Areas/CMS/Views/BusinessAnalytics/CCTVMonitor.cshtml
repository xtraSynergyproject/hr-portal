@{
    ViewData["Title"] = "CCTV Monitor";
    Layout = null;
    // Layout = "~/Areas/CMS/Views/Shared/_LayoutCms1.cshtml";
}

@using Syncfusion.EJ2
@using Syncfusion.EJ2.Maps
@using Kendo.Mvc.UI;
@using CMS.Common;

<script>
    function OnLocationSelection() {
        
        var c = $("#location").data("kendoDropDownList").value();
        var obbj = $("#Camera").data("kendoDropDownList").value();
        var el = document.getElementById('ifrm');
        el.src = '@Url.Action("CCTVMonitorPartial", "BusinessAnalytics", new { stationName =  "ID", loc = "IDD" })'.replace("ID", obbj).replace("IDD", c);
    }

    function filterCamera() {
        return {
            cityName: $("#location").data("kendoDropDownList").value()// $("#User").val()
        };
    }

    document.getElementById("menu-accordion").style.display = "none";
</script>



@*<div class="row" style="margin:5px;">
        <div class="col">
            Camera Monitoring
        </div>
        <div class="col">
            City @(Html.Kendo().DropDownList().Name("location")
                            .DataTextField("Text")
                            .DataValueField("Value")
                           //.Events(e=>e.Change("onUserChange"))
                           .BindTo(new List<SelectListItem>() {
                                  new SelectListItem() {
                                      Text = "Chindhwara",
                                      Value = "2"
                                  },
                                  new SelectListItem() {
                                      Text = "Dewas",
                                      Value = "1"
                                  },
                              })
                             .OptionLabel("Select")
                            .HtmlAttributes(new { @class = "hr-x-large"})
                            )
            Location Name  @(Html.Kendo().DropDownList()
                                          .Name("Camera")
                                          .HtmlAttributes(new { style = "width:100%" })
                                           .OptionLabel("Select")
                                          .Events(x=>x.Change("OnLocationSelection"))
                                          .DataTextField("Name")
                                          .DataValueField("Id")
                                          .DataSource(source =>
                                          {
                                              source.Read(read =>
                                              {
                                                  read.Action("GetCameraListByCity", "BusinessAnalytics", new { @area = "cms" })
                                                      .Data("filterCamera");
                                              })
                                              .ServerFiltering(true);
                                          })
                                          .Enable(false)
                                          .AutoBind(false)
                                          .CascadeFrom("location").HtmlAttributes(new { @class = "hr-x-large" })
                                    )
        </div>
    </div>*@
<div>
    @*@Html.Action("CCTVMonitorPartial", "BusinessAnalytics")*@

    @* <iframe id="ifrm" onload="onMyFrameLoad(this)"  src='@Url.Action("CCTVMonitorPartial", "BusinessAnalytics", new { area = "cms"})' width="100%" height="550" frameBorder="0"></iframe>*@


    <script>
        var menu;
        var menuOption;
        var menuVisible;

        $(document).ready(function () {
            menu = document.querySelector(".menu");
            menuOption = document.querySelector(".menu-option");
            menuVisible = false;
        });


        function tooltipRender(args) {
            if (!args.options.data) {
                args.cancel = true;
            }
        }



        function mapsload(args) {
            var theme = 'Material';
            args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1));
            args.maps.layers[0].markerClusterSettings.imageUrl = 'https://' + window.location.host + '/images/diamond.png';
            args.maps.zoomSettings.shouldZoomInitially = true;
        }

        var cursorX;
        var cursorY;
        document.addEventListener('click', printMousePos, true);
        function printMousePos(e) {
            cursorX = e.pageX;
            cursorY = e.pageY;
            $("#test").text("pageX: " + cursorX + ",pageY: " + cursorY);
            if (menuVisible) toggleMenu("hide");
        }


        window.addEventListener("click", e => {
            //if (menuVisible) toggleMenu("hide");
        });


        function onMarkerClick(data, e) {
            
            data = data.replaceAll("%#$%", " ");
            var dataObj = data.split("|");

            ////alert(data);
            ////var data = "";//JSON.stringify(event.layer.dataObject);
            //var url = "/cms/businessAnalytics/CCTVMonitorView?data=" + data;
            //var win = GetMainWindow();
            //win.iframeOpenUrl = url;
            //win.OpenWindow({ Title: 'Live Camera', Width: 1000, Height: 600 });
            //return false;

            $("#menulist li").remove();
            dataObj.forEach(x => {
                var d = x.split(",");
                if (d[0] != undefined && d[0] != "") {
                    $("#menulist").append("<li class='menu-option' onclick='onMapObj(\"" + x + "\");'><span class='fas fa-map-marker-alt' style='margin-right:2px;color:red'></span>" + d[0] + "</li>"); //same template page
                }

            });
            const origin = {
                left: cursorX,
                top: cursorY
            };
            setPosition(origin);

            return false;
        }

        function onMapObj(obj) {
            var title = obj.split(",")[0];
            var url = "/cms/businessAnalytics/CCTVMonitorView?data=" + obj;
            var win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Title: title, Width: 1000, Height: 600 });
            return false;
        }

        function setPosition(origin) {
            
            menu.style.left = `${origin.left}px`;
            menu.style.top = `${origin.top}px`;
            toggleMenu("show");
        }

        function toggleMenu(command) {
            menu.style.display = command === "show" ? "block" : "none";
            menuVisible = !menuVisible;
        }

        //$(".marker-event").on('click', function (event) {
        //    
        //    event.stopPropagation();
        //    event.stopImmediatePropagation();
        //    //(... rest of your JS code)
        //});

    </script>

    <div class="row" style="background-color: #eeeeee;height:85vh;">

        <div class="col-6">
            @Html.EJS().Maps("container1").Height("100%").Load("mapsload").TooltipRender("tooltipRender").TitleSettings(title => title.Text("Dewas CCTV Monitor")).LegendSettings(
       legend => legend.Visible(true).Mode(Syncfusion.EJ2.Maps.LegendMode.Interactive).Height("50").Width("50").ShowLegendPath("name").ValuePath("name")
       .Position(

           Syncfusion.EJ2.Maps.LegendPosition.Top)).ZoomSettings(new Syncfusion.EJ2.Maps.MapsZoomSettings
           {
               MaxZoom = 100,
               MinZoom = -10,
               Enable = true,
               MouseWheelZoom = false,
               PinchZooming = false,
               ShouldZoomInitially = true
           }).Layers(new List<Syncfusion.EJ2.Maps.MapsLayer>
           {
           new Syncfusion.EJ2.Maps.MapsLayer
           {
           ShapeDataPath = "name",
           ShapePropertyPath = "name",
           LayerType = Syncfusion.EJ2.Maps.ShapeLayerType.OSM,
           MarkerClusterSettings =   new MapsMarkerClusterSettings { AllowClustering= true, Height=40, Width=40, Shape =MarkerType.Image },
           MarkerSettings = ViewBag.MarkersCamera1,
           //DataSource = ViewBag.Markers
           }
           }).Render()
        </div>
        <div class="col-6">
            @Html.EJS().Maps("container2").Height("100%").Load("mapsload").TooltipRender("tooltipRender").TitleSettings(title => title.Text("Chindwara CCTV Monitor")).LegendSettings(
       legend => legend.Visible(true).Mode(Syncfusion.EJ2.Maps.LegendMode.Interactive).Height("50").Width("50").ShowLegendPath("name").ValuePath("name")
       .Position(

           Syncfusion.EJ2.Maps.LegendPosition.Top)).ZoomSettings(new Syncfusion.EJ2.Maps.MapsZoomSettings
           {
               MaxZoom = 100,
               MinZoom = -10,
               Enable = true,
               MouseWheelZoom = false,
               PinchZooming = false,
               ShouldZoomInitially = true
           }).Layers(new List<Syncfusion.EJ2.Maps.MapsLayer>
           {
           new Syncfusion.EJ2.Maps.MapsLayer
           {
           ShapeDataPath = "name",
           ShapePropertyPath = "name",
           LayerType = Syncfusion.EJ2.Maps.ShapeLayerType.OSM,
           MarkerClusterSettings =   new MapsMarkerClusterSettings { AllowClustering= true, Height=40, Width=40, Shape =MarkerType.Image },
           MarkerSettings = ViewBag.MarkersCamera2,
           //DataSource = ViewBag.Markers
           }
           }).Render()
        </div>

    </div>

    <div class="menu" style="background-color:#f2e9e4;width:200px">
        <ul id="menulist" class="menu-options" style="padding: 0;">
        </ul>
    </div>
</div>

<script>
    var menu;
    var menuOption;
    var menuVisible;

    $(document).ready(function () {
        menu = document.querySelector(".menu");
        menuOption = document.querySelector(".menu-option");
        menuVisible = false;
    });


    function tooltipRender(args) {
        if (!args.options.data) {
            args.cancel = true;
        }
    }



    function mapsload(args) {
        var theme = 'Material';
        args.maps.theme = (theme.charAt(0).toUpperCase() + theme.slice(1));
        args.maps.layers[0].markerClusterSettings.imageUrl = 'https://' + window.location.host + '/images/diamond.png';
        args.maps.zoomSettings.shouldZoomInitially = true;
    }

    var cursorX;
    var cursorY;
    document.addEventListener('click', printMousePos, true);
    function printMousePos(e) {
        cursorX = e.pageX;
        cursorY = e.pageY;
        $("#test").text("pageX: " + cursorX + ",pageY: " + cursorY);
        if (menuVisible) toggleMenu("hide");
    }


    window.addEventListener("click", e => {
        //if (menuVisible) toggleMenu("hide");
    });


    function onMarkerClick(data, e) {
        
        data = data.replaceAll("%#$%", " ");
        var dataObj = data.split("|");

        ////alert(data);
        ////var data = "";//JSON.stringify(event.layer.dataObject);
        //var url = "/cms/businessAnalytics/CCTVMonitorView?data=" + data;
        //var win = GetMainWindow();
        //win.iframeOpenUrl = url;
        //win.OpenWindow({ Title: 'Live Camera', Width: 1000, Height: 600 });
        //return false;

        $("#menulist li").remove();
        dataObj.forEach(x => {
            var d = x.split(",");
            if (d[0] != undefined && d[0] != "") {
                $("#menulist").append("<li class='menu-option' onclick='onMapObj(\"" + x + "\");'><span class='fas fa-map-marker-alt' style='margin-right:2px;color:red'></span>" + d[0] + "</li>"); //same template page
            }

        });
        const origin = {
            left: cursorX,
            top: cursorY
        };
        setPosition(origin);

        return false;
    }

    function onMapObj(obj) {
        var title = obj.split(",")[0];
        var url = "/cms/businessAnalytics/CCTVMonitorView?data=" + obj;
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: title, Width: 1000, Height: 600 });
        return false;
    }

    function setPosition(origin) {
        
        menu.style.left = `${origin.left}px`;
        menu.style.top = `${origin.top}px`;
        toggleMenu("show");
    }

    function toggleMenu(command) {
        menu.style.display = command === "show" ? "block" : "none";
        menuVisible = !menuVisible;
    }

    //$(".marker-event").on('click', function (event) {
    //    
    //    event.stopPropagation();
    //    event.stopImmediatePropagation();
    //    //(... rest of your JS code)
    //});

    //$('ifrm').contents().find('body').css('backgroundColor', 'red');

    //ShowLoader($('#main-content'));
    function onMyFrameLoad() {
        HideLoader($('#main-content'));
    };

</script>
<style>
    #container {
        cursor: pointer;
        display: block;
    }

    .marker-event {
        pointer-events: auto !important;
    }

    .pin {
        width: 40px;
        height: 40px;
        border-radius: 50% 50% 50% 0;
        background: #CA091A;
        position: absolute;
        transform: rotate(-45deg);
        left: 50%;
        top: 50%;
        margin: -10px 0 0 -15px;
    }

    .pin-label {
        width: 30px;
        height: 25px;
        font-size: 15px;
        font-weight: bold;
        margin: 8px 0 0 5px;
        background: #fff;
        text-align: center;
        padding-top: 2px;
        position: absolute;
        border-radius: 50%;
        transform: rotate( 45deg );
    }

    .bounce {
        animation-name: bounce;
        animation-fill-mode: both;
        animation-duration: 1s;
    }

    .pulse {
        border-radius: 50%;
        height: 30px;
        width: 30px;
        position: absolute;
        left: 50%;
        top: 50%;
        margin: 30px 0px 0px 0px;
        transform: rotateX( 55deg );
        z-index: -2;
    }

        .pulse:after {
            content: "";
            border-radius: 50%;
            height: 40px;
            width: 40px;
            position: absolute;
            margin: -13px 0 0 -13px;
            animation: pulsate 1s ease-out;
            animation-iteration-count: infinite;
            opacity: 0;
            box-shadow: 0 0 1px 2px #00cae9;
            animation-delay: 1.1s;
        }

    @@keyframes pulsate {
        0% {
            transform: scale(0.1, 0.1);
            opacity: 0;
        }

        50% {
            opacity: 1;
        }

        100% {
            transform: scale(1.2, 1.2);
            opacity: 0;
        }
    }

    @@keyframes bounce {
        0% {
            opacity: 0;
            transform: translateY(-2000px) rotate(-45deg);
        }

        60% {
            opacity: 1;
            transform: translateY(30px) rotate(-45deg);
        }

        80% {
            transform: translateY(-10px) rotate(-45deg);
        }

        100% {
            transform: translateY(0) rotate(-45deg);
        }
    }

    .menu .menu-options .menu-option {
        word-break: break-all;
        padding: 0;
        font-weight: 500;
        z-index: 1;
        font-size: 14px;
        padding: 10px 40px 10px 20px;
        cursor: pointer;
        border-bottom: solid;
        border-color: lightgrey;
    }

    .center {
        text-align: center;
    }

    .menu {
        width: 120px;
        z-index: 2;
        box-shadow: 0 4px 5px 3px rgba(0, 0, 0, 0.2);
        position: fixed;
        display: none;
        transition: 0.2s display ease-in;
        cursor: pointer;
    }

        .menu .menu-options {
            list-style: none;
            padding: 10px 0;
            z-index: 1;
            margin: unset;
            cursor: pointer;
        }

            .menu .menu-options .menu-option {
                cursor: pointer;
                font-weight: 500;
                z-index: 1;
                font-size: 14px;
                padding: 10px 40px 10px 20px;
                cursor: pointer;
                border-bottom: solid;
                border-color: lightgrey;
            }

                .menu .menu-options .menu-option:hover {
                    background: white; /*//rgba(0, 0, 0, 0.2);*/
                    color: black;
                    cursor: pointer;
                }

    button {
        background: grey;
        border: none;
    }

        button .next {
            color: green;
        }

        button[disabled=false]:hover .next {
            color: red;
            animation: move 0.5s;
            animation-iteration-count: 2;
        }

    @@keyframes move {
        from {
            transform: translate(0%);
        }

        50% {
            transform: translate(-40%);
        }

        to {
            transform: transform(0%);
        }
    }
</style>

<style>
    #container1 {
        cursor: pointer;
        display: block;
    }

    #container2 {
        cursor: pointer;
        display: block;
    }

    .marker-event {
        pointer-events: auto !important;
    }

    .pin {
        width: 40px;
        height: 40px;
        border-radius: 50% 50% 50% 0;
        background: #CA091A;
        position: absolute;
        transform: rotate(-45deg);
        left: 50%;
        top: 50%;
        margin: -10px 0 0 -15px;
    }

    .pin-label {
        width: 30px;
        height: 25px;
        font-size: 15px;
        font-weight: bold;
        margin: 8px 0 0 5px;
        background: #fff;
        text-align: center;
        padding-top: 2px;
        position: absolute;
        border-radius: 50%;
        transform: rotate( 45deg );
    }

    .bounce {
        animation-name: bounce;
        animation-fill-mode: both;
        animation-duration: 1s;
    }

    .pulse {
        border-radius: 50%;
        height: 30px;
        width: 30px;
        position: absolute;
        left: 50%;
        top: 50%;
        margin: 30px 0px 0px 0px;
        transform: rotateX( 55deg );
        z-index: -2;
    }

        .pulse:after {
            content: "";
            border-radius: 50%;
            height: 40px;
            width: 40px;
            position: absolute;
            margin: -13px 0 0 -13px;
            animation: pulsate 1s ease-out;
            animation-iteration-count: infinite;
            opacity: 0;
            box-shadow: 0 0 1px 2px #00cae9;
            animation-delay: 1.1s;
        }

    @@keyframes pulsate {
        0% {
            transform: scale(0.1, 0.1);
            opacity: 0;
        }

        50% {
            opacity: 1;
        }

        100% {
            transform: scale(1.2, 1.2);
            opacity: 0;
        }
    }

    @@keyframes bounce {
        0% {
            opacity: 0;
            transform: translateY(-2000px) rotate(-45deg);
        }

        60% {
            opacity: 1;
            transform: translateY(30px) rotate(-45deg);
        }

        80% {
            transform: translateY(-10px) rotate(-45deg);
        }

        100% {
            transform: translateY(0) rotate(-45deg);
        }
    }

    .menu .menu-options .menu-option {
        word-break: break-all;
        padding: 0;
        font-weight: 500;
        z-index: 1;
        font-size: 14px;
        padding: 10px 40px 10px 20px;
        cursor: pointer;
        border-bottom: solid;
        border-color: lightgrey;
    }

    .center {
        text-align: center;
    }

    .menu {
        width: 120px;
        z-index: 2;
        box-shadow: 0 4px 5px 3px rgba(0, 0, 0, 0.2);
        position: fixed;
        display: none;
        transition: 0.2s display ease-in;
        cursor: pointer;
    }

        .menu .menu-options {
            list-style: none;
            padding: 10px 0;
            z-index: 1;
            margin: unset;
            cursor: pointer;
        }

            .menu .menu-options .menu-option {
                cursor: pointer;
                font-weight: 500;
                z-index: 1;
                font-size: 14px;
                padding: 10px 40px 10px 20px;
                cursor: pointer;
                border-bottom: solid;
                border-color: lightgrey;
            }

                .menu .menu-options .menu-option:hover {
                    background: white; /*//rgba(0, 0, 0, 0.2);*/
                    color: black;
                    cursor: pointer;
                }

    button {
        background: grey;
        border: none;
    }

        button .next {
            color: green;
        }

        button[disabled=false]:hover .next {
            color: red;
            animation: move 0.5s;
            animation-iteration-count: 2;
        }

    @@keyframes move {
        from {
            transform: translate(0%);
        }

        50% {
            transform: translate(-40%);
        }

        to {
            transform: transform(0%);
        }
    }

    #container {
        /* height: 80vh !important;
        width: 100px;
        background-color: #eeeeee;*/
    }

    #container2 {
        /* height: 80vh !important;
        width: 100px;
        background-color: #eeeeee;*/
    }
</style>
@Html.EJS().ScriptManager()