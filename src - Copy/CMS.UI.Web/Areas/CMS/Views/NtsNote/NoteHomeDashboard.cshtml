@inject IStringLocalizer<CMS.UI.Web.Areas.CMS.Controllers.NtsNoteController> Resource
@using CMS.Data.Model
@using CMS.UI.ViewModel
@using Kendo.Mvc.UI
@using CMS.Common

@model ProjectDashboardViewModel;

@{
    ViewBag.Title = @Resource["NoteHomeDashboard"];
    Layout = null;
}

<style>
    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .k-listview {
        border: none !important;
    }

    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }
    .banner-container {
        position: relative;
        color: white;
    }

    .banner-text {
        position: absolute;
        top: 14px;
        left: 60px;
        font-size: 35px;
    }
</style>
<script>
    $(document).ready(function () {

     $("#mdlServiceStatus").kendoMultiSelect({
        dataTextField: "Name",
        dataValueField: "Id",
        filter: "contains",
        autoBind: true,
        autoClose: false,
        change: onChangeServiceStatus,
        dataSource: {
            transport: {
                read: {
                    url: "@Url.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_NOTE_STATUS" })",
                }
            }
        }
     });

        var dataSource = new kendo.data.DataSource({
            transport: {
                read: {
                    url: "/PJM/Project/GetProjectNotificationList?projectId="+'@Model.Id',
                    dataType: "json"
                }
            },
        });

        $("#ProjectTask12").kendoListView({
            dataSource: dataSource,
            dataBound: OnDataBound,
            template: kendo.template($("#listTemplateUpComing2").html())
        });
     });

    function onTaskSeriesClick(e) {

        //alert("onTaskSeriesClick");
        //console.log(e.dataItem);
        var selectvalue = e.dataItem.Id;
        var multiselect = $("#mdlServiceStatus").data("kendoMultiSelect");
        var mdlvalue = multiselect.value();
        var newvalue = new Array();
        newvalue = mdlvalue;
        var addflag = true;
        if (newvalue.length > 0) {
            var i = 0;
            for (i = 0; i < newvalue.length;i++) {
                if (newvalue[i] == selectvalue) {
                    addflag = false;
                }
            }
            if (addflag) {
                newvalue.push(selectvalue);
            }
        } else {
            newvalue.push(selectvalue);
        }
        multiselect.value(newvalue);

        //var multiselectTaskAssigned = $("#mdlServiceOwnedRequested").data("kendoMultiSelect");
        //var assignedvalue = multiselectTaskAssigned.value();
        //var multiselectTaskStages = $("#mdlTaskStages").data("kendoMultiSelect");
        //var stagevalue = multiselectTaskStages.value();

        var search = {
            NoteStatusIds: newvalue,
            //UserType: assignedvalue,
        };
        getrojectGridData(search);
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
    }


    function onChangeServiceStatus() {
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        var statusvalue = multiselectTaskStatus.value();
        var search = {
            NoteStatusIds: statusvalue,
        };
        getrojectGridData(search);
       // $("#kgdProjectGridView").data("kendoGrid").dataSource.read(search);
    }

    function OnDataBound(arg) {
        document.getElementById('projectFiles').style.border = 'none';
        var data = $("#projectFiles").data("kendoListView").dataSource.data();
        var data1 = $("#ProjectTask12").data("kendoListView").dataSource.data();
        if (data.length == 0) {
            $('#no-data-file').show();
        } else {
            $('#no-data-file').hide();
        }
        if (data1.length == 0) {
            $('#no-data-notifi').show();
        } else {
            $('#no-data-notifi').hide();
        }
    }

    function OnTaskAssChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-taskchart').show();

        } else {
            $('#no-data-taskchart').hide();
        }
    }

    function OnTaskStatusChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-chart').show();

        } else {
            $('#no-data-chart').hide();
        }
    }

    function OnTaskTimeChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-timechart').show();

        } else {
            $('#no-data-timechart').hide();
        }
    }
    function OnProjectStageChartDataBound(e) {
        var view = e.sender.dataSource.view();
        if (view.length === 0) {
            $('#no-data-stagechart').show();

        } else {
            $('#no-data-stagechart').hide();
        }
    }
    function onFilterReset() {
        var newvalue = new Array();
        var multiselectTaskStatus = $("#mdlServiceStatus").data("kendoMultiSelect");
        multiselectTaskStatus.value(newvalue);
        getrojectGridData();
      //  $("#kgdProjectGridView").data("kendoGrid").dataSource.read();
    }

</script>

@*<div style=""><img style="width:100%; height:100px" src="~/images/NoteHomeBanner.jpeg" /></div>*@
<div class="banner-container">
    <img style="width:100%; height:100px" src="~/images/HRBanners/Note Home Dashboard.png" />
    <div class="banner-text">@Resource["NoteHomeDashboard"]</div>
</div>
<div class="row hr-pad-top-10">
    <div class="col-md-6">
        <h4>
        </h4>
    </div>
</div>
@*@if (Model.ProjectList != null && Model.ProjectList.Count() > 0)
    {*@

<div id="appWrapper" class="hr-pad-top-15">
    @*@if (Model.TemplateUserType == NtsUserTypeEnum.Owner)
        {
            <div class="row no-gutter btn-group btn-group-sm" role="group" style="margin:5px;margin-left:10px;">-->
                <button type="button" onclick="GOWBS();" class="btn btn-sm btn-primary">
                    <i class="fad fa-network-wired"></i>&nbsp;&nbsp;Go To WorkBreakdown Structure
                </button>
            </div>
        }*@
    @*<div class="row no-gutter btn-group btn-group-sm" role="group" style="width:100%;margin:5px;">
            <button type="button" class="btn btn-success col-sm-2">Project Progress&nbsp;<b>@Model.ProgressPercentage%</b></button>
            <button type="button" onclick="GotoTask();" class="btn btn-success col-sm-2">View All Tasks&nbsp;<b>@Model.TaskCount</b></button>
            <button type="button" class="btn btn-success col-sm-2">Time Entry&nbsp;<b>@Model.TaskTimeEntryHours</b></button>
            <button type="button" class="btn btn-success col-sm-2">Activities&nbsp;<b>@Model.ActivityCount</b></button>
            <button type="button" class="btn btn-success col-sm-2">Project Estimate&nbsp;<b>@Model.ProjectEstimatedHours</b></button>
            <button type="button" class="btn btn-success col-sm-2">Task Estimate&nbsp;<b>@Model.TaskEstimatedHours</b></button>
        </div>*@


    <div class="row">
        <div class="col-sm-4">

            <div class="panel panel-success">
                <div class="panel-heading">@Resource["NoteStatus"]</div>
                <div class="panel-body">
                    @(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                            .Name("chartTaskByStatus")
                            .Legend(legend => legend
                            .Position(ChartLegendPosition.Bottom)
                            )
                            .DataSource(ds => ds
                            .Read(read => read.Action("GetNoteChartByStatus", "NtsNote", new { @area = "Cms" }))                            
                            )
                            .SeriesColors(new string[] { "#ff9800", "#fad84a", "#4caf50", "#03a9f4" })
                            .Series(series =>
                            {
                                series.Donut(model => model.Value, model => model.Type)
                                .Labels(labels => labels
                                    .Visible(true)
                                    .Position(ChartPieLabelsPosition.Center)
                                    //.Template("#= category # - #= kendo.format(' {0:n0}', value) # ")
                                    .Background("transparent")
                                );
                            }).HtmlAttributes(new { @style = "height:300px;" })
                            .Tooltip(tooltip => tooltip
                            .Visible(true)
                            .Template("#= category # - #= kendo.format('{0:P}', percentage) #")                            
                            )
                            .Events(events => events
                            .SeriesClick("onTaskSeriesClick")
                            .DataBound("OnTaskStatusChartDataBound")
                            )
                    )

                  <div id="no-data-chart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>@SharedResource["NoDataFound"]</span></div>

                </div>
            </div>
        </div>
        @*<div class="col-sm-4">
            <div class="panel panel-info">
                <div class="panel-heading">@Resource["NoteOwner"]</div>
                <div class="panel-body">
                    @(Html.Kendo().Chart<ProjectDashboardChartViewModel>()
                              .Name("chartTaskByType")
                              .Legend(legend => legend
                              .Position(ChartLegendPosition.Bottom)
                              )
                              .DataSource(ds => ds
                              .Read(read => read.Action("GetNoteChartByUserType", "NtsNote", new { @area = "Cms" }))

                              )
                              .SeriesColors(new string[] { "#03a9f4", "#ff9800", "#fad84a", "#4caf50" })
                              .Series(series =>
                              {
                                  series.Pie(model => model.Value, model => model.Type)
                                  .Labels(labels => labels
                                  .Visible(true)
                                  .Position(ChartPieLabelsPosition.Center)
                                  .Background("transparent"));
                              }).HtmlAttributes(new { @style = "height:300px;" })
                               .Tooltip(tooltip => tooltip
                               .Visible(true)
                               .Template("#= category # - #= kendo.format('{0:P}', percentage) #"))
                               .Events(e => e
                               .SeriesClick("onTaskAssignedSeriesClick")
                               .DataBound("OnTaskAssChartDataBound"))
                        )
                    <div id="no-data-taskchart" class="no-data" style="text-align:center"><i class="fad fa-file-exclamation no-data-icon"></i>&nbsp;<span>@SharedResource["NoDataFound"]</span></div>


                </div>
            </div>
        </div>*@
        @*<div class="col-sm-4">
            <div class="panel panel-warning">
                <div class="panel-heading">@SharedResource["Note"]</div>
                <div class="panel-body">

                </div>
            </div>
        </div>*@

    </div>

    @*@(Html.Kendo().ListView<NotificationViewModel>()
                               .Name("ProjectTask12")
                               .TagName("div")
                               .AutoBind(true)
                               .ClientTemplateId("listTemplateUpComing2")
                               .Events(e => e.DataBound("OnDataBound"))
                               .DataSource(dataSource =>dataSource
                               .Ajax()
                               .Read(read => read.Action("GetProjectNotificationList", "Project", new {@area = "PJM", projectId = Model.Id}))
                               )
                               .HtmlAttributes(new { @Class = "board" })
                            )*@

    <div id="ProjectTask12" class="board"></div>

    <div class="row">
        <div class="col-12">
            <div class="panel panel-filter">
                <div class="panel-heading">@SharedResource["Filter"]</div>
                <div class="panel-body">
                    <div class="row" style="padding:5px;">
                        <div class="col-3">
                            @Resource["NoteStatus"]
                            @*@(Html.Kendo().MultiSelect().Name("mdlServiceStatus")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetLOVIdNameList", "LOV", new { area = "CMS", lovType = "LOV_NOTE_STATUS" });
                                 });
                             })
                             .AutoClose(false)
                             .Placeholder(@Resource["FilterNoteStatus"])
                             .DataTextField("Name")
                             .DataValueField("Id")
                             .Events(e=>e.Change("onChangeServiceStatus"))
                             .HtmlAttributes(new { @class = "hr-x-large search-control" })
            )*@
                            <select id="mdlServiceStatus" data-placeholder="@Resource["FilterNoteStatus"]" class="hr-x-large search-control"></select>

                        </div>
                        <div class="col-3">
                            @*@Resource["NoteOwner"]
                            @(Html.Kendo().MultiSelect().Name("mdlServiceOwnedRequested")
                             .DataSource(source =>
                             {
                                 source.Read(read =>
                                 {
                                     read.Action("GetEnumIdNameList", "Home", new { enumType = "NtsUserTypeEnum",area=""});
                                 });
                             })
                             .AutoClose(false)
                             .Placeholder(Resource["FilterNoteOwner"])
                             .DataTextField("Name")
                             .DataValueField("EnumId")
                             .Events(e => e.Change("onChangeTaskAssigned"))
                             .HtmlAttributes(new { @class = "hr-x-large search-control" })
            )*@
                        </div>
                        <div class="col-3">
                            @*Project Stages
                                                    @(Html.Kendo().MultiSelect().Name("mdlTaskStages")
                                                 .DataSource(source =>
                                                 {
                                                     source.Read(read =>
                                                     {
                                                         read.Action("GetProjectStageIdNameList", "Project", new { area = "PJM", projectId=Model.Id });
                                                     });
                                                 })
                                                 .AutoClose(false)
                                                 .Placeholder("Filter Task Stages")
                                                 .DataTextField("Name")
                                                 .DataValueField("Id")
                                                 .Events(e => e.Change("onChangeTaskStages"))
                                                 .HtmlAttributes(new { @class = "hr-x-large search-control" })
                                )*@
                        </div>
                        <div class="col-3" style="text-align:center;">
                            <br />
                            <button class="btn btn-filter-reset" onclick="onFilterReset()" title="@Resource["ResetFilter"]">@SharedResource["Reset"]</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-12">
            <div class="panel panel-primary">
                <div class="panel-heading">@Resource["NoteDetails"]</div>
                <div class="panel-body">
                    <div id="kgdProjectGridView" style="width: 100%;height:550px" class="ag-theme-alpine"></div>

                    <script>


    var columnDefs1 = [

           {
            field: "NoteNo",
            headerName: "@Resource["NoteNo"]",
           },
           {
               field: "NoteSubject",
                headerName:"@Resource["NoteSubject"]"

           },
           {
               field: "OwnerUserName",
                headerName:"@Resource["NoteOwner"]"
           },
            {
                field: "NoteStatusName",
                headerName:"@Resource["NoteStatus"]"
           },

        {
            field: "StartDate",
            headerName: "@Resource["StartDate"]",
            cellRenderer: params => {

                var date = new Date(params.value);
                return date.getDate() + "/" + (date.getMonth() + 1) + "/" + date.getFullYear();
            }

        },

       

    ];

    $(function () {

        getrojectGridData();



    });

                        function getrojectGridData(search) {
                            document.getElementById("kgdProjectGridView").innerHTML = "";

        gridConfig(
            "kgdProjectGridView",
            "/Cms/NtsNote/ReadNoteDashBoardGridData?NoteStatusIds=" + search.NoteStatusIds,
            columnDefs1,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
                    </script>

                    @*@(Html.Kendo().Grid<NoteViewModel>()
            .Name("kgdProjectGridView")
            .Columns(columns =>
            {

                columns.Bound(p => p.NoteNo).Title(@Resource["NoteNo"]).Width(300);
                columns.Bound(p => p.NoteSubject).Title(@Resource["NoteSubject"]).Width(250);
                columns.Bound(p => p.OwnerUserName).Title(Resource["NoteOwner"]).Width(250);
                //columns.Bound(p => p.TemplateUserType).Width(200);
               // columns.Bound(p => p.Priority).Width(200);
                columns.Bound(p => p.NoteStatusName).Title(@Resource["NoteStatus"]).Width(200);
                columns.Bound(p => p.StartDate).Title(@SharedResource["StartDate"]).Format("{0:dd MMM yyyy}").Width(150);
                //columns.Bound(p => p.ExpiryDate).Title("Expiry Date").Format("{0:dd MMM yyyy}").Width(150);
            })
            .ToolBar(toolbar =>
            {

                toolbar.Search().Text(@SharedResource["Search"]);
            })
            .ColumnMenu(col=>col.Filterable(false))
            .Height(700)
            .Editable()
            .Pageable()
            .Sortable()
            .Navigatable()
            .Resizable(r=>r.Columns(true))
            .Reorderable(r => r.Columns(true))
            .Groupable(g=>g.ShowFooter(false))
            .Filterable()
            .Scrollable()
            //.Events(events => events.DataBound("onDataBound"))
            .DataSource(dataSource => dataSource
                .Ajax()
                .Batch(true)
                .PageSize(20)
                .AutoSync(true)
                .ServerOperation(false)
                //.Events(events => events.Error("error_handler"))
                .Model(model =>
                {
                    model.Id(p => p.Id);

                })

                .Read("ReadNoteDashBoardGridData", "NtsNote", new { @area = "Cms" })

            )
        )*@
                </div>
            </div>
        </div>
    </div>
</div>

@*}
    else
    {
        <iframe src="/pjm/project/ProjectNotAssigned" style="width:100%;height:60vh"></iframe>
    }*@