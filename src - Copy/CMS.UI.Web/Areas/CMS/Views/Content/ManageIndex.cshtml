@using CMS.UI.ViewModel;
@using CMS.Common;

@{
    ViewData["Title"] = "Portal";
   // Layout = null;
    //Layout = "/Views/Shared/_PopupLayout.cshtml";
    Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
}
@inject CMS.Common.IUserContext _userContext
@model PageIndexViewModel

<style>
    .cms-manageportal-footer {
/*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }
    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }
    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }
    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }
/*    k-colorpicker {
        width: 100px;
    }

    .k-colorpicker .k-selected-color {
            width: 100px;
    }*/
 
</style>
<script type="text/javascript">
    function DataBound(e) {
        $(".selectcheckbox").bind("click", function (e) {
            e.stopPropagation();
            $(e.target).closest("tr").toggleClass("k-state-selected");
        });

        var rows = e.sender.element.find("tr");
        rows.each(function (e) {
            $(this).children().first().on("click", onFirstTDClick);
        })
    }
    function onFirstTDClick(e) {
        e.stopPropagation();
        var tr = $(e.target).closest("tr");
        tr.find('[type=checkbox]').prop('checked', !tr.hasClass("k-state-selected"));
        tr.toggleClass("k-state-selected");

    }

    function ongridChange(arg) {

        var selectedRows = this.select();
        this.editRow(this.select());


        $('tr').find('[type=checkbox]').prop('checked', false);
        $('tr.k-state-selected').find('[type=checkbox]').prop('checked', true);

        var selectedRows = this.select();
        var selectedDataItems = [];
        for (var i = 0; i < selectedRows.length; i++) {
            var dataItem = this.dataItem(selectedRows[i]);
            selectedDataItems.push(dataItem);
        }
        selectedRows = selectedDataItems;
    }
    function SaveData(e) {
        debugger
        var selectedRows = [];
        var entityGrid = $("#grid").data("kendoGrid");
        var rows = entityGrid.select();
        rows.each(function (index, row) {
            var selectedItem = entityGrid.dataItem(row);
            selectedRows.push(selectedItem);
        });
        console.log(selectedRows);
        $("#RowData").val(JSON.stringify(selectedRows));
        //$.ajax({
        //    type: "POST",
        //    url: "/cms/content/ManageTableData",
        //    data: { rowData:JSON.stringify(selectedRows) },
        //    success: function (response)
        //    {

        //    },
        //    dataType: "json"
        //});
    }

    function OnCancel(args) {

    }
    $(document).ready(function () {
        $('#EnableDeletebtn').change(function () {
            debugger
            if (this.checked) {

                $('#confirmationdel').show();
            }
            else {
                $('#confirmationdel').hide();
            }

        });

        $("#IndexRenderingType").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            value:'@Model.IndexRenderingType.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=IndexRenderingTypeEnum",
                    }
                }
            }
        });

        $("#CreateStyle").kendoDropDownList({
                                    dataTextField: "Text",
                                    dataValueField: "Value",
                                    value:'1',
                                    dataSource: [
                                        { Text: "Popup-Centre", Value: "1" },
                                        { Text: "Popup-left", Value: "2" },
                                        { Text: "Popup-right", Value: "3" },
                                        { Text: "New Page", Value: "4" },

                                        ],

         });
    });
    function closeNavPortal() {
      
        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }
    function onFileUploadSuccessLogo(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-mylogoimage").attr("src", "/cms/content/GetBackgroundImage?id=" + e.response.fileId);
            $("#LogoId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onFileUploadSuccessBanner(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-mybannerimage").attr("src", "/cms/content/GetBackgroundImage?id=" + e.response.fileId);
            $("#BannerId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

</script>
<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">

    <form asp-controller="Content" asp-action="ManageTableData" method="post" class="form-horizontal">
        @Html.HiddenFor(x => x.RowData)
        @Html.HiddenFor(x => x.PageId)
        @*<div class="col-sm-12" style="text-align:right;">
            <button type="submit" class="btn btn-success" onclick="SaveData()">Save</button>
            <button type="button" class="btn btn-light">Close</button>
        </div>*@
        <div class="row no-gutters pad-10">
            <div class="col-2">
                <label for="MenuName">Rendering Type</label>
            </div>
            <div class="col-9">
                @*@(Html.Kendo().DropDownListFor(x => x.IndexRenderingType)
                            .DataSource(source =>
                            {
                                source.Read(read =>
                                {
                                    read.Action("GetEnumIdNameList", "Home", new { @area = "", enumType = "IndexRenderingTypeEnum" });
                                });
                            })
                 .DataTextField("Name")
                 .DataValueField("Id")
                           .HtmlAttributes(new { @class = "hr-x-large" })
        )*@
                <input asp-for="IndexRenderingType" id="IndexRenderingType" class = "hr-x-large" />
            </div>
        </div>

        <div class="row no-gutters pad-10">
            <div class="col-2">
                <input asp-for="EnableCreateButton" type="checkbox" name="EnableCreatebtn" class="k-checkbox" value="CreateButton" style="margin-right:5px;" />
                <label>Enable Create Button</label>
            </div>

            <div class="col-3" style="margin-right:5px;">
                <input asp-for="CreateButtonText" type="text" placeholder="Create Button Text" class="form-control" />
            </div>
            <div class="col-3" style="margin-right:5px;">
                <input asp-for="CreateButtonCss" type="text" placeholder="Create Button Css" class="form-control" />
            </div>

            <div class="col-3">

                @*@(Html.Kendo().DropDownListFor(x=>x.CreateStyle)
           // .Name("Style")
              .DataTextField("Text")
              .DataValueField("Value")
              .BindTo(new List<SelectListItem>() {
                  new SelectListItem() {
                      Text = "Popup-Centre",
                      Value = "1"
                  },
                  new SelectListItem() {
                      Text = "Popup-left",
                      Value = "2"
                  },
                     new SelectListItem() {
                      Text = "Popup-right",
                      Value = "3"
                  },
                       new SelectListItem() {
                      Text = "New Page",
                      Value = "4"
                  },

              })
              .Value("1")
             // .HtmlAttributes(new { style = "width: 100%" })
        )*@
                <input asp-for="CreateStyle" id="CreateStyle"  />
            </div>


        </div>
        <div class="row no-gutters pad-10">
            <div class="col-2">
                <input asp-for="EnableEditButton" type="checkbox" name="EnableEditbtn" class="k-checkbox" value="EditButton" style="margin-right:5px;" />
                <label>Enable Edit Button</label>
            </div>
            <div class="col-3" style="margin-right:5px;">
                <input asp-for="EditButtonText" type="text" placeholder="Edit Button Text" class="form-control" />
            </div>
            <div class="col-3">
                <input asp-for="EditButtonIcon" type="text" placeholder="Edit Button Css" class="form-control" />
            </div>
        </div>



        <div class="row no-gutters pad-10">
            <div class="col-2">
                <input asp-for="EnableDeleteButton" type="checkbox" name="EnableDeletebtn" id="EnableDeletebtn" class="k-checkbox" value="DeleteButton" style="margin-right:5px;" />
                <label>Enable Delete Button</label>
            </div>
            <div class="col-3" style="margin-right:5px;">
                <input asp-for="DeleteButtonText" type="text" placeholder="Delete Button Text" class="form-control" />
            </div>
            <div class="col-3">

                <input asp-for="DeleteButtonIcon" type="text" placeholder="Delete Button Css" class="form-control" />
            </div>

        </div>
        <div class="row no-gutters pad-10" id="confirmationdel" style="display:none;">
            <div class="col-2 ">
                <input asp-for="EnableDeleteConfirmation" type="checkbox" name="EnableDeleteConfirmation" class="k-checkbox" value="DeleteConfirmation" style="margin-right:5px;" />
                <label>Enable Delete Confirmation</label>
            </div>
            <div class="col-9">
                <input asp-for="DeleteConfirmationMessage" type="text" placeholder="Delete Confirmation Message" class="form-control" />
            </div>

        </div>
        <div class="row pad-10">
            @*@(Html.Kendo().Grid<PageIndexColumnViewModel>
    ()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Template("<input class='selectcheckbox' type='checkbox' />").Title("Select").Width(50);
        // columns.Select().Width(50);
        columns.Bound(p => p.ColumnName).Width(120);
        columns.Bound(p => p.HeaderName).Width(120);
        columns.Bound(p => p.EnableSorting).Width(120);
        columns.Bound(p => p.EnableFiltering).Width(120);
        columns.Bound(p => p.SequenceOrder).Width(120);
        columns.Bound(p => p.AdvanceSetting).Width(120);
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Sortable()
    .Scrollable()
    //.Selectable(x=>x.Mode(GridSelectionMode.Multiple).Type(GridSelectionType.Row))
     .Events(ev => ev.Change("ongridChange")
     .DataBound("DataBound")
    )
    .HtmlAttributes(new { style = "height:550px;" })
    .DataSource(dataSource => dataSource
    .Ajax()
     .Batch(true)
    .Read(read => read.Action("ReadTableProperties", "Content"))
     .Model(model =>
     {
         model.Id(p => p.Id);
         model.Field(p => p.Id).Editable(false);
         model.Field(p => p.ColumnName).Editable(false);
         model.Field(p => p.AdvanceSetting).Editable(false);
     })
    .PageSize(20)

    )

    )*@
        </div>
        <div class="cms-footer">
            <div class="col-sm-12" style="text-align:right;">
                <button type="submit" class="btn btn-success" onclick="SaveData()">Save</button>
                
            </div>
            @*<input type="button" class="btn btn-link" value="Save and Preview" onclick="OnSave('Preview')" />
            <input type="button" class="btn btn-success" value="Save and Publish" onclick="OnSave('Publish')" />
            <input type="button" class="btn btn-primary" value="Save" onclick="OnSave()" />*@
        </div>
    </form>
</div>

