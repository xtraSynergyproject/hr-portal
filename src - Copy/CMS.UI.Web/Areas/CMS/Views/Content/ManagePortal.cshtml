@using CMS.UI.ViewModel;
@using CMS.Common;
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Portal";
    Layout = null;
    Layout = "/Views/Shared/_PopupLayout.cshtml";
}
@inject CMS.Common.IUserContext _userContext
@model PortalViewModel

<style>
    .cms-manageportal-footer {
        /*        position: absolute;*/
        left: 0;
        bottom: 0;
        padding: 10px;
        padding-right: 20px;
        width: 100%;
        background-color: #F8F8F8 !important;
        color: white;
        text-align: right;
    }

    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 75%;
    }

    .style-mylogoimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-mybannerimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-myfaviconimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }

    .style-pickerleft {
        width: 50%;
        float: left;
        padding-bottom: 15px;
    }
    /*    k-colorpicker {
        width: 100px;
    }

    .k-colorpicker .k-selected-color {
            width: 100px;
    }*/
</style>
<div style="margin-top: 5px;padding-left: 20px;padding-right: 20px;width: 100%;">
    @*<h1 class="cms-panel-header-name">@ViewBag.Title</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNavPortal()" title="Close">&times;</a>
        <hr />*@
    <form asp-controller="Content" asp-action="ManagePortal" method="post" class="form-horizontal">
        <div class="text-danger" asp-validation-summary="All"></div>
        <div class="row" style="padding:10px;">
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Name" type="text" class="form-control" placeholder="Enter Name" pattern="[a-zA-Z0-9]*" title="Special character and space not allowed in name." required="required" autocomplete="off" />
                    <label for="Name">Name</label>
                </div>

            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="DisplayName" type="text" class="form-control" placeholder="Enter Display Name" required="required" autocomplete="off" />
                    <label for="displayname">Display Name</label>
                </div>

            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="DomainName" type="text" class="form-control" placeholder="Enter Domain Name [ex. https://mydomain.com]" pattern="((http|https)://)(www.)?[a-zA-Z0-9-.]+.[a-zA-Z]{2,}+(:[0-9])?" title="Domain Name [ex. https://mydomain.com]" autocomplete="off" />
                    <label for="DomainName">Domain Name</label>
                </div>
            </div>

            <div class="col-12">Portal Logo</div>
            <div class="col-12 pad-15" style="min-height:130px;">
                <div class="style-image">
                    @if (Model.LogoId != null)
                    {
                        <img class="style-mylogoimage" src="/cms/Document/GetImageMongo?id=@Model.LogoId" onerror='OnPhotoError(this);' />
                    }
                    else
                    {
                        <img class="style-mylogoimage" style="background-color:gray;" src="/images/200.png" />
                    }

                </div>


            </div>
            <div class="style-upload">
                @*@(Html.Kendo().Upload().Multiple(false)
                .Name("files")
                .Async(a => a
                .Save("SaveFile", "Document", new { @Area="Cms"})
                //.Remove("")
                .AutoUpload(true)
                )
                .Events(e => e.Success("onFileUploadSuccessLogo")
                )
                    .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                    //.MaxFileSize(2097152)
                    )
                    .HtmlAttributes(new { @class = "hr-large" })
            )*@
                @*<div class="row">*@
                <div class="col">
                    <div id="logoFile" class="dm-uploader">
                        <h6 class=" text-muted">Drag &amp; drop files here</h6>

                        <div class="btn btn-primary btn-block ">
                            <span>Open the file Browser</span>
                            <input type="file" title='Click to add Files' />
                        </div>
                    </div>

                </div>
                @*<div class="col">
                <div class="card" style=" overflow-y: auto; height: 200px;">
                    <div class="card-header">
                        File List
                    </div>
                    <ul class="list-unstyled p-2 d-flex flex-column col" id="files">
                        <li id="nofiles" class="text-muted text-center empty">No files uploaded.</li>
                    </ul>
                </div>
            </div>*@
                <div class="col">
                    <button type="button" class="btn btn-light" title="Delete logo" onclick="onLogoDel();"><i class='fa fas fa-trash'></i></button>
                </div>
                @*</div>*@
            </div>
            <div class="col-12">Portal Banner</div>
            <div class="col-12 pad-15" style="min-height:130px;">
                <div class="style-image">
                    @if (Model.BannerId != null)
                    {
                        <img class="style-mybannerimage" src="/cms/Document/GetImageMongo?id=@Model.BannerId" onerror='OnPhotoError(this);' />
                    }
                    else
                    {
                        <img class="style-mybannerimage" style="background-color:gray;" src="/images/200.png" />
                    }

                </div>
                <div class="style-upload">
                    @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @Area="Cms"})
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccessBanner")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                        //.MaxFileSize(2097152)
                        )
                        .HtmlAttributes(new { @class = "hr-large", @id = "files2" })
                )*@
                    <div class="col">
                        <div id="bannerFile" class="dm-uploader">
                            <h6 class=" text-muted">Drag &amp; drop files here</h6>

                            <div class="btn btn-primary btn-block ">
                                <span>Open the file Browser</span>
                                <input type="file" title='Click to add Files' />
                            </div>
                        </div>

                    </div>
                    <button type="button" class="btn btn-light" title="Delete banner" onclick="onBannerDel();"><i class='fa fas fa-trash'></i></button>
                </div>

            </div>
            <div class="col-12">Portal FavIcon</div>
            <div class="col-12 pad-15" style="min-height:130px;">
                <div class="style-image">
                    @if (Model.FavIconId != null)
                    {
                        <img class="style-myfaviconimage" src="/cms/Document/GetImageMongo?id=@Model.FavIconId" onerror='OnPhotoError(this);' />
                    }
                    else
                    {
                        <img class="style-myfaviconimage" style="background-color:gray;" src="/images/200.png" />
                    }

                </div>
                <div class="style-upload">
                    @*@(Html.Kendo().Upload().Multiple(false)
                    .Name("files")
                    .Async(a => a
                    .Save("SaveFile", "Document", new { @Area="Cms"})
                    .AutoUpload(true)
                    )
                    .Events(e => e.Success("onFileUploadSuccessFavIcon")
                    )
                        .Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".jpeg", ".png" })
                        //.MaxFileSize(2097152)
                        )
                        .HtmlAttributes(new { @class = "hr-large", @id = "files3" })
                )*@
                    <div class="col">
                        <div id="iconFile" class="dm-uploader">
                            <h6 class=" text-muted">Drag &amp; drop files here</h6>

                            <div class="btn btn-primary btn-block ">
                                <span>Open the file Browser</span>
                                <input type="file" title='Click to add Files' />
                            </div>
                        </div>

                    </div>

                    <button type="button" class="btn btn-light" title="Delete FavIcon" onclick="onFavIconDel();"><i class='fa fas fa-trash'></i></button>
                </div>

            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="BannerHeight" type="number" min="65" max="200" class="form-control" placeholder="Banner Height" autocomplete="off" />
                    <label for="BannerHeight">Banner Height</label>


                </div>

            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="EnableBreadcrumb" type="checkbox" name="EnableBreadcrumb" class="k-checkbox" />
                    <label>Enable Breadcrumb</label>
                </div>

            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="EnableLegalEntity" type="checkbox" name="EnableLegalEntity" class="k-checkbox" />
                    <label>Enable LegalEntity</label>
                </div>

            </div>

            <div class="col-12 pad-15">
                <table style="width:100%">
                    <tr>
                        <td style="padding-bottom:20px;">
                            <label>Primary Color</label><br />
                            @(Html.Kendo().ColorPickerFor(m => m.PrimaryColor)
                            .HtmlAttributes(new { @class = "form-control" })
                            )
                        </td>
                        <td style="padding-bottom:20px;">
                            <label>Secondary Color</label><br />
                            @(Html.Kendo().ColorPickerFor(m => m.SecondaryColor)
                            .HtmlAttributes(new { @class = "form-control" })
                            )
                        </td>
                    </tr>
                    <tr>
                        <td style="padding-bottom:20px;">
                            <label>Top Banner Back Color</label><br />
                            @(Html.Kendo().ColorPickerFor(m => m.TopBannerBackColor)
                            .HtmlAttributes(new { @class = "form-control" })
                            )
                        </td>
                        <td style="padding-bottom:20px;">
                            <label>Top Banner Fore Color</label><br />
                            @(Html.Kendo().ColorPickerFor(m => m.TopBannerForeColor)
                            .HtmlAttributes(new { @class = "form-control" })
                            )
                        </td>
                    </tr>
                    <tr>
                        <td>
                            <label>Left Menu Back Color</label><br />
                            @(Html.Kendo().ColorPickerFor(m => m.LeftMenuBackColor)
                            .HtmlAttributes(new { @class = "form-control" })
                            )
                        </td>
                        <td>
                            <label>Left Menu Fore Color</label><br />
                            @(Html.Kendo().ColorPickerFor(m => m.LeftMenuForeColor)
                            .HtmlAttributes(new { @class = "form-control" })
                            )
                        </td>
                    </tr>
                </table>
            </div>

            @*<div class="col-12 pad-15">
            <div class="style-pickerleft">
                <label>Left Menu Back Color</label><br />
                @(Html.Kendo().ColorPickerFor(m => m.LeftMenuBackColor)
                        .HtmlAttributes(new { @class = "form-control" })
                        )
            </div>
            <div class="style-pickerleft">
                <label>Left Menu Fore Color</label><br />
                @(Html.Kendo().ColorPickerFor(m => m.LeftMenuForeColor)
                        .HtmlAttributes(new { @class = "form-control" })
                        )
            </div>
        </div>*@
            <div class="col-12">Select Theme</div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(model=>model.Theme)
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("GetEnumIdNameList", "Home", new {@area="", enumType = "ThemeEnum" });
                });
            })
            //.Events(e => e.Change("OnChange"))
            //.OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
            .DataTextField("Name")
            .DataValueField("Id")
            .Value(Model.ThemeData)
            //.Height(100)
            //.Filter(FilterType.Contains)
            .HtmlAttributes(new { @class = "form-control" })
            //.HtmlAttributes(new { @class = "form-control",  @style = "padding-top: 20px !important; height: auto !important;" })
            )*@

                <input asp-for="Theme" id="Theme" style="padding-top: 20px !important; height: auto !important;" />

            </div>
            <div class="col-12">Portal Status</div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownListFor(model=>model.PortalStatus)
            .DataSource(source =>
            {
                source.Read(read =>
                {
                    read.Action("GetEnumIdNameList", "Home", new {@area="", enumType = "PortalStatusEnum" });
                });
            })
            //.Events(e => e.Change("OnChange"))
            //.OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
            .DataTextField("Name")
            .DataValueField("Id")
            .Value(Model.PortalStatusData)
            //.Height(100)
            //.Filter(FilterType.Contains)
            .HtmlAttributes(new { @class = "form-control" })
            //.HtmlAttributes(new { @class = "form-control",  @style = "padding-top: 20px !important; height: auto !important;" })
            )*@
                <input asp-for="PortalStatus" id="PortalStatus" style="padding-top: 20px !important; height: auto !important;" />
            </div>
            <div class="col-12 pad-10">
                <div class="">
                    <input asp-for="EnableMultiLanguage" type="checkbox" name="EnableMultiLanguage" class="k-checkbox" />
                    <label>Enable Multi Language</label>
                </div>
            </div>

            <div class="col-12 pad-10">
                <div class="">
                    <label>Allowed Portal Languages</label>
                    <select asp-for="AllowedLanguageIds" id="AllowedLanguageIds"></select>
                </div>
            </div>


            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="PortalFooterTeext" type="text" name="PortalFooterTeext" class="form-control" />
                    <label>Portal Footer Text</label>
                </div>

            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <label for="QuestionAttachment">User Guide</label>
                    @(Html.Kendo().Upload().Multiple(false)
                        .Name("file")
                        .Async(a => a
                        .Save("SaveFile", "Document", new { @area = "cms" })
                        .AutoUpload(true)
                        )
                        .Events(e => e.Success("onFileUploadSuccess")
                        )
                            //.Files(files =>
                            //{
                            //    if (Model != null && Model.ContractAttachmentSelectedFile != null)
                            //    {
                            //        files.Add().Name(Model.ContractAttachmentSelectedFile.FileName).Extension(Model.ContractAttachmentSelectedFile.FileExtension).Size(Model.ContractAttachmentSelectedFile.ContentLength);
                            //    }
                            //})
                            //.Validation(validation => validation.AllowedExtensions(new string[] { ".gif", ".jpg", ".png" }).MaxFileSize(2097152))
                            .HtmlAttributes(new { @class = "hr-xx-large" })
                    )
                    @if (Model.UserGuideId.IsNotNullAndNotEmpty())
                    {
                        <a href="/cms/Document/GetFileMongo?fileId=@Model.UserGuideId" target="_blank" id="downloadattachment"><i class="fas fa-download" title="Download"></i></a>
                        @*<a href="#" onclick="ViewAttachment('@Model.CoverLetterId');" style="margin-left: 10px;"><i class="fas fa-eye" title="Preview"></i></a>*@
                        @*<i class="fas fa-eye view_attach" title="Preview" onclick="ViewAttachment('@Model.UserGuideId');" style="margin-left: 10px;color:#64aae1;cursor:pointer"></i>*@
                    }
                </div>
            </div>
            <div class="col-12 pad-10">
                <div class="form-label-group">
                    <input asp-for="Layout" type="text" class="form-control" placeholder="Layout" title="Special character and space not allowed in name." autocomplete="off" />
                    <label for="Layout">Layout</label>
                </div>

            </div>
            <div class="col-12 pad-15">
                &nbsp;
            </div>
            <div class="cms-manageportal-footer">
                <input type="button" class="btn btn-link" value="Close" onclick="closeNavPortal()" />
                <input type="submit" class="btn btn-primary" value="Save" />
            </div>
            @*<div class="col-sm-12">
            <button type="submit" class="btn btn-success">Save</button>
            <button type="button" class="btn btn-light" onclick="CloseIframeModal();">Close</button>
        </div>*@
        </div>
        @Html.HiddenFor(x => x.Id)
        @Html.HiddenFor(x => x.ParentId)
        @Html.HiddenFor(x => x.DataAction)
        @Html.HiddenFor(x => x.LogoId)
        @Html.HiddenFor(x => x.BannerId)
        @Html.HiddenFor(x => x.FavIconId)
        @Html.HiddenFor(x => x.UserGuideId)
    </form>
</div>

<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.Success' == "True") {
            //alert("1");
            closeNavPortal();
            //var tree = window.parent.$("#contentTreeView").data("kendoTreeView");
            //tree.dataSource.read();
            //alert("2");
            window.parent.$('#contentTreeView').jstree(true).refresh();

        }


        $("#PortalStatus").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.PortalStatus.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=PortalStatusEnum",
                    }
                }
            }
        });

        $("#Theme").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            optionLabel: "@ApplicationConstant.PlaceHolder_SelectOption",
            value:'@Model.Theme.ToString()',
            dataSource: {
                transport: {
                    read: {
                        url: "/Home/GetEnumIdNameList?enumType=ThemeEnum",
                    }
                }
            }
        });

        $("#AllowedLanguageIds").kendoMultiSelect({
            dataTextField: "Name",
            dataValueField: "Id",
            dataSource: new kendo.data.DataSource({
                transport: {
                    read: {
                        url: "/CMS/LOV/GetLOVIdNameList?lovType=LANGUAGES",
                        dataType: "json"
                    }
                },
            }),
            autoClose: false,
            placeholder: "--Select Languages--",
            value: @Html.Raw(JsonConvert.SerializeObject(Model.AllowedLanguageIds)),
            valuePrimitive: true,
            serverFiltering: true,
            filter: '@FilterType.Contains',
        });

        uploadLogo()
        uploadBanner()
        uploadIcon()
    });

    function uploadLogo() {
        $("#logoFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-mylogoimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#LogoId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }


    function uploadBanner() {
        $("#bannerFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-mybannerimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#BannerId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }


     function uploadIcon() {
         $("#iconFile").dmUploader({ //
            url: '/Cms/Document/SaveFile',
            multiple: false,
            extFilter: ["jpg", "jpeg", "png", "gif"],
            maxFileSize: 3000000, // 3 Megs
            onDragEnter: function () {
                // Happens when dragging something over the DnD area
                this.addClass('active');
            },
            onDragLeave: function () {
                this.removeClass('active');
            },
            onInit: function () {
            },
            onComplete: function () {
            },
            onNewFile: function (id, file) {
                ui_multi_add_file(id, file);
            },
            onBeforeUpload: function (id) {
                ui_multi_update_file_status(id, 'uploading', 'Uploading...');
                ui_multi_update_file_progress(id, 0, '', true);
            },
            onUploadCanceled: function (id) {
                ui_multi_update_file_status(id, 'warning', 'Canceled by User');
                ui_multi_update_file_progress(id, 0, 'warning', false);
            },
            onUploadProgress: function (id, percent) {
                ui_multi_update_file_progress(id, percent);
            },
            onUploadSuccess: function (id, data) {
                $(".style-myfaviconimage").attr("src", "/cms/Document/GetImageMongo?id=" + data.fileId);
                $("#FavIconId").val(data.fileId);

                ui_multi_update_file_status(id, 'success', 'Upload Complete');
                ui_multi_update_file_progress(id, 100, 'success', false);
            },
            onUploadError: function (id, xhr, status, message) {
                ui_multi_update_file_status(id, 'danger', message);
                ui_multi_update_file_progress(id, 0, 'danger', false);
            },
            onFallbackMode: function () {
            },
            onFileSizeError: function (file) {
            }
        });
    }


    function closeNavPortal() {

        var win = GetMainWindow();
        win.CloseWindow();
        return false;
    }
    function onFileUploadSuccessLogo(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-mylogoimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#LogoId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onFileUploadSuccessBanner(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-mybannerimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#BannerId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }
    function onFileUploadSuccessFavIcon(e) {
        if (e.response.success) {
            //alert(e.response.fileId);
            //console.log(e);
            //return true;
            $(".style-myfaviconimage").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);
            $("#FavIconId").val(e.response.fileId);
        }
        else {
            //var msg = ExtractError(e.response.errors, true);
            //alert(msg);
        }
        return true;
    }

    function onLogoDel() {

//        alert("Banner Delete");
        $(".style-mylogoimage").attr("src", "/images/200.png");
        $("#LogoId").val('');
       // var logoupload = $("#files").data("kendoUpload");
        //console.log(logoupload);
        //logoupload.clearFile(function (file) { return true; });
        $("#logoFile").dmUploader("reset");
    }
    function onBannerDel() {

        //        alert("Banner Delete");
        $(".style-mybannerimage").attr("src", "/images/200.png");
        $("#BannerId").val('');
       // var bannerupload = $("#files2").data("kendoUpload");
        //console.log(bannerupload);
       // bannerupload.clearFile(function (file) { return true; });

        $("#bannerFile").dmUploader("reset");
    }
    function onFavIconDel() {

        //        alert("Banner Delete");
        $(".style-myfaviconimage").attr("src", "/images/200.png");
        $("#FavIconId").val('');
        //var faviconupload = $("#files3").data("kendoUpload");
        //console.log(bannerupload);
        //faviconupload.clearFile(function (file) { return true; });
        $("#iconFile").dmUploader("reset");
    }
    function onFileUploadSuccess(e) {
        debugger;
        if (e.response.success) {
            $("#UserGuideId").val(e.response.fileId);
            var newUrl = "/cms/Document/GetFileMongo?fileId=" + $("#UserGuideId").val();
            $("#UserGuideId").attr("href", newUrl);
            // set file id to hdden fileid proprty
            //$.ajax({
            //    url: "/user/ChangeUserProfilePhoto?photoId=" + e.response.fileId,
            //    type: "GET",
            //    contentType: "application/json",
            //    dataType: "JSON",
            //    success: function (response) {
            //        //
            //        $(".avatar-myProfile").attr("src", "/cms/Document/GetImageMongo?id=" + e.response.fileId);

            //    }
            //});

        }
        else {

        }
        return true;
    }
     function ViewAttachment(attachmentId)
    {
        var win = GetMainWindow();
        win.iframeOpenUrl = '@Url.Action("ViewAttachment", "Task", new { @area= "Cms" })?fileId=' + attachmentId;
        win.OpenWindow({ Title: 'View Attachment', Width: 1000, Height: 1000 });
        return false;
    }
</script>