@{
    ViewData["Title"] = "Settings";
    Layout = null;// ViewBag.Layout;
}
@using CMS.UI.ViewModel;
@using CMS.Common;
@inject IUserContext _userContext

@model ServiceViewModel

<style>
    .lang-ctrl-width {
        width: calc(100% - 50px) !important;
        display: inline-block;
    }

    .language-icon {
        cursor: pointer;
    }

    .k-switch-label-off, .k-switch-label-on {
        display: block;
    }

    .style-myiconimage {
        /*border-radius: 50%;*/
        height: 100px;
        width: 100px;
    }

    .style-image {
        width: 30%;
        float: left;
    }

    .style-upload {
        width: 70%;
        float: left;
    }

    .treeheader {
        font-weight: 500;
        text-align: center;
        font-size: medium;
        background-color: #006699;
        color: #f2f2f2 !important;
        border-style: solid;
        border-width: 1px;
        border-color: lightgrey;
        padding: 5px 0px 5px 0px;
    }

    .treebody {
        padding: 10px !important;
        color: black !important;
    }

    .fancytree-icon {
        display: none !important;
    }

    .pagination li:hover {
        cursor: pointer;
    }

    .page {
        font-size: 20px;
        padding: 6px;
        border: solid;
        border-width: thin;
        border-color: lightgrey;
        margin-bottom: 45px;
    }

    .ancpagination {
        padding: 20px;
        border-right: solid;
        padding-top: 8px;
        padding-bottom: 8px;
        border-color: lightgrey;
        border-width: thin;
    }

    /* .nav-tabs > li {
        float: left;
        margin-bottom: -1px;
    }

    .nav > li {
        position: relative;
        display: block;
    }
        .nav > li > a {
            position: relative;
            display: block;
            padding: 10px 15px;
        }
    .nav-tabs > li > a {
        margin-right: 2px;
        line-height: 1.42857143;
        border: 1px solid transparent;
        border-radius: 4px 4px 0 0;
    }
    a {
        color: #337ab7;
        text-decoration: none;
    }
    a {
        background-color: transparent;
    }*/
    label {
        display: inline-block;
        margin-bottom: -1.5rem;
        color: grey;
        float: right;
    }

    .float-container {
        border: solid 1px #ccc;
        position: relative;
    }

        .float-container input {
            border: none;
            outline: 0;
        }

    label {
        position: absolute;
    }

    .upload {
    }

    .upload-div .k-button {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
        min-height: 80px !important;
        background-image: url('../../../../images/logo.png') !important;
        background-repeat: no-repeat !important;
        background-position: left !important;
        position: relative !important;
        padding: 0px !important;
    }

        .upload-div .k-button span, .upload-div .k-upload-files, .upload-div .k-upload-status {
            display: none !important;
        }

    .upload-div .k-dropzone {
        border: none !important;
        background-color: transparent !important;
        width: 100% !important;
        height: 100% !important;
    }
    /* .upload-div {
            border: none !important;
            background-color: transparent !important;
            width: 100% !important;
            height: 100% !important;
            background-image: url('../../../../images/logo.png') !important;
            background-repeat: no-repeat;
            background-position: center;
            position: relative;
        }*/

    .card-header {
        padding: 2px !important;
    }

    .k-listview {
        border: none !important;
    }

    .sidenav {
        height: 100%; /* 100% Full-height */
        width: 0; /* 0 width - change this with JavaScript */
        position: fixed; /* Stay in place */
        z-index: 100; /* Stay on top */
        top: 0; /* Stay at the top */
        left: 0;
        background-color: #fff; /* Black*/
        border-right: 1px solid silver;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 30px; /* Place content 60px from the top */
        transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    }



        /* Position and style the close button (top right corner) */
        .sidenav .closebtn {
            position: absolute;
            top: 0;
            right: 15px;
            font-size: 30px;
            font-weight: bold;
            margin-left: 20px;
            color: gray;
            border: none;
            text-decoration: none;
        }

            .sidenav .closebtn:hover {
                color: red;
            }

    /* Style page content - use this if you want to push the page content to the right when you open the side navigation */
    #component-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #editor-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #overlay {
        position: fixed;
        background: rgba(0,0,0,.5);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
        width: 100%;
        height: 100%;
        z-index: 99;
        right: 100%;
        top: 0;
        /*  transition: right .5s ease;*/
    }

    .overlay {
        right: 0 !important;
        /* transition: right .5s ease !important;*/
    }

    .cms-panel-header-name {
        font-size: 16px;
        font-weight: 700;
        padding: 0 10px;
        width: 80%;
    }
    /*Style for switch checkbox*/
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }

    /*Editor Type Style  */
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }

    .product {
        /*float: left;*/
        /*position: relative;*/
        /*width: 111px;*/
        height: 170px;
        margin: 0 0px;
        /*padding: 0;*/
    }

        .product img {
            width: 110px;
            height: 110px;
        }

        .product .div-icon {
            width: 110px;
            height: 110px;
            background-color: #f8f8f8;
        }

            .product .div-icon svg {
                position: relative;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
            }

        .product h3 {
            margin: 0;
            padding: 3px 5px 0 0;
            max-width: 96px;
            overflow: hidden;
            line-height: 1.1em;
            font-size: .9em;
            font-weight: normal;
            text-transform: uppercase;
            color: #999;
        }

        .product p {
            visibility: hidden;
        }

        .product:hover p {
            cursor: pointer;
            visibility: visible;
            position: absolute;
            width: 110px;
            height: 110px;
            top: 0;
            margin: 0;
            padding: 0;
            line-height: 110px;
            vertical-align: middle;
            text-align: center;
            color: #fff;
            background-color: rgba(0,0,0,0.75);
            transition: background .2s linear, color .2s linear;
            -moz-transition: background .2s linear, color .2s linear;
            -webkit-transition: background .2s linear, color .2s linear;
            -o-transition: background .2s linear, color .2s linear;
        }

    #treelist > .k-toolbar > .k-button-icontext {
        color: white;
        background-color: #0062cc;
    }
    /*Editor Type Style Close */
</style>

<script>
    function OnCreate() {

        var url = '@Url.Action("SelectServiceTemplate", "NtsService", new { @area = "Cms"})?categoryCode=@Model.TemplateCategoryCode&templateCode=@Model.TemplateCode&moduleCodes=@Model.ModuleCode';
            win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Width: 1200, Height: 650, Title: "Add " + '@ViewBag.PageName' });
    }





    $(function () {
        $.contextMenu({
            selector: '#tree-menu',
            trigger: 'left',
            build: function ($trigger, e) {
                debugger;
                var id = $trigger.data('idvalue');
                var code = $trigger.data('type');
                var status = $trigger.data('status');
                  return {
                    callback: function (key, options) {
                        switch (key) {
                            case 'Create':
                                CreateService(id,code);
                                break;
                            case 'Edit':
                                EditService(id, code);
                                break;
                            case 'Delete':
                                OnDelete(id);

                            //    //return false;
                            //    break;
                            default:
                        }
                    },
                    items: {
                        "Create": { name: "Add " + '@ViewBag.PageName', icon: "fas fa-plus" },
                        "Edit": { name: "Manage " + '@ViewBag.PageName', icon: "fas fa-pencil" },
                       "Delete": { name: "Delete " + '@ViewBag.PageName', icon: "fas fa-trash" }
                    }
                };
                @*switch (status) {

                    case 'SERVICE_STATUS_DRAFT':
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'Create':
                                        CreateService(id, code);
                                        break;
                                    case 'Edit':
                                        EditService(id, code);
                                        break;
                                    case 'Delete':
                                        OnDelete(id);

                                    //return false;
                                    //    break;
                                    default:
                                }
                            },
                            items: {
                                "Create": { name: "Add " + '@ViewBag.PageName', icon: "fas fa-plus" },
                                "Edit": { name: "Manage " + '@ViewBag.PageName', icon: "fas fa-pencil" },
                                "Delete": { name: "Delete " + '@ViewBag.PageName', icon: "fas fa-trash" }
                            }
                        };
                        break;
                    default:
                        return {
                    callback: function (key, options) {
                        switch (key) {
                            case 'Create':
                                CreateService(id,code);
                                break;
                            case 'Edit':
                                EditService(id, code);
                                break;
                            case 'Delete':
                                OnDelete(id);

                            //    //return false;
                            //    break;
                            default:
                        }
                    },
                    items: {
                        "Create": { name: "Add " + '@ViewBag.PageName', icon: "fas fa-plus" },
                        "Edit": { name: "Manage " + '@ViewBag.PageName', icon: "fas fa-pencil" },
                       "Delete": { name: "Delete " + '@ViewBag.PageName', icon: "fas fa-trash" }
                    }
                };

                }*@



            }
        });
    });


    function OnAfterServiceCreate() {

     //   $("#treelist").data("kendoTreeList").dataSource.read();
        $('#treetable').jstree(true).refresh();
    }


    function CreateService(Id,templateCode) {
        var  prms = encodeURIComponent('parentServiceId=' + Id);
        var url = '@Url.Action("SelectServiceTemplate", "NtsService", new { @area = "Cms"})?categoryCode=@Model.TemplateCategoryCode&templateCode=@Model.TemplateCode&moduleCodes=@Model.ModuleCode&prms=' + prms;
            win = GetMainWindow();
            win.iframeOpenUrl = url;
            win.OpenWindow({ Width: 1200, Height: 650, Title: "Add " + '@ViewBag.PageName' });
    }

    function EditService(Id, templateCode) {

        var portalId = $('#GlobalPortalId').val();
        var url = '/Cms/Page?lo=Popup&source=View&dataAction=View&templateCodes=' + templateCode +'&portalId=' + portalId + '&recordId=' + Id;
        LoadCmsPartialView(url, 'Service', true, 1200, 650, "Manage " + '@ViewBag.PageName');
        return false;
    }

    function OnDelete(id) {


        kendo.confirm("Are you sure that you want to proceed?").then(function () {
            confirmDelete(id);
        }, function () {

        });

    }

    function confirmDelete(id) {


        $.ajax({

            url: '/cms/NtsService/DeleteServiceBook?serviceId=' + id,
            type: "POST",
            contentType: "application/json",
            dataType: "JSON",
            success: function (response) {

                ShowNotification("Deleted Successfully", "success");
               // $("#treelist").data("kendoTreeList").dataSource.read();
                $('#treetable').jstree(true).refresh();
            }
        });


    }

    function ServiceItemMove(id) {
        var url = '@Url.Action("ServiceItemMove", "NtsService", new { @area = "Cms"})?serviceId=' + id +'&ntsType=Task&ntsId=841084fd-ba1f-4b00-a7b9-6bab64f6473b';
            win = GetMainWindow();
            win.iframeOpenUrl = url;
        win.OpenWindow({ Width: 800, Height: 650, Title: "Service Item Move "});
    }

    function getTree() {
        debugger;
        $("#treetable").fancytree({
            extensions: ["table"],
            source: $.ajax({
                url: "/Cms/NtsService/ReadServiceBookDataTree?moduleCodes=@Model.ModuleCode&templateCodes=@Model.TemplateCode&categoryCodes=@Model.TemplateCategoryCode",
                dataType: "json"
            }),
            lazyLoad: function (event, data) {
                var node = data.node;
                // Issue an Ajax request to load child nodes
                data.result = {
                    url: "/Cms/NtsService/ReadServiceBookDataTree?moduleCodes=@Model.ModuleCode&templateCodes=@Model.TemplateCode&categoryCodes=@Model.TemplateCategoryCode",
                    data: { id: node.key }
                }

            },
            renderNode: function (event, data) {
                // Optionally tweak data.node.span
                // debugger;
                //var node = data.node;
                //  node.renderTitle();
                var node = data.node,
                    $tdList = $(node.tr).find(">td");
                // (index #0 is rendered by fancytree by adding the checkbox)
                //  $tdList.eq(0).text(node.data.NoteSubject).addClass("alignRight");
                // (index #2 is rendered by fancytree)
                //if(Type=='Question'){#<div><i class='fa fas fa-pencil' onclick='onEditSalaryInfo(\"#:NoteId#\")'></i></div>#}

                $tdList.eq(1).html("<div class='btn-group grid-menu' id='tree-menu' data-idvalue='" + node.data.Id + "' data-type='" + node.data.TemplateCode + "' data-status='" + node.data.ServiceStatusCode +"'><i class='fas fa-ellipsis-v'></i></div>");
               // $tdList.eq(1).text(node.data.ServiceNo);
                $tdList.eq(2).text(node.data.ServiceSubject);
                $tdList.eq(3).text(node.data.ServiceDescription);
                $tdList.eq(4).text(node.data.OwnerDisplayName);
                $tdList.eq(5).text(node.data.ServiceStatusName);
                


            },
            dblclick: function (event, data) {
                var node = data.node;
            },
            contextMenu: {
                menu: function (data) {
                    debugger;
                    return {
                    }
                },
                actions: function (node, action, options) {
                }
            }
        });

    }

    $(function () {
        getTree();

        setTimeout(function () {
            debugger;
            $('#treetable').after('<div id="nav" class="page"></div>');
            var rowsShown = 10;
            var rowsTotal = $('#treetable tbody tr').length;
            var numPages = rowsTotal / rowsShown;
            for (i = 0; i < numPages; i++) {
                var pageNum = i + 1;
                $('#nav').append('<a class="ancpagination" href="#" rel="' + i + '">' + pageNum + '</a> ');
            }
            $('#treetable tbody tr').hide();
            $('#treetable tbody tr').slice(0, rowsShown).show();
            $('#nav a:first').addClass('active');
            $('#nav a').bind('click', function () {

                $('#nav a').removeClass('active');
                $(this).addClass('active');
                var currPage = $(this).attr('rel');
                var startItem = currPage * rowsShown;
                var endItem = startItem + rowsShown;
                $('#treetable tbody tr').css('opacity', '0.0').hide().slice(startItem, endItem).
                    css('display', 'table-row').animate({ opacity: 1 }, 300);
            });
        }, 3000);

        // getPagination('#treetable');
    });

</script>



<div>
    <div class="row">
        <div class="col-md-12">

            <button class="btn btn-primary" onclick="OnCreate()" title="@SharedResource["Create"]"> Add @ViewBag.PageName</button>
            <br />
            <table id="treetable" style="width:100%">
                <colgroup>
                    <col width="200">
                    <col width="50">
                    <col width="200">
                    <col width="200">
                    <col width="200">
                    <col width="200">
                   

                </colgroup>
                <thead>
                    <tr>
                        <th class="treeheader"><div id="ServiceNo">ServiceNo</div></th>
                        <th class="treeheader"><div id="Action">Action</div></th>
                        <th class="treeheader"><div id="ServiceSubject">Subject</div></th>
                        <th class="treeheader"><div id="ServiceDescription">Description</div></th>
                        <th class="treeheader"><div id="OwnerDisplayName">Owner</div></th>
                        <th class="treeheader"><div id="ServiceStatusName">Status</div></th>
                       
                    </tr>
                </thead>
                <tbody>
                    <tr>

                        
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                        <td class="treebody"></td>
                    </tr>
                </tbody>
            </table>

            @*@(Html.Kendo().TreeList<ServiceViewModel>()
            .Name("treelist")
             .Toolbar(toolbar => toolbar.Custom().Name("Add").Click("OnCreate").Text(" + Add " + @ViewBag.PageName))

                    .Columns(columns =>
                    {
                        columns.Add().Field(e => e.Id).Title("Action").Template("<div class='btn-group grid-menu' id='tree-menu' data-idvalue=\"#:Id#\" data-type=\"#:TemplateCode#\" data-status=\"#:ServiceStatusCode#\" ><i class='fas fa-ellipsis-v'></i></div>").Width(250);
                        columns.Add().Field(e => e.ServiceNo).Width(250);
                        columns.Add().Field(e => e.ServiceSubject).Title("Subject").Width(250);
                        columns.Add().Field(e => e.ServiceDescription).Title("Description").Width(250);
                        columns.Add().Field(e => e.OwnerDisplayName).Title("Owner").Width(250);
                        columns.Add().Field(e => e.ServiceStatusName).Title("Status").Width(250);
                        //columns.Add().Field(e => e.SubModuleName).Width(160);
                    })
                    .Editable(e => e.Mode("popup"))
                .Filterable()
                .Sortable()
                .DataSource(dataSource => dataSource
                .Read(read => read.Action("ReadServiceBookData", "NtsService", new { @area= "Cms", moduleCodes = Model.ModuleCode, templateCodes = Model.TemplateCode, categoryCodes = Model.TemplateCategoryCode }))
        .ServerOperation(false)
        .Model(m => {
            m.Id(f => f.Id);
            m.ParentId(f => f.ParentServiceId);
            m.Expanded(false);
            m.Field(f => f.ServiceNo);
            // m.Field(f => f.SubModuleName);
        })
    )
    .Height(540)
    .Pageable(p => p.PageSize(15)
                    .PageSizes(true)
    )
)*@


        </div>
    </div>


</div>





