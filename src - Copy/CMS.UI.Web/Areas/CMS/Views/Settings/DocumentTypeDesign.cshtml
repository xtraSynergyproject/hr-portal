@{
    ViewData["Title"] = "Settings";
    Layout = "/Areas/Cms/Views/Shared/_LayoutConfig.cshtml";
}
@using CMS.UI.ViewModel;
@using CMS.Common;
@model DocumentTypeViewModel;
<style>
    .slidenav-flow {
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }

    .k-listview {
        border: none !important;
    }


    .sidenav {
        height: 100%; /* 100% Full-height */
        width: 0; /* 0 width - change this with JavaScript */
        position: fixed; /* Stay in place */
        z-index: 100; /* Stay on top */
        top: 0; /* Stay at the top */
        right: 0;
        background-color: #fff; /* Black*/
        border-left: 1px solid silver;
        overflow-x: hidden; /* Disable horizontal scroll */
        padding-top: 30px; /* Place content 60px from the top */
        transition: 0.5s; /* 0.5 second transition effect to slide in the sidenav */
    }



        /* Position and style the close button (top right corner) */
        .sidenav .closebtn {
            position: absolute;
            top: 0;
            right: 15px;
            font-size: 30px;
            font-weight: bold;
            margin-left: 20px;
            color: gray;
            border: none;
            text-decoration: none;
        }

            .sidenav .closebtn:hover {
                color: red;
            }

    /* Style page content - use this if you want to push the page content to the right when you open the side navigation */
    #property-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #editor-div {
        transition: margin-left .5s;
        padding: 20px;
    }

    #overlay {
        position: fixed;
        background: rgba(0,0,0,.5);
        -ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=30)";
        width: 100%;
        height: 100%;
        z-index: 99;
        right: 100%;
        top: 0;
        /*  transition: right .5s ease;*/
    }

    .overlay {
        right: 0 !important;
        /* transition: right .5s ease !important;*/
    }

    .cms-panel-header-name {
        font-size: 16px;
        font-weight: 700;
        padding: 0 10px;
        width: 80%;
    }
    /*Style for switch checkbox*/
    .switch {
        position: relative;
        display: inline-block;
        width: 60px;
        height: 34px;
    }

        .switch input {
            opacity: 0;
            width: 0;
            height: 0;
        }

    .slider {
        position: absolute;
        cursor: pointer;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background-color: #ccc;
        -webkit-transition: .4s;
        transition: .4s;
    }

        .slider:before {
            position: absolute;
            content: "";
            height: 26px;
            width: 26px;
            left: 4px;
            bottom: 4px;
            background-color: white;
            -webkit-transition: .4s;
            transition: .4s;
        }

    input:checked + .slider {
        background-color: #2196F3;
    }

    input:focus + .slider {
        box-shadow: 0 0 1px #2196F3;
    }

    input:checked + .slider:before {
        -webkit-transform: translateX(26px);
        -ms-transform: translateX(26px);
        transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
        border-radius: 34px;
    }

        .slider.round:before {
            border-radius: 50%;
        }

    /*Editor Type Style  */
    .slidenav-flow{
        overflow-x: hidden;
        overflow-y: auto !important;
        height: 85%;
    }
    .product {
        /*float: left;*/
        /*position: relative;*/
        /*width: 111px;*/
        height: 170px;
        margin: 0 0px;
        /*padding: 0;*/
    }

        .product img {
            width: 110px;
            height: 110px;
        }

        .product .div-icon {
            width: 110px;
            height: 110px;
            background-color: #f8f8f8;
        }

            .product .div-icon svg {
                position: relative;
                top: 50%;
                left: 50%;
                transform: translate(-50%,-50%);
            }

        .product h3 {
            margin: 0;
            padding: 3px 5px 0 0;
            max-width: 96px;
            overflow: hidden;
            line-height: 1.1em;
            font-size: .9em;
            font-weight: normal;
            text-transform: uppercase;
            color: #999;
        }

        .product p {
            visibility: hidden;
        }

        .product:hover p {
            cursor: pointer;
            visibility: visible;
            position: absolute;
            width: 110px;
            height: 110px;
            top: 0;
            margin: 0;
            padding: 0;
            line-height: 110px;
            vertical-align: middle;
            text-align: center;
            color: #fff;
            background-color: rgba(0,0,0,0.75);
            transition: background .2s linear, color .2s linear;
            -moz-transition: background .2s linear, color .2s linear;
            -webkit-transition: background .2s linear, color .2s linear;
            -o-transition: background .2s linear, color .2s linear;
        }
    /*Editor Type Style Close */
    .style-control {
        margin-right:5px;
        margin-left:10px;
        text-align:center;
        padding-left:0px;
        padding-right:0px;
    }
    .style-control label{
        font-size:smaller;
    }
</style>

<div class="row pad-20">
    <div class="col-sm-12 pad-b-15">
        <div class="float-right">
            <input type="button" class="btn btn-info" value="Compositions" />
            <input type="button" class="btn btn-info" value="Reorder" />
        </div>
    </div>
    <div class="col-sm-12  pad-b-15">
        <div id="groups" class="groups">
            @if (Model.Groups != null)
            {
                foreach (var group in Model.Groups)
                {
                    <div id="grp-@group.Id" data-mode="@CMS.Common.DataActionEnum.Edit.ToString()" class="cms-group">
                        <div class="cms-group-header">
                            <span class="content-editable" data-placeholder="Edit me" style="padding:3px" contenteditable="true">
                            </span>
                            <span class="cms-delete-box">
                                <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup()" title="Delete group"></i>
                                <span class="cms-delete-confirm-box">
                                    <i class="cms-delete-yes fa fa-check" title="Confirm delete"></i>&nbsp;
                                    <i class="cms-delete-no fa fa-times" onclick="DiscardDelete()" title="Discard delete"></i>
                                </span>

                            </span>
                        </div>
                        <div id="group-properties-@group.Id" class="cms-properties">
                            @if (group.Properties != null)
                            {
                                foreach (var prop in group.Properties)
                                {
                                    <div id="prop-@group.Id-@prop.Id">
                                        <div class="col-sm-3" style="display:inline-block !important;">
                                            <div class="col-12">Name</div>
                                            <div class="col-12">Description</div>
                                        </div>
                                        <div class="col-sm-9 cms-new-property" style="display:inline-block !important;">
                                            <div class="col-12">Date Picker</div>
                                            <div class="col-12">Date Picker Control here</div>
                                        </div>
                                        <span style="width:20px;padding-left:5px;">
                                            <span class="cms-delete-yes fa fa-check" title="Confirm delete"></span>
                                            <span class="cms-delete-no fa fa-times" onclick="DiscardDelete()" title="Discard delete"></span>
                                        </span>
                                    </div>
                                }
                            }
                            <div class="col-sm-3" style="display:inline-block !important;">
                                &nbsp;
                            </div>
                            <div class="col-sm-9 cms-new-property" style="display:inline-block !important;">
                                Add Property
                            </div>

                        </div>
                    </div>
                }
            }
        </div>

        <div id="dummy-group" style="display:none;">
            <div class="cms-group card" data-mode="@CMS.Common.DataActionEnum.Create.ToString()">
                <div class="cms-group-header card-header bg-info">
                    <span id="group-name" class="content-editable" data-placeholder="Enter group name" style="padding:3px" contenteditable="true" onfocus="ContentEditableFocus(this)"
                          onblur="ContentEditableBlur(this)">
                    </span>
                    <span class="cms-delete-box">
                        <i class="cms-delete fa fa-trash-alt" onclick="DeleteGroup(this)" title="Delete group"></i>
                        <span class="cms-delete-confirm-box">
                            <i class="cms-delete-yes fa fa-check" onclick="ConfirmDeleteGroup(this)" title="Confirm delete"></i>&nbsp;
                            <i class="cms-delete-no fa fa-times" onclick="DiscardDeleteGroup(this)" title="Discard delete"></i>
                        </span>

                    </span>

                </div>
                <div class="card-body">
                    <div class="cms-properties">
                        <div class="cms-property row">
                            <div class="col-sm-3 pad-t-b-5 no-gutters">
                                <div class="col-12">Name</div>
                                <div class="col-12">Description</div>
                            </div>
                            <div class="col-sm-8 card bg-light pad-t-b-5 no-gutters" onclick="openNav()">
                                <div>
                                    <div class="col-12">Date Picker</div>
                                    <div class="col-12">Date Picker Control here</div>
                                </div>
                            </div>
                            <div class="col-1 cms-property-icon">
                                <div><i class="fa fa-cog" title="Confirm delete"></i></div>
                                <div><i class="fa fa-trash-alt" onclick="DiscardDelete()" title="Discard delete"></i></div>
                            </div>
                        </div>
                    </div>
                    <div class="row cms-new-property-container">
                        <div class="col-sm-3" style="display:inline-block !important;">
                            &nbsp;
                        </div>
                        <div class="col-sm-8 card bg-light cms-new-property" onclick="openNavControl()" ondrop="componentDrop(event,this)" ondragover="componentDragOver(event)">
                            <i class="drag-text">Click here to drag and drop control</i>
                        </div>
                    </div>

                    <div class="row cms-new-property-container">
                        <div class="col-sm-3" style="display:inline-block !important;">
                            &nbsp;
                        </div>
                        <div class="col-sm-8 card bg-light cms-new-property" style="display:inline-block !important;" onclick="openNav()">
                            Add Property
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="dummy-property" style="display:none;">
            <div class="cms-property">
                <div class="col-sm-3" style="display:inline-block !important;">
                    <div class="col-12">Name</div>
                    <div class="col-12">Description</div>
                </div>
                <div class="col-sm-8 card bg-light cms-new-property" style="display:inline-block !important;" onclick="openNav()">
                    <div class="col-12">Date Picker</div>
                    <div class="col-12">Date Picker Control here</div>
                </div>
                <span style="width:30px;">
                    <i class="cms-delete-yes fa fa-check" title="Confirm delete"></i><br />
                    <i class="cms-delete-no fa fa-times" onclick="DiscardDelete()" title="Discard delete"></i>
                </span>
            </div>
        </div>
        <div class="card cms-new-group bg-light" onclick="AddNewGroup()">
            Add Group
        </div>

    </div>
</div>
<div id="property-div">
    <div id="mySidenav" class="sidenav">
        <h1 class="cms-panel-header-name">Property settings</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNav()" title="Close">&times;</a>
        <hr />
        <div class="row pad-20">
            <div class="col-12 pad-15">
                <input id="txtName" type="text" class="form-control" placeholder="Enter a name... " autocomplete="off" />
            </div>
            <div class="col-12 pad-15">
                <input id="txtAlias" type="text" class="form-control" placeholder="Enter alias... " autocomplete="off" />
            </div>
            <div class="col-12 pad-15">
                <textarea id="txtDescription" class="form-control" placeholder="Enter a description... " rows="2"></textarea>
            </div>
            <div class="col-12 pad-15 card bg-light cms-new-property" style="display: inline-block !important;padding: 25px !important;" onclick="openNavEditor()">
                Select editor
            </div>

            @*<div class="col-12">
                <input type="checkbox" id="chkFieldMandatory" />
                <label for="chkFieldMandatory">Field is mandatory</label>
            </div>*@

            <div class="col-12 pad-t-15">
                <label class="switch">
                    <input type="checkbox" id="chkFieldMandatory">
                    <span class="slider round"></span>
                </label>
                <label for="chkFieldMandatory">Field is mandatory</label>
            </div>
            <div class="col-12 pad-b-15">
                <input id="txtMandatoryCustomValidation" type="text" class="form-control" placeholder="Enter a custom validation error message (optional)" autocomplete="off" />
            </div>

            <div class="col-12">Custom Validation</div>
            <div class="col-12 pad-15">
                @*@(Html.Kendo().DropDownList().Name("ddl")
                                        .DataSource(source =>
                                        {
                                            source.Read(read =>
                                            {
                                                read.Action("GetEnumIdNameList", "Home", new {@area="", enumType = "ValidationTypeEnum" });
                                            });
                                        })
                                        .Events(e => e.Change("OnChangeCustomValidation"))
                                        //.OptionLabel(ApplicationConstant.PlaceHolder_SelectOption)
                                        .DataTextField("Name")
                                        .DataValueField("Id")
                                        //.Value(Model.EditorCategoryData)
                                        //.Height(100)
                                        //.Filter(FilterType.Contains)
                                        .HtmlAttributes(new { @class = "form-control" })
                                        //.HtmlAttributes(new { @class = "form-control",  @style = "padding-top: 20px !important; height: auto !important;" })
                                        )*@

            </div>
            <div class="col-12 pad-15">
                <input id="txtRegularExpresssion" type="text" class="form-control" placeholder="Enter a regular expresssion " autocomplete="off" />
            </div>
            <div class="col-12 pad-15">
                <input id="txtCustomValidation" type="text" class="form-control" placeholder="Enter a custom validation error message (optional)" autocomplete="off" />
            </div>
        </div>
        <hr />
        <div class="cms-slidebar-footer">
            <input type="button" class="btn btn-link" value="Close" onclick="closeNav()" />
            <input type="button" class="btn btn-primary" value="Save" />
        </div>
    </div>

</div>
<div id="editor-div">
    <div id="mySidenavEditor" class="sidenav">
        <h1 class="cms-panel-header-name">Select editor</h1>
        @*<a href="javascript:void(0)" class="closebtn" onclick="closeNavEditor()" title="Close">&times;</a>*@
        <hr />
        <div class="row pad-20 slidenav-flow">
             <div class="row col-12">

                @if (Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.Common).Count() > 0)
                {
                    <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>Common</h4></div>
                }
                @foreach (var item in Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.Common))
                {
                    <div class="col-3 product">
                        <div class="div-icon"><i class="@item.IconCss"></i></div>
                        @*<h3>@item.Name</h3>*@
                        <h3>@item.ControlType</h3>
                        <p onclick="OnSelectEditor('@item.Id')">@item.Name</p>

                    </div>
                }
            </div>
            <div class="row col-12">
                @if (Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.List).Count() > 0)
                {
                    <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>List</h4></div>
                }
                @foreach (var item in Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.List))
                {
            <div class="col-3 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                @*<h3>@item.Name</h3>*@
                <h3>@item.ControlType</h3>
                <p onclick="OnSelectEditor('@item.Id')">@item.Name</p>
            </div>
                }
            </div>
            <div class="row col-12">
                @if (Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.Pickers).Count() > 0)
                {
                    <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>Pickers</h4></div>
                }
                @foreach (var item in Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.Pickers))
                {
            <div class="col-3 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                @*<h3>@item.Name</h3>*@
                <h3>@item.ControlType</h3>
                <p onclick="OnSelectEditor('@item.Id')">@item.Name</p>
            </div>
                }
            </div>
            <div class="row col-12">
                @if (Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.Media).Count() > 0)
                {
                    <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>Media</h4></div>
                }
                @foreach (var item in Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.Media))
                {
            <div class="col-3 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                @*<h3>@item.Name</h3>*@
                <h3>@item.ControlType</h3>
                <p onclick="OnSelectEditor('@item.Id')">@item.Name</p>
            </div>
                }
            </div>
            <div class="row col-12">
                @if (Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.People).Count() > 0)
                {
                    <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>People</h4></div>
                }
                @foreach (var item in Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.People))
                {
            <div class="col-3 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                @*<h3>@item.Name</h3>*@
                <h3>@item.ControlType</h3>
                <p onclick="OnSelectEditor('@item.Id')">@item.Name</p>
            </div>
                }
            </div>

            <div class="row col-12">
                @if (Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.RichContent).Count() > 0)
                {
                    <div class="col-12" style="padding-bottom: 10px; padding-left: 20px;"><h4>RichContent</h4></div>
                }
                @foreach (var item in Model.EditorTypeList.Where(x => x.EditorCategory == EditorCategoryEnum.RichContent))
                {
            <div class="col-3 product">
                <div class="div-icon"><i class="@item.IconCss"></i></div>
                @*<h3>@item.Name</h3>*@
                <h3>@item.ControlType</h3>
                <p onclick="OnSelectEditor('@item.Id')">@item.Name</p>
            </div>
                }
            </div>
        </div>
        <div class="cms-slidebar-footer">
            <input type="button" class="btn btn-link" value="Close" onclick="closeNavEditor()" />
            @*<input type="button" class="btn btn-primary" value="Save" />*@
        </div>
    </div>
</div>
<div id="overlay" class=""></div>
<div id="component-div">
    <div id="side-components" class="sidenav">
        <h1 class="cms-panel-header-name">Add Control</h1>
        <a href="javascript:void(0)" class="closebtn" onclick="closeNavControl()" title="Close">&times;</a>
        <hr />
        <div class="row pad-20 slidenav-flow">
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_TextBox">
                <i class="fa fal fa-edit fa-2x"></i><br />
                <label>TextBox</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_TextArea">
                <i class="fa fal fa-window-maximize fa-2x"></i><br />
                <label>Text Area</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_RichTextBox">
                <i class="fa fal fa-money-check-edit fa-2x"></i><br />
                <label>Rich TextBox</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_CheckBox">
                <i class="fa fal fa-check-square fa-2x"></i><br />
                <label>CheckBox</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_IntegerTextBox">
                <i class="fa fal fa-edit fa-2x"></i><br />
                <label>Integer TextBox</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_Attachment">
                <i class="fa fal fa-paperclip fa-2x"></i><br />
                <label>Attchment</label>
            </div>

            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_DatePicker">
                <i class="fa fal fa-calendar-alt fa-2x"></i><br />
                <label>Date Picker</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_NumericTextBox">
                <i class="fa fal fa-edit fa-2x"></i><br />
                <label>Numeric TextBox</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_DateTimePicker">
                <i class="fa fal fa-clock fa-2x"></i><br />
                <label style="font-size:smaller;">Date Time Picker</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_Display">
                <i class="fa fal fa-tag fa-2x"></i><br />
                <label>Label</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_DropDownList">
                <i class="fa fal fa-indent fa-2x"></i><br />
                <label>Drop Down List</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_GeoLocation">
                <i class="fa fal fa-location fa-2x"></i><br />
                <label>Geo Location</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_Grid">
                <i class="fa fal fa-th fa-2x"></i><br />
                <label>Grid</label>
            </div>

            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_HyperLink">
                <i class="fa fal fa-link fa-2x"></i><br />
                <label>Hyper Link</label>
            </div>
            @*<div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_HiddenField">
                <i class="fa fal fa-th fa-2x"></i><br />
                <label>Hidden Field</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_HijiriDatePicker">
                <i class="fa fal fa-th fa-2x"></i><br />
                <label>Hijiri Date Picker</label>
            </div>
            <div class="col-5 pad-10 page-component style-control" draggable="true" ondragstart="componentDrag(event)" id="NTS_IconButton">
                <i class="fa fal fa-eye fa-2x"></i><br />
                <label>Icon Button</label>
            </div>*@

        </div>
        <hr />
        <div class="cms-slidebar-footer">
            <input type="button" class="btn btn-link" value="Close" onclick="closeNavControl()" />
            @*<input type="button" class="btn btn-primary" value="Save" />*@
        </div>
    </div>

</div>
<div class="cms-footer">
    <input type="button" class="btn btn-primary" value="Save" />
</div>




<script>
    var groupId = 1;
    function DiscardDeleteGroup(e) {
        $(e).parent().hide('slide', { direction: 'right' }, 500);
    }
    function ConfirmDeleteGroup(e) {
        $(e).parent().hide('slide', { direction: 'right' }, 500);
    }
    function DeleteGroup(e) {
        var n = $(e).next();
        if (n.is(':hidden')) {
            n.show('slide', { direction: 'right' }, 500);
        } else {
            n.hide('slide', { direction: 'right' }, 500);
        }
    }

    // Control Start
    function openNavControl() {
        document.getElementById("side-components").style.width = "350px";
        //  $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }
    function closeNavControl() {
        document.getElementById("side-components").style.width = "0";
        //$("#overlay").removeClass("overlay");
        //$('body').removeClass('fadeMe');
    }

    function componentDrag(ev) {
        //alert(ev.target.data('type'));
        ev.dataTransfer.setData("text", ev.target.id);
    }
    function componentDrop(ev, el) {
        ev.preventDefault();
        var type = ev.dataTransfer.getData("text");
        AddComponent(type, el);
        //ev.target.appendChild(document.getElementById(data));
    }
    function componentDragOver(ev) {
        ev.preventDefault();
    }
    function AddComponent(type, target) {
        switch (type) {
            case "NTS_Attachment":
                //AddRichText(type, target);
                alert("NTS_Attachment");
                break;
            case "NTS_CheckBox":
                alert("NTS_CheckBox");
                break;
            case "NTS_DatePicker":
                alert("NTS_DatePicker");
                break;
            case "NTS_DateTimePicker":
                alert("NTS_DateTimePicker");
                break;
            case "NTS_Display":
                alert("NTS_Display");
                break;
            case "NTS_DropDownList":
                alert("NTS_DropDownList");
                break;
            case "NTS_GeoLocation":
                alert("NTS_GeoLocation");
                break;
            case "NTS_Grid":
                alert("NTS_Grid");
                break;
            case "NTS_HiddenField":
                alert("NTS_HiddenField");
                break;
            case "NTS_HijiriDatePicker":
                alert("NTS_HijiriDatePicker");
                break;
            case "NTS_HyperLink":
                alert("NTS_HyperLink");
                break;
            case "NTS_IconButton":
                alert("NTS_IconButton");
                break;
            case "NTS_IntegerTextBox":
                alert("NTS_IntegerTextBox");
                break;
            case "NTS_NumericTextBox":
                alert("NTS_NumericTextBox");
                break;
            case "NTS_RichTextBox":
                alert("NTS_RichTextBox");
                break;
            case "NTS_TextArea":
                alert("NTS_TextArea");
                break;
            case "NTS_TextBox":
                alert("NTS_TextBox");
                break;
            default:
        }
    }
        function AddRichText(type, target) {
            var t = $(target);
            var cellId = GenerateGuid();
            var cellRef = document.getElementById('dummy-' + type).firstElementChild;
            var cell = cellRef.cloneNode(true);
            var cn = $(cell).find('#comp-name');
            cn.html('Rich Text Box ' + (componentId++));
            cn.attr("id", 'comp-name-' + (cellId));

            var seq = cellRef.getAttribute('data-sequence');
            seq = eval(seq) + 1;
            cellRef.setAttribute("data-sequence", seq);
            cell.setAttribute("data-sequence", seq);
            cell.setAttribute("data-parent-id", target.parentElement.id);
            cell.setAttribute("id", cellId);

            var compId = GenerateGuid();
            var control = $(cell).find('#component');
            control.attr("id", compId);
            control.attr("data-component-type", "RichText");
            control.attr("data-parent-id", cellId);
            t.before(cell);
            CreateRichTextBox($('#' + compId));
        }
        function CreateRichTextBox(id) {
            id.kendoEditor({
                stylesheets: [
                    "../content/shared/styles/editor.css",
                ],
                tools: [
                    "bold",
                    "italic",
                    "underline",
                    "justifyLeft",
                    "justifyCenter",
                    "justifyRight",
                    "insertUnorderedList",
                    "createLink",
                    "unlink",
                    "insertImage",
                    "tableWizard",
                    "createTable",
                    "addRowAbove",
                    "addRowBelow",
                    "addColumnLeft",
                    "addColumnRight",
                    "deleteRow",
                    "deleteColumn",
                    "mergeCellsHorizontally",
                    "mergeCellsVertically",
                    "splitCellHorizontally",
                    "splitCellVertically",
                    //"formatting",
                    //{
                    //    name: "fontName",
                    //    items: [
                    //        { text: "Andale Mono", value: "Andale Mono" },
                    //        { text: "Arial", value: "Arial" },
                    //        { text: "Arial Black", value: "Arial Black" },
                    //        { text: "Book Antiqua", value: "Book Antiqua" },
                    //        { text: "Comic Sans MS", value: "Comic Sans MS" },
                    //        { text: "Courier New", value: "Courier New" },
                    //        { text: "Georgia", value: "Georgia" },
                    //        { text: "Helvetica", value: "Helvetica" },
                    //        { text: "Impact", value: "Impact" },
                    //        { text: "Symbol", value: "Symbol" },
                    //        { text: "Tahoma", value: "Tahoma" },
                    //        { text: "Terminal", value: "Terminal" },
                    //        { text: "Times New Roman", value: "Times New Roman" },
                    //        { text: "Trebuchet MS", value: "Trebuchet MS" },
                    //        { text: "Verdana", value: "Verdana" },
                    //    ]
                    //},
                    "fontSize",
                    "foreColor",
                    "backColor",
                ]
            });
        }
    // Control End

    function openNav() {
        document.getElementById("mySidenav").style.width = "450px";
        $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }

    function openNavEditor() {
        document.getElementById("mySidenavEditor").style.width = "600px";
        $("#overlay").addClass("overlay");
        // $('body').addClass('fadeMe');
    }
    function openEditor() {
        alert("Hello Editor... ");
    }
    function OnSelectEditor(id) {
        alert("Under Development... ");
    }
    function OnChangeCustomValidation(e) {

        var validation = this.dataItem(e.item);
        if (validation.Id == "Email") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('[a-zA-Z0-9_.+-]+@@[a-zA-Z0-9-]+.[a-zA-Z0-9-.]+');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Number") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('^[0-9]*$');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Url") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('https?://[a-zA-Z0-9-.]+.[a-zA-Z]{2,}');
            $('#txtCustomValidation').val('');

        } else if (validation.Id == "Custom") {
            $('#txtRegularExpresssion').show();
            $('#txtCustomValidation').show();
            $('#txtRegularExpresssion').val('');
            $('#txtCustomValidation').val('');
        } else {
            $('#txtRegularExpresssion').val('');
            $('#txtCustomValidation').val('');
            $('#txtRegularExpresssion').hide();
            $('#txtCustomValidation').hide();

        }
    }
    /* Set the width of the side navigation to 0 */
    function closeNav() {
        document.getElementById("mySidenav").style.width = "0";
        $("#overlay").removeClass("overlay");
        //$('body').removeClass('fadeMe');
    }

    function closeNavEditor() {
        document.getElementById("mySidenavEditor").style.width = "0";
        $("#overlay").removeClass("overlay");
        //$('body').removeClass('fadeMe');
    }

    $(document).ready(function () {
        InitializeContePlaceHolder();

        $('#txtMandatoryCustomValidation').hide();
        $('#txtRegularExpresssion').hide();
        $('#txtCustomValidation').hide();

        $('#chkFieldMandatory').on('change', function () {
            // From the other examples
            if (this.checked) {
                //alert("checked");
                $('#txtMandatoryCustomValidation').show();
            } else {
                //alert("not checked");
                $('#txtMandatoryCustomValidation').hide();
            }
        });
    });
    function AddNewGroup() {
        var gid = groupId++;
        var grp = document.getElementById('dummy-group').firstElementChild.cloneNode(true);
        var gn = $(grp).find('#group-name');
        gn.html('Group ' + gid);
        gn.attr("id", 'grp-name-' + (gid));
        grp.setAttribute("id", 'grp-' + (gid));
        document.getElementById("groups").appendChild(grp);
    }
    // $('.splitter-container').SplitterBar();
    var splitter = $('.splitter-container').height(200).split({
        orientation: 'vertical',
        limit: 10,
        position: '20%', // if there is no percentage it interpret it as pixels
        onDrag: function (event) {
            console.log(splitter.position());
        }
    });
    function ReloadTab() {

         
    }
    function SetTabControls(index, select) {
        var tabStrip = $("#tabstrip").data("kendoTabStrip");
        if (select) {
            tabStrip.select(index);
        }
    }
    function onTabSelect1(e) {
        SetTabControls($(e.item).index(), false);
    }
    function OnSelect(e) {
        e.preventDefault();

        //var data = $("#treeview").data("kendoTreeView").dataItem(e.node);


        //if (data.ItemType == "BusinessRule") {

        //    var tabStrip1 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
        //    $(".k-link:contains('BUSINESS RULE INPUT DATA')").data('contentUrl', '/businessrule/BusinessRuleInputData?ruleId=' + data.id);
        //    tabStrip1.reload("li:eq(0)");

        //    var tabStrip2 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
        //    $(".k-link:contains('BUSINESS RULE MASTER DATA')").data('contentUrl', '/businessrule/BusinessRuleMasterData?ruleId=' + data.id);
        //    tabStrip2.reload("li:eq(1)");

        //    var tabStrip3 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
        //    $(".k-link:contains('BUSINESS RULE FLOW')").data('contentUrl', '/businessRuleDiagram/businessFlowDiagram?ruleId=' + data.id);
        //    tabStrip3.reload("li:eq(2)");


        //}
    }
    function OpenIframeModal(url, title) {
        var win = GetMainWindow();
        win.iframeOpenUrl = url;
        win.OpenWindow({ Title: title, Width: 700, Height: 350 });
        return false;
    }
    //$(function () {
    //    $.contextMenu({
    //        selector: '.tree-menu',
    //        trigger: 'left',

    //        items: {
    //            "edit": {
    //                name: "Edit", icon: "cut", callback: function (itemKey, opt, e) {
    //                    console.log($(this).data('id'));
    //                }
    //            },
    //            "cut": { name: "Cut", icon: "cut" },
    //            "copy": { name: "Copy", icon: "copy" },
    //            "paste": { name: "Paste", icon: "paste" },
    //            "delete": { name: "Delete", icon: "delete" },
    //            "sep1": "---------",
    //            "quit": { name: "Quit" }
    //        }
    //    });
    //});


    $(function () {
        $.contextMenu({
            selector: '.tree-menu',
            trigger: 'left',
            build: function ($trigger, e) {
                var parentId = $trigger.data('id');
                var parentType = $trigger.data('type');
                var selectParentId = $trigger.data('parentId');

                switch (parentType) {
                    case 'Root':
                        return {

                            callback: function (key, options) {
                                switch (key) {
                                    case 'add':
                                        OpenIframeModal('/BusinessRule/CreateBusinessArea?parentId=' + parentId, 'Create Business Area');

                                    default:
                                }

                            },
                            items: {
                                "add": { name: "Add Business Area", icon: "fas fa-chart-area" },

                            }
                        };
                    case 'BusinessArea':
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OpenIframeModal('/BusinessRule/CreateBusinessArea?parentId=' + selectParentId + "&id=" + parentId, 'Edit Business Area');
                                        break;
                                    case 'addSec':
                                        OpenIframeModal('/BusinessRule/CreateBusinessSection?parentId=' + parentId, 'Create Business Section');
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "edit": { name: "Edit Business Area", icon: "fas fa-chart-area" },
                                "addSec": { name: "Add Business Section", icon: "fas fa-album-collection" },

                            }
                        };
                    case 'BusinessSection':
                        return {

                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OpenIframeModal('/BusinessRule/CreateBusinessSection?parentId=' + selectParentId + "&id=" + parentId, 'Edit Business Section');
                                        break;
                                    case 'addGroup':
                                        OpenIframeModal('/BusinessRule/CreateBusinessRuleGroup?parentId=' + parentId, 'Create Business Rule Group');
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "edit": { name: "Edit Business Section", icon: "fas fa-album-collection" },
                                "addGroup": { name: "Add Business Group", icon: "fas fa-ball-pile" },

                            }
                        };
                    case 'BusinessRuleGroup':
                        return {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        OpenIframeModal('/BusinessRule/CreateBusinessRuleGroup?parentId=' + selectParentId + "&id=" + parentId, 'Edit Business Rule Group');
                                        break;
                                    case 'addRule':
                                        OpenIframeModal('/BusinessRule/CreateBusinessRule?parentId=' + parentId, 'Create Business Rule');
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "edit": { name: "Edit Business Group", icon: "fas fa-ball-pile" },
                                "addRule": { name: "Add Business Rule", icon: "fas fa-pencil-ruler" },

                            }
                        };
                    case 'BusinessRule':
                        return {
                            callback: function (key, options) {

                                switch (key) {
                                    case 'edit':
                                        OpenIframeModal('/BusinessRule/CreateBusinessRule?parentId=' + selectParentId + "&id=" + parentId, 'Edit Business Rule');
                                        break;
                                    case 'open':
                                        var tabStrip1 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
                                        $(".k-link:contains('BUSINESS RULE INPUT DATA')").data('contentUrl', '/businessrule/BusinessRuleInputData?ruleId=' + parentId);
                                        tabStrip1.reload("li:eq(0)");

                                        var tabStrip2 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
                                        $(".k-link:contains('BUSINESS RULE MASTER DATA')").data('contentUrl', '/businessrule/BusinessRuleMasterData?ruleId=' + parentId);
                                        tabStrip2.reload("li:eq(1)");

                                        var tabStrip3 = $("#tabstrip").kendoTabStrip().data("kendoTabStrip");
                                        $(".k-link:contains('BUSINESS RULE FLOW')").data('contentUrl', '/businessRuleDiagram/businessFlowDiagram?ruleId=' + parentId);
                                        tabStrip3.reload("li:eq(2)");
                                        break;
                                    default:
                                }

                            },
                            items: {
                                "edit": { name: "Edit Business Rule", icon: "fas fa-pencil-ruler" },
                                "open": { name: "Open Business Rule", icon: "fas fa-pencil-ruler" },

                            }
                        };
                    default:
                        return {
                            callback: function (key, options) {
                                alert(parentId);
                                alert(parentType);
                            },
                            items: {

                            }
                        };
                }


            }
        });
    });

</script>

