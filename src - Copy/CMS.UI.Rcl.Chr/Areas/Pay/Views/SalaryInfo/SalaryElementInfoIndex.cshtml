@inject IStringLocalizer<CMS.UI.Web.Areas.Pay.Controllers.SalaryInfoController> Resource
@using CMS.UI.ViewModel;
@using Kendo.Mvc.UI;
@using CMS.Common;
@using Kendo.Mvc.Extensions;
@model SalaryElementInfoViewModel;
@{
    ViewData["Title"] = "Salary Element Info";
    //Layout = "/Areas/Cms/Views/Shared/_LayoutCms.cshtml";
    Layout = null;
}
<style>
    .kgrdSalaryInfoStyle {
        width: 100% !important;
    }
</style>
<script type="text/javascript">
    function OnDelete(noteId) {
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        kendo.confirm("@SharedResource["Areyousurethatyouwanttoproceed?"]").then(function () {
            $.ajax({
                type: "POST",
                url: "/pay/SalaryInfo/DeleteSalaryElement?noteId=" + noteId,

                success: function (data) {
                    kendo.alert("@SharedResource["DeletedSuccessfully"]");
                    // $("#kgrdSalaryElementInfo").data("kendoGrid").dataSource.read();
                    getElementInfoData();
                },
                dataType: "json",
            });
        }, function () {

        });



    }
    function OnCreateSalaryElementInfo() {
        var win = GetMainWindow();

        win.iframeOpenUrl = "/pay/SalaryInfo/CreateSalaryElement?salaryInfoId=@Model.ParentNoteId";
        win.OpenWindow({ Title: '@Html.Raw(Resource["CreateSalaryElementInfo"])', Width: 600, Height: 400 });
        return false;
    }
    function onEditElementSalaryInfo(NoteId) {
        // var prms=enco
       // e.preventDefault();
       // var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        //alert(dataItem.NoteId);
        var win = GetMainWindow();
        var portalId = $('#GlobalPortalId').val();

        win.iframeOpenUrl = "/pay/SalaryInfo/CreateSalaryElement?id=" + NoteId+"&salaryInfoId=@Model.ParentNoteId";
        win.OpenWindow({ Title: '@Html.Raw(Resource["EditSalaryElementInfo"])', Width: 1000, Height: 700 });
    }

    function OnAfterNoteCreate() {
        getElementInfoData();
       // $("#kgrdSalaryElementInfo").data("kendoGrid").dataSource.read();
    }
    function onBackToSalaryInfo() {
        
        var portalId = $('#GlobalPortalId').val();
        var url = '/Cms/Page?pageName=SalaryInfoPage&portalId=' + portalId ;
        LoadCmsPartialView(url, "Custom", false, "", "", "")
    }
</script>
<script>
    var columnDefs = [
        {
            headerName: "Actions",
            field: "NoteId",
            cellRenderer: params => {
                return "<div class='btn-group grid-menu' id='tree-menuinfoBin' data-idvalue='" + params.value + "' ><i class='fas fa-ellipsis-v'></i></div>"
            }
        },
        {
            field: "ElementName",
            headerName:"@Resource["ElementName"]"
        },
           {
               field: "Amount",
               headerName: "@Resource["Amount"]"
           },

        {
            field: "EffectiveStartDate",
            headerName: "@Resource["EffectiveStartDate"]"
        },
        {
            field: "EffectiveEndDate",
            headerName: "@Resource["EffectiveEndDate"]"
        },
    ];

    $(function () {

        getElementInfoData();

       // $.contextMenu('update');
      //  $('.context-menu-list').trigger('contextmenu:refresh');

        $.contextMenu({
            selector: '#tree-menuinfoBin',
            trigger: 'left',
            build: function ($trigger, e) {


                var id = $trigger.data('idvalue');
               
                switch (0) {
                    case 0:
                        var abc = {
                            callback: function (key, options) {
                                switch (key) {
                                    case 'edit':
                                        onEditElementSalaryInfo(id);
                                        break;
                                    case 'delete':
                                        OnDelete(id);
                                        break;

                                    default:
                                }
                            },
                            items: {
                                "edit": { name: "Edit", icon: "fas fa-edit" },
                                "delete": { name: "Delete", icon: "fas fa-trash" },

                            }
                        };
                       
                        return abc;

                }
            }
        });


    });

    function getElementInfoData() {
        document.getElementById("kgrdSalaryElementInfo").innerHTML = "";
        gridConfig(
            "kgrdSalaryElementInfo",
            "/Pay/SalaryInfo/ReadSalaryElementInfoData?ParentNoteId=@Model.ParentNoteId",
            columnDefs,
            false,
            true,
            true,
            true,
            1,
            true,
            10);
    }
</script>
<div class="row pad-t-b-10">
    <div class="col-8"><h3>@Resource["SalaryElementsInfo"]</h3></div>
    <div class="col-4" style="text-align:right;"><input type="button" class="btn btn-primary" value="Back to Salary Info" onclick="onBackToSalaryInfo();" /></div>
</div>

<div class="row">
    <div class="col-md-12">
        <button type='button' class='btn btn-primary' onclick='OnCreateSalaryElementInfo();'><i class='fa fas fa-plus'></i>&nbsp;@SharedResource["Create"]</button>
        <br /><br />
        <div id="kgrdSalaryElementInfo" style="width: 100%;height:550px" class="ag-theme-alpine"></div>
        @*@(Html.Kendo().Grid<SalaryElementInfoViewModel>
        ().Name("kgrdSalaryElementInfo").HtmlAttributes(new { @class = "kgrdSalaryInfoStyle" })
        .Columns(col =>
        {
            col.Command(command =>
            {
                command.Custom("Edit").Text("<i class='fa fas fa-pencil'></i>").Click("onEditElementSalaryInfo").HtmlAttributes(new { @class = "action-icon", @title = "Edit" });
                command.Custom("Delete").Text("<i class='fa fas fa-trash'></i>").Click("OnDelete").HtmlAttributes(new { @class = "action-icon action-delete", title = "Delete" });
            }).Title(@SharedResource["Action"]).Width(150);
            col.Bound(c => c.ElementName).Title(@Resource["ElementName"]).Width(150);
            col.Bound(c => c.Amount).Title(@Resource["Amount"]).Width(150);
            col.Bound(c => c.EffectiveStartDate).Title(@Resource["EffectiveStartDate"]).ClientTemplate("#= kendo.toString(kendo.parseDate(EffectiveStartDate, 'yyyy-MM-dd'), 'dd MMM yyyy') #").Width(150);
            col.Bound(c => c.EffectiveEndDate).Title(@Resource["EffectiveEndDate"]).ClientTemplate("#= kendo.toString(kendo.parseDate(EffectiveEndDate, 'yyyy-MM-dd'), 'dd MMM yyyy') #");

        })
        .ToolBar(toolbar =>
        {
            toolbar.Custom().Text(@SharedResource["Create"]).Name("btnAdd").IconClass("fa fas fa-plus").HtmlAttributes(new { @class = "k-primary", href = "javascript:OnCreateSalaryElementInfo();" });
        })
        .Scrollable(x => x.Enabled(true))

        .Sortable(srt => srt.Enabled(true))
        .Selectable(select => select.Enabled(false))
        .Filterable(f => f.Extra(false)
        .Operators(o => o.ForString(s => s.Clear()
        .Contains("Contains")
        .IsEqualTo("Is equal to")
        )))
          .Resizable(resize => resize.Columns(true))
        .Pageable(pageable => pageable
        .Refresh(true)
        .PageSizes(true)
        .ButtonCount(5))
        .AutoBind(true)
        .DataSource(
        dataSource => dataSource
        .Ajax()
        .PageSize(10)
        .Read(read => read.Action("ReadSalaryElementInfoData", "SalaryInfo", new { Area="Pay", ParentNoteId = Model.ParentNoteId}))
        .Model(model => model.Id(p => p.Id)))
        )*@
    </div>
</div>

