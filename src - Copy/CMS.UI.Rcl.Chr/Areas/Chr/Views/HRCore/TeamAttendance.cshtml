@inject IStringLocalizer<CMS.UI.Web.Areas.CHR.Controllers.HRCoreController> Resource
@using CMS.Data.Model
@using CMS.UI.ViewModel
@using Kendo.Mvc.UI
@using CMS.Common


@model AttendanceViewModel
@{
    ViewBag.Title = @Resource["TeamAttendence"];
    // Layout = "~/Areas/CMS/Views/Shared/_LayoutCms.cshtml";
    //Layout = null;
}

<style>
    .k-grid a:hover {
        text-decoration: underline !important;
    }

    .hover:hover {
        text-decoration: underline;
    }

    .col-md-6 {
        max-width: 100% !important;
    }

    .panel-heading {
        font-size: 1.3em;
        cursor: pointer;
        padding-top: 7px !important;
        padding-bottom: 7px !important;
    }

    .date {
        margin-left: 1%;
        margin-right: 1%
    }

    .k-listview {
        border: none !important;
    }



    .project-property {
        width: 100px;
        padding: 3px;
    }

    .panel {
        margin-top: 10px;
        border-color: #ddd;
        margin-bottom: 20px;
        background-color: #fff;
        border: 1px solid transparent;
        border-radius: 4px;
        -webkit-box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
        box-shadow: 0 1px 1px rgb(0 0 0 / 5%);
    }

    .panel-heading:hover {
        background-color: #f1f1f1;
    }

    .panel-success {
        border-color: #d6e9c6;
    }

        .panel-success > .panel-heading {
            color: #468847;
            background-color: #dff0d8;
            border-color: #d6e9c6;
        }

    .panel-info {
        border-color: #bce8f1;
    }

        .panel-info > .panel-heading {
            color: #3a87ad;
            background-color: #d9edf7;
            border-color: #bce8f1;
        }

    .panel-warning {
        border-color: #fbeed5;
    }

        .panel-warning > .panel-heading {
            color: #c09853;
            background-color: #fcf8e3;
            border-color: #fbeed5;
        }

    .panel-primary {
        border-color: #428bca;
    }

        .panel-primary > .panel-heading {
            color: #fff;
            background-color: #428bca;
            border-color: #428bca;
        }

    .panel-filter {
        border-color: #428bca;
    }

        .panel-filter > .panel-heading {
            color: #1a3750;
            background-color: #428bca;
            border-color: #428bca;
        }

    .btn-filter-reset {
        color: #fff;
        background-color: #428bca;
        border-color: #428bca;
    }

    #banner {
        width: 100%;
        height: 140px;
        /* height: 160px;*/
        left: 389px;
        top: 157px;
        background: #2D9FCA;
        border: 1px solid #FFFFFF;
        box-shadow: 0px 2px 2px rgb(0 0 0 / 25%);
        border-radius: 6px;
        font-family: roboto;
    }
</style>


<script>

    $(document).ready(function () {

        $("#SearchFromDate").kendoDatePicker({value:'@Model.SearchFromDate'});
        $("#SearchToDate").kendoDatePicker({value:'@Model.SearchToDate'});

        $("#PersonId2").kendoDropDownList({
            dataTextField: "Name",
            dataValueField: "Id",
            filter: "contains",
            optionLabel: "All",
            value:'@Model.PersonId',
            dataSource: {
                serverFiltering: true,
                transport: {
                    read: {
                        url: "/CHR/HRCore/GetReporteePersonList",
                        data:"FilterByPositionId",
                    }
                }
            }
        });

    });

    function FilterByPositionId() {
        return {
            UserId: '@ViewBag.PosId',
        };
    }


    function OnOrgChange(e) {
        $("#PersonId2").data("kendoDropDownList").dataSource.read();
    }


    function FilterAttendanceGrid() {

            @*var perId = $("#PersonId").val();
            if (perId == '') {
                perId = '@ViewBag.PositionIds';
            }*@
           // var prIds = '@ViewBag.PrIds';
            //alert(prIds);
            return {
                //  organisationId: $("#OrganizationId").val(),
                UserId: '@Model.UserId',
                personId: $("#PersonId2").val(),
                searchFromDate: $("#SearchFromDate").val(),
                searchToDate: $("#SearchToDate").val(),
                empStatus: '@EmployeeStatusEnum.Active',//$("#EmployeeStatus").val(),
                //payrollRunId: $("#PayrollRunId").val(),
                //perIds:prIds,
            };

    }


    function OnSearchSubmit(e) {

      //  var organisationId = $("#OrganizationId").val();
        var searchFromDate = $("#SearchFromDate").val();
        var searchToDate = $("#SearchToDate").val();


        if (searchFromDate != "" && searchToDate == "") {
            $(".hr-v-summary").removeClass("validation-summary-valid");
            $(".hr-v-summary").addClass("validation-summary-errors");
            $(".hr-v-summary ul").html("@Resource["Enddateisempty"]");
        } else if (new Date(searchFromDate) > new Date(searchToDate)) {
            $(".hr-v-summary").removeClass("validation-summary-valid");
            $(".hr-v-summary").addClass("validation-summary-errors");
            $(".hr-v-summary ul").html("@Resource["Enddateshouldbegreaterthanstartdate"]");
        } else {
            $(".hr-v-summary").removeClass("validation-summary-errors");
            $(".hr-v-summary").addClass("validation-summary-valid");
            var gridData = $("#kgrdEmployeeAttendance").data("kendoGrid");
            var search = FilterAttendanceGrid();
            gridData.dataSource.read(search);
        }

    }

</script>

<div class="row no-gutter hr-pad-top-15" style="margin-left:5px;">
    @Html.HiddenFor(x => x.UserId)
    <div class="form-group col-md-3 col-sm-2">
        <div class="col-md-6 label-div">

            @Resource["Person"]
        </div>
        <div class="col-md-6">
            @*@(Html.Kendo().DropDownListFor(x => x.PersonId)
                    .OptionLabel("All")
                    .DataSource(source =>
                    {
                     source.Read(read =>
                     {
                     //read.Action("GetPersonListByOrganization", "Person", new { area = "Hrs" }).Data("FilterByOrg");
                     read.Action("GetReporteePersonList", "HRCore", new { area = "CHR" }).Data("FilterByPositionId");
                     });
                    })
                     .DataTextField("Name")
                     .DataValueField("Id")
                     .Filter(FilterType.Contains)
                     .HtmlAttributes(new { @class = "hr-x-large" })
                     )*@

            <input  id="PersonId2" class="hr-x-large" />


        </div>
    </div>

    <div class="form-group col-md-3 col-sm-2">
        <div class="col-md-6 label-div">
            @SharedResource["From"]
        </div>
        <div class="col-md-6">
            @*@Html.Kendo().DatePickerFor(x => x.SearchFromDate).HtmlAttributes(new { @class = "form-control hr-small" })*@
            <input class="form-control hr-small" id="SearchFromDate" />
        </div>
    </div>

    <div class="form-group col-md-3 col-sm-2">
        <div class="col-md-6 label-div" >
            @SharedResource["To"]
        </div>
        <div class="col-md-6">
            @*@Html.Kendo().DatePickerFor(x => x.SearchToDate).HtmlAttributes(new { @class = "form-control hr-small" })*@
            <input class="form-control hr-small" id="SearchToDate" />
        </div>
    </div>

    <div class="form-group col-md-3 col-sm-2" style="margin-top: 22px;">
        <div class="col-md-6">

            @*@Html.Kendo().Button().Name("btnSearch").Events(e => e.Click("OnSearchSubmit")).Content(@SharedResource["Search"]).HtmlAttributes(new { @class = "k-primary" })*@
            <button type="button" class="btn btn-primary" id="btnSearch" onclick="OnSearchSubmit();">@SharedResource["Search"]</button>

        </div>
    </div>
    @Html.HiddenFor(x => x.UserId)

</div>

<div class="row">
    <div class="col-12">
        @*<button class="btn btn-filter-reset" onclick="OnService()" title="Reset Filter">Add Time Permission</button>*@
        <div class="panel panel-primary">
            <div class="panel-heading"></div>
            <div class="panel-body">
                @(Html.Kendo().Grid<AttendanceViewModel>()
                        .Name("kgrdEmployeeAttendance")
                        .Columns(columns =>
                        {
                            //columns.Select().Width(75).HtmlAttributes(new { @class = "checkbox-align" }).HeaderHtmlAttributes(new { @class = "checkbox-align" });
                            columns.Bound(c => c.EmployeeName).Title(@Resource["EmployeeName"]).Width(200).Sortable(true).Filterable(ftb => ftb.Multi(true).Search(true));
                            columns.Bound(c => c.PersonNo).Title(@Resource["EmployeeNo"]).Width(150).Sortable(true).Filterable(ftb => ftb.Multi(true).Search(true));
                            //columns.Bound(c => c.SponsorshipNo).Title("Iqamah No").Width(150).Sortable(true).Filterable(ftb => ftb.Multi(true).Search(true));
                            columns.Bound(c => c.EmployeeStatus).Title(Resource["EmployeeStatus"]).Width(150).Sortable(true).Filterable(ftb => ftb.Multi(true).Search(true));
                            //columns.Bound(c => c.Sponsor).Locked(true).Width(200).Filterable(ftb => ftb.Multi(true).Search(true));
                            columns.Bound(c => c.JobName).Title(@Resource["JobName"]).Width(200).Sortable(true).Filterable(ftb => ftb.Multi(true).Search(true));
                            columns.Bound(c => c.OrganizationName).Title(@Resource["OrganizationName"]).Width(200).Sortable(true).Filterable(ftb => ftb.Multi(true).Search(true));
                            //columns.Bound(c => c.Nationality).Locked(true).Width(150).Filterable(ftb => ftb.Multi(true).Search(true));
                            columns.Bound(c => c.AttDate).Width(180).Filterable(false).Title(@Resource["AttendanceDate"]);
                            columns.Bound(c => c.RosterText).Width(180).Filterable(false).Title(@Resource["RosterText"]).ClientTemplate("<div style='color:blue'>#= RosterText# ").ClientHeaderTemplate("Roster <br/>(Time In - Time Out)").HtmlAttributes(new { Class = "hidden-xs" }).HeaderHtmlAttributes(new { Class = "hidden-xs" });
                            columns.Bound(c => c.RosterHours).Width(180).Filterable(false).Title(@Resource["RosterHours"]);
                            columns.Bound(c => c.ActualText).Width(180).Filterable(false).Title(@Resource["ActualText"]).ClientTemplate("<div style='color:blue'>#= ActualText# ").ClientHeaderTemplate("Actual <br/>(Time In - Time Out)").HtmlAttributes(new { Class = "hidden-xs" }).HeaderHtmlAttributes(new { Class = "hidden-xs" });
                            columns.Bound(c => c.ActualHours).Width(180).Filterable(false).Title(@Resource["ActualHours"]);
                            columns.Bound(c => c.SystemAttendanceText).Filterable(false).Width(180).Title(@Resource["AttendanceStatus"]);
                            columns.Group(g => g.Title(@Resource["OverTimeHours"]).HeaderHtmlAttributes(new { @style = "text-align:center;" })
                            .Columns(wd =>
                            {
                                wd.Bound(c => c.SystemOTHoursText).Filterable(false).Width(100).Title(@Resource["Actual"]);
                                wd.Bound(c => c.PermittedOTHoursText).Filterable(false).Width(100).Title(@Resource["Permitted"]);
                                wd.Bound(c => c.CalculatedOTHoursText).Filterable(false).Width(100).Title(@Resource["Calculated"]);

                            })
                            );
                            columns.Group(g => g.Title(@Resource["ShortTimeHours"]).HeaderHtmlAttributes(new { @style = "text-align:center;" })
                            .Columns(wd =>
                            {
                                wd.Bound(c => c.SystemDeductionHoursText).Filterable(false).Width(100).Title(@Resource["Actual"]);
                                wd.Bound(c => c.PermittedDeductionHoursText).Filterable(false).Width(100).Title(@Resource["Permitted"]);
                                wd.Bound(c => c.CalculatedDeductionHoursText).Filterable(false).Width(100).Title(@Resource["Calculated"]);

                            })
                            );


                        })
                        .ToolBar(toolbar =>
                        {
                            //toolbar.Excel();
                            //toolbar.Pdf();
                            toolbar.Search().Text(@SharedResource["Search"]);
                        })
//.Pdf(pdf=>pdf.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
//.Excel(excel=>excel.ProxyURL(Url.Action("Excel_Export_Save", "Grid")))
.ColumnMenu(col => col.Filterable(false))
.Height(700)
.Editable()
.Pageable()
.Sortable()
.Navigatable()
.Resizable(r => r.Columns(true))
.Reorderable(r => r.Columns(true))
.Groupable(g => g.ShowFooter(false))
.Filterable()
.Scrollable()
//.Events(events => events.DataBound("onDataBound"))
.DataSource(dataSource => dataSource
    .Ajax()
    .Batch(true)
    .PageSize(20)
    .AutoSync(true)
    .ServerOperation(false)
   //.Events(events => events.Error("error_handler"))
   .Model(model =>
   {
       model.Id(p => p.Id);


   })
    //.Group(group=>group.Add("Category.CategoryName", typeof(string), ListSortDirection.Descending))
    //.Create("DetailProducts_Create", "Grid")
    .Read(read => read.Action("ReadTeamAttendanceDetailsByDateData", "HRCore", new { area = "CHR" }).Data("FilterAttendanceGrid"))

)
)
            </div>
        </div>
    </div>
</div>




